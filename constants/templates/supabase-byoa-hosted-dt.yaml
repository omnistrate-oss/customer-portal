version: "3.9"
x-omnistrate-service-plan:
  name: "Enterprise Tier (BYOA)"
  tenancyType: "OMNISTRATE_DEDICATED_TENANCY"
  deployment:
    byoaDeployment:
      AwsAccountId: "{{AWS_ACCOUNT_ID}}"
      AwsBootstrapRoleAccountArn: "arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/omnistrate-bootstrap-role"

x-omnistrate-integrations:
  - omnistrateMetrics
  - omnistrateLogging

x-internal-integrations:
  metrics:
  logs:

name: supabase
services:
  analytics:
    x-omnistrate-api-params:
      - name: "Postgres Password"
        key: "postgresPassword"
        description: "Postgres password for the Analytics"
        type: Password
        required: true
        export: true
        modifiable: true
    x-omnistrate-mode-internal: true
    x-omnistrate-capabilities:
      enableMultiZone: true
    container_name: supabase-analytics
    environment:
      DB_DATABASE: postgres
      DB_HOSTNAME: db
      DB_PASSWORD: $var.postgresPassword
      DB_PORT: "5432"
      DB_SCHEMA: _analytics
      DB_USERNAME: supabase_admin
      LOGFLARE_API_KEY: your-super-secret-and-long-logflare-key
      LOGFLARE_FEATURE_FLAG_OVERRIDE: multibackend=true
      LOGFLARE_MIN_CLUSTER_SIZE: "1"
      LOGFLARE_NODE_HOST: 127.0.0.1
      LOGFLARE_SINGLE_TENANT: "true"
      LOGFLARE_SUPABASE_MODE: "true"
      POSTGRES_BACKEND_SCHEMA: _analytics
      POSTGRES_BACKEND_URL: postgresql://supabase_admin:{{ $var.postgresPassword }}@db:5432/postgres
    healthcheck:
      test:
        - CMD
        - curl
        - http://localhost:4000/health
      timeout: 5s
      interval: 5s
      retries: 10
    image: supabase/logflare:1.4.0
    networks:
      default: null
    ports:
      - mode: ingress
        target: 4000
        published: "4000"
        protocol: tcp
    restart: unless-stopped

  auth:
    x-omnistrate-api-params:
      - name: "Postgres Password"
        key: "postgresPassword"
        description: "Postgres password for the Analytics"
        type: Password
        required: true
        export: true
        modifiable: true
      - name: SMTP Host
        key: smtpHost
        description: SMTP host for sending emails
        type: String
        required: true
        export: true
        modifiable: true
      - name: SMTP Port
        key: smtpPort
        description: SMTP port for sending emails
        type: String
        required: true
        export: true
        modifiable: true
      - name: SMTP User
        key: smtpUser
        description: SMTP user for sending emails
        type: String
        required: true
        export: true
        modifiable: true
      - name: SMTP Password
        key: smtpPassword
        description: SMTP password for sending emails
        type: Password
        required: true
        export: true
        modifiable: true
      - name: SMTP Sender Name
        key: smtpSenderName
        description: SMTP sender name for sending emails
        type: String
        required: true
        export: true
        modifiable: true
      - name: SMTP Admin Email
        key: smtpAdminEmail
        description: SMTP admin email for sending emails
        type: String
        required: true
        export: true
        modifiable: true
    x-omnistrate-mode-internal: true
    x-omnistrate-capabilities:
      enableMultiZone: true
      autoscaling:
        maxReplicas: 5
        minReplicas: 1
        idleMinutesBeforeScalingDown: 2
        idleThreshold: 20
        overUtilizedMinutesBeforeScalingUp: 3
        overUtilizedThreshold: 80
    container_name: supabase-auth
    environment:
      API_EXTERNAL_URL: https://gateway.$(EXTERNAL_DNS_SUFFIX)
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: "9999"
      GOTRUE_DB_DATABASE_URL: postgres://supabase_auth_admin:{{ $var.postgresPassword }}@db:5432/postgres
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DISABLE_SIGNUP: "false"
      GOTRUE_EXTERNAL_ANONYMOUS_USERS_ENABLED: "false"
      GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
      GOTRUE_EXTERNAL_PHONE_ENABLED: "true"
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: "3600"
      GOTRUE_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      GOTRUE_MAILER_AUTOCONFIRM: "false"
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: /auth/v1/verify
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: /auth/v1/verify
      GOTRUE_MAILER_URLPATHS_INVITE: /auth/v1/verify
      GOTRUE_MAILER_URLPATHS_RECOVERY: /auth/v1/verify
      GOTRUE_SITE_URL: https://gateway.$(EXTERNAL_DNS_SUFFIX)
      GOTRUE_SMS_AUTOCONFIRM: "true"
      GOTRUE_SMTP_ADMIN_EMAIL: $var.smtpAdminEmail
      GOTRUE_SMTP_HOST: $var.smtpHost
      GOTRUE_SMTP_PASS: $var.smtpPassword
      GOTRUE_SMTP_PORT: $var.smtpPort
      GOTRUE_SMTP_SENDER_NAME: $var.smtpSenderName
      GOTRUE_SMTP_USER: $var.smtpUser
    healthcheck:
      test:
        - CMD
        - wget
        - --no-verbose
        - --tries=1
        - --spider
        - http://localhost:9999/health
      timeout: 5s
      interval: 5s
      retries: 3
    image: supabase/gotrue:v2.158.1
    networks:
      default: null
    restart: unless-stopped

  db:
    x-omnistrate-api-params:
      - name: "Postgres Password"
        key: "postgresPassword"
        description: "Postgres password for the DB"
        type: Password
        required: true
        export: true
        modifiable: false
    x-omnistrate-mode-internal: true
    privileged: true
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
      - -c
      - log_min_messages=fatal
    container_name: supabase-db
    environment:
      JWT_EXP: "3600"
      JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      PGDATABASE: postgres
      PGPASSWORD: $var.postgresPassword
      PGPORT: "5432"
      POSTGRES_DB: postgres
      POSTGRES_HOST: /var/run/postgresql
      POSTGRES_PASSWORD: $var.postgresPassword
      POSTGRES_PORT: "5432"
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres -h localhost
      timeout: 5s
      interval: 5s
      retries: 10
    image: supabase/postgres:15.1.1.78
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./volumes/db/realtime.sql
        target: /docker-entrypoint-initdb.d/migrations/99-realtime.sql
        bind:
          selinux: Z
          create_host_path: true
      - type: bind
        source: ./volumes/db/webhooks.sql
        target: /docker-entrypoint-initdb.d/init-scripts/98-webhooks.sql
        bind:
          selinux: Z
          create_host_path: true
      - type: bind
        source: ./volumes/db/roles.sql
        target: /docker-entrypoint-initdb.d/init-scripts/99-roles.sql
        bind:
          selinux: Z
          create_host_path: true
      - type: bind
        source: ./volumes/db/jwt.sql
        target: /docker-entrypoint-initdb.d/init-scripts/99-jwt.sql
        bind:
          selinux: Z
          create_host_path: true
      - type: bind
        source: ./volumes/db/data
        target: /var/lib/postgresql/data
        bind:
          selinux: Z
          create_host_path: true
      - type: bind
        source: ./volumes/db/logs.sql
        target: /docker-entrypoint-initdb.d/migrations/99-logs.sql
        bind:
          selinux: Z
          create_host_path: true

  functions:
    x-omnistrate-api-params:
      - name: "Postgres Password"
        key: "postgresPassword"
        description: "Postgres password for the DB"
        type: Password
        required: true
        export: true
        modifiable: true
    x-omnistrate-mode-internal: true
    x-omnistrate-capabilities:
      enableMultiZone: true
      autoscaling:
        maxReplicas: 5
        minReplicas: 1
        idleMinutesBeforeScalingDown: 2
        idleThreshold: 20
        overUtilizedMinutesBeforeScalingUp: 3
        overUtilizedThreshold: 80
    privileged: true
    command:
      - start
      - --main-service
      - /home/deno/functions/main
    container_name: supabase-edge-functions
    environment:
      JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
      SUPABASE_DB_URL: postgresql://postgres:{{ $var.postgresPassword }}@db:5432/postgres
      SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q
      SUPABASE_URL: http://gateway:8000
      VERIFY_JWT: "false"
    image: supabase/edge-runtime:v1.58.2
    networks:
      default: null
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./volumes/functions
        target: /home/deno/functions
        bind:
          selinux: Z
          create_host_path: true

  imgproxy:
    x-omnistrate-mode-internal: true
    x-omnistrate-capabilities:
      enableMultiZone: true
      autoscaling:
        maxReplicas: 5
        minReplicas: 1
        idleMinutesBeforeScalingDown: 2
        idleThreshold: 20
        overUtilizedMinutesBeforeScalingUp: 3
        overUtilizedThreshold: 80
    container_name: supabase-imgproxy
    environment:
      IMGPROXY_BIND: :5001
      IMGPROXY_ENABLE_WEBP_DETECTION: "true"
      IMGPROXY_LOCAL_FILESYSTEM_ROOT: /
      IMGPROXY_USE_ETAG: "true"
    healthcheck:
      test:
        - CMD
        - imgproxy
        - health
      timeout: 5s
      interval: 5s
      retries: 3
    image: darthsim/imgproxy:v3.8.0
    networks:
      default: null
    volumes:
      - type: bind
        source: ./volumes/storage
        target: /var/lib/storage
        bind:
          selinux: z
          create_host_path: true

  gateway:
    x-omnistrate-api-params:
      - name: "Dashboard Password"
        key: "dashboardPassword"
        description: "Password for the Studio dashboard"
        type: String
        required: true
        export: true
        modifiable: true
      - name: "Dashboard Username"
        key: "dashboardUsername"
        description: "Username for the Studio dashboard"
        type: String
        required: true
        export: true
        modifiable: false
        defaultValue: supabase
    x-omnistrate-mode-internal: true
    x-omnistrate-capabilities:
      enableMultiZone: true
      customDNS:
        targetPort: 8000
      httpReverseProxy:
        targetPort: 8000
      autoscaling:
        maxReplicas: 5
        minReplicas: 1
        idleMinutesBeforeScalingDown: 2
        idleThreshold: 20
        overUtilizedMinutesBeforeScalingUp: 3
        overUtilizedThreshold: 80
    container_name: supabase-kong
    privileged: true
    entrypoint:
      - bash
      - -c
      - /docker-entrypoint.sh kong docker-start
    environment:
      DASHBOARD_PASSWORD: $var.dashboardPassword
      DASHBOARD_USERNAME: $var.dashboardUsername
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /home/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q
    image: kong:2.8.1
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8000
        published: "8000"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./volumes/api/kong.yml
        target: /home/kong/kong.yml
        bind:
          create_host_path: true

  meta:
    x-omnistrate-api-params:
      - name: "Postgres Password"
        key: "postgresPassword"
        description: "Postgres password for the Meta"
        type: Password
        required: true
        export: true
        modifiable: true
    x-omnistrate-mode-internal: true
    x-omnistrate-capabilities:
      enableMultiZone: true
      autoscaling:
        maxReplicas: 5
        minReplicas: 1
        idleMinutesBeforeScalingDown: 2
        idleThreshold: 20
        overUtilizedMinutesBeforeScalingUp: 3
        overUtilizedThreshold: 80
    container_name: supabase-meta
    environment:
      PG_META_DB_HOST: db
      PG_META_DB_NAME: postgres
      PG_META_DB_PASSWORD: $var.postgresPassword
      PG_META_DB_PORT: "5432"
      PG_META_DB_USER: supabase_admin
      PG_META_PORT: "8080"
    image: supabase/postgres-meta:v0.83.2
    networks:
      default: null
    restart: unless-stopped

  realtime:
    x-omnistrate-api-params:
      - name: "Postgres Password"
        key: "postgresPassword"
        description: "Postgres password for the Realtime"
        type: Password
        required: true
        export: true
        modifiable: true
    privileged: true
    x-omnistrate-mode-internal: true
    x-omnistrate-capabilities:
      enableMultiZone: true
      autoscaling:
        maxReplicas: 5
        minReplicas: 1
        idleMinutesBeforeScalingDown: 2
        idleThreshold: 20
        overUtilizedMinutesBeforeScalingUp: 3
        overUtilizedThreshold: 80
    container_name: realtime-dev.supabase-realtime
    environment:
      API_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      APP_NAME: realtime
      DB_AFTER_CONNECT_QUERY: SET search_path TO _realtime
      DB_ENC_KEY: supabaserealtime
      DB_HOST: db
      DB_NAME: postgres
      DB_PASSWORD: $var.postgresPassword
      DB_PORT: "5432"
      DB_USER: supabase_admin
      DNS_NODES: "''"
      ERL_AFLAGS: -proto_dist inet_tcp
      PORT: "4000"
      RLIMIT_NOFILE: "10000"
      SECRET_KEY_BASE: UpNVntn3cDxHJpq99YMc1T1AQgQpc8kfYTuRgBiYa15BLrx8etQoXz3gZv1/u2oq
      SEED_SELF_HOST: "true"
    healthcheck:
      test:
        - CMD
        - curl
        - -sSfL
        - --head
        - -o
        - /dev/null
        - -H
        - "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE"
        - http://localhost:4000/api/tenants/realtime-dev/health
      timeout: 5s
      interval: 5s
      retries: 3
    image: supabase/realtime:v2.30.34
    networks:
      default: null
    restart: unless-stopped

  rest:
    x-omnistrate-api-params:
      - name: "Postgres Password"
        key: "postgresPassword"
        description: "Postgres password for the REST"
        type: Password
        required: true
        export: true
        modifiable: true
    x-omnistrate-mode-internal: true
    x-omnistrate-capabilities:
      enableMultiZone: true
      autoscaling:
        maxReplicas: 5
        minReplicas: 1
        idleMinutesBeforeScalingDown: 2
        idleThreshold: 20
        overUtilizedMinutesBeforeScalingUp: 3
        overUtilizedThreshold: 80
    command:
      - postgrest
    container_name: supabase-rest
    environment:
      PGRST_APP_SETTINGS_JWT_EXP: "3600"
      PGRST_APP_SETTINGS_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      PGRST_DB_ANON_ROLE: anon
      PGRST_DB_SCHEMAS: public,storage,graphql_public
      PGRST_DB_URI: postgres://authenticator:{{ $var.postgresPassword }}@db:5432/postgres
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
    image: postgrest/postgrest:v12.2.0
    networks:
      default: null
    restart: unless-stopped

  storage:
    x-omnistrate-api-params:
      - name: "Postgres Password"
        key: "postgresPassword"
        description: "Postgres password for the Storage"
        type: Password
        required: true
        export: true
        modifiable: true
    x-omnistrate-mode-internal: true
    container_name: supabase-storage
    environment:
      ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
      DATABASE_URL: postgres://supabase_storage_admin:{{ $var.postgresPassword }}@db:5432/postgres
      ENABLE_IMAGE_TRANSFORMATION: "true"
      FILE_SIZE_LIMIT: "52428800"
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      GLOBAL_S3_BUCKET: stub
      IMGPROXY_URL: http://imgproxy:5001
      PGRST_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      POSTGREST_URL: http://rest:3000
      REGION: stub
      SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q
      STORAGE_BACKEND: file
      TENANT_ID: stub
    healthcheck:
      test:
        - CMD
        - wget
        - --no-verbose
        - --tries=1
        - --spider
        - http://localhost:5000/status
      timeout: 5s
      interval: 5s
      retries: 3
    image: supabase/storage-api:v1.10.1
    networks:
      default: null
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./volumes/storage
        target: /var/lib/storage
        bind:
          selinux: z
          create_host_path: true

  studio:
    labels:
      - "name=Supabase Cluster"
      - "description=Supabase Cluster w/ Studio"
    container_name: supabase-studio
    x-omnistrate-api-params:
      - name: Dashboard Password
        key: dashboardPassword
        description: Password for the Studio dashboard
        type: Password
        required: true
        export: true
        modifiable: true
        parameterDependencyMap:
          gateway: dashboardPassword
      - name: "Dashboard Username"
        key: "dashboardUsername"
        description: "Username for the Studio dashboard"
        type: String
        required: true
        export: true
        modifiable: true
        defaultValue: supabase
        parameterDependencyMap:
          gateway: dashboardUsername
      - name: "Organization Name"
        key: "organizationName"
        description: "Name of the default organization"
        type: String
        required: true
        export: true
        modifiable: false
      - name: Project Name
        key: projectName
        description: Name of the default project
        type: String
        required: true
        export: true
        modifiable: false
      - name: Postgres Password
        key: postgresPassword
        description: Postgres password for the Studio
        type: Password
        required: true
        export: true
        modifiable: false
        parameterDependencyMap:
          db: postgresPassword
          analytics: postgresPassword
          auth: postgresPassword
          functions: postgresPassword
          meta: postgresPassword
          realtime: postgresPassword
          rest: postgresPassword
          storage: postgresPassword
      - name: SMTP Host
        key: smtpHost
        description: SMTP host for sending emails
        type: String
        required: false
        export: true
        modifiable: true
        defaultValue: supabase-mail
        parameterDependencyMap:
          auth: smtpHost
      - name: SMTP Port
        key: smtpPort
        description: SMTP port for sending emails
        type: String
        required: false
        export: true
        modifiable: true
        defaultValue: "2500"
        parameterDependencyMap:
          auth: smtpPort
      - name: SMTP User
        key: smtpUser
        description: SMTP user for sending emails
        type: String
        required: false
        export: true
        modifiable: true
        defaultValue: fake_mail_user
        parameterDependencyMap:
          auth: smtpUser
      - name: SMTP Password
        key: smtpPassword
        description: SMTP password for sending emails
        type: Password
        required: false
        export: true
        modifiable: true
        defaultValue: fake_mail_password
        parameterDependencyMap:
          auth: smtpPassword
      - name: SMTP Sender Name
        key: smtpSenderName
        description: SMTP sender name for sending emails
        type: String
        required: false
        export: true
        modifiable: true
        defaultValue: fake_sender
        parameterDependencyMap:
          auth: smtpSenderName
      - name: SMTP Admin Email
        key: smtpAdminEmail
        description: SMTP admin email for sending emails
        type: String
        required: false
        export: true
        modifiable: true
        defaultValue: admin@example.com
        parameterDependencyMap:
          auth: smtpAdminEmail
    x-omnistrate-capabilities:
      enableMultiZone: true
      autoscaling:
        maxReplicas: 5
        minReplicas: 1
        idleMinutesBeforeScalingDown: 2
        idleThreshold: 20
        overUtilizedMinutesBeforeScalingUp: 3
        overUtilizedThreshold: 80
      backupConfiguration:
        backupRetentionInDays: 7
        backupPeriodInHours: 6
    depends_on:
      - analytics
      - db
      - meta
      - gateway
      - realtime
      - rest
      - storage
      - imgproxy
      - functions
      - auth
    environment:
      AUTH_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      DEFAULT_ORGANIZATION_NAME: $var.organizationName
      DEFAULT_PROJECT_NAME: $var.projectName
      LOGFLARE_API_KEY: your-super-secret-and-long-logflare-key
      LOGFLARE_URL: http://analytics:4000
      NEXT_ANALYTICS_BACKEND_PROVIDER: postgres
      NEXT_PUBLIC_ENABLE_LOGS: "true"
      POSTGRES_PASSWORD: $var.postgresPassword
      STUDIO_PG_META_URL: http://meta:8080
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
      SUPABASE_PUBLIC_URL: https://gateway.$(EXTERNAL_DNS_SUFFIX)
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q
      SUPABASE_URL: http://gateway:8000
    healthcheck:
      test:
        - CMD
        - node
        - -e
        - require('http').get('http://localhost:3000/api/profile', (r) => {if (r.statusCode !== 200) throw new Error(r.statusCode)})
      timeout: 5s
      interval: 5s
      retries: 3
    image: supabase/studio:20240729-ce42139
    networks:
      default: null
    restart: unless-stopped

networks:
  default:
    name: supabase_default
