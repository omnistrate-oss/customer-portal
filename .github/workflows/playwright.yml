name: Playwright Tests - SaaSBuilder
permissions:
  contents: read
  actions: write

on:
  schedule:
    # 6:00 PM IST - Monday to Friday
    - cron: '30 12 * * 1-5'
  pull_request:
    types: [ labeled ]
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason for running tests"
        required: false
        default: "Manual trigger"

jobs:
  test:
    name: Playwright Tests - SaaSBuilder
    # Run on schedule, manual trigger, or when PR has "ready to merge" label
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && contains(github.event.label.name, 'ready to merge'))
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm install -g yarn && yarn

    - name: Install Playwright Browsers
      run: yarn playwright install --with-deps

    - name: Setup and start saasbuilder server
      run: |
        yarn build
        yarn start & sleep 15
      env:
        PROVIDER_EMAIL: ${{ secrets.PROVIDER_EMAIL }}
        PROVIDER_PASSWORD: ${{ secrets.PROVIDER_PASSWORD }}
        NEXT_PUBLIC_BACKEND_BASE_DOMAIN: https://api.omnistrate.dev
        ENVIRONMENT_TYPE: DEV
        MAIL_USER_EMAIL: ${{ secrets.MAIL_USER_EMAIL }}
        MAIL_USER_PASSWORD: ${{ secrets.MAIL_USER_PASSWORD }}

    - name: Run Playwright tests
      run: yarn playwright test
      env: 
        YOUR_SAAS_DOMAIN_URL: http://localhost:8080
        USER_EMAIL: ${{ secrets.USER_EMAIL }}
        USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCP_PROJECT_NUMBER: ${{ secrets.GCP_PROJECT_NUMBER }}
        BYOA_AWS_ACCOUNT_ID: ${{ secrets.BYOA_AWS_ACCOUNT_ID }}

        NEXT_PUBLIC_BACKEND_BASE_DOMAIN: "https://api.omnistrate.dev"
        ENVIRONMENT_TYPE: DEV
        PROVIDER_EMAIL: ${{ secrets.PROVIDER_EMAIL }}
        PROVIDER_PASSWORD: ${{ secrets.PROVIDER_PASSWORD }}

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 7
  
  notification:
    name: Notify Mattermost
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - uses: peppernode/action-mattermost-notify@v0.2.0
        with:
          webhook_url: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
          channel: "Playwright Notifications"
          message: |
            ${{ 
              needs.test.result == 'success' && '✅ SaaSBuilder tests passed!' || 
              needs.test.result == 'failure' && '❌ SaaSBuilder tests failed!' || 
              needs.test.result == 'cancelled' && '⚠️ SaaSBuilder tests were cancelled!' || 
              format('ℹ️ SaaSBuilder tests completed with status: {0}', needs.test.result)
            }}
