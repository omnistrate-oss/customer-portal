name: Playwright Tests - SaaSBuilder
permissions:
  contents: read
  actions: write

on:
  schedule:
    # 6:00 PM IST - Monday to Friday
    - cron: '30 12 * * 1-5'
  pull_request:
    types: [ labeled ]
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason for running tests"
        required: false
        default: "Manual trigger"

jobs:
  test:
    name: Playwright Tests - SaaSBuilder
    # Run tests only if not paused and on specific events
    if: |
      (github.event_name == 'schedule' && vars.PAUSE_PLAYWRIGHT_TESTS != 'true' && github.event.pull_request.head.repo.full_name == github.repository) ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && contains(github.event.label.name, 'ready to merge'))
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm install -g yarn && yarn

    - name: Install Playwright Browsers
      run: yarn playwright install --with-deps

    - name: Setup and start saasbuilder server
      run: |
        yarn build
        yarn start & sleep 15
      env:
        PROVIDER_EMAIL: ${{ secrets.PROVIDER_EMAIL }}
        PROVIDER_PASSWORD: ${{ secrets.PROVIDER_PASSWORD }}
        NEXT_PUBLIC_BACKEND_BASE_DOMAIN: https://api.omnistrate.dev
        ENVIRONMENT_TYPE: DEV
        MAIL_USER_EMAIL: ${{ secrets.MAIL_USER_EMAIL }}
        MAIL_USER_PASSWORD: ${{ secrets.MAIL_USER_PASSWORD }}

    - name: Run Playwright tests
      run: yarn playwright test
      env: 
        YOUR_SAAS_DOMAIN_URL: http://localhost:8080
        USER_EMAIL: ${{ secrets.USER_EMAIL }}
        USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCP_PROJECT_NUMBER: ${{ secrets.GCP_PROJECT_NUMBER }}
        BYOA_AWS_ACCOUNT_ID: ${{ secrets.BYOA_AWS_ACCOUNT_ID }}

        NEXT_PUBLIC_BACKEND_BASE_DOMAIN: "https://api.omnistrate.dev"
        ENVIRONMENT_TYPE: DEV
        PROVIDER_EMAIL: ${{ secrets.PROVIDER_EMAIL }}
        PROVIDER_PASSWORD: ${{ secrets.PROVIDER_PASSWORD }}

    - uses: actions/upload-artifact@v5
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 7
  
  mattermost-notification-1:
    name: Notify Mattermost
    runs-on: ubuntu-latest
    needs: test
    if: always() && (needs.test.result == 'success' || needs.test.result == 'failure' || needs.test.result == 'cancelled')
    steps:
      - name: Mattermost Notification
        uses: tferreira/matterfy@v1.9
        with:
          type: ${{ needs.test.result }}
          job_name: '*Playwright Tests - SaaSBuilder*'
          url: ${{ secrets.MATTERMOST_WEBHOOK_URL }}

  mattermost-notification-2:
    name: Notify Commits on Mattermost
    runs-on: ubuntu-latest
    needs: test
    if: always() && (needs.test.result == 'failure' || needs.test.result == 'cancelled')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Mattermost Notification
        run: |
          # Get commits since last successful workflow run
          # This gets commits from the last 8 hours as a fallback approach
          SINCE_DATE=$(date -d '8 hours ago' --iso-8601)
          COMMITS=$(git log --oneline --since="$SINCE_DATE" --pretty=format:"• %h %s (%an)")

          # If no commits in last 8 hours, get last 3 commits
          if [ -z "$COMMITS" ]; then
            COMMITS=$(git log --oneline -3 --pretty=format:"• %h %s (%an)")
          fi

          MESSAGE="❌ @channel SaaSBuilder Playwright tests failed! Please investigate immediately.

          **Recent commits:**
          $COMMITS"

          # Escape the message for JSON
          MESSAGE_JSON=$(echo "$MESSAGE" | jq -Rs .)

          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":$MESSAGE_JSON}" \
          ${{ secrets.MATTERMOST_WEBHOOK_URL }}