/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/2022-09-01-00/accountconfig": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CreateAccountConfig account-config-api */
        post: operations["account-config-api/CreateAccountConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/accountconfig/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeAccountConfig account-config-api */
        get: operations["account-config-api/DescribeAccountConfig"];
        put?: never;
        post?: never;
        /** DeleteAccountConfig account-config-api */
        delete: operations["account-config-api/DeleteAccountConfig"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/accountconfig/aws/{awsAccountID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeAccountConfigByAWSAccountID account-config-api */
        get: operations["account-config-api/DescribeAccountConfigByAWSAccountID"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/accountconfig/azure/{azureSubscriptionID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeAccountConfigByAzureSubscriptionID account-config-api */
        get: operations["account-config-api/DescribeAccountConfigByAzureSubscriptionID"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/accountconfig/byoa": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListBYOAConfig account-config-api */
        get: operations["account-config-api/ListBYOAConfig"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/accountconfig/cloudprovider/{cloudProviderName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListAccountConfig account-config-api */
        get: operations["account-config-api/ListAccountConfig"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/accountconfig/gcp/{gcpProjectID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeAccountConfigByGCPProjectID account-config-api */
        get: operations["account-config-api/DescribeAccountConfigByGCPProjectID"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/accountconfig/identityid": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * AccountConfigIdentityID account-config-api
         * @description Returns the identity id of the account config to be used in the trust policy of the account
         */
        get: operations["account-config-api/AccountConfigIdentityID"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/accountconfig/verify/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** VerifyAccountConfig account-config-api */
        post: operations["account-config-api/VerifyAccountConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/availability-zone/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeAvailabilityZone availability-zone-api */
        get: operations["availability-zone-api/DescribeAvailabilityZone"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/availability-zone/cloud-provider/{cloudProviderName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListAvailabilityZone availability-zone-api */
        get: operations["availability-zone-api/ListAvailabilityZone"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/availability-zone/code/{code}/cloud-provider/{cloudProviderName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetAvailabilityZoneByCode availability-zone-api */
        get: operations["availability-zone-api/GetAvailabilityZoneByCode"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/availability-zone/region/code/{regionCode}/cloud-provider/{cloudProviderName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListAvailabilityZonesByRegionCode availability-zone-api */
        get: operations["availability-zone-api/ListAvailabilityZonesByRegionCode"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/change-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** ChangePassword signup-api */
        post: operations["signup-api/ChangePassword"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/cloud-provider": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListCloudProvider cloud-provider-api */
        get: operations["cloud-provider-api/ListCloudProvider"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/cloud-provider/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeCloudProvider cloud-provider-api */
        get: operations["cloud-provider-api/DescribeCloudProvider"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/cloud-provider/name/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetCloudProviderByName cloud-provider-api */
        get: operations["cloud-provider-api/GetCloudProviderByName"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/compose-gen/image": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** CheckIfContainerImageAccessible compose-gen-api */
        get: operations["compose-gen-api/CheckIfContainerImageAccessible"];
        put?: never;
        /** GenerateComposeSpecFromContainerImage compose-gen-api */
        post: operations["compose-gen-api/GenerateComposeSpecFromContainerImage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/contactus": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Contactus contactus-api */
        post: operations["contactus-api/Contactus"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/customdomain": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListCustomDomain custom-domain-api */
        get: operations["custom-domain-api/ListCustomDomain"];
        put?: never;
        /** CreateCustomDomain custom-domain-api */
        post: operations["custom-domain-api/CreateCustomDomain"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/customdomain/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeCustomDomain custom-domain-api */
        get: operations["custom-domain-api/DescribeCustomDomain"];
        put?: never;
        post?: never;
        /** DeleteCustomDomain custom-domain-api */
        delete: operations["custom-domain-api/DeleteCustomDomain"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/customdomain/identityid": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * CustomDomainIdentityID custom-domain-api
         * @description Returns the identity id of the Custom Domain to be used in the trust policy of the account
         */
        get: operations["custom-domain-api/CustomDomainIdentityID"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/customdomain/verify/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** VerifyCustomDomain custom-domain-api */
        post: operations["custom-domain-api/VerifyCustomDomain"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/customer-delete-user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** CustomerDeleteUser users-api */
        delete: operations["users-api/CustomerDeleteUser"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/customer-invite-user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CustomerInviteUser users-api */
        post: operations["users-api/CustomerInviteUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/customer-login-with-identity-provider": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CustomerLoginWithIdentityProvider users-api */
        post: operations["users-api/CustomerLoginWithIdentityProvider"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/customer-reset-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CustomerResetPassword users-api */
        post: operations["users-api/CustomerResetPassword"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/customer-user-signin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CustomerSignin users-api */
        post: operations["users-api/CustomerSignin"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/customer-user-signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CustomerSignup users-api */
        post: operations["users-api/CustomerSignup"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/demo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Demo demo-api */
        post: operations["demo-api/Demo"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/deployment-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListDeploymentConfigs deployment-config-api */
        get: operations["deployment-config-api/ListDeploymentConfigs"];
        put?: never;
        /** CreateDeploymentConfig deployment-config-api */
        post: operations["deployment-config-api/CreateDeploymentConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/deployment-config/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeDeploymentConfig deployment-config-api */
        get: operations["deployment-config-api/DescribeDeploymentConfig"];
        put?: never;
        post?: never;
        /** DeleteDeploymentConfig deployment-config-api */
        delete: operations["deployment-config-api/DeleteDeploymentConfig"];
        options?: never;
        head?: never;
        /** UpdateDeploymentConfig deployment-config-api */
        patch: operations["deployment-config-api/UpdateDeploymentConfig"];
        trace?: never;
    };
    "/2022-09-01-00/environmentType/{environmentType}/secret/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetSecret secrets-api */
        get: operations["secrets-api/GetSecret"];
        /** SetSecret secrets-api */
        put: operations["secrets-api/SetSecret"];
        post?: never;
        /** DeleteSecret secrets-api */
        delete: operations["secrets-api/DeleteSecret"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/environmentType/{environmentType}/secrets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListSecrets secrets-api */
        get: operations["secrets-api/ListSecrets"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * registrationServiceHealth global-api
         * @description Registration service health check endpoint
         */
        get: operations["global-api/registrationServiceHealth"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/helm-package": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListHelmPackages helm-package-api */
        get: operations["helm-package-api/ListHelmPackages"];
        /** SaveHelmPackage helm-package-api */
        put: operations["helm-package-api/SaveHelmPackage"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/helm-package/{chartName}/{chartVersion}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeHelmPackage helm-package-api */
        get: operations["helm-package-api/DescribeHelmPackage"];
        put?: never;
        post?: never;
        /** DeleteHelmPackage helm-package-api */
        delete: operations["helm-package-api/DeleteHelmPackage"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/identity-provider": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListIdentityProviders identity-provider-api */
        get: operations["identity-provider-api/ListIdentityProviders"];
        put?: never;
        /** CreateIdentityProvider identity-provider-api */
        post: operations["identity-provider-api/CreateIdentityProvider"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/identity-provider-render": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** RenderIdentityProviders identity-provider-api */
        get: operations["identity-provider-api/RenderIdentityProviders"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/identity-provider-types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListIdentityProviderTypes identity-provider-api */
        get: operations["identity-provider-api/ListIdentityProviderTypes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/identity-provider/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeIdentityProvider identity-provider-api */
        get: operations["identity-provider-api/DescribeIdentityProvider"];
        put?: never;
        /** VerifyIdentityProvider identity-provider-api */
        post: operations["identity-provider-api/VerifyIdentityProvider"];
        /** DeleteIdentityProvider identity-provider-api */
        delete: operations["identity-provider-api/DeleteIdentityProvider"];
        options?: never;
        head?: never;
        /** UpdateIdentityProvider identity-provider-api */
        patch: operations["identity-provider-api/UpdateIdentityProvider"];
        trace?: never;
    };
    "/2022-09-01-00/image-registry": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListImageRegistry image-registry-api */
        get: operations["image-registry-api/ListImageRegistry"];
        put?: never;
        /** CreateImageRegistry image-registry-api */
        post: operations["image-registry-api/CreateImageRegistry"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/image-registry/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeImageRegistry image-registry-api */
        get: operations["image-registry-api/DescribeImageRegistry"];
        put?: never;
        post?: never;
        /** DeleteImageRegistry image-registry-api */
        delete: operations["image-registry-api/DeleteImageRegistry"];
        options?: never;
        head?: never;
        /** UpdateImageRegistry image-registry-api */
        patch: operations["image-registry-api/UpdateImageRegistry"];
        trace?: never;
    };
    "/2022-09-01-00/invite-user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** InviteUser users-api */
        post: operations["users-api/InviteUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/invoice": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListInvoices invoice-api */
        get: operations["invoice-api/ListInvoices"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/limit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListLimit limit-api */
        get: operations["limit-api/ListLimit"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/limit/family/{family}/key/{key}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeLimit limit-api */
        get: operations["limit-api/DescribeLimit"];
        put?: never;
        post?: never;
        /** DeleteLimit limit-api */
        delete: operations["limit-api/DeleteLimit"];
        options?: never;
        head?: never;
        /** UpdateLimit limit-api */
        patch: operations["limit-api/UpdateLimit"];
        trace?: never;
    };
    "/2022-09-01-00/login-with-identity-provider": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** LoginWithIdentityProvider signin-api */
        post: operations["signin-api/LoginWithIdentityProvider"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Logout users-api */
        post: operations["users-api/Logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/org-users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeUsersByOrg users-api */
        get: operations["users-api/DescribeUsersByOrg"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/plan": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribePlan plan-api */
        get: operations["plan-api/DescribePlan"];
        put?: never;
        /** ChangePlan plan-api */
        post: operations["plan-api/ChangePlan"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/region/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeRegion region-api */
        get: operations["region-api/DescribeRegion"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/region/cloudprovider/{cloudProviderName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListRegion region-api */
        get: operations["region-api/ListRegion"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/region/code/{code}/cloud-provider/{cloudProviderName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetRegionByCode region-api */
        get: operations["region-api/GetRegionByCode"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/reset-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** ResetPassword signup-api */
        post: operations["signup-api/ResetPassword"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListAllResourceInstances resource-instance-api */
        get: operations["resource-instance-api/ListAllResourceInstances"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{id}/deployment-cell-dashboard/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** GenerateTokenForDeploymentCellDashboard resource-instance-api */
        post: operations["resource-instance-api/GenerateTokenForDeploymentCellDashboard"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{id}/version-upgrade": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** UpgradeResourceInstanceVersion resource-instance-api */
        post: operations["resource-instance-api/UpgradeResourceInstanceVersion"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{instanceId}/audit-events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListAuditEventsForInstance audit-events-api */
        get: operations["audit-events-api/ListAuditEventsForInstance"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{instanceId}/event": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DeprecatedListAuditEventsForInstance audit-events-api */
        get: operations["audit-events-api/DeprecatedListAuditEventsForInstance"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListResourceInstances resource-instance-api */
        get: operations["resource-instance-api/ListResourceInstances"];
        put?: never;
        /** CreateResourceInstance resource-instance-api */
        post: operations["resource-instance-api/CreateResourceInstance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeResourceInstance resource-instance-api */
        get: operations["resource-instance-api/DescribeResourceInstance"];
        put?: never;
        post?: never;
        /** DeleteResourceInstance resource-instance-api */
        delete: operations["resource-instance-api/DeleteResourceInstance"];
        options?: never;
        head?: never;
        /** UpdateResourceInstance resource-instance-api */
        patch: operations["resource-instance-api/UpdateResourceInstance"];
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/add-capacity": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** AddCapacityToResourceInstance resource-instance-api */
        post: operations["resource-instance-api/AddCapacityToResourceInstance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/custom-dns": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** AddCustomDNSToResourceInstance resource-instance-api */
        post: operations["resource-instance-api/AddCustomDNSToResourceInstance"];
        /** RemoveCustomDNSFromResourceInstance resource-instance-api */
        delete: operations["resource-instance-api/RemoveCustomDNSFromResourceInstance"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/failover": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** FailoverResourceInstance resource-instance-api */
        post: operations["resource-instance-api/FailoverResourceInstance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/remove-capacity": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** RemoveCapacityFromResourceInstance resource-instance-api */
        post: operations["resource-instance-api/RemoveCapacityFromResourceInstance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/restart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** RestartResourceInstance resource-instance-api */
        post: operations["resource-instance-api/RestartResourceInstance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/restore": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** RestoreResourceInstance resource-instance-api */
        post: operations["resource-instance-api/RestoreResourceInstance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/snapshot": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListResourceInstanceSnapshots resource-instance-api */
        get: operations["resource-instance-api/ListResourceInstanceSnapshots"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/start": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** StartResourceInstance resource-instance-api */
        post: operations["resource-instance-api/StartResourceInstance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/stop": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** StopResourceInstance resource-instance-api */
        post: operations["resource-instance-api/StopResourceInstance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/snapshot/{snapshotId}/restore": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** RestoreResourceInstanceFromSnapshot resource-instance-api */
        post: operations["resource-instance-api/RestoreResourceInstanceFromSnapshot"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/audit-events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListAuditEventsForServicePlan audit-events-api */
        get: operations["audit-events-api/ListAuditEventsForServicePlan"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/event": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DeprecatedListAuditEventsForServicePlan audit-events-api */
        get: operations["audit-events-api/DeprecatedListAuditEventsForServicePlan"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/setup-kit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ResourceInstanceProvisionerSetupKit resource-instance-api */
        get: operations["resource-instance-api/ResourceInstanceProvisionerSetupKit"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/account-config/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** UpdateAccountConfigResourceInstance resource-instance-api */
        post: operations["resource-instance-api/UpdateAccountConfigResourceInstance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/audit-events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListAllAuditEvents audit-events-api */
        get: operations["audit-events-api/ListAllAuditEvents"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/audit-events/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeAuditEvent audit-events-api */
        get: operations["audit-events-api/DescribeAuditEvent"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/billing-details": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeConsumptionBillingDetails consumption-billing-api */
        get: operations["consumption-billing-api/DescribeConsumptionBillingDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/billing-status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeConsumptionBillingStatus consumption-billing-api */
        get: operations["consumption-billing-api/DescribeConsumptionBillingStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/custom-network": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListCustomNetworks custom-network-api */
        get: operations["custom-network-api/ListCustomNetworks"];
        put?: never;
        /** CreateCustomNetwork custom-network-api */
        post: operations["custom-network-api/CreateCustomNetwork"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/custom-network/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeCustomNetwork custom-network-api */
        get: operations["custom-network-api/DescribeCustomNetwork"];
        put?: never;
        post?: never;
        /** DeleteCustomNetwork custom-network-api */
        delete: operations["custom-network-api/DeleteCustomNetwork"];
        options?: never;
        head?: never;
        /** UpdateCustomNetwork custom-network-api */
        patch: operations["custom-network-api/UpdateCustomNetwork"];
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/event/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DeprecatedDescribeAuditEvent audit-events-api */
        get: operations["audit-events-api/DeprecatedDescribeAuditEvent"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * consumptionServiceHealth global-api
         * @description Consumption service health check endpoint
         */
        get: operations["global-api/consumptionServiceHealth"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/invoice": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListConsumptionInvoices consumption-invoice-api */
        get: operations["consumption-invoice-api/ListConsumptionInvoices"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/services-orchestration": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListServicesOrchestrations services-orchestration-api */
        get: operations["services-orchestration-api/ListServicesOrchestrations"];
        put?: never;
        /** CreateServicesOrchestration services-orchestration-api */
        post: operations["services-orchestration-api/CreateServicesOrchestration"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/services-orchestration/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeServicesOrchestration services-orchestration-api */
        get: operations["services-orchestration-api/DescribeServicesOrchestration"];
        put?: never;
        post?: never;
        /** DeleteServicesOrchestration services-orchestration-api */
        delete: operations["services-orchestration-api/DeleteServicesOrchestration"];
        options?: never;
        head?: never;
        /** ModifyServicesOrchestration services-orchestration-api */
        patch: operations["services-orchestration-api/ModifyServicesOrchestration"];
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/subscription-users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListAllSubscriptionUsers consumption-user-api */
        get: operations["consumption-user-api/ListAllSubscriptionUsers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/subscription/{subscriptionId}/invite-user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** InviteUser consumption-user-api */
        post: operations["consumption-user-api/InviteUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/subscription/{subscriptionId}/revoke-user-role": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** RevokeUserRole consumption-user-api */
        delete: operations["consumption-user-api/RevokeUserRole"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/subscription/{subscriptionId}/subscription-users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeUsersBySubscription consumption-user-api */
        get: operations["consumption-user-api/DescribeUsersBySubscription"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/usage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetCurrentConsumptionUsage consumption-usage-api */
        get: operations["consumption-usage-api/GetCurrentConsumptionUsage"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/usage-per-day": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetConsumptionUsagePerDay consumption-usage-api */
        get: operations["consumption-usage-api/GetConsumptionUsagePerDay"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/user/{id}/billing-details": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeUserBillingDetails consumption-user-api */
        get: operations["consumption-user-api/DescribeUserBillingDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/user/signin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Signin consumption-user-api */
        post: operations["consumption-user-api/Signin"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/resource-instance/version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * consumptionServiceVersion global-api
         * @description Consumption service version endpoint
         */
        get: operations["global-api/consumptionServiceVersion"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/revoke-user-role": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** RevokeUserRole users-api */
        delete: operations["users-api/RevokeUserRole"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/saas-portal": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListSaaSPortals saas-portal-api */
        get: operations["saas-portal-api/ListSaaSPortals"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/saas-portal-custom-domain": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListSaaSPortalCustomDomains saas-portal-api */
        get: operations["saas-portal-api/ListSaaSPortalCustomDomains"];
        put?: never;
        /** CreateSaaSPortalCustomDomain saas-portal-api */
        post: operations["saas-portal-api/CreateSaaSPortalCustomDomain"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/saas-portal-custom-domain/{environmentType}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** DeleteSaaSPortalCustomDomain saas-portal-api */
        delete: operations["saas-portal-api/DeleteSaaSPortalCustomDomain"];
        options?: never;
        head?: never;
        /** UpdateSaaSPortalCustomDomain saas-portal-api */
        patch: operations["saas-portal-api/UpdateSaaSPortalCustomDomain"];
        trace?: never;
    };
    "/2022-09-01-00/saas-portal/{environmentType}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** UpdateSaaSPortal saas-portal-api */
        patch: operations["saas-portal-api/UpdateSaaSPortal"];
        trace?: never;
    };
    "/2022-09-01-00/service": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListService service-api */
        get: operations["service-api/ListService"];
        put?: never;
        /** CreateService service-api */
        post: operations["service-api/CreateService"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service-offering": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListServiceOffering service-offering-api */
        get: operations["service-offering-api/ListServiceOffering"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service-offering/{serviceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeServiceOffering service-offering-api */
        get: operations["service-offering-api/DescribeServiceOffering"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service-offering/{serviceId}/resource/{resourceId}/instance/{instanceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeServiceOfferingResource service-offering-api */
        get: operations["service-offering-api/DescribeServiceOfferingResource"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeService service-api */
        get: operations["service-api/DescribeService"];
        put?: never;
        post?: never;
        /** DeleteService service-api */
        delete: operations["service-api/DeleteService"];
        options?: never;
        head?: never;
        /** UpdateService service-api */
        patch: operations["service-api/UpdateService"];
        trace?: never;
    };
    "/2022-09-01-00/service/{id}/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ServiceHealth service-api */
        get: operations["service-api/ServiceHealth"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/compute-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListComputeConfig compute-config-api */
        get: operations["compute-config-api/ListComputeConfig"];
        put?: never;
        /** CreateComputeConfig compute-config-api */
        post: operations["compute-config-api/CreateComputeConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/compute-config/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeComputeConfig compute-config-api */
        get: operations["compute-config-api/DescribeComputeConfig"];
        put?: never;
        post?: never;
        /** DeleteComputeConfig compute-config-api */
        delete: operations["compute-config-api/DeleteComputeConfig"];
        options?: never;
        head?: never;
        /** UpdateComputeConfig compute-config-api */
        patch: operations["compute-config-api/UpdateComputeConfig"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/compute-config/{id}/instance-type": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** AddComputeInstanceType compute-config-api */
        post: operations["compute-config-api/AddComputeInstanceType"];
        /** RemoveComputeInstanceType compute-config-api */
        delete: operations["compute-config-api/RemoveComputeInstanceType"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/compute-config/cloud-provider/{cloudProviderName}/instance-types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListComputeInstanceTypes compute-config-api */
        get: operations["compute-config-api/ListComputeInstanceTypes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/environment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListServiceEnvironment service-environment-api */
        get: operations["service-environment-api/ListServiceEnvironment"];
        put?: never;
        /** CreateServiceEnvironment service-environment-api */
        post: operations["service-environment-api/CreateServiceEnvironment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/environment/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeServiceEnvironment service-environment-api */
        get: operations["service-environment-api/DescribeServiceEnvironment"];
        put?: never;
        post?: never;
        /** DeleteServiceEnvironment service-environment-api */
        delete: operations["service-environment-api/DeleteServiceEnvironment"];
        options?: never;
        head?: never;
        /** UpdateServiceEnvironment service-environment-api */
        patch: operations["service-environment-api/UpdateServiceEnvironment"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/environment/{id}/promote": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** PromoteServiceEnvironmentStatus service-environment-api */
        get: operations["service-environment-api/PromoteServiceEnvironmentStatus"];
        put?: never;
        /** PromoteServiceEnvironment service-environment-api */
        post: operations["service-environment-api/PromoteServiceEnvironment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/environment/{serviceEnvironmentId}/service-plan": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListServicePlans service-plan-api */
        get: operations["service-plan-api/ListServicePlans"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/image-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CreateImageConfig image-config-api */
        post: operations["image-config-api/CreateImageConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/image-config/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeImageConfig image-config-api */
        get: operations["image-config-api/DescribeImageConfig"];
        put?: never;
        post?: never;
        /** DeleteImageConfig image-config-api */
        delete: operations["image-config-api/DeleteImageConfig"];
        options?: never;
        head?: never;
        /** UpdateImageConfig image-config-api */
        patch: operations["image-config-api/UpdateImageConfig"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/image-config/{id}/release": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** ReleaseImageConfig image-config-api */
        post: operations["image-config-api/ReleaseImageConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/image-config/{id}/rollout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** RolloutFleetImageStatus image-config-api */
        get: operations["image-config-api/RolloutFleetImageStatus"];
        put?: never;
        /** RolloutFleetImageConfig image-config-api */
        post: operations["image-config-api/RolloutFleetImageConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/infra-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CreateInfraConfig infra-config-api */
        post: operations["infra-config-api/CreateInfraConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeInfraConfig infra-config-api */
        get: operations["infra-config-api/DescribeInfraConfig"];
        put?: never;
        post?: never;
        /** DeleteInfraConfig infra-config-api */
        delete: operations["infra-config-api/DeleteInfraConfig"];
        options?: never;
        head?: never;
        /** UpdateInfraConfig infra-config-api */
        patch: operations["infra-config-api/UpdateInfraConfig"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/associated-resources": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListAssociatedResources infra-config-api */
        get: operations["infra-config-api/ListAssociatedResources"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/compute-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** DetachComputeConfig infra-config-api */
        delete: operations["infra-config-api/DetachComputeConfig"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/network-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** DetachNetworkConfig infra-config-api */
        delete: operations["infra-config-api/DetachNetworkConfig"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/release": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** ReleaseInfraConfig infra-config-api */
        post: operations["infra-config-api/ReleaseInfraConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/rollout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** RolloutFleetInfra infra-config-api */
        post: operations["infra-config-api/RolloutFleetInfra"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/rollout/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** RolloutFleetInfraStatus infra-config-api */
        get: operations["infra-config-api/RolloutFleetInfraStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/storage-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** DetachStorageConfig infra-config-api */
        delete: operations["infra-config-api/DetachStorageConfig"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/input-parameter": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CreateInputParameter input-parameter-api */
        post: operations["input-parameter-api/CreateInputParameter"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/input-parameter/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeInputParameter input-parameter-api */
        get: operations["input-parameter-api/DescribeInputParameter"];
        put?: never;
        post?: never;
        /** DeleteInputParameter input-parameter-api */
        delete: operations["input-parameter-api/DeleteInputParameter"];
        options?: never;
        head?: never;
        /** UpdateInputParameter input-parameter-api */
        patch: operations["input-parameter-api/UpdateInputParameter"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/model": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CreateServiceModel service-model-api */
        post: operations["service-model-api/CreateServiceModel"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/model/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeServiceModel service-model-api */
        get: operations["service-model-api/DescribeServiceModel"];
        put?: never;
        post?: never;
        /** DeleteServiceModel service-model-api */
        delete: operations["service-model-api/DeleteServiceModel"];
        options?: never;
        head?: never;
        /** UpdateServiceModel service-model-api */
        patch: operations["service-model-api/UpdateServiceModel"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/model/{id}/account-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** AddAccountConfigToServiceModel service-model-api */
        post: operations["service-model-api/AddAccountConfigToServiceModel"];
        /** RemoveAccountConfigFromServiceModel service-model-api */
        delete: operations["service-model-api/RemoveAccountConfigFromServiceModel"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/model/{id}/account-config/{accountConfigId}/active": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** SetActiveAccountConfig service-model-api */
        post: operations["service-model-api/SetActiveAccountConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/model/{id}/feature": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** EnableServiceModelFeature service-model-api */
        put: operations["service-model-api/EnableServiceModelFeature"];
        post?: never;
        /** DisableServiceModelFeature service-model-api */
        delete: operations["service-model-api/DisableServiceModelFeature"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/model/{id}/release": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ReleaseServiceModelStatus service-model-api */
        get: operations["service-model-api/ReleaseServiceModelStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/model/{serviceModelId}/product-tier": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListProductTier product-tier-api */
        get: operations["product-tier-api/ListProductTier"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/model/{serviceModelId}/vunit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListVUnits vunit-api */
        get: operations["vunit-api/ListVUnits"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/model/copy/{sourceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CopyServiceModel service-model-api */
        post: operations["service-model-api/CopyServiceModel"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/network-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListNetworkConfig network-config-api */
        get: operations["network-config-api/ListNetworkConfig"];
        put?: never;
        /** CreateNetworkConfig network-config-api */
        post: operations["network-config-api/CreateNetworkConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/network-config/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeNetworkConfig network-config-api */
        get: operations["network-config-api/DescribeNetworkConfig"];
        put?: never;
        post?: never;
        /** DeleteNetworkConfig network-config-api */
        delete: operations["network-config-api/DeleteNetworkConfig"];
        options?: never;
        head?: never;
        /** UpdateNetworkConfig network-config-api */
        patch: operations["network-config-api/UpdateNetworkConfig"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/network/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeNetwork vunit-api */
        get: operations["vunit-api/DescribeNetwork"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/output-parameter": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CreateOutputParameter output-parameter-api */
        post: operations["output-parameter-api/CreateOutputParameter"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/output-parameter/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeOutputParameter output-parameter-api */
        get: operations["output-parameter-api/DescribeOutputParameter"];
        put?: never;
        post?: never;
        /** DeleteOutputParameter output-parameter-api */
        delete: operations["output-parameter-api/DeleteOutputParameter"];
        options?: never;
        head?: never;
        /** UpdateOutputParameter output-parameter-api */
        patch: operations["output-parameter-api/UpdateOutputParameter"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/product-tier": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CreateProductTier product-tier-api */
        post: operations["product-tier-api/CreateProductTier"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/product-tier/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeProductTier product-tier-api */
        get: operations["product-tier-api/DescribeProductTier"];
        put?: never;
        post?: never;
        /** DeleteProductTier product-tier-api */
        delete: operations["product-tier-api/DeleteProductTier"];
        options?: never;
        head?: never;
        /** UpdateProductTier product-tier-api */
        patch: operations["product-tier-api/UpdateProductTier"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/product-tier/{id}/feature": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** EnableProductTierFeature product-tier-api */
        put: operations["product-tier-api/EnableProductTierFeature"];
        post?: never;
        /** DisableProductTierFeature product-tier-api */
        delete: operations["product-tier-api/DisableProductTierFeature"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/product-tier/{productTierId}/service-plan": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetServicePlan service-plan-api */
        get: operations["service-plan-api/GetServicePlan"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/product-tier/copy/{sourceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CopyProductTier product-tier-api */
        post: operations["product-tier-api/CopyProductTier"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/customer-version-set": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** CustomerListTierVersionSets tier-version-set-api */
        get: operations["tier-version-set-api/CustomerListTierVersionSets"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListTierVersionSets tier-version-set-api */
        get: operations["tier-version-set-api/ListTierVersionSets"];
        put?: never;
        /** CreateTierVersionSet tier-version-set-api */
        post: operations["tier-version-set-api/CreateTierVersionSet"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeTierVersionSet tier-version-set-api */
        get: operations["tier-version-set-api/DescribeTierVersionSet"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** UpdateTierVersionSet tier-version-set-api */
        patch: operations["tier-version-set-api/UpdateTierVersionSet"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/deprecate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** DeprecateTierVersionSet tier-version-set-api */
        patch: operations["tier-version-set-api/DeprecateTierVersionSet"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/diff/{anotherVersion}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DiffTierVersionSets tier-version-set-api */
        get: operations["tier-version-set-api/DiffTierVersionSets"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/promote": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** PromoteTierVersionSet tier-version-set-api */
        patch: operations["tier-version-set-api/PromoteTierVersionSet"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/release": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** ReleaseTierVersionSet tier-version-set-api */
        patch: operations["tier-version-set-api/ReleaseTierVersionSet"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/producttier/{productTierId}/resource": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListResources resource-api */
        get: operations["resource-api/ListResources"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CreateResource resource-api */
        post: operations["resource-api/CreateResource"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeResource resource-api */
        get: operations["resource-api/DescribeResource"];
        put?: never;
        post?: never;
        /** DeleteResource resource-api */
        delete: operations["resource-api/DeleteResource"];
        options?: never;
        head?: never;
        /** UpdateResource resource-api */
        patch: operations["resource-api/UpdateResource"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{id}/action-hook": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListActionHooks resource-api */
        get: operations["resource-api/ListActionHooks"];
        put?: never;
        /** RegisterActionHook resource-api */
        post: operations["resource-api/RegisterActionHook"];
        /** DeregisterActionHook resource-api */
        delete: operations["resource-api/DeregisterActionHook"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{id}/capability": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListResourceCapabilities resource-api */
        get: operations["resource-api/ListResourceCapabilities"];
        /** EnableResourceCapability resource-api */
        put: operations["resource-api/EnableResourceCapability"];
        post?: never;
        /** DisableResourceCapability resource-api */
        delete: operations["resource-api/DisableResourceCapability"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{id}/dependent-resource": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListDependentResource resource-api */
        get: operations["resource-api/ListDependentResource"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{id}/deprecate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** DeprecateResource resource-api */
        patch: operations["resource-api/DeprecateResource"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{id}/environment-variables": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** UnsetEnvironmentVariables resource-api */
        delete: operations["resource-api/UnsetEnvironmentVariables"];
        options?: never;
        head?: never;
        /** SetEnvironmentVariables resource-api */
        patch: operations["resource-api/SetEnvironmentVariables"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{id}/file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListFiles resource-api */
        get: operations["resource-api/ListFiles"];
        put?: never;
        /** AddFile resource-api */
        post: operations["resource-api/AddFile"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetFile resource-api */
        get: operations["resource-api/GetFile"];
        put?: never;
        post?: never;
        /** RemoveFile resource-api */
        delete: operations["resource-api/RemoveFile"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}/content": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** UpdateFileContent resource-api */
        put: operations["resource-api/UpdateFileContent"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}/metadata": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** UpdateFileMetadata resource-api */
        patch: operations["resource-api/UpdateFileMetadata"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{id}/metrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeResourceMetricsConfig resource-api */
        get: operations["resource-api/DescribeResourceMetricsConfig"];
        put?: never;
        /** RegisterResourceMetricsConfig resource-api */
        post: operations["resource-api/RegisterResourceMetricsConfig"];
        /** DeregisterResourceMetricsConfig resource-api */
        delete: operations["resource-api/DeregisterResourceMetricsConfig"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{id}/resource-dependency/{resourceDependencyId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** AddResourceDependency resource-api */
        post: operations["resource-api/AddResourceDependency"];
        /** RemoveResourceDependency resource-api */
        delete: operations["resource-api/RemoveResourceDependency"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{resourceId}/input-parameter": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListInputParameter input-parameter-api */
        get: operations["input-parameter-api/ListInputParameter"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/resource/{resourceId}/output-parameter": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListOutputParameter output-parameter-api */
        get: operations["output-parameter-api/ListOutputParameter"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/service-api": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** CreateServiceAPI service-api-api */
        post: operations["service-api-api/CreateServiceAPI"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/service-api/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeServiceAPI service-api-api */
        get: operations["service-api-api/DescribeServiceAPI"];
        put?: never;
        post?: never;
        /** DeleteServiceAPI service-api-api */
        delete: operations["service-api-api/DeleteServiceAPI"];
        options?: never;
        head?: never;
        /** UpdateServiceAPI service-api-api */
        patch: operations["service-api-api/UpdateServiceAPI"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/service-api/{id}/all-pending-changes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribePendingChanges service-api-api */
        get: operations["service-api-api/DescribePendingChanges"];
        put?: never;
        post?: never;
        /** DiscardPendingChanges service-api-api */
        delete: operations["service-api-api/DiscardPendingChanges"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/service-api/{id}/deprecate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** DeprecateServiceAPI service-api-api */
        post: operations["service-api-api/DeprecateServiceAPI"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/service-api/{id}/release": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** ReleaseServiceAPI service-api-api */
        post: operations["service-api-api/ReleaseServiceAPI"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/serviceapi/{serviceApiId}/model": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListServiceModel service-model-api */
        get: operations["service-model-api/ListServiceModel"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/image-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListImageConfigs image-config-api */
        get: operations["image-config-api/ListImageConfigs"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/infra-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListInfraConfig infra-config-api */
        get: operations["infra-config-api/ListInfraConfig"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/service-api": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListServiceAPI service-api-api */
        get: operations["service-api-api/ListServiceAPI"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/storage-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListStorageConfig storage-config-api */
        get: operations["storage-config-api/ListStorageConfig"];
        put?: never;
        /** CreateStorageConfig storage-config-api */
        post: operations["storage-config-api/CreateStorageConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/storage-config/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeStorageConfig storage-config-api */
        get: operations["storage-config-api/DescribeStorageConfig"];
        put?: never;
        post?: never;
        /** DeleteStorageConfig storage-config-api */
        delete: operations["storage-config-api/DeleteStorageConfig"];
        options?: never;
        head?: never;
        /** UpdateStorageConfig storage-config-api */
        patch: operations["storage-config-api/UpdateStorageConfig"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/storage-config/{id}/volume/{storageVolumeConfigId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** AddStorageVolumeConfig storage-config-api */
        put: operations["storage-config-api/AddStorageVolumeConfig"];
        post?: never;
        /** RemoveStorageVolumeConfig storage-config-api */
        delete: operations["storage-config-api/RemoveStorageVolumeConfig"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/storage-volume-config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListStorageVolumeConfig storage-volume-config-api */
        get: operations["storage-volume-config-api/ListStorageVolumeConfig"];
        put?: never;
        /** CreateStorageVolumeConfig storage-volume-config-api */
        post: operations["storage-volume-config-api/CreateStorageVolumeConfig"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/storage-volume-config/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeStorageVolumeConfig storage-volume-config-api */
        get: operations["storage-volume-config-api/DescribeStorageVolumeConfig"];
        put?: never;
        post?: never;
        /** DeleteStorageVolumeConfig storage-volume-config-api */
        delete: operations["storage-volume-config-api/DeleteStorageVolumeConfig"];
        options?: never;
        head?: never;
        /** UpdateStorageVolumeConfig storage-volume-config-api */
        patch: operations["storage-volume-config-api/UpdateStorageVolumeConfig"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/storage-volume-config/{id}/instance": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** UpdateInstanceStorageVolumeConfig storage-volume-config-api */
        patch: operations["storage-volume-config-api/UpdateInstanceStorageVolumeConfig"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/storage-volume-config/{id}/size": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** UpdateStorageVolumeSizeConfig storage-volume-config-api */
        patch: operations["storage-volume-config-api/UpdateStorageVolumeSizeConfig"];
        trace?: never;
    };
    "/2022-09-01-00/service/{serviceId}/vunit/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeVUnit vunit-api */
        get: operations["vunit-api/DescribeVUnit"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/composespec": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** BuildServiceFromComposeSpec service-api */
        put: operations["service-api/BuildServiceFromComposeSpec"];
        /** CreateServiceFromComposeSpec service-api */
        post: operations["service-api/CreateServiceFromComposeSpec"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/service/serviceplanspec": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** BuildServiceFromServicePlanSpec service-api */
        put: operations["service-api/BuildServiceFromServicePlanSpec"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/signin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Signin signin-api */
        post: operations["signin-api/Signin"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Signup signup-api */
        post: operations["signup-api/Signup"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/sp-organization": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeServiceProviderOrganization sp-organization-api */
        get: operations["sp-organization-api/DescribeServiceProviderOrganization"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** ModifyServiceProviderOrganization sp-organization-api */
        patch: operations["sp-organization-api/ModifyServiceProviderOrganization"];
        trace?: never;
    };
    "/2022-09-01-00/stripe-setup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetStripeAuthorizeUrl stripe-connect-api */
        get: operations["stripe-connect-api/GetStripeAuthorizeUrl"];
        put?: never;
        /** CompleteOAuthConnection stripe-connect-api */
        post: operations["stripe-connect-api/CompleteOAuthConnection"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/subscription": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListSubscriptions subscription-api */
        get: operations["subscription-api/ListSubscriptions"];
        put?: never;
        /** CreateSubscription subscription-api */
        post: operations["subscription-api/CreateSubscription"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/subscription/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeSubscription subscription-api */
        get: operations["subscription-api/DescribeSubscription"];
        put?: never;
        post?: never;
        /** DeleteSubscription subscription-api */
        delete: operations["subscription-api/DeleteSubscription"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/subscription/request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ListSubscriptionRequests subscription-request-api */
        get: operations["subscription-request-api/ListSubscriptionRequests"];
        put?: never;
        /** CreateSubscriptionRequest subscription-request-api */
        post: operations["subscription-request-api/CreateSubscriptionRequest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/subscription/request/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeSubscriptionRequest subscription-request-api */
        get: operations["subscription-request-api/DescribeSubscriptionRequest"];
        put?: never;
        post?: never;
        /** CancelSubscriptionRequest subscription-request-api */
        delete: operations["subscription-request-api/CancelSubscriptionRequest"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/tenant-billing": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetTenantBillingStatus tenant-billing-api */
        get: operations["tenant-billing-api/GetTenantBillingStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/tenant-billing/disable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** DisableTenantBilling tenant-billing-api */
        delete: operations["tenant-billing-api/DisableTenantBilling"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/tenant-billing/disable/{billingProviderType}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** DisableBillingProvider tenant-billing-api */
        delete: operations["tenant-billing-api/DisableBillingProvider"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/tenant-billing/enable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** EnableTenantBilling tenant-billing-api */
        post: operations["tenant-billing-api/EnableTenantBilling"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/tenant-billing/enable/{billingProviderType}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** EnableBillingProvider tenant-billing-api */
        post: operations["tenant-billing-api/EnableBillingProvider"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/update-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** UpdatePassword users-api */
        post: operations["users-api/UpdatePassword"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/usage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetCurrentUsage usage-api */
        get: operations["usage-api/GetCurrentUsage"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/usage-per-day": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetUsagePerDay usage-api */
        get: operations["usage-api/GetUsagePerDay"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** DescribeUser users-api */
        get: operations["users-api/DescribeUser"];
        put?: never;
        post?: never;
        /** DeleteUser users-api */
        delete: operations["users-api/DeleteUser"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/user/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** UpdateUser users-api */
        patch: operations["users-api/UpdateUser"];
        trace?: never;
    };
    "/2022-09-01-00/users/{id}/regenerate-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** RegenerateToken signup-api */
        post: operations["signup-api/RegenerateToken"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/validate-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** ValidateToken signup-api */
        post: operations["signup-api/ValidateToken"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/2022-09-01-00/version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * registrationServiceVersion global-api
         * @description Registration service version endpoint
         */
        get: operations["global-api/registrationServiceVersion"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @example {
         *       "inputParameters": [
         *         {
         *           "defaultValue": null,
         *           "description": "The name of the server",
         *           "displayName": "Server Name",
         *           "isList": false,
         *           "key": "serverName",
         *           "modifiable": true,
         *           "options": null,
         *           "required": true,
         *           "type": "string"
         *         },
         *         {
         *           "defaultValue": "option1",
         *           "description": "The type of the server",
         *           "displayName": "Server Type",
         *           "isList": false,
         *           "key": "serverType",
         *           "modifiable": true,
         *           "options": [
         *             "option1",
         *             "option2"
         *           ],
         *           "required": true,
         *           "type": "string"
         *         }
         *       ],
         *       "outputParameters": [
         *         {
         *           "description": "The name of the server",
         *           "displayName": "Server Name",
         *           "isList": false,
         *           "key": "serverName",
         *           "type": "string"
         *         },
         *         {
         *           "description": "The type of the server",
         *           "displayName": "Server Type",
         *           "isList": false,
         *           "key": "serverType",
         *           "type": "string"
         *         }
         *       ],
         *       "verb": "CREATE|DESCRIBE|LIST|UPDATE|DELETE"
         *     } */
        APIEntity: {
            /**
             * @description The input parameters
             * @example [
             *       {
             *         "defaultValue": null,
             *         "description": "The name of the server",
             *         "displayName": "Server Name",
             *         "isList": false,
             *         "key": "serverName",
             *         "modifiable": true,
             *         "options": null,
             *         "required": true,
             *         "type": "string"
             *       },
             *       {
             *         "defaultValue": "option1",
             *         "description": "The type of the server",
             *         "displayName": "Server Type",
             *         "isList": false,
             *         "key": "serverType",
             *         "modifiable": true,
             *         "options": [
             *           "option1",
             *           "option2"
             *         ],
             *         "required": true,
             *         "type": "string"
             *       }
             *     ]
             */
            inputParameters: components["schemas"]["InputParameterEntity"][];
            /**
             * @description The output parameters
             * @example [
             *       {
             *         "description": "The name of the server",
             *         "displayName": "Server Name",
             *         "isList": false,
             *         "key": "serverName",
             *         "type": "string"
             *       },
             *       {
             *         "description": "The type of the server",
             *         "displayName": "Server Type",
             *         "isList": false,
             *         "key": "serverType",
             *         "type": "string"
             *       }
             *     ]
             */
            outputParameters: components["schemas"]["OutputParameterEntity"][];
            /**
             * @description The API verb
             * @example CREATE|DESCRIBE|LIST|UPDATE|DELETE
             */
            verb: string;
        };
        /** @example {
         *       "port": 80,
         *       "targetGroupName": "my-target-group"
         *     } */
        AWSPrivateLinkConfiguration: {
            /**
             * Format: int64
             * @description The port of the target group
             * @example 80
             */
            port: number;
            /**
             * @description The target group name
             * @example my-target-group
             */
            targetGroupName: string;
        };
        /**
         * @description The list of private link configurations
         * @example [
         *       {
         *         "port": 80,
         *         "targetGroupName": "my-target-group"
         *       },
         *       {
         *         "port": 80,
         *         "targetGroupName": "my-target-group"
         *       },
         *       {
         *         "port": 80,
         *         "targetGroupName": "my-target-group"
         *       }
         *     ]
         */
        AWSPrivateLinkConfigurations: components["schemas"]["AWSPrivateLinkConfiguration"][];
        /**
         * @description Accelerator configuration for compute nodes
         * @example {
         *       "count": 1,
         *       "type": "nvidia-tesla-t4"
         *     }
         */
        AcceleratorConfiguration: {
            /**
             * Format: int64
             * @description Number of accelerators to attach
             * @example 1
             */
            count: number;
            /**
             * @description Type of accelerator (GPU)
             * @example nvidia-tesla-t4
             * @enum {string}
             */
            type: "nvidia-tesla-t4" | "nvidia-tesla-v100" | "nvidia-tesla-p100" | "nvidia-tesla-p4" | "nvidia-tesla-t4-vws" | "nvidia-tesla-p100-vws" | "nvidia-tesla-p4-vws" | "nvidia-a100" | "nvidia-a40" | "nvidia-h100" | "nvidia-l4";
        };
        /** @example {
         *       "token": "e7"
         *     } */
        AccountConfigIdentityIDRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example v
             */
            token: string;
        };
        /** @example {
         *       "id": "org-12345678"
         *     } */
        AccountConfigIdentityIDResult: {
            /**
             * @description ID of an Org
             * @example Culpa est dicta harum omnis.
             */
            id: string;
        };
        /** @example {
         *       "id": "e-123456",
         *       "token": "y"
         *     } */
        AcknowledgeEventRequest: {
            /**
             * @description ID of a Event
             * @example Quaerat omnis rem eum in sit ad.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example m3o
             */
            token: string;
        };
        /** @example {
         *       "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
         *       "customCommand": [
         *         "/bin/sh",
         *         "-c"
         *       ],
         *       "customImage": "my-custom-image:latest",
         *       "scope": "CLUSTER",
         *       "type": "ADD"
         *     } */
        ActionHook: {
            /**
             * @description The Base64 encoded command template to execute
             * @example ZWNobyAiaGVsbG8gd29ybGQi
             */
            commandTemplate: string;
            /**
             * @description The custom command to execute the hook with
             * @example [
             *       "/bin/sh",
             *       "-c"
             *     ]
             */
            customCommand?: string[];
            /**
             * @description The custom image to execute the hook
             * @example my-custom-image:latest
             */
            customImage?: string;
            /**
             * @description The scope of the hook
             * @example CLUSTER|NODE
             */
            scope: string;
            /**
             * @description The type of hook to execute
             * @example INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
             */
            type: string;
        };
        /** @example {
         *       "accountConfigId": "ac-12345678",
         *       "id": "sm-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "b7"
         *     } */
        AddAccountConfigToServiceModelRequest: {
            /**
             * @description ID of an Account Config
             * @example Ea excepturi fugiat occaecati veniam est iure.
             */
            accountConfigId: string;
            /**
             * @description ID of a Service Model
             * @example Autem sed voluptatem accusantium.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example cv7
             */
            token: string;
        };
        /** @example {
         *       "accountConfigId": "ac-12345678"
         *     } */
        AddAccountConfigToServiceModelRequest2: {
            /**
             * @description The infrastructure account configuration ID
             * @example ac-12345678
             */
            accountConfigId: string;
        };
        /** @example {
         *       "capacityToBeAdded": 3,
         *       "id": "instance-abcd1234",
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "pzt"
         *     } */
        AddCapacityToResourceInstanceRequest: {
            /**
             * Format: int64
             * @description Number of replicas to be added
             * @example 3
             */
            capacityToBeAdded: number;
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Eveniet ut blanditiis.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example y
             */
            token: string;
        };
        /** @example {
         *       "capacityToBeAdded": 3
         *     } */
        AddCapacityToResourceInstanceRequest2: {
            /**
             * Format: int64
             * @description Number of replicas to be added
             * @example 3
             */
            capacityToBeAdded: number;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "configOverride": {
         *         "instanceLifeCycleType": "Spot",
         *         "labels": {
         *           "env": "prod"
         *         },
         *         "rootVolumeSizeGi": 10,
         *         "taints": [
         *           {
         *             "effect": "NoSchedule",
         *             "key": "env",
         *             "value": "prod"
         *           }
         *         ],
         *         "warmPoolConfiguration": {
         *           "minimumNodesInPool": 1
         *         }
         *       },
         *       "id": "cc-12345678",
         *       "instanceType": "t3.micro",
         *       "serviceId": "s-12345678",
         *       "token": "8d"
         *     } */
        AddComputeInstanceTypeRequest: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            configOverride?: components["schemas"]["ComputeInstanceTypeConfigOverride"];
            /**
             * @description ID of a Compute Config
             * @example Voluptas aut asperiores repellendus placeat.
             */
            id: string;
            /**
             * @description The instance type for this compute instance type config
             * @example t3.micro
             */
            instanceType: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 41
             */
            token: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "configOverride": {
         *         "instanceLifeCycleType": "Spot",
         *         "labels": {
         *           "env": "prod"
         *         },
         *         "rootVolumeSizeGi": 10,
         *         "taints": [
         *           {
         *             "effect": "NoSchedule",
         *             "key": "env",
         *             "value": "prod"
         *           }
         *         ],
         *         "warmPoolConfiguration": {
         *           "minimumNodesInPool": 1
         *         }
         *       },
         *       "instanceType": "t3.micro"
         *     } */
        AddComputeInstanceTypeRequest2: {
            /**
             * @description The cloud provider for this compute instance type config
             * @example aws
             */
            cloudProviderName: string;
            configOverride?: components["schemas"]["ComputeInstanceTypeConfigOverride"];
            /**
             * @description The instance type for this compute instance type config
             * @example t3.micro
             */
            instanceType: string;
        };
        /** @example {
         *       "customDNS": "my-custom-dns.com",
         *       "id": "instance-abcd1234",
         *       "productTierKey": "premium",
         *       "resourceKey": "http-service",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "targetPort": 8080,
         *       "token": "f3x"
         *     } */
        AddCustomDNSToResourceInstanceRequest: {
            /**
             * @description The custom DNS to add
             * @example my-custom-dns.com
             */
            customDNS: string;
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example http-service
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Ea et cupiditate quia.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * Format: int64
             * @description The target port
             * @example 8080
             */
            targetPort?: number;
            /**
             * @description JWT token used to perform authorization
             * @example 69
             */
            token: string;
        };
        /** @example {
         *       "customDNS": "my-custom-dns.com",
         *       "targetPort": 8080
         *     } */
        AddCustomDNSToResourceInstanceRequest2: {
            /**
             * @description The custom DNS to add
             * @example my-custom-dns.com
             */
            customDNS: string;
            /**
             * Format: int64
             * @description The target port
             * @example 8080
             */
            targetPort?: number;
        };
        /** @example {
         *       "content_type": "multipart/form-data; boundary=boundary",
         *       "description": "A file to store the configuration for the resource",
         *       "fileType": "Config",
         *       "id": "r-12345678",
         *       "mountPath": "/etc/config",
         *       "name": "file.txt",
         *       "serviceId": "s-12345678",
         *       "token": "42m"
         *     } */
        AddFileRequest: {
            /**
             * @description Content-Type header, must define value for multipart boundary.
             * @default multipart/form-data; boundary=boundary
             * @example multipart/form-data; boundary=boundary
             */
            content_type: string;
            /**
             * @description The description of the file
             * @example A file to store the configuration for the resource
             */
            description: string;
            /**
             * @description The type of the file
             * @example Config|Secret
             */
            fileType: string;
            /**
             * @description ID of a resource
             * @example Et exercitationem blanditiis quia voluptatem placeat.
             */
            id: string;
            /**
             * @description The mount path of the file
             * @example /etc/config
             */
            mountPath: string;
            /**
             * @description The name of the file
             * @example file.txt
             */
            name: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example f
             */
            token: string;
        };
        /** @example {
         *       "id": "r-12345678",
         *       "parameterMap": {
         *         "clusterId": "writerId",
         *         "clusterOrg": "userDatabase"
         *       },
         *       "resourceDependencyId": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "kl"
         *     } */
        AddResourceDependencyRequest: {
            /**
             * @description ID of a resource
             * @example Non ea quod sequi.
             */
            id: string;
            /**
             * @description A map of the source parameter to the dependency resource parameter
             * @example {
             *       "clusterId": "writerId",
             *       "clusterOrg": "userDatabase"
             *     }
             */
            parameterMap?: {
                [key: string]: string;
            };
            /**
             * @description ID of a resource
             * @example Voluptatem nulla fugiat dolorem occaecati.
             */
            resourceDependencyId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example cuy
             */
            token: string;
        };
        /** @example {
         *       "parameterMap": {
         *         "clusterId": "writerId",
         *         "clusterOrg": "userDatabase"
         *       }
         *     } */
        AddResourceDependencyRequest2: {
            /**
             * @description A map of the source parameter to the dependency resource parameter
             * @example {
             *       "clusterId": "writerId",
             *       "clusterOrg": "userDatabase"
             *     }
             */
            parameterMap?: {
                [key: string]: string;
            };
        };
        /** @example {
         *       "id": "sc-12345678",
         *       "mountPath": "/data",
         *       "serviceId": "s-12345678",
         *       "storageVolumeConfigId": "svc-12345678",
         *       "token": "y"
         *     } */
        AddStorageVolumeConfigRequest: {
            /**
             * @description ID of a Storage Config
             * @example Quia eos sed et quibusdam.
             */
            id: string;
            /**
             * @description The path where the storage volume will be mounted
             * @example /data
             */
            mountPath?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Storage Volume Config
             * @example Impedit soluta ab itaque nemo et.
             */
            storageVolumeConfigId: string;
            /**
             * @description JWT token used to perform authorization
             * @example mu6
             */
            token: string;
        };
        /** @example {
         *       "mountPath": "/data"
         *     } */
        AddStorageVolumeConfigRequest2: {
            /**
             * @description The path where the storage volume will be mounted
             * @example /data
             */
            mountPath?: string;
        };
        /** @example {
         *       "AddCapabilities": [
         *         "CAP_NET_ADMIN",
         *         "CAP_NET_RAW"
         *       ],
         *       "DropCapabilities": [
         *         "CAP_NET_ADMIN",
         *         "CAP_NET_RAW"
         *       ],
         *       "SupplementalGroupIDs": [
         *         1001,
         *         999
         *       ]
         *     } */
        AdditionalSecurityContext: {
            /**
             * @description Capabilities to add
             * @example [
             *       "CAP_NET_ADMIN",
             *       "CAP_NET_RAW"
             *     ]
             */
            AddCapabilities?: string[];
            /**
             * @description Capabilities to drop
             * @example [
             *       "CAP_NET_ADMIN",
             *       "CAP_NET_RAW"
             *     ]
             */
            DropCapabilities?: string[];
            /**
             * @description Supplemental group IDs
             * @example [
             *       1001,
             *       999
             *     ]
             */
            SupplementalGroupIDs?: number[];
        };
        /** @example {
         *       "addressLine1": "1234 Main St",
         *       "addressLine2": "Apt 123",
         *       "addressLine3": "Building 123",
         *       "city": "San Francisco",
         *       "country": "US",
         *       "state": "CA",
         *       "zip": "94123"
         *     } */
        Address: {
            /**
             * @description The street address
             * @example 1234 Main St
             */
            addressLine1: string;
            /**
             * @description Address Line 2
             * @example Apt 123
             */
            addressLine2?: string;
            /**
             * @description Address Line 3
             * @example Building 123
             */
            addressLine3?: string;
            /**
             * @description Name of the City
             * @example San Francisco
             */
            city: string;
            /**
             * @description Name of the Country
             * @example US
             */
            country: string;
            /**
             * @description Name of the State/Province/Region
             * @example CA
             */
            state: string;
            /**
             * @description Zip code
             * @example 94123
             */
            zip: string;
        };
        /** @example {
         *       "Description": "Ensures high availability across multiple zones.",
         *       "IsManaged": true,
         *       "Name": "Prometheus",
         *       "Properties": {
         *         "Molestiae dolorem dolorum maxime ab iste.": "Numquam ullam sunt."
         *       },
         *       "Type": "HelmChart"
         *     } */
        Amenity: {
            /**
             * @description A description of the amenity.
             * @example Ensures high availability across multiple zones.
             */
            Description?: string;
            /**
             * @description Whether the amenity is managed by the system.
             * @example true
             */
            IsManaged?: boolean;
            /**
             * @description The name of the amenity.
             * @example Prometheus
             */
            Name?: string;
            /**
             * @description The properties of the amenity.
             * @example {
             *       "Molestias dolorem quia.": "Dolorem ab placeat et.",
             *       "Quis omnis tempore culpa et.": "Cumque dicta rem illum ipsum ut."
             *     }
             */
            Properties?: {
                [key: string]: unknown;
            };
            /**
             * @description The type of the amenity.
             * @example HelmChart
             */
            Type?: string;
        };
        /** @example {
         *       "metricEndpoint": "http://localhost:9187/metrics",
         *       "metricLabelName": "label",
         *       "metricLabelValue": "value",
         *       "metricName": "metric_name"
         *     } */
        AutoScalingMetricSpec: {
            /**
             * @description The local host endpoint to supply prometheus metric
             * @example http://localhost:9187/metrics
             */
            metricEndpoint: string;
            /**
             * @description The prometheus metric label name for scaling
             * @example label
             */
            metricLabelName: string;
            /**
             * @description The prometheus metric label value for scaling
             * @example value
             */
            metricLabelValue: string;
            /**
             * @description The prometheus metric name for scaling
             * @example metric_name
             */
            metricName: string;
        };
        /**
         * @description Autoscaling policy for compute nodes
         * @example {
         *       "idleMinutesBeforeScalingDown": 1,
         *       "idleThreshold": 1,
         *       "maxReplicas": "4",
         *       "minReplicas": "1",
         *       "overUtilizedMinutesBeforeScalingUp": 1,
         *       "overUtilizedThreshold": 1,
         *       "scalingMetric": {
         *         "metricEndpoint": "http://localhost:9187/metrics",
         *         "metricLabelName": "label",
         *         "metricLabelValue": "value",
         *         "metricName": "metric_name"
         *       }
         *     }
         */
        AutoscalingPolicy: {
            /**
             * Format: int64
             * @description Minutes before scaling down the compute nodes in idle state
             * @default 5
             * @example 1
             */
            idleMinutesBeforeScalingDown: number;
            /**
             * Format: int64
             * @description Metric value below threshold will be considered to be idle
             * @default 20
             * @example 1
             */
            idleThreshold: number;
            /**
             * @description Maximum number of compute nodes to provision
             * @example 4
             */
            maxReplicas: string;
            /**
             * @description Minimum number of compute nodes to provision
             * @example 1
             */
            minReplicas: string;
            /**
             * Format: int64
             * @description Minutes before scaling up the compute nodes in overUtilized state
             * @default 5
             * @example 1
             */
            overUtilizedMinutesBeforeScalingUp: number;
            /**
             * Format: int64
             * @description Metric value beyond threshold will be considered to be overUtilized
             * @default 80
             * @example 1
             */
            overUtilizedThreshold: number;
            scalingMetric?: components["schemas"]["AutoScalingMetricSpec"];
        };
        /** @example {
         *       "associatedResourceIDs": [
         *         "r-12345678",
         *         "r-abcdef12"
         *       ],
         *       "backendPort": 8080,
         *       "ingressPort": 1234
         *     } */
        BackendPortConfiguration: {
            /**
             * @description The IDs of the resource associated with the backend port
             * @example [
             *       "r-12345678",
             *       "r-abcdef12"
             *     ]
             */
            associatedResourceIDs: string[];
            /**
             * Format: int64
             * @description The port to forward traffic to
             * @example 8080
             */
            backendPort: number;
            /**
             * Format: int64
             * @description The ingress port to configure on the load balancer
             * @example 1234
             */
            ingressPort: number;
        };
        /** @example {
         *       "backupPeriodInHours": 24,
         *       "backupRetentionInDays": 7
         *     } */
        BackupConfiguration: {
            /**
             * Format: int64
             * @description The period in hours to take backups
             * @example 24
             */
            backupPeriodInHours: number;
            /**
             * Format: int64
             * @description The number of days to retain backups
             * @example 7
             */
            backupRetentionInDays: number;
        };
        /** @example {
         *       "backupPeriodInHours": 2,
         *       "backupRetentionInDays": 7,
         *       "earliestRestoreTime": "2021-09-01T00:00:00Z",
         *       "lastBackupTime": "2021-09-01T00:00:00Z"
         *     } */
        BackupStatus: {
            /**
             * Format: int64
             * @description The backup period in hours
             * @example 2
             */
            backupPeriodInHours: number;
            /**
             * Format: int64
             * @description The backup retention in days
             * @example 7
             */
            backupRetentionInDays: number;
            /**
             * @description The earliest restore time
             * @example 2021-09-01T00:00:00Z
             */
            earliestRestoreTime?: string;
            /**
             * @description The last backup time
             * @example 2021-09-01T00:00:00Z
             */
            lastBackupTime?: string;
        };
        /** @example {
         *       "balanceDueLink": "https://billing.provider.com/balance-due. Only present when the billing provider is BRING_YOUR_OWN",
         *       "connectClientID": "ca_1234567890",
         *       "logoURL": "https://example.com/logo.png",
         *       "name": "GovPay",
         *       "status": "ENABLED | DISABLED | PENDING",
         *       "stripeCustomerID": "cus_1234567890",
         *       "type": "STRIPE"
         *     } */
        BillingProvider: {
            /**
             * @description The URL to the balance due page
             * @example https://billing.provider.com/balance-due. Only present when the billing provider is BRING_YOUR_OWN
             */
            balanceDueLink?: string;
            /**
             * @description The Stripe Connect Client ID associated with the billing provider. Only present when the billing provider is STRIPE
             * @example ca_1234567890
             */
            connectClientID?: string;
            /**
             * @description The URL of the logo for the billing provider. Only present when the billing provider is BRING_YOUR_OWN
             * @example https://example.com/logo.png
             */
            logoURL?: string;
            /**
             * @description A custom name for the billing provider. Only present when the billing provider is BRING_YOUR_OWN
             * @example GovPay
             */
            name?: string;
            /**
             * @description The status of the billing provider
             * @example ENABLED | DISABLED | PENDING
             */
            status: string;
            /**
             * @description The Stripe Customer ID associated with the billing provider. Only present when the billing provider is STRIPE
             * @example cus_1234567890
             */
            stripeCustomerID?: string;
            /**
             * @description The billing provider type
             * @example STRIPE|BRING_YOUR_OWN
             */
            type: string;
        };
        /** @example {
         *       "GCSConfiguration": {},
         *       "S3Configuration": {}
         *     } */
        BlobStorageConfiguration: {
            GCSConfiguration?: components["schemas"]["GCSConfiguration"];
            S3Configuration?: components["schemas"]["S3Configuration"];
        };
        /** @example {
         *       "configs": {
         *         "Eaque quae nihil quae.": "Illo dicta tempore quia perspiciatis voluptatem.",
         *         "Qui ut repellat odio tenetur.": "Inventore expedita iure dolor repellendus.",
         *         "Velit quisquam autem qui.": "Facere tenetur est vel nobis nesciunt voluptatum."
         *       },
         *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *       "dryrun": true,
         *       "environment": "dev",
         *       "environmentType": "DEV",
         *       "fileContent": "Iste necessitatibus.",
         *       "name": "MySQL multi-writer service",
         *       "release": true,
         *       "releaseAsPreferred": true,
         *       "releaseVersionName": "mysql",
         *       "secrets": {
         *         "Aliquid expedita ex perferendis reprehenderit rerum.": "Voluptatem quam.",
         *         "Similique odit voluptas non magnam.": "Voluptatem aperiam quia cumque occaecati inventore."
         *       },
         *       "serviceLogoURL": "http://parker.com/shanelle",
         *       "token": "lug"
         *     } */
        BuildServiceFromComposeSpecRequest: {
            /**
             * @description Configs for the service. Key is the compose spec name of the config and value is base64 encoded config content
             * @example {
             *       "Id occaecati quis quidem ut sed.": "Consequatur consequatur odio placeat rerum dolores.",
             *       "Sit quia modi deleniti.": "Quaerat recusandae aliquam laudantium ea animi."
             *     }
             */
            configs?: {
                [key: string]: string;
            };
            /**
             * @description A brief description of the service
             * @example A MySQL SaaS specializing in multi-writer clusters for high availability
             */
            description?: string;
            /**
             * @description If set to true, performs a dry run of the build operation without making any changes
             * @example true
             */
            dryrun?: boolean;
            /**
             * @description The environment to build the service in
             * @example dev
             */
            environment?: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType?: string;
            /**
             * @description Base64 encoded Compose Spec YAML in docker compose format
             * @example Laboriosam et ut voluptas aut.
             */
            fileContent: string;
            /**
             * @description Name of the Service
             * @example MySQL multi-writer service
             */
            name: string;
            /**
             * @description Release the service after building
             * @example true
             */
            release?: boolean;
            /**
             * @description Release the service as preferred
             * @example true
             */
            releaseAsPreferred?: boolean;
            /**
             * @description Release version name
             * @example mysql
             */
            releaseVersionName?: string;
            /**
             * @description Secrets for the service. Key is the compose spec name of the secret and value is base64 encoded secret content
             * @example {
             *       "Cumque iure ea.": "Recusandae temporibus est sit repudiandae nemo.",
             *       "Excepturi dicta voluptas non culpa impedit ut.": "Nulla eaque quibusdam.",
             *       "Harum commodi rerum.": "Consequatur nisi dignissimos placeat nihil nobis."
             *     }
             */
            secrets?: {
                [key: string]: string;
            };
            /**
             * Format: uri
             * @description The logo for the service
             * @example http://zulaufreynolds.org/montana
             */
            serviceLogoURL?: string;
            /**
             * @description JWT token used to perform authorization
             * @example v
             */
            token: string;
        };
        /** @example {
         *       "configs": {
         *         "Blanditiis voluptatum.": "Voluptatem cum in quae quo sit.",
         *         "Ducimus officiis qui voluptates doloribus quidem.": "Et rerum quam.",
         *         "Nihil aut dolore inventore porro earum in.": "Error molestiae."
         *       },
         *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *       "dryrun": true,
         *       "environment": "dev",
         *       "environmentType": "DEV",
         *       "fileContent": "Quasi qui distinctio quia accusantium deleniti assumenda.",
         *       "name": "MySQL multi-writer service",
         *       "release": true,
         *       "releaseAsPreferred": true,
         *       "releaseVersionName": "mysql",
         *       "secrets": {
         *         "Deleniti doloremque nam neque.": "Dicta assumenda repellendus consequuntur.",
         *         "Qui ut est quasi sunt non quibusdam.": "Perspiciatis enim velit nobis molestias culpa."
         *       },
         *       "serviceLogoURL": "http://paucek.net/lydia_o'connell"
         *     } */
        BuildServiceFromComposeSpecRequest2: {
            /**
             * @description Configs for the service. Key is the compose spec name of the config and value is base64 encoded config content
             * @example {
             *       "Alias sunt aspernatur possimus.": "Magni est impedit vitae.",
             *       "In laudantium.": "Quae et possimus itaque rerum ratione."
             *     }
             */
            configs?: {
                [key: string]: string;
            };
            /**
             * @description A brief description of the service
             * @example A MySQL SaaS specializing in multi-writer clusters for high availability
             */
            description?: string;
            /**
             * @description If set to true, performs a dry run of the build operation without making any changes
             * @example true
             */
            dryrun?: boolean;
            /**
             * @description The environment to build the service in
             * @example dev
             */
            environment?: string;
            /**
             * @description The type of the environment
             * @example DEV
             */
            environmentType?: string;
            /**
             * @description Base64 encoded Compose Spec YAML in docker compose format
             * @example Incidunt beatae id quis.
             */
            fileContent: string;
            /**
             * @description Name of the Service
             * @example MySQL multi-writer service
             */
            name: string;
            /**
             * @description Release the service after building
             * @example true
             */
            release?: boolean;
            /**
             * @description Release the service as preferred
             * @example true
             */
            releaseAsPreferred?: boolean;
            /**
             * @description Release version name
             * @example mysql
             */
            releaseVersionName?: string;
            /**
             * @description Secrets for the service. Key is the compose spec name of the secret and value is base64 encoded secret content
             * @example {
             *       "Commodi quia molestiae rem.": "Vel et quidem.",
             *       "Magnam numquam rerum nobis totam vitae.": "Corporis odit magni aut aut corporis.",
             *       "Qui eveniet saepe voluptas.": "Eos consequuntur consectetur autem tempora."
             *     }
             */
            secrets?: {
                [key: string]: string;
            };
            /**
             * Format: uri
             * @description The logo for the service
             * @example http://kozey.org/anastacio
             */
            serviceLogoURL?: string;
        };
        /** @example {
         *       "productTierID": "pt-12345678",
         *       "serviceEnvironmentID": "se-12345678",
         *       "serviceID": "s-12345678",
         *       "undefinedResources": {
         *         "mysql": "r-12345678"
         *       }
         *     } */
        BuildServiceFromComposeSpecResult: {
            /**
             * @description ID of a Product Tier
             * @example Fugiat facere dicta quo dolore nemo autem.
             */
            productTierID: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentID: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceID: string;
            /**
             * @description Resources that appear in the service plan but were not defined in the spec. These resources were not processed during the build.
             * @example {
             *       "mysql": "r-12345678"
             *     }
             */
            undefinedResources?: {
                [key: string]: string;
            };
        };
        /** @example {
         *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *       "dryrun": true,
         *       "environment": "dev",
         *       "environmentType": "DEV",
         *       "fileContent": "Voluptas aut atque quis tempora.",
         *       "name": "MySQL multi-writer service",
         *       "release": true,
         *       "releaseAsPreferred": true,
         *       "releaseVersionName": "mysql",
         *       "serviceLogoURL": "http://hand.biz/jewel_breitenberg",
         *       "token": "42"
         *     } */
        BuildServiceFromServicePlanSpecRequest: {
            /**
             * @description A brief description of the service
             * @example A MySQL SaaS specializing in multi-writer clusters for high availability
             */
            description?: string;
            /**
             * @description If set to true, performs a dry run of the build operation without making any changes
             * @example true
             */
            dryrun?: boolean;
            /**
             * @description The environment to build the service in
             * @example dev
             */
            environment?: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType?: string;
            /**
             * @description Base64 encoded Compose Spec YAML in service plan configuration format
             * @example Corporis eaque autem fuga.
             */
            fileContent: string;
            /**
             * @description Name of the Service
             * @example MySQL multi-writer service
             */
            name: string;
            /**
             * @description Release the service after building
             * @example true
             */
            release?: boolean;
            /**
             * @description Release the service as preferred
             * @example true
             */
            releaseAsPreferred?: boolean;
            /**
             * @description Release version name
             * @example mysql
             */
            releaseVersionName?: string;
            /**
             * Format: uri
             * @description The logo for the service
             * @example http://thielblock.net/cyril_hartmann
             */
            serviceLogoURL?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 8ga
             */
            token: string;
        };
        /** @example {
         *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *       "dryrun": true,
         *       "environment": "dev",
         *       "environmentType": "DEV",
         *       "fileContent": "Cupiditate modi dignissimos eius.",
         *       "name": "MySQL multi-writer service",
         *       "release": true,
         *       "releaseAsPreferred": true,
         *       "releaseVersionName": "mysql",
         *       "serviceLogoURL": "http://predovic.name/shanon"
         *     } */
        BuildServiceFromServicePlanSpecRequest2: {
            /**
             * @description A brief description of the service
             * @example A MySQL SaaS specializing in multi-writer clusters for high availability
             */
            description?: string;
            /**
             * @description If set to true, performs a dry run of the build operation without making any changes
             * @example true
             */
            dryrun?: boolean;
            /**
             * @description The environment to build the service in
             * @example dev
             */
            environment?: string;
            /**
             * @description The type of the environment
             * @example DEV
             */
            environmentType?: string;
            /**
             * @description Base64 encoded Compose Spec YAML in service plan configuration format
             * @example Nihil voluptatem vel suscipit.
             */
            fileContent: string;
            /**
             * @description Name of the Service
             * @example MySQL multi-writer service
             */
            name: string;
            /**
             * @description Release the service after building
             * @example true
             */
            release?: boolean;
            /**
             * @description Release the service as preferred
             * @example true
             */
            releaseAsPreferred?: boolean;
            /**
             * @description Release version name
             * @example mysql
             */
            releaseVersionName?: string;
            /**
             * Format: uri
             * @description The logo for the service
             * @example http://ankunding.info/moises_mraz
             */
            serviceLogoURL?: string;
        };
        /** @example {
         *       "productTierID": "pt-12345678",
         *       "serviceEnvironmentID": "se-12345678",
         *       "serviceID": "s-12345678",
         *       "undefinedResources": {
         *         "mysql": "r-12345678"
         *       }
         *     } */
        BuildServiceFromServicePlanSpecResult: {
            /**
             * @description ID of a Product Tier
             * @example Vel neque.
             */
            productTierID: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentID: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceID: string;
            /**
             * @description Resources that appear in the service plan but were not defined in the spec. These resources were not processed during the build.
             * @example {
             *       "mysql": "r-12345678"
             *     }
             */
            undefinedResources?: {
                [key: string]: string;
            };
        };
        /** @example {
         *       "id": "subr-12345678",
         *       "token": "b0t"
         *     } */
        CancelSubscriptionRequestRequest: {
            /**
             * @description ID of a Subscription Request
             * @example Rerum esse harum.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 66
             */
            token: string;
        };
        /** @example {
         *       "attributes": {
         *         "resourceId": "r-12345678"
         *       },
         *       "changeType": "PENDING_NEW",
         *       "name": "Customer metrics"
         *     } */
        Change: {
            /**
             * @description Additional setting/component attributes
             * @example {
             *       "resourceId": "r-12345678"
             *     }
             */
            attributes: {
                [key: string]: string;
            };
            /**
             * @description State of the configuration change
             * @example PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
             */
            changeType: string;
            /**
             * @description The name of the setting/component that changed
             * @example Customer metrics
             */
            name: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "password": "password",
         *       "token": "fc7b8dea-a50b-4c9a-8864-fc3d845a2be6"
         *     } */
        ChangePasswordRequest: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /** @example password */
            password: string;
            /** @example fc7b8dea-a50b-4c9a-8864-fc3d845a2be6 */
            token: string;
        };
        /** @example {
         *       "planName": "STARTER",
         *       "token": "26"
         *     } */
        ChangePlanRequest: {
            /**
             * @description This parameter is used to select the appropriate Product Plan
             * @example STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
             */
            planName: string;
            /**
             * @description JWT token used to perform authorization
             * @example y
             */
            token: string;
        };
        /** @example {
         *       "planName": "STARTER"
         *     } */
        ChangePlanRequest2: {
            /**
             * @description The name of the plan this user is changing to
             * @example STARTER
             */
            planName: string;
        };
        /** @example {
         *       "categorizedResourceChanges": {
         *         "Deserunt et sed.": {
         *           "changes": [
         *             {
         *               "attributes": {
         *                 "resourceId": "r-12345678"
         *               },
         *               "changeType": "PENDING_NEW",
         *               "name": "Customer metrics"
         *             },
         *             {
         *               "attributes": {
         *                 "resourceId": "r-12345678"
         *               },
         *               "changeType": "PENDING_NEW",
         *               "name": "Customer metrics"
         *             },
         *             {
         *               "attributes": {
         *                 "resourceId": "r-12345678"
         *               },
         *               "changeType": "PENDING_NEW",
         *               "name": "Customer metrics"
         *             },
         *             {
         *               "attributes": {
         *                 "resourceId": "r-12345678"
         *               },
         *               "changeType": "PENDING_NEW",
         *               "name": "Customer metrics"
         *             }
         *           ],
         *           "status": "PENDING_UPDATE"
         *         }
         *       },
         *       "imageConfigChanges": {
         *         "changeState": "PENDING_NEW",
         *         "imageConfigId": "imgc-12345678",
         *         "imageName": "mysql"
         *       },
         *       "infraConfigChanges": {
         *         "changeState": "PENDING_NEW",
         *         "infraConfigId": "ic-12345678",
         *         "name": "MySQL Writer Infra Config"
         *       },
         *       "overallResourceStatus": "PENDING_UPDATE",
         *       "productTierFeatureChanges": "PENDING_UPDATE",
         *       "resourceChanges": "PENDING_DELETE",
         *       "resourceName": "Recusandae sit."
         *     } */
        ChangeSet: {
            /**
             * @description Summary of all changes within a resource for each category (ie. image, infra, product tier feature, etc.)
             * @example {
             *       "Deserunt et sed.": {
             *         "changes": [
             *           {
             *             "attributes": {
             *               "resourceId": "r-12345678"
             *             },
             *             "changeType": "PENDING_NEW",
             *             "name": "Customer metrics"
             *           },
             *           {
             *             "attributes": {
             *               "resourceId": "r-12345678"
             *             },
             *             "changeType": "PENDING_NEW",
             *             "name": "Customer metrics"
             *           },
             *           {
             *             "attributes": {
             *               "resourceId": "r-12345678"
             *             },
             *             "changeType": "PENDING_NEW",
             *             "name": "Customer metrics"
             *           },
             *           {
             *             "attributes": {
             *               "resourceId": "r-12345678"
             *             },
             *             "changeType": "PENDING_NEW",
             *             "name": "Customer metrics"
             *           }
             *         ],
             *         "status": "PENDING_UPDATE"
             *       }
             *     }
             */
            categorizedResourceChanges: {
                [key: string]: unknown;
            };
            imageConfigChanges?: components["schemas"]["ImageConfigChangeSummary"];
            infraConfigChanges?: components["schemas"]["InfraConfigChangeSummary"];
            /**
             * @description Summary status of the changes
             * @example NO_CHANGE|PENDING_CHANGE|NONE
             */
            overallResourceStatus: string;
            /**
             * @description State of the configuration change
             * @example PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
             */
            productTierFeatureChanges?: string;
            /**
             * @description State of the configuration change
             * @example PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
             */
            resourceChanges?: string;
            /**
             * @description The name of the resource
             * @example Quia nulla assumenda occaecati autem sint consequatur.
             */
            resourceName?: string;
        };
        /** @example {
         *       "changes": [
         *         {
         *           "attributes": {
         *             "resourceId": "r-12345678"
         *           },
         *           "changeType": "PENDING_NEW",
         *           "name": "Customer metrics"
         *         },
         *         {
         *           "attributes": {
         *             "resourceId": "r-12345678"
         *           },
         *           "changeType": "PENDING_NEW",
         *           "name": "Customer metrics"
         *         }
         *       ],
         *       "status": "PENDING_UPDATE"
         *     } */
        ChangeSummary: {
            /**
             * @description List of individual changes
             * @example [
             *       {
             *         "attributes": {
             *           "resourceId": "r-12345678"
             *         },
             *         "changeType": "PENDING_NEW",
             *         "name": "Customer metrics"
             *       },
             *       {
             *         "attributes": {
             *           "resourceId": "r-12345678"
             *         },
             *         "changeType": "PENDING_NEW",
             *         "name": "Customer metrics"
             *       },
             *       {
             *         "attributes": {
             *           "resourceId": "r-12345678"
             *         },
             *         "changeType": "PENDING_NEW",
             *         "name": "Customer metrics"
             *       }
             *     ]
             */
            changes: components["schemas"]["Change"][];
            /**
             * @description Summary status of the changes
             * @example NO_CHANGE|PENDING_CHANGE|NONE
             */
            status: string;
        };
        /** @example {
         *       "name": "my-layer",
         *       "scope": {
         *         "{{ $sys.cloudProviderName }}": "aws"
         *       },
         *       "values": {
         *         "global": {
         *           "affinity": {
         *             "nodeAffinity": {
         *               "requiredDuringSchedulingIgnoredDuringExecution": {
         *                 "nodeSelectorTerms": [
         *                   {
         *                     "matchExpressions": [
         *                       {
         *                         "key": "omnistrate.com/managed-by",
         *                         "operator": "In",
         *                         "values": [
         *                           "omnistrate"
         *                         ]
         *                       }
         *                     ]
         *                   }
         *                 ]
         *               }
         *             }
         *           }
         *         }
         *       },
         *       "valuesFile": {
         *         "gitConfiguration": {
         *           "accessToken": "my-token",
         *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *           "referenceName": "tags/v1.0.0",
         *           "repositoryUrl": "https://github.com/username/myrepo",
         *           "userName": "my-user"
         *         },
         *         "path": "helm/values/production.yaml"
         *       }
         *     } */
        ChartValuesRef: {
            /**
             * @description The name of the layer
             * @example my-layer
             */
            name?: string;
            /**
             * @description Scope condition for applying these chart values (can be used with either values or valuesFile). Key is the parameter name which supports template expressions like '{{ $sys.cloudProviderName }}', value is the expected value.
             * @example {
             *       "{{ $sys.cloudProviderName }}": "aws"
             *     }
             */
            scope?: {
                [key: string]: string;
            };
            /**
             * @description Inline chart values as a map (mutually exclusive with valuesFile)
             * @example {
             *       "global": {
             *         "affinity": {
             *           "nodeAffinity": {
             *             "requiredDuringSchedulingIgnoredDuringExecution": {
             *               "nodeSelectorTerms": [
             *                 {
             *                   "matchExpressions": [
             *                     {
             *                       "key": "omnistrate.com/managed-by",
             *                       "operator": "In",
             *                       "values": [
             *                         "omnistrate"
             *                       ]
             *                     }
             *                   ]
             *                 }
             *               ]
             *             }
             *           }
             *         }
             *       }
             *     }
             */
            values?: unknown;
            valuesFile?: components["schemas"]["ValuesFile"];
        };
        /** @example {
         *       "image": "library/mysql:5.7",
         *       "imageRegistry": "docker.io",
         *       "password": "password",
         *       "token": "dn",
         *       "username": "username"
         *     } */
        CheckIfContainerImageAccessibleRequest: {
            /**
             * @description Name of the image along with the tag. Include the repository name if the image is not from the official repository
             * @example library/mysql:5.7
             */
            image: string;
            /**
             * @description Registry where the image is stored
             * @example docker.io
             */
            imageRegistry: string;
            /**
             * @description Password to access the image registry
             * @example password
             */
            password?: string;
            /**
             * @description JWT token used to perform authorization
             * @example m
             */
            token: string;
            /**
             * @description Username to access the image registry
             * @example username
             */
            username?: string;
        };
        /** @example {
         *       "errorMsg": "Omnis rerum.",
         *       "imageAccessible": false
         *     } */
        CheckIfContainerImageAccessibleResult: {
            /**
             * @description Error message if the image is not accessible
             * @example Vel facilis molestiae pariatur.
             */
            errorMsg?: string;
            /**
             * @description Indicates if the image is accessible
             * @example true
             */
            imageAccessible: boolean;
        };
        /** @example {
         *       "cloudProvider": "aws",
         *       "deployingInstances": 2119880807938902300,
         *       "healthyInstances": 831323738015956400,
         *       "message": "Cloud provider is healthy",
         *       "regionalHealthSummary": {
         *         "Et sint nam autem libero reiciendis molestias.": {
         *           "deployingInstances": 2910586122641776000,
         *           "deploymentCellHealthSummary": {
         *             "Delectus minima excepturi qui recusandae ut.": {
         *               "deployingInstances": 3221727856085581300,
         *               "healthyInstances": 8553049085281164000,
         *               "hostClusterID": "hc-12345678",
         *               "message": "Cell is healthy",
         *               "status": "Healthy",
         *               "totalInstances": 2534220480800404500,
         *               "unhealthyInstances": 8903719001626506000,
         *               "unknownInstances": 5664733281950047000
         *             }
         *           },
         *           "healthyInstances": 715164784027732700,
         *           "message": "Region is healthy",
         *           "region": "us-east-1",
         *           "status": "Healthy",
         *           "totalInstances": 6050070458651640000,
         *           "unhealthyInstances": 4759831795457442000,
         *           "unknownInstances": 272080554073928100
         *         },
         *         "Porro itaque excepturi dolorem dignissimos voluptatem.": {
         *           "deployingInstances": 2910586122641776000,
         *           "deploymentCellHealthSummary": {
         *             "Delectus minima excepturi qui recusandae ut.": {
         *               "deployingInstances": 3221727856085581300,
         *               "healthyInstances": 8553049085281164000,
         *               "hostClusterID": "hc-12345678",
         *               "message": "Cell is healthy",
         *               "status": "Healthy",
         *               "totalInstances": 2534220480800404500,
         *               "unhealthyInstances": 8903719001626506000,
         *               "unknownInstances": 5664733281950047000
         *             }
         *           },
         *           "healthyInstances": 715164784027732700,
         *           "message": "Region is healthy",
         *           "region": "us-east-1",
         *           "status": "Healthy",
         *           "totalInstances": 6050070458651640000,
         *           "unhealthyInstances": 4759831795457442000,
         *           "unknownInstances": 272080554073928100
         *         },
         *         "Vel veniam.": {
         *           "deployingInstances": 2910586122641776000,
         *           "deploymentCellHealthSummary": {
         *             "Delectus minima excepturi qui recusandae ut.": {
         *               "deployingInstances": 3221727856085581300,
         *               "healthyInstances": 8553049085281164000,
         *               "hostClusterID": "hc-12345678",
         *               "message": "Cell is healthy",
         *               "status": "Healthy",
         *               "totalInstances": 2534220480800404500,
         *               "unhealthyInstances": 8903719001626506000,
         *               "unknownInstances": 5664733281950047000
         *             }
         *           },
         *           "healthyInstances": 715164784027732700,
         *           "message": "Region is healthy",
         *           "region": "us-east-1",
         *           "status": "Healthy",
         *           "totalInstances": 6050070458651640000,
         *           "unhealthyInstances": 4759831795457442000,
         *           "unknownInstances": 272080554073928100
         *         }
         *       },
         *       "status": "Healthy",
         *       "totalInstances": 567355050587767700,
         *       "unhealthyInstances": 1195168173111874300,
         *       "unknownInstances": 8075072399012823000
         *     } */
        CloudProviderHealthSummary: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProvider: string;
            /**
             * Format: int64
             * @description The number of instances currently deploying
             * @example 3690620704077084000
             */
            deployingInstances: number;
            /**
             * Format: int64
             * @description The number of healthy instances in the cloud provider
             * @example 1904187913768150000
             */
            healthyInstances: number;
            /**
             * @description The status message
             * @example Cloud provider is healthy
             */
            message: string;
            /**
             * @description The summary of health by region
             * @example {
             *       "Voluptatem vero.": {
             *         "deployingInstances": 2910586122641776000,
             *         "deploymentCellHealthSummary": {
             *           "Delectus minima excepturi qui recusandae ut.": {
             *             "deployingInstances": 3221727856085581300,
             *             "healthyInstances": 8553049085281164000,
             *             "hostClusterID": "hc-12345678",
             *             "message": "Cell is healthy",
             *             "status": "Healthy",
             *             "totalInstances": 2534220480800404500,
             *             "unhealthyInstances": 8903719001626506000,
             *             "unknownInstances": 5664733281950047000
             *           }
             *         },
             *         "healthyInstances": 715164784027732700,
             *         "message": "Region is healthy",
             *         "region": "us-east-1",
             *         "status": "Healthy",
             *         "totalInstances": 6050070458651640000,
             *         "unhealthyInstances": 4759831795457442000,
             *         "unknownInstances": 272080554073928100
             *       }
             *     }
             */
            regionalHealthSummary: {
                [key: string]: components["schemas"]["RegionalHealthSummary"];
            };
            /**
             * @description The status of the cloud provider
             * @example Healthy
             */
            status: string;
            /**
             * Format: int64
             * @description The total number of instances in the cloud provider
             * @example 3267150736283785700
             */
            totalInstances: number;
            /**
             * Format: int64
             * @description The number of unhealthy instances in the cloud provider
             * @example 7841433883073215000
             */
            unhealthyInstances: number;
            /**
             * Format: int64
             * @description The number of instances with unknown status
             * @example 6240191813631412000
             */
            unknownInstances?: number;
        };
        /**
         * @description The readiness of the cloud providers configurations
         * @example {
         *       "aws": {
         *         "resourceA": "missing terraform configuration",
         *         "resourceB": "missing cloudformation configuration"
         *       }
         *     }
         */
        CloudProvidersConfigReadiness: {
            [key: string]: unknown;
        };
        /** @example {
         *       "endpoint": "https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud",
         *       "healthStatus": "HEALTHY",
         *       "networkingType": "PUBLIC",
         *       "openPorts": [
         *         30000,
         *         30001
         *       ],
         *       "primary": true
         *     } */
        ClusterEndpoint: {
            /**
             * @description The endpoint
             * @default
             * @example https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
             */
            endpoint: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            healthStatus?: string;
            /**
             * @description The networking type for this resource
             * @example PUBLIC
             */
            networkingType?: string;
            /**
             * @description The open ports
             * @example [
             *       30000,
             *       30001
             *     ]
             */
            openPorts?: number[];
            /**
             * @description Whether this is the primary endpoint
             * @default false
             * @example true
             */
            primary: boolean;
        };
        /** @example {
         *       "code": "ac_12345678",
         *       "state": "12345678",
         *       "token": "wtx"
         *     } */
        CompleteOAuthConnectionRequest: {
            /**
             * @description Authorization code from Stripe
             * @example ac_12345678
             */
            code?: string;
            /**
             * @description Random string used on the authorize URL
             * @example 12345678
             */
            state?: string;
            /**
             * @description JWT token used to perform authorization
             * @example x
             */
            token: string;
        };
        /** @example {
         *       "code": "ac_12345678",
         *       "state": "12345678"
         *     } */
        CompleteOAuthConnectionRequest2: {
            /**
             * @description Authorization code from Stripe
             * @example ac_12345678
             */
            code?: string;
            /**
             * @description Random string used on the authorize URL
             * @example 12345678
             */
            state?: string;
        };
        /** @example {
         *       "stripeUserID": "acct_12345678"
         *     } */
        CompleteOAuthConnectionResult: {
            /**
             * @description Stripe User ID
             * @example acct_12345678
             */
            stripeUserID?: string;
        };
        /** @example {
         *       "acceleratorConfiguration": {
         *         "count": 1,
         *         "type": "nvidia-tesla-t4"
         *       },
         *       "instanceLifeCycleType": "Spot|OnDemand",
         *       "labels": {
         *         "env": "prod"
         *       },
         *       "rootVolumeSizeGi": 10,
         *       "rootVolumeSizeGiAPIParam": "$var.root_volume_size_gi",
         *       "taints": [
         *         {
         *           "effect": "NoSchedule",
         *           "key": "env",
         *           "value": "prod"
         *         }
         *       ],
         *       "warmPoolConfiguration": {
         *         "minimumNodesInPool": 1
         *       }
         *     } */
        ComputeInstanceTypeConfigOverride: {
            acceleratorConfiguration?: components["schemas"]["AcceleratorConfiguration"];
            /**
             * @description The instance life cycle type for this compute instance type config
             * @example Spot|OnDemand
             */
            instanceLifeCycleType?: string;
            /**
             * @description Labels for the compute instance type config
             * @example {
             *       "env": "prod"
             *     }
             */
            labels?: {
                [key: string]: string;
            };
            /**
             * Format: int64
             * @description Size of the root volume in Gi
             * @example 10
             */
            rootVolumeSizeGi?: number;
            /**
             * @description Size of the root volume in Gi as a string
             * @example $var.root_volume_size_gi
             */
            rootVolumeSizeGiAPIParam?: string;
            /**
             * @description Taints for the compute instance type config
             * @example [
             *       {
             *         "effect": "NoSchedule",
             *         "key": "env",
             *         "value": "prod"
             *       }
             *     ]
             */
            taints?: components["schemas"]["TaintConfiguration"][];
            warmPoolConfiguration?: components["schemas"]["WarmPoolConfiguration"];
        };
        /** @example {
         *       "password": "Dolores voluptatem.",
         *       "username": "Maiores beatae velit qui repellat fugiat."
         *     } */
        ConsumptionServiceAuthRequest: {
            /** @example Harum rerum exercitationem error et sed. */
            password: string;
            /** @example Voluptates harum perferendis architecto modi. */
            username: string;
        };
        /** @example {
         *       "token": "2o3"
         *     } */
        ConsumptionServiceAuthResult: {
            /**
             * @description JWT token used to perform authorization
             * @example 3u
             */
            token: string;
        };
        /** @example {
         *       "company": "ABC",
         *       "email": "abc@gmail.com",
         *       "message": "this is a test",
         *       "name": "John Doe"
         *     } */
        ContactusRequest: {
            /** @example ABC */
            company: string;
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /** @example this is a test */
            message: string;
            /** @example John Doe */
            name: string;
        };
        /** @example {
         *       "allowCreatesWhenPaymentNotConfigured": true,
         *       "autoApproveSubscription": false,
         *       "awsRegions": [
         *         "us-east-2",
         *         "ca-central-1"
         *       ],
         *       "azureRegions": [
         *         "northcentralus"
         *       ],
         *       "billingProductID": "abc123",
         *       "description": "A premium product tier",
         *       "documentation": "Any documentation",
         *       "exportUsageMetering": true,
         *       "exportUsageMeteringConfig": {
         *         "GCS": {
         *           "GCSBucketName": "my_billing_bucket_name"
         *         },
         *         "S3": {
         *           "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
         *           "S3BucketRegion": "us-east-1"
         *         }
         *       },
         *       "gcpRegions": [
         *         "us-central1"
         *       ],
         *       "maxNumberOfInstances": 5,
         *       "name": "Premium",
         *       "planDescription": "A premium plan",
         *       "pricePerUnit": {
         *         "CPU core hours": {
         *           "amount": 0.001,
         *           "currency": "USD"
         *         },
         *         "Memory GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         },
         *         "Storage GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         }
         *       },
         *       "pricing": {
         *         "price1": "value1"
         *       },
         *       "privateRegions": [
         *         "n/a"
         *       ],
         *       "serviceId": "s-12345678",
         *       "serviceModelId": "sm-12345678",
         *       "sourceId": "pt-12345678",
         *       "support": "Any support",
         *       "targetTierType": "OMNISTRATE_DEDICATED_TENANCY",
         *       "token": "99w"
         *     } */
        CopyProductTierRequest: {
            /**
             * @description Allow creates when payment not configured
             * @example true
             */
            allowCreatesWhenPaymentNotConfigured?: boolean;
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description The AWS regions that this product tier is available on
             * @example [
             *       "us-east-2",
             *       "ca-central-1"
             *     ]
             */
            awsRegions?: string[];
            /**
             * @description The Azure regions that this product tier is available on
             * @example [
             *       "northcentralus"
             *     ]
             */
            azureRegions?: string[];
            /**
             * @description Optional billing product ID for tax purposes
             * @example abc123
             */
            billingProductID?: string;
            /**
             * @description A brief description of the product tier
             * @example A premium product tier
             */
            description: string;
            /**
             * @description Documentation
             * @example Any documentation
             */
            documentation?: string;
            /**
             * @description Export usage metering data
             * @example true
             */
            exportUsageMetering?: boolean;
            /**
             * @description Export usage metering data configuration
             * @example {
             *       "GCS": {
             *         "GCSBucketName": "my_billing_bucket_name"
             *       },
             *       "S3": {
             *         "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
             *         "S3BucketRegion": "us-east-1"
             *       }
             *     }
             */
            exportUsageMeteringConfig?: {
                [key: string]: unknown;
            };
            /**
             * @description The GCP regions that this product tier is available on
             * @example [
             *       "us-central1"
             *     ]
             */
            gcpRegions?: string[];
            /**
             * Format: int64
             * @description Maximum number of instances
             * @example 5
             */
            maxNumberOfInstances?: number;
            /**
             * @description Name of the product tier
             * @example Premium
             */
            name: string;
            /**
             * @description A brief description for the end user of the product tier
             * @example A premium plan
             */
            planDescription?: string;
            /**
             * @description Price per unit.
             * @example {
             *       "CPU core hours": {
             *         "amount": 0.001,
             *         "currency": "USD"
             *       },
             *       "Memory GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       },
             *       "Storage GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       }
             *     }
             */
            pricePerUnit?: {
                [key: string]: unknown;
            };
            /**
             * @description Pricing
             * @example {
             *       "price1": "value1"
             *     }
             */
            pricing?: unknown;
            /**
             * @description The Private cloud regions that this product tier is available on
             * @example [
             *       "n/a"
             *     ]
             */
            privateRegions?: string[];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Service Model
             * @example Iste ratione et aliquam saepe voluptas.
             */
            serviceModelId: string;
            /**
             * @description ID of a Product Tier
             * @example Totam voluptatibus est similique distinctio voluptatum.
             */
            sourceId: string;
            /**
             * @description Support
             * @example Any support
             */
            support?: string;
            /**
             * @description ProductTierType is the type of tier for a product
             * @example OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
             */
            targetTierType?: string;
            /**
             * @description JWT token used to perform authorization
             * @example n
             */
            token: string;
        };
        /** @example {
         *       "allowCreatesWhenPaymentNotConfigured": true,
         *       "autoApproveSubscription": false,
         *       "awsRegions": [
         *         "us-east-2",
         *         "ca-central-1"
         *       ],
         *       "azureRegions": [
         *         "northcentralus"
         *       ],
         *       "billingProductID": "abc123",
         *       "description": "A premium product tier",
         *       "documentation": "Any documentation",
         *       "exportUsageMetering": true,
         *       "exportUsageMeteringConfig": {
         *         "GCS": {
         *           "GCSBucketName": "my_billing_bucket_name"
         *         },
         *         "S3": {
         *           "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
         *           "S3BucketRegion": "us-east-1"
         *         }
         *       },
         *       "gcpRegions": [
         *         "us-central1"
         *       ],
         *       "maxNumberOfInstances": 5,
         *       "name": "Premium",
         *       "planDescription": "A premium plan",
         *       "pricePerUnit": {
         *         "CPU core hours": {
         *           "amount": 0.001,
         *           "currency": "USD"
         *         },
         *         "Memory GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         },
         *         "Storage GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         }
         *       },
         *       "pricing": {
         *         "price1": "value1"
         *       },
         *       "privateRegions": [
         *         "n/a"
         *       ],
         *       "serviceModelId": "sm-12345678",
         *       "support": "Any support",
         *       "targetTierType": "OMNISTRATE_DEDICATED_TENANCY"
         *     } */
        CopyProductTierRequest2: {
            /**
             * @description Allow creates when payment not configured
             * @example true
             */
            allowCreatesWhenPaymentNotConfigured?: boolean;
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description The AWS regions that this product tier is available on
             * @example [
             *       "us-east-2",
             *       "ca-central-1"
             *     ]
             */
            awsRegions?: string[];
            /**
             * @description The Azure regions that this product tier is available on
             * @example [
             *       "northcentralus"
             *     ]
             */
            azureRegions?: string[];
            /**
             * @description Optional billing product ID for tax purposes
             * @example abc123
             */
            billingProductID?: string;
            /**
             * @description A brief description of the product tier
             * @example A premium product tier
             */
            description: string;
            /**
             * @description Documentation
             * @example Any documentation
             */
            documentation?: string;
            /**
             * @description Export usage metering data
             * @example true
             */
            exportUsageMetering?: boolean;
            /**
             * @description Export usage metering data configuration
             * @example {
             *       "GCS": {
             *         "GCSBucketName": "my_billing_bucket_name"
             *       },
             *       "S3": {
             *         "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
             *         "S3BucketRegion": "us-east-1"
             *       }
             *     }
             */
            exportUsageMeteringConfig?: {
                [key: string]: unknown;
            };
            /**
             * @description The GCP regions that this product tier is available on
             * @example [
             *       "us-central1"
             *     ]
             */
            gcpRegions?: string[];
            /**
             * Format: int64
             * @description Maximum number of instances
             * @example 5
             */
            maxNumberOfInstances?: number;
            /**
             * @description Name of the product tier
             * @example Premium
             */
            name: string;
            /**
             * @description A brief description for the end user of the product tier
             * @example A premium plan
             */
            planDescription?: string;
            /**
             * @description Price per unit.
             * @example {
             *       "CPU core hours": {
             *         "amount": 0.001,
             *         "currency": "USD"
             *       },
             *       "Memory GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       },
             *       "Storage GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       }
             *     }
             */
            pricePerUnit?: {
                [key: string]: unknown;
            };
            /**
             * @description Pricing
             * @example {
             *       "price1": "value1"
             *     }
             */
            pricing?: unknown;
            /**
             * @description The Private cloud regions that this product tier is available on
             * @example [
             *       "n/a"
             *     ]
             */
            privateRegions?: string[];
            /**
             * @description Service model ID
             * @example sm-12345678
             */
            serviceModelId: string;
            /**
             * @description Support
             * @example Any support
             */
            support?: string;
            /**
             * @description Tier type
             * @example OMNISTRATE_DEDICATED_TENANCY
             */
            targetTierType?: string;
        };
        /** @example {
         *       "accountConfigIds": [
         *         "ac-12345678",
         *         "ac-23456789"
         *       ],
         *       "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
         *       "features": [
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         },
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         }
         *       ],
         *       "name": "MySQL multi-writer service hosted model",
         *       "serviceId": "s-12345678",
         *       "sourceId": "sm-12345678",
         *       "targetServiceModelType": "CUSTOMER_HOSTED",
         *       "targetTierType": "OMNISTRATE_DEDICATED_TENANCY",
         *       "token": "e"
         *     } */
        CopyServiceModelRequest: {
            /**
             * @description The infrastructure account configuration ID list
             * @example [
             *       "ac-12345678",
             *       "ac-23456789"
             *     ]
             */
            accountConfigIds?: string[];
            /**
             * @description A brief description of the service model
             * @example A MySQL Hosted SaaS specializing in multi-writer clusters for high availability
             */
            description: string;
            /**
             * @description Enabled service model features
             * @example [
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       },
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       },
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       },
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       }
             *     ]
             */
            features?: components["schemas"]["ServiceModelFeatureDetail"][];
            /**
             * @description Name of the Service Model
             * @example MySQL multi-writer service hosted model
             */
            name: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Service Model
             * @example Eum et porro pariatur voluptatibus.
             */
            sourceId: string;
            /**
             * @description The model type encapsulating this service
             * @example OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
             */
            targetServiceModelType: string;
            /**
             * @description ProductTierType is the type of tier for a product
             * @example OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
             */
            targetTierType?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 377
             */
            token: string;
        };
        /** @example {
         *       "accountConfigIds": [
         *         "ac-12345678",
         *         "ac-23456789"
         *       ],
         *       "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
         *       "features": [
         *         {
         *           "configuration": {
         *             "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
         *             "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
         *           },
         *           "feature": "Consequatur placeat in voluptate."
         *         },
         *         {
         *           "configuration": {
         *             "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
         *             "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
         *           },
         *           "feature": "Consequatur placeat in voluptate."
         *         }
         *       ],
         *       "name": "MySQL multi-writer service hosted model",
         *       "targetServiceModelType": "CUSTOMER_HOSTED",
         *       "targetTierType": "OMNISTRATE_DEDICATED_TENANCY"
         *     } */
        CopyServiceModelRequest2: {
            /**
             * @description The infrastructure account configuration ID list
             * @example [
             *       "ac-12345678",
             *       "ac-23456789"
             *     ]
             */
            accountConfigIds?: string[];
            /**
             * @description A brief description of the service model
             * @example A MySQL Hosted SaaS specializing in multi-writer clusters for high availability
             */
            description: string;
            /**
             * @description Enabled service model features
             * @example [
             *       {
             *         "configuration": {
             *           "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
             *           "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
             *         },
             *         "feature": "Consequatur placeat in voluptate."
             *       },
             *       {
             *         "configuration": {
             *           "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
             *           "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
             *         },
             *         "feature": "Consequatur placeat in voluptate."
             *       }
             *     ]
             */
            features?: components["schemas"]["ServiceModelFeatureDetail"][];
            /**
             * @description Name of the Service Model
             * @example MySQL multi-writer service hosted model
             */
            name: string;
            /**
             * @description The model type encapsulating this service
             * @example CUSTOMER_HOSTED
             */
            targetServiceModelType: string;
            /**
             * @description Target product tier type
             * @example OMNISTRATE_DEDICATED_TENANCY
             */
            targetTierType?: string;
        };
        /**
         * @description Account configuration including the role required to access
         * @example {
         *       "awsAccessKey": "Odio amet asperiores veritatis in maxime.",
         *       "awsAccountID": "123456789012",
         *       "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
         *       "awsSecretKey": "Sed sint placeat qui.",
         *       "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *       "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *       "byoaInstanceID": "instance-12345678",
         *       "cloudProviderId": "infra-12345678",
         *       "description": "An AWS account hosting multiple dev environments",
         *       "gcpProjectID": "my-project",
         *       "gcpProjectNumber": "123456789012",
         *       "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
         *       "gcpServiceAccountKey": "Quia itaque.",
         *       "name": "Dev AWS account",
         *       "token": "zb"
         *     }
         */
        CreateAccountConfigRequest: {
            /**
             * @description The AWS access key
             * @example Commodi quae dolor provident in ullam et.
             */
            awsAccessKey?: string;
            /**
             * @description The AWS account ID
             * @example 123456789012
             */
            awsAccountID?: string;
            /**
             * @description The security role ARN or service account ARN that grants access to operate the infra
             * @example arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
             */
            awsBootstrapRoleARN?: string;
            /**
             * @description The AWS secret key
             * @example Exercitationem et rem et cupiditate.
             */
            awsSecretKey?: string;
            /**
             * @description The Azure subscription ID
             * @example 12345678-1234-1234-1234-123456789012
             */
            azureSubscriptionID?: string;
            /**
             * @description The Azure tenant ID
             * @example 12345678-1234-1234-1234-123456789012
             */
            azureTenantID?: string;
            /**
             * @description The BYOA instance ID that this account config is tied to
             * @example instance-12345678
             */
            byoaInstanceID?: string;
            /**
             * @description ID of an CloudProvider
             * @example Voluptatem unde accusantium.
             */
            cloudProviderId: string;
            /**
             * @description The description for the account
             * @example An AWS account hosting multiple dev environments
             */
            description: string;
            /**
             * @description The GCP project ID
             * @example my-project
             */
            gcpProjectID?: string;
            /**
             * @description The GCP project number
             * @example 123456789012
             */
            gcpProjectNumber?: string;
            /**
             * @description The GCP service account email
             * @example bootstrap@my-project.iam.gserviceaccount.com
             */
            gcpServiceAccountEmail?: string;
            /**
             * @description The GCP service account key
             * @example Nisi sed perspiciatis est.
             */
            gcpServiceAccountKey?: string;
            /**
             * @description The name of the account
             * @example Dev AWS account
             */
            name: string;
            /**
             * @description JWT token used to perform authorization
             * @example n
             */
            token: string;
        };
        /** @example {
         *       "awsAccessKey": "Qui possimus fugit voluptatem.",
         *       "awsAccountID": "123456789012",
         *       "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
         *       "awsSecretKey": "Ipsam ipsa.",
         *       "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *       "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *       "byoaInstanceID": "instance-12345678",
         *       "cloudProviderId": "infra-12345678",
         *       "description": "An AWS account hosting multiple dev environments",
         *       "gcpProjectID": "my-project",
         *       "gcpProjectNumber": "123456789012",
         *       "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
         *       "gcpServiceAccountKey": "Exercitationem sit officia ut rerum.",
         *       "name": "Dev AWS account"
         *     } */
        CreateAccountConfigRequest2: {
            /**
             * @description The AWS access key
             * @example Itaque rerum assumenda inventore qui saepe distinctio.
             */
            awsAccessKey?: string;
            /**
             * @description The AWS account ID
             * @example 123456789012
             */
            awsAccountID?: string;
            /**
             * @description The security role ARN or service account ARN that grants access to operate the infra
             * @example arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
             */
            awsBootstrapRoleARN?: string;
            /**
             * @description The AWS secret key
             * @example Itaque molestiae eum et dolorem ea architecto.
             */
            awsSecretKey?: string;
            /**
             * @description The Azure subscription ID
             * @example 12345678-1234-1234-1234-123456789012
             */
            azureSubscriptionID?: string;
            /**
             * @description The Azure tenant ID
             * @example 12345678-1234-1234-1234-123456789012
             */
            azureTenantID?: string;
            /**
             * @description The BYOA instance ID that this account config is tied to
             * @example instance-12345678
             */
            byoaInstanceID?: string;
            /**
             * @description Cloud Provider ID to operate on
             * @example infra-12345678
             */
            cloudProviderId: string;
            /**
             * @description The description for the account
             * @example An AWS account hosting multiple dev environments
             */
            description: string;
            /**
             * @description The GCP project ID
             * @example my-project
             */
            gcpProjectID?: string;
            /**
             * @description The GCP project number
             * @example 123456789012
             */
            gcpProjectNumber?: string;
            /**
             * @description The GCP service account email
             * @example bootstrap@my-project.iam.gserviceaccount.com
             */
            gcpServiceAccountEmail?: string;
            /**
             * @description The GCP service account key
             * @example Sunt hic ut ea sit.
             */
            gcpServiceAccountKey?: string;
            /**
             * @description The name of the account
             * @example Dev AWS account
             */
            name: string;
        };
        /** @example {
         *       "autoscalingPolicy": {
         *         "maxReplicas": 4,
         *         "minReplicas": 1
         *       },
         *       "cpuArchitecture": "X86_64|ARM64",
         *       "description": "my compute config description",
         *       "name": "my compute config",
         *       "replicaCount": "3",
         *       "resources": {
         *         "limits": {
         *           "cpu": "1",
         *           "memory": "500Mi"
         *         },
         *         "requests": {
         *           "cpu": "0.5",
         *           "memory": "200Mi"
         *         }
         *       },
         *       "rootVolumeSizeGi": 10,
         *       "serviceId": "s-12345678",
         *       "token": "9",
         *       "warmPoolConfiguration": {
         *         "minimumNodesInPool": 1
         *       }
         *     } */
        CreateComputeConfigRequest: {
            autoscalingPolicy?: components["schemas"]["AutoscalingPolicy"];
            /**
             * @description Processor architecture
             * @example X86_64|ARM64
             */
            cpuArchitecture?: string;
            /**
             * @description Description of the compute config
             * @example my compute config description
             */
            description: string;
            /**
             * @description Name of the compute config
             * @example my compute config
             */
            name: string;
            /**
             * @description Number of replicas to provision for this logical pool of nodes per instance of the resource
             * @example 3
             */
            replicaCount?: string;
            resources?: components["schemas"]["ResourceSpec"];
            /**
             * Format: int64
             * @description Size of the root volume in Gi
             * @example 10
             */
            rootVolumeSizeGi?: number;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example nuq
             */
            token: string;
            warmPoolConfiguration?: components["schemas"]["WarmPoolConfiguration"];
        };
        /** @example {
         *       "autoscalingPolicy": {
         *         "maxReplicas": 4,
         *         "minReplicas": 1
         *       },
         *       "cpuArchitecture": "X86_64|ARM64",
         *       "description": "my compute config description",
         *       "name": "my compute config",
         *       "replicaCount": "3",
         *       "resources": {
         *         "limits": {
         *           "cpu": "1",
         *           "memory": "500Mi"
         *         },
         *         "requests": {
         *           "cpu": "0.5",
         *           "memory": "200Mi"
         *         }
         *       },
         *       "rootVolumeSizeGi": 10,
         *       "warmPoolConfiguration": {
         *         "minimumNodesInPool": 1
         *       }
         *     } */
        CreateComputeConfigRequest2: {
            autoscalingPolicy?: components["schemas"]["AutoscalingPolicy"];
            /**
             * @description Processor architecture
             * @example X86_64|ARM64
             */
            cpuArchitecture?: string;
            /**
             * @description Description of the compute config
             * @example my compute config description
             */
            description: string;
            /**
             * @description Name of the compute config
             * @example my compute config
             */
            name: string;
            /**
             * @description Number of replicas to provision for this logical pool of nodes per instance of the resource
             * @example 3
             */
            replicaCount?: string;
            resources?: components["schemas"]["ResourceSpec"];
            /**
             * Format: int64
             * @description Size of the root volume in Gi
             * @example 10
             */
            rootVolumeSizeGi?: number;
            warmPoolConfiguration?: components["schemas"]["WarmPoolConfiguration"];
        };
        /**
         * @description Custom domain including the role required to access
         * @example {
         *       "customDomain": "mydomain.dev",
         *       "description": "Description of the domain",
         *       "name": "Dev domain",
         *       "route53Configuration": {
         *         "awsAccountID": "123456789012"
         *       },
         *       "token": "vy"
         *     }
         */
        CreateCustomDomainRequest: {
            /**
             * @description The root domain of the domain to use as suffix
             * @example mydomain.dev
             */
            customDomain: string;
            /**
             * @description The description for the domain
             * @example Description of the domain
             */
            description: string;
            /**
             * @description The name of the custom domain
             * @example Dev domain
             */
            name: string;
            route53Configuration: components["schemas"]["Route53Configuration"];
            /**
             * @description JWT token used to perform authorization
             * @example 4gb
             */
            token: string;
        };
        /** @example {
         *       "customDomain": "mydomain.dev",
         *       "description": "Description of the domain",
         *       "name": "Dev domain",
         *       "route53Configuration": {
         *         "awsAccountID": "123456789012"
         *       }
         *     } */
        CreateCustomDomainRequest2: {
            /**
             * @description The root domain of the domain to use as suffix
             * @example mydomain.dev
             */
            customDomain: string;
            /**
             * @description The description for the domain
             * @example Description of the domain
             */
            description: string;
            /**
             * @description The name of the custom domain
             * @example Dev domain
             */
            name: string;
            route53Configuration: components["schemas"]["Route53Configuration"];
        };
        /** @example {
         *       "cidr": "10.0.0.0/16",
         *       "cloudProviderName": "aws",
         *       "cloudProviderRegion": "us-east-1",
         *       "name": "Prod us-east-1",
         *       "networkFeaturesConfiguration": {
         *         "isPrivateLinkEnabled": true
         *       },
         *       "token": "ig"
         *     } */
        CreateCustomNetworkRequest: {
            /**
             * Format: cidr
             * @description CIDR block for the network
             * @default 10.0.0.0/16
             * @example 10.0.0.0/16
             */
            cidr: string;
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /**
             * @description The region of the cloud provider that the instance is running in.
             * @example us-east-1
             */
            cloudProviderRegion: string;
            /**
             * @description User friendly network name to help distinguish networks with same CIDRs
             * @example Prod us-east-1
             */
            name?: string;
            networkFeaturesConfiguration?: components["schemas"]["NetworkFeaturesConfiguration"];
            /**
             * @description JWT token used to perform authorization
             * @example 8f
             */
            token: string;
        };
        /** @example {
         *       "cidr": "10.0.0.0/16",
         *       "cloudProviderName": "aws",
         *       "cloudProviderRegion": "us-east-1",
         *       "name": "Prod us-east-1",
         *       "networkFeaturesConfiguration": {
         *         "isPrivateLinkEnabled": false
         *       }
         *     } */
        CreateCustomNetworkRequest2: {
            /**
             * Format: cidr
             * @description CIDR block for the network
             * @default 10.0.0.0/16
             * @example 10.0.0.0/16
             */
            cidr: string;
            /**
             * @description The name of the cloud provider that the instance is running on.
             * @example aws
             */
            cloudProviderName: string;
            /**
             * @description The region of the cloud provider that the instance is running in.
             * @example us-east-1
             */
            cloudProviderRegion: string;
            /**
             * @description User friendly network name to help distinguish networks with same CIDRs
             * @example Prod us-east-1
             */
            name?: string;
            networkFeaturesConfiguration?: components["schemas"]["NetworkFeaturesConfiguration"];
        };
        /** @example {
         *       "description": "A production deployment config",
         *       "infraRollConfiguration": {
         *         "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
         *         "maximumNumberOfResourceInstancesPerBatch": 1,
         *         "maximumUnavailableReplicas": 1
         *       },
         *       "name": "Production",
         *       "rolloutPriorityList": [
         *         "region-12345678",
         *         "region-abcd1234",
         *         "region-3c3c3c3c"
         *       ],
         *       "token": "f"
         *     } */
        CreateDeploymentConfigRequest: {
            /**
             * @description A brief description of the deployment config
             * @example A production deployment config
             */
            description: string;
            infraRollConfiguration?: components["schemas"]["InfraRollConfiguration"];
            /**
             * @description Name of the deployment config
             * @example Production
             */
            name: string;
            /** @example [
             *       "region-12345678",
             *       "region-abcd1234",
             *       "region-3c3c3c3c"
             *     ] */
            rolloutPriorityList?: string[];
            /**
             * @description JWT token used to perform authorization
             * @example o0o
             */
            token: string;
        };
        /** @example {
         *       "description": "A production deployment config",
         *       "infraRollConfiguration": {
         *         "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
         *         "maximumNumberOfResourceInstancesPerBatch": 1,
         *         "maximumUnavailableReplicas": 1
         *       },
         *       "name": "Production",
         *       "rolloutPriorityList": [
         *         "region-12345678",
         *         "region-abcd1234",
         *         "region-3c3c3c3c"
         *       ]
         *     } */
        CreateDeploymentConfigRequest2: {
            /**
             * @description A brief description of the deployment config
             * @example A production deployment config
             */
            description: string;
            infraRollConfiguration?: components["schemas"]["InfraRollConfiguration"];
            /**
             * @description Name of the deployment config
             * @example Production
             */
            name: string;
            /** @example [
             *       "region-12345678",
             *       "region-abcd1234",
             *       "region-3c3c3c3c"
             *     ] */
            rolloutPriorityList?: string[];
        };
        /** @example {
         *       "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
         *       "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
         *       "clientSecret": "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",
         *       "disabled": false,
         *       "emailIdentifiers": "company.com",
         *       "environmentType": "Esse quaerat cumque.",
         *       "identityProviderName": "Google",
         *       "loginButtonIconUrl": "https://example.com/icon.png",
         *       "loginButtonText": "Login with Google",
         *       "name": "Google for my company",
         *       "scopes": "openid email profile",
         *       "token": "umk",
         *       "tokenEndpoint": "https://oauth2.googleapis.com/token",
         *       "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
         *     } */
        CreateIdentityProviderRequest: {
            /**
             * @description The authorization endpoint of the Identity Provider
             * @example https://accounts.google.com/o/oauth2/auth
             */
            authorizationEndpoint?: string;
            /**
             * @description The Client ID of the Identity Provider
             * @example 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
             */
            clientId: string;
            /**
             * @description The Client Secret of the Identity Provider
             * @example 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
             */
            clientSecret: string;
            /**
             * @description Whether the Identity Provider is disabled
             * @example false
             */
            disabled?: boolean;
            /**
             * @description The email identifiers to use for the Identity Provider
             * @example company.com
             */
            emailIdentifiers?: string;
            /**
             * @description The type of environment to filter costs by
             * @example Sit adipisci et qui ut neque esse.
             */
            environmentType?: string;
            /**
             * @description The name of the identity provider
             * @example Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
             */
            identityProviderName: string;
            /**
             * @description The URL of the icon to use for the login button
             * @example https://example.com/icon.png
             */
            loginButtonIconUrl?: string;
            /**
             * @description The text to use for the login button
             * @example Login with Google
             */
            loginButtonText?: string;
            /**
             * @description The name of the Identity Provider
             * @example Google for my company
             */
            name?: string;
            /**
             * @description The scopes to request from the Identity Provider
             * @example openid email profile
             */
            scopes?: string;
            /**
             * @description JWT token used to perform authorization
             * @example v
             */
            token: string;
            /**
             * @description The token endpoint of the Identity Provider
             * @example https://oauth2.googleapis.com/token
             */
            tokenEndpoint?: string;
            /**
             * @description The user info endpoint of the Identity Provider
             * @example https://www.googleapis.com/oauth2/v3/userinfo
             */
            userInfoEndpoint?: string;
        };
        /** @example {
         *       "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
         *       "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
         *       "clientSecret": "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",
         *       "disabled": false,
         *       "emailIdentifiers": "company.com",
         *       "environmentType": "Aut totam odio.",
         *       "identityProviderName": "Google",
         *       "loginButtonIconUrl": "https://example.com/icon.png",
         *       "loginButtonText": "Login with Google",
         *       "name": "Google for my company",
         *       "scopes": "openid email profile",
         *       "tokenEndpoint": "https://oauth2.googleapis.com/token",
         *       "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
         *     } */
        CreateIdentityProviderRequest2: {
            /**
             * @description The authorization endpoint of the Identity Provider
             * @example https://accounts.google.com/o/oauth2/auth
             */
            authorizationEndpoint?: string;
            /**
             * @description The Client ID of the Identity Provider
             * @example 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
             */
            clientId: string;
            /**
             * @description The Client Secret of the Identity Provider
             * @example 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
             */
            clientSecret: string;
            /**
             * @description Whether the Identity Provider is disabled
             * @example false
             */
            disabled?: boolean;
            /**
             * @description The email identifiers to use for the Identity Provider
             * @example company.com
             */
            emailIdentifiers?: string;
            /**
             * @description The type of environment to filter costs by
             * @example Possimus dignissimos voluptatibus dolorem.
             */
            environmentType?: string;
            /**
             * @description The type of the Identity Provider
             * @example Google
             */
            identityProviderName: string;
            /**
             * @description The URL of the icon to use for the login button
             * @example https://example.com/icon.png
             */
            loginButtonIconUrl?: string;
            /**
             * @description The text to use for the login button
             * @example Login with Google
             */
            loginButtonText?: string;
            /**
             * @description The name of the Identity Provider
             * @example Google for my company
             */
            name?: string;
            /**
             * @description The scopes to request from the Identity Provider
             * @example openid email profile
             */
            scopes?: string;
            /**
             * @description The token endpoint of the Identity Provider
             * @example https://oauth2.googleapis.com/token
             */
            tokenEndpoint?: string;
            /**
             * @description The user info endpoint of the Identity Provider
             * @example https://www.googleapis.com/oauth2/v3/userinfo
             */
            userInfoEndpoint?: string;
        };
        /**
         * @description Create the image configuration required to bring up a new entity
         * @example {
         *       "customImageCommandsAndArgs": {
         *         "args": [
         *           "-d",
         *           "mysql"
         *         ],
         *         "commands": [
         *           "echo",
         *           "Hello, World!"
         *         ]
         *       },
         *       "description": "A image configuration for my new entity",
         *       "imageName": "mysql",
         *       "imageRegistryId": "ir-12345678",
         *       "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
         *       "imageTag": "latest",
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "owl"
         *     }
         */
        CreateImageConfigRequest: {
            customImageCommandsAndArgs?: components["schemas"]["CustomImageCommandsAndArgs"];
            /**
             * @description A brief description of the image configuration
             * @example A image configuration for my new entity
             */
            description: string;
            /**
             * @description Name of the container image
             * @example mysql
             */
            imageName: string;
            /**
             * @description ID of an Image Registry
             * @example Nemo molestiae fugit repudiandae.
             */
            imageRegistryId?: string;
            /**
             * @description PEM-encoded Public key part of the key used to sign the container image
             * @example -----BEGIN PUBLIC KEY-----
             *     MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
             *     7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
             *     -----END PUBLIC KEY-----
             *
             */
            imageSignaturePublicKeyPEM?: string;
            /**
             * @description Tag representing the specific software image version
             * @default latest
             * @example latest
             */
            imageTag: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example e
             */
            token: string;
        };
        /** @example {
         *       "customImageCommandsAndArgs": {
         *         "args": [
         *           "-d",
         *           "mysql"
         *         ],
         *         "commands": [
         *           "echo",
         *           "Hello, World!"
         *         ]
         *       },
         *       "description": "A image configuration for my new entity",
         *       "imageName": "mysql",
         *       "imageRegistryId": "ir-12345678",
         *       "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
         *       "imageTag": "latest",
         *       "serviceEnvironmentId": "se-12345678"
         *     } */
        CreateImageConfigRequest2: {
            customImageCommandsAndArgs?: components["schemas"]["CustomImageCommandsAndArgs"];
            /**
             * @description A brief description of the image configuration
             * @example A image configuration for my new entity
             */
            description: string;
            /**
             * @description Name of the container image
             * @example mysql
             */
            imageName: string;
            /**
             * @description The image registry ID to use for the infra
             * @example ir-12345678
             */
            imageRegistryId?: string;
            /**
             * @description PEM-encoded Public key part of the key used to sign the container image
             * @example -----BEGIN PUBLIC KEY-----
             *     MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
             *     7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
             *     -----END PUBLIC KEY-----
             *
             */
            imageSignaturePublicKeyPEM?: string;
            /**
             * @description Tag representing the specific software image version
             * @default latest
             * @example latest
             */
            imageTag: string;
            /**
             * @description The service environment ID
             * @example se-12345678
             */
            serviceEnvironmentId: string;
        };
        /**
         * @description Create an HTTP API v2 Docker Image Registry
         * @example {
         *       "description": "DockerHub is a public Docker Image Registry",
         *       "host": "docker.io",
         *       "name": "DockerHub",
         *       "password": "mypassword",
         *       "token": "twd",
         *       "username": "myusername"
         *     }
         */
        CreateImageRegistryRequest: {
            /**
             * @description A brief description of the Image Registry
             * @example DockerHub is a public Docker Image Registry
             */
            description: string;
            /**
             * @description The Image Registry host
             * @example docker.io
             */
            host: string;
            /**
             * @description Name of the Image Registry
             * @example DockerHub
             */
            name: string;
            /**
             * @description The password to use when authenticating to the Image Registry
             * @example mypassword
             */
            password?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 2
             */
            token: string;
            /**
             * @description The username to use when authenticating to the Image Registry
             * @example myusername
             */
            username?: string;
        };
        /** @example {
         *       "description": "DockerHub is a public Docker Image Registry",
         *       "host": "docker.io",
         *       "name": "DockerHub",
         *       "password": "mypassword",
         *       "username": "myusername"
         *     } */
        CreateImageRegistryRequest2: {
            /**
             * @description A brief description of the Image Registry
             * @example DockerHub is a public Docker Image Registry
             */
            description: string;
            /**
             * @description The Image Registry host
             * @example docker.io
             */
            host: string;
            /**
             * @description Name of the Image Registry
             * @example DockerHub
             */
            name: string;
            /**
             * @description The password to use when authenticating to the Image Registry
             * @example mypassword
             */
            password?: string;
            /**
             * @description The username to use when authenticating to the Image Registry
             * @example myusername
             */
            username?: string;
        };
        /**
         * @description Create the infra required to host a resource
         * @example {
         *       "computeConfigId": "cc-12345678",
         *       "customTag": {
         *         "key": "customKey",
         *         "value": "customValue"
         *       },
         *       "description": "Infra config used for the base tier MySQL service",
         *       "name": "MySQL Writer Infra Config",
         *       "networkConfigId": "nc-12345678",
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "storageConfigId": "sc-12345678",
         *       "token": "527"
         *     }
         */
        CreateInfraConfigRequest: {
            /**
             * @description ID of a Compute Config
             * @example Dolore minima qui vel voluptas vitae.
             */
            computeConfigId?: string;
            customTag?: components["schemas"]["CustomTag"];
            /**
             * @description The description for the infra config
             * @example Infra config used for the base tier MySQL service
             */
            description: string;
            /**
             * @description The name of the infra config
             * @example MySQL Writer Infra Config
             */
            name: string;
            /**
             * @description ID of a Network Config
             * @example Quidem et consectetur eum dolor et nostrum.
             */
            networkConfigId?: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Storage Config
             * @example Molestias est doloremque ut.
             */
            storageConfigId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 9of
             */
            token: string;
        };
        /** @example {
         *       "computeConfigId": "cc-12345678",
         *       "customTag": {
         *         "key": "customKey",
         *         "value": "customValue"
         *       },
         *       "description": "Infra config used for the base tier MySQL service",
         *       "name": "MySQL Writer Infra Config",
         *       "networkConfigId": "nc-12345678",
         *       "serviceEnvironmentId": "se-12345678",
         *       "storageConfigId": "sc-12345678"
         *     } */
        CreateInfraConfigRequest2: {
            /**
             * @description The compute config ID
             * @example cc-12345678
             */
            computeConfigId?: string;
            customTag?: components["schemas"]["CustomTag"];
            /**
             * @description The description for the infra config
             * @example Infra config used for the base tier MySQL service
             */
            description: string;
            /**
             * @description The name of the infra config
             * @example MySQL Writer Infra Config
             */
            name: string;
            /**
             * @description The network config ID
             * @example nc-12345678
             */
            networkConfigId?: string;
            /**
             * @description The service environment ID
             * @example se-12345678
             */
            serviceEnvironmentId: string;
            /**
             * @description The storage config ID
             * @example sc-12345678
             */
            storageConfigId?: string;
        };
        /** @example {
         *       "defaultValue": "default value",
         *       "dependentResourceId": "r-12345678",
         *       "description": "Et voluptatem enim temporibus quae quia.",
         *       "hasOptions": true,
         *       "isList": true,
         *       "key": "zxu",
         *       "labeledOptions": {
         *         "large": "t3.xlarge",
         *         "medium": "t3.large",
         *         "small": "t3.medium"
         *       },
         *       "limits": {
         *         "max": "Distinctio rerum.",
         *         "maxLength": "Modi incidunt quibusdam et atque quia.",
         *         "min": "Qui eveniet nihil hic sit sint.",
         *         "minLength": "Iure eligendi."
         *       },
         *       "modifiable": false,
         *       "name": "rl3",
         *       "options": [
         *         "a",
         *         "b",
         *         "c",
         *         "default value"
         *       ],
         *       "regex": "^[a-zA-Z0-9_-]+$",
         *       "required": false,
         *       "resourceId": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "tabIndex": 1,
         *       "token": "i",
         *       "type": "Boolean|Float64|String|Resource|Secret|Password"
         *     } */
        CreateInputParameterRequest: {
            /**
             * @description Default value to use for an optional input parameter represented as a string
             * @example default value
             */
            defaultValue?: string;
            /**
             * @description ID of a resource
             * @example Nihil cumque minima.
             */
            dependentResourceId?: string;
            /**
             * @description A brief description of the input parameter
             * @example Optio pariatur qui in et.
             */
            description: string;
            /**
             * @description Marks the input parameter to be selectable from a list of values
             * @default false
             * @example false
             */
            hasOptions: boolean;
            /**
             * @description Marks the input parameter as a list of values
             * @default false
             * @example false
             */
            isList: boolean;
            /**
             * @description Key of the input parameter
             * @example gvf
             */
            key: string;
            /**
             * @description A map for labeled options. The key is the label and the value is the option. When the option is selected, the label will be displayed to the end customer. Specify either options or labeledOptions when defining the input parameter.
             * @example {
             *       "large": "t3.xlarge",
             *       "medium": "t3.large",
             *       "small": "t3.medium"
             *     }
             */
            labeledOptions?: {
                [key: string]: string;
            };
            limits?: components["schemas"]["Limits"];
            /**
             * @description Marks the input parameter as immutable
             * @example true
             */
            modifiable: boolean;
            /**
             * @description External name for the input parameter
             * @example 11i
             */
            name: string;
            /**
             * @description A list of options to restrict the value of the input parameter to (represented as a string)
             * @example [
             *       "a",
             *       "b",
             *       "c",
             *       "default value"
             *     ]
             */
            options?: string[];
            /**
             * @description Regular expression pattern for validating the input parameter value
             * @example ^[a-zA-Z0-9_-]+$
             */
            regex?: string;
            /**
             * @description Enforces the input parameter as a required parameter
             * @example false
             */
            required: boolean;
            /**
             * @description ID of a resource
             * @example Maiores fugit et aut facilis ipsum.
             */
            resourceId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * Format: int64
             * @description Index for parameter ordering in the SaaS portal
             * @default 0
             * @example 1
             */
            tabIndex: number;
            /**
             * @description JWT token used to perform authorization
             * @example 8pt
             */
            token: string;
            /**
             * @description Type of the variable encoding the value
             * @example Boolean|Float64|String|Resource|Secret|Password
             */
            type: string;
        };
        /** @example {
         *       "defaultValue": "default value",
         *       "dependentResourceId": "r-12345678",
         *       "description": "Et corrupti pariatur similique minus illo.",
         *       "hasOptions": true,
         *       "isList": true,
         *       "key": "d",
         *       "labeledOptions": {
         *         "large": "t3.xlarge",
         *         "medium": "t3.large",
         *         "small": "t3.medium"
         *       },
         *       "limits": {
         *         "max": "Magnam dolor enim et occaecati aperiam.",
         *         "maxLength": "Hic natus est tempore.",
         *         "min": "Architecto enim voluptatibus.",
         *         "minLength": "Distinctio error perferendis."
         *       },
         *       "modifiable": true,
         *       "name": "q",
         *       "options": [
         *         "a",
         *         "b",
         *         "c",
         *         "default value"
         *       ],
         *       "regex": "^[a-zA-Z0-9_-]+$",
         *       "required": true,
         *       "resourceId": "r-12345678",
         *       "tabIndex": 1,
         *       "type": "Eum odio nihil debitis."
         *     } */
        CreateInputParameterRequest2: {
            /**
             * @description Default value to use for an optional input parameter represented as a string
             * @example default value
             */
            defaultValue?: string;
            /**
             * @description The ID of the resource whose instance this input parameter depends on
             * @example r-12345678
             */
            dependentResourceId?: string;
            /**
             * @description A brief description of the input parameter
             * @example Est sunt sint qui.
             */
            description: string;
            /**
             * @description Marks the input parameter to be selectable from a list of values
             * @default false
             * @example true
             */
            hasOptions: boolean;
            /**
             * @description Marks the input parameter as a list of values
             * @default false
             * @example false
             */
            isList: boolean;
            /**
             * @description Key of the input parameter
             * @example w
             */
            key: string;
            /**
             * @description A map for labeled options. The key is the label and the value is the option. When the option is selected, the label will be displayed to the end customer. Specify either options or labeledOptions when defining the input parameter.
             * @example {
             *       "large": "t3.xlarge",
             *       "medium": "t3.large",
             *       "small": "t3.medium"
             *     }
             */
            labeledOptions?: {
                [key: string]: string;
            };
            limits?: components["schemas"]["Limits"];
            /**
             * @description Marks the input parameter as immutable
             * @example false
             */
            modifiable: boolean;
            /**
             * @description External name for the input parameter
             * @example 2
             */
            name: string;
            /**
             * @description A list of options to restrict the value of the input parameter to (represented as a string)
             * @example [
             *       "a",
             *       "b",
             *       "c",
             *       "default value"
             *     ]
             */
            options?: string[];
            /**
             * @description Regular expression pattern for validating the input parameter value
             * @example ^[a-zA-Z0-9_-]+$
             */
            regex?: string;
            /**
             * @description Enforces the input parameter as a required parameter
             * @example true
             */
            required: boolean;
            /**
             * @description The ID of the resource that this input parameter belongs to
             * @example r-12345678
             */
            resourceId: string;
            /**
             * Format: int64
             * @description Index for parameter ordering in the SaaS portal
             * @default 0
             * @example 1
             */
            tabIndex: number;
            /** @example Quibusdam eveniet. */
            type: string;
        };
        /** @example {
         *       "description": "A multi-zone HA network config",
         *       "endpointPerReplica": true,
         *       "internal": true,
         *       "name": "Multi-zone",
         *       "openPorts": [
         *         1299,
         *         3306
         *       ],
         *       "privateNetworkingConfiguration": {
         *         "privateLinkConfiguration": {
         *           "awsPrivateLinkConfigurations": [
         *             {
         *               "port": 80,
         *               "targetGroupName": "my-target-group"
         *             },
         *             {
         *               "port": 80,
         *               "targetGroupName": "my-target-group"
         *             }
         *           ]
         *         }
         *       },
         *       "publicNetworkingConfiguration": {
         *         "enableClusterLoadBalancer": true,
         *         "enableNodeLoadBalancer": true
         *       },
         *       "serviceId": "s-12345678",
         *       "stableEgressIP": true,
         *       "tlsTerminationPort": 443,
         *       "token": "sl",
         *       "zoneConfiguration": "SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE"
         *     } */
        CreateNetworkConfigRequest: {
            /**
             * @description A brief description of the network config
             * @example A multi-zone HA network config
             */
            description: string;
            /**
             * @description Generates a DNS endpoint per-replica for this network config
             * @example true
             */
            endpointPerReplica: boolean;
            /**
             * @description Restrict access to this network config to the internal network
             * @default false
             * @example true
             */
            internal: boolean;
            /**
             * @description Name of the network config
             * @example Multi-zone
             */
            name: string;
            /**
             * @description Ports to map to the generated DNS endpoint
             * @example [
             *       1299,
             *       3306
             *     ]
             */
            openPorts?: number[];
            privateNetworkingConfiguration?: components["schemas"]["PrivateNetworkingConfiguration"];
            publicNetworkingConfiguration?: components["schemas"]["PublicNetworkingConfiguration"];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description Enable stable egress IP
             * @example true
             */
            stableEgressIP?: boolean;
            /**
             * Format: int64
             * @description The port that hosts the reverse proxy for TLS termination
             * @example 443
             */
            tlsTerminationPort?: number;
            /**
             * @description JWT token used to perform authorization
             * @example ywv
             */
            token: string;
            /**
             * @description The preferred type of zonal availability for this resource and the specific zone(s) to deploy in
             * @example SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
             */
            zoneConfiguration?: string;
        };
        /** @example {
         *       "description": "A multi-zone HA network config",
         *       "endpointPerReplica": true,
         *       "internal": true,
         *       "name": "Multi-zone",
         *       "openPorts": [
         *         1299,
         *         3306
         *       ],
         *       "privateNetworkingConfiguration": {
         *         "privateLinkConfiguration": {
         *           "awsPrivateLinkConfigurations": [
         *             {
         *               "port": 80,
         *               "targetGroupName": "my-target-group"
         *             },
         *             {
         *               "port": 80,
         *               "targetGroupName": "my-target-group"
         *             }
         *           ]
         *         }
         *       },
         *       "publicNetworkingConfiguration": {
         *         "enableClusterLoadBalancer": true,
         *         "enableNodeLoadBalancer": true
         *       },
         *       "stableEgressIP": true,
         *       "tlsTerminationPort": 443,
         *       "zoneConfiguration": "Occaecati laborum."
         *     } */
        CreateNetworkConfigRequest2: {
            /**
             * @description A brief description of the network config
             * @example A multi-zone HA network config
             */
            description: string;
            /**
             * @description Generates a DNS endpoint per-replica for this network config
             * @example true
             */
            endpointPerReplica: boolean;
            /**
             * @description Restrict access to this network config to the internal network
             * @default false
             * @example true
             */
            internal: boolean;
            /**
             * @description Name of the network config
             * @example Multi-zone
             */
            name: string;
            /**
             * @description Ports to map to the generated DNS endpoint
             * @example [
             *       1299,
             *       3306
             *     ]
             */
            openPorts?: number[];
            privateNetworkingConfiguration?: components["schemas"]["PrivateNetworkingConfiguration"];
            publicNetworkingConfiguration?: components["schemas"]["PublicNetworkingConfiguration"];
            /**
             * @description Enable stable egress IP
             * @example true
             */
            stableEgressIP?: boolean;
            /**
             * Format: int64
             * @description The port that hosts the reverse proxy for TLS termination
             * @example 443
             */
            tlsTerminationPort?: number;
            /**
             * @description The preferred type of zonal availability for this resource and the specific zone(s) to deploy in
             * @example Enim eaque.
             */
            zoneConfiguration?: string;
        };
        /** @example {
         *       "description": "Username of the user created in the target system",
         *       "key": "username",
         *       "name": "Username",
         *       "resourceId": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "p",
         *       "value": "johndoe",
         *       "valueRef": "$var.username",
         *       "valueType": "Boolean|Float64|String|Secret|Password"
         *     } */
        CreateOutputParameterRequest: {
            /**
             * @description Description of the output variable being exported
             * @example Username of the user created in the target system
             */
            description: string;
            /**
             * @description Key of the output variable being exported
             * @example username
             */
            key: string;
            /**
             * @description External name of the output variable being exported
             * @example Username
             */
            name: string;
            /**
             * @description ID of a resource
             * @example Inventore dolorum deleniti necessitatibus optio.
             */
            resourceId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example dx
             */
            token: string;
            /**
             * @description Value of the output variable being exported
             * @example johndoe
             */
            value?: string;
            /**
             * @description Reference to another variable that will be used to set the value of the output variable being exported
             * @example $var.username
             */
            valueRef?: string;
            /**
             * @description Type of the variable encoding the value
             * @example Boolean|Float64|String|Secret|Password
             */
            valueType?: string;
        };
        /** @example {
         *       "description": "Username of the user created in the target system",
         *       "key": "username",
         *       "name": "Username",
         *       "resourceId": "r-12345678",
         *       "value": "johndoe",
         *       "valueRef": "$var.username",
         *       "valueType": "Perspiciatis quia."
         *     } */
        CreateOutputParameterRequest2: {
            /**
             * @description Description of the output variable being exported
             * @example Username of the user created in the target system
             */
            description: string;
            /**
             * @description Key of the output variable being exported
             * @example username
             */
            key: string;
            /**
             * @description External name of the output variable being exported
             * @example Username
             */
            name: string;
            /**
             * @description The ID of the resource that this output parameter belongs to
             * @example r-12345678
             */
            resourceId: string;
            /**
             * @description Value of the output variable being exported
             * @example johndoe
             */
            value?: string;
            /**
             * @description Reference to another variable that will be used to set the value of the output variable being exported
             * @example $var.username
             */
            valueRef?: string;
            /** @example Sint animi non et vitae impedit qui. */
            valueType?: string;
        };
        /** @example {
         *       "description": "MySQL SaaS promotion pipeline",
         *       "name": "my-pipeline",
         *       "serviceEnvironmentSequence": [
         *         "se-12345678",
         *         "se-23456789"
         *       ],
         *       "serviceId": "s-12345678",
         *       "token": "f"
         *     } */
        CreatePipelineRequest: {
            /**
             * @description Description of the pipeline
             * @example MySQL SaaS promotion pipeline
             */
            description: string;
            /**
             * @description Name of the pipeline
             * @example my-pipeline
             */
            name: string;
            /**
             * @description Sequence of service environments to be deployed in the pipeline
             * @example [
             *       "se-12345678",
             *       "se-23456789"
             *     ]
             */
            serviceEnvironmentSequence: string[];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example hzd
             */
            token: string;
        };
        /** @example {
         *       "allowCreatesWhenPaymentNotConfigured": true,
         *       "autoApproveSubscription": false,
         *       "awsRegions": [
         *         "us-east-2",
         *         "ca-central-1"
         *       ],
         *       "azureRegions": [
         *         "northcentralus"
         *       ],
         *       "billingProductID": "abc123",
         *       "billingProviders": [
         *         "STRIPE",
         *         "BRING_YOUR_OWN"
         *       ],
         *       "defaultBillingProvider": "STRIPE",
         *       "description": "A premium product tier",
         *       "documentation": "Any documentation",
         *       "exportUsageMetering": true,
         *       "exportUsageMeteringConfig": {
         *         "GCS": {
         *           "GCSBucketName": "my_billing_bucket_name"
         *         },
         *         "S3": {
         *           "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
         *           "S3BucketRegion": "us-east-1"
         *         }
         *       },
         *       "gcpRegions": [
         *         "us-central1"
         *       ],
         *       "isDisabled": false,
         *       "maxNumberOfInstances": 5,
         *       "name": "Premium",
         *       "planDescription": "A premium plan",
         *       "pricePerUnit": {
         *         "CPU core hours": {
         *           "amount": 0.001,
         *           "currency": "USD"
         *         },
         *         "Memory GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         },
         *         "Storage GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         }
         *       },
         *       "pricing": {
         *         "price1": "value1"
         *       },
         *       "privateRegions": [
         *         "n/a"
         *       ],
         *       "serviceId": "s-12345678",
         *       "serviceModelId": "sm-12345678",
         *       "support": "Any support",
         *       "tierType": "OMNISTRATE_DEDICATED_TENANCY",
         *       "token": "2"
         *     } */
        CreateProductTierRequest: {
            /**
             * @description Allow creates when payment not configured
             * @example true
             */
            allowCreatesWhenPaymentNotConfigured?: boolean;
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description The AWS regions that this product tier is available on
             * @example [
             *       "us-east-2",
             *       "ca-central-1"
             *     ]
             */
            awsRegions?: string[];
            /**
             * @description The Azure regions that this product tier is available on
             * @example [
             *       "northcentralus"
             *     ]
             */
            azureRegions?: string[];
            /**
             * @description Optional billing product ID for tax purposes
             * @example abc123
             */
            billingProductID?: string;
            /**
             * @description List of billing providers to be used for the product tier
             * @example [
             *       "STRIPE",
             *       "BRING_YOUR_OWN"
             *     ]
             */
            billingProviders?: string[];
            /**
             * @description The billing provider type
             * @example STRIPE|BRING_YOUR_OWN
             */
            defaultBillingProvider?: string;
            /**
             * @description A brief description of the product tier
             * @example A premium product tier
             */
            description: string;
            /**
             * @description Documentation
             * @example Any documentation
             */
            documentation?: string;
            /**
             * @description Export usage metering data
             * @example true
             */
            exportUsageMetering?: boolean;
            /**
             * @description Export usage metering data configuration
             * @example {
             *       "GCS": {
             *         "GCSBucketName": "my_billing_bucket_name"
             *       },
             *       "S3": {
             *         "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
             *         "S3BucketRegion": "us-east-1"
             *       }
             *     }
             */
            exportUsageMeteringConfig?: {
                [key: string]: unknown;
            };
            /**
             * @description The GCP regions that this product tier is available on
             * @example [
             *       "us-central1"
             *     ]
             */
            gcpRegions?: string[];
            /**
             * @description Create the product tier in a disabled state. Enabling the product tier will let end-customers subscribe and use the service plan.
             * @example false
             */
            isDisabled?: boolean;
            /**
             * Format: int64
             * @description Maximum number of instances
             * @example 5
             */
            maxNumberOfInstances?: number;
            /**
             * @description Name of the product tier
             * @example Premium
             */
            name: string;
            /**
             * @description A brief description for the end user of the product tier
             * @example A premium plan
             */
            planDescription: string;
            /**
             * @description Price per unit.
             * @example {
             *       "CPU core hours": {
             *         "amount": 0.001,
             *         "currency": "USD"
             *       },
             *       "Memory GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       },
             *       "Storage GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       }
             *     }
             */
            pricePerUnit?: {
                [key: string]: unknown;
            };
            /**
             * @description Pricing
             * @example {
             *       "price1": "value1"
             *     }
             */
            pricing?: unknown;
            /**
             * @description The private regions that this product tier is available on
             * @example [
             *       "n/a"
             *     ]
             */
            privateRegions?: string[];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Service Model
             * @example Ad est voluptas aliquam adipisci.
             */
            serviceModelId: string;
            /**
             * @description Support
             * @example Any support
             */
            support?: string;
            /**
             * @description ProductTierType is the type of tier for a product
             * @example OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
             */
            tierType: string;
            /**
             * @description JWT token used to perform authorization
             * @example ik
             */
            token: string;
        };
        /** @example {
         *       "allowCreatesWhenPaymentNotConfigured": true,
         *       "autoApproveSubscription": false,
         *       "awsRegions": [
         *         "us-east-2",
         *         "ca-central-1"
         *       ],
         *       "azureRegions": [
         *         "northcentralus"
         *       ],
         *       "billingProductID": "abc123",
         *       "billingProviders": [
         *         "STRIPE",
         *         "BRING_YOUR_OWN"
         *       ],
         *       "defaultBillingProvider": "STRIPE",
         *       "description": "A premium product tier",
         *       "documentation": "Any documentation",
         *       "exportUsageMetering": true,
         *       "exportUsageMeteringConfig": {
         *         "GCS": {
         *           "GCSBucketName": "my_billing_bucket_name"
         *         },
         *         "S3": {
         *           "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
         *           "S3BucketRegion": "us-east-1"
         *         }
         *       },
         *       "gcpRegions": [
         *         "us-central1"
         *       ],
         *       "isDisabled": false,
         *       "maxNumberOfInstances": 5,
         *       "name": "Premium",
         *       "planDescription": "A premium plan",
         *       "pricePerUnit": {
         *         "CPU core hours": {
         *           "amount": 0.001,
         *           "currency": "USD"
         *         },
         *         "Memory GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         },
         *         "Storage GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         }
         *       },
         *       "pricing": {
         *         "price1": "value1"
         *       },
         *       "privateRegions": [
         *         "n/a"
         *       ],
         *       "serviceModelId": "sm-12345678",
         *       "support": "Any support",
         *       "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *     } */
        CreateProductTierRequest2: {
            /**
             * @description Allow creates when payment not configured
             * @example true
             */
            allowCreatesWhenPaymentNotConfigured?: boolean;
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description The AWS regions that this product tier is available on
             * @example [
             *       "us-east-2",
             *       "ca-central-1"
             *     ]
             */
            awsRegions?: string[];
            /**
             * @description The Azure regions that this product tier is available on
             * @example [
             *       "northcentralus"
             *     ]
             */
            azureRegions?: string[];
            /**
             * @description Optional billing product ID for tax purposes
             * @example abc123
             */
            billingProductID?: string;
            /**
             * @description List of billing providers to be used for the product tier
             * @example [
             *       "STRIPE",
             *       "BRING_YOUR_OWN"
             *     ]
             */
            billingProviders?: string[];
            /**
             * @description The default billing provider to be used for the product tier
             * @example STRIPE
             */
            defaultBillingProvider?: string;
            /**
             * @description A brief description of the product tier
             * @example A premium product tier
             */
            description: string;
            /**
             * @description Documentation
             * @example Any documentation
             */
            documentation?: string;
            /**
             * @description Export usage metering data
             * @example true
             */
            exportUsageMetering?: boolean;
            /**
             * @description Export usage metering data configuration
             * @example {
             *       "GCS": {
             *         "GCSBucketName": "my_billing_bucket_name"
             *       },
             *       "S3": {
             *         "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
             *         "S3BucketRegion": "us-east-1"
             *       }
             *     }
             */
            exportUsageMeteringConfig?: {
                [key: string]: unknown;
            };
            /**
             * @description The GCP regions that this product tier is available on
             * @example [
             *       "us-central1"
             *     ]
             */
            gcpRegions?: string[];
            /**
             * @description Create the product tier in a disabled state. Enabling the product tier will let end-customers subscribe and use the service plan.
             * @example false
             */
            isDisabled?: boolean;
            /**
             * Format: int64
             * @description Maximum number of instances
             * @example 5
             */
            maxNumberOfInstances?: number;
            /**
             * @description Name of the product tier
             * @example Premium
             */
            name: string;
            /**
             * @description A brief description for the end user of the product tier
             * @example A premium plan
             */
            planDescription: string;
            /**
             * @description Price per unit.
             * @example {
             *       "CPU core hours": {
             *         "amount": 0.001,
             *         "currency": "USD"
             *       },
             *       "Memory GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       },
             *       "Storage GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       }
             *     }
             */
            pricePerUnit?: {
                [key: string]: unknown;
            };
            /**
             * @description Pricing
             * @example {
             *       "price1": "value1"
             *     }
             */
            pricing?: unknown;
            /**
             * @description The private regions that this product tier is available on
             * @example [
             *       "n/a"
             *     ]
             */
            privateRegions?: string[];
            /**
             * @description Service model ID
             * @example sm-12345678
             */
            serviceModelId: string;
            /**
             * @description Support
             * @example Any support
             */
            support?: string;
            /**
             * @description Tier type
             * @example OMNISTRATE_DEDICATED_TENANCY
             */
            tierType: string;
        };
        /** @example {
         *       "cloud_provider": "aws",
         *       "custom_network_id": "n-1234567890",
         *       "externalBillingId": "external-billing-id-1234",
         *       "network_type": "PUBLIC|INTERNAL",
         *       "onprem_platform": "OpenShift",
         *       "productTierKey": "premium",
         *       "productTierVersion": "1.0",
         *       "region": "us-east-1",
         *       "requestParams": {
         *         "param1": "value1",
         *         "param2": "value2"
         *       },
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "4"
         *     } */
        CreateResourceInstanceRequest: {
            /**
             * @description The cloud provider name
             * @example aws
             */
            cloud_provider?: string;
            /**
             * @description Custom network for resource
             * @example n-1234567890
             */
            custom_network_id?: string;
            /**
             * @description This externalBillingId is deprecated and will be removed in the future
             * @example external-billing-id-1234
             */
            externalBillingId?: string;
            /**
             * @description The network type
             * @example PUBLIC|INTERNAL
             */
            network_type?: string;
            /**
             * @description OnPrem platform
             * @example OpenShift
             */
            onprem_platform?: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The product tier version
             * @example 1.0
             */
            productTierVersion?: string;
            /**
             * @description The region code
             * @example us-east-1
             */
            region?: string;
            /**
             * @description The request parameters
             * @example {
             *       "param1": "value1",
             *       "param2": "value2"
             *     }
             */
            requestParams?: unknown;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Et quo expedita beatae repellendus natus.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 71t
             */
            token: string;
        };
        /** @example {
         *       "cloud_provider": "aws",
         *       "custom_network_id": "n-1234567890",
         *       "externalBillingId": "external-billing-id-1234",
         *       "network_type": "PUBLIC|INTERNAL",
         *       "onprem_platform": "OpenShift",
         *       "productTierVersion": "1.0",
         *       "region": "us-east-1",
         *       "requestParams": {
         *         "param1": "value1",
         *         "param2": "value2"
         *       }
         *     } */
        CreateResourceInstanceRequest2: {
            /**
             * @description The cloud provider name
             * @example aws
             */
            cloud_provider?: string;
            /**
             * @description Custom network for resource
             * @example n-1234567890
             */
            custom_network_id?: string;
            /**
             * @description This externalBillingId is deprecated and will be removed in the future
             * @example external-billing-id-1234
             */
            externalBillingId?: string;
            /**
             * @description The network type
             * @example PUBLIC|INTERNAL
             */
            network_type?: string;
            /**
             * @description OnPrem platform
             * @example OpenShift
             */
            onprem_platform?: string;
            /**
             * @description The product tier version
             * @example 1.0
             */
            productTierVersion?: string;
            /**
             * @description The region code
             * @example us-east-1
             */
            region?: string;
            /**
             * @description The request parameters
             * @example {
             *       "param1": "value1",
             *       "param2": "value2"
             *     }
             */
            requestParams?: unknown;
        };
        /** @example {
         *       "additionalSecurityContext": {
         *         "AddCapabilities": [
         *           "CAP_NET_ADMIN",
         *           "CAP_NET_RAW"
         *         ],
         *         "DropCapabilities": [
         *           "CAP_NET_ADMIN",
         *           "CAP_NET_RAW"
         *         ],
         *         "SupplementalGroupIDs": [
         *           1001,
         *           999
         *         ]
         *       },
         *       "backupConfiguration": {
         *         "backupPeriodInHours": 24,
         *         "backupRetentionInDays": 7
         *       },
         *       "blobStorageConfiguration": {
         *         "GCSConfiguration": {},
         *         "S3Configuration": {}
         *       },
         *       "customLabels": {
         *         "key": "value"
         *       },
         *       "customSysCTLs": {
         *         "net.ipv4.tcp_syncookies": "1"
         *       },
         *       "customULimits": [
         *         {
         *           "ULimitsName": "NoProc",
         *           "ULimitsType": "Soft",
         *           "ULimitsValue": 1000
         *         },
         *         {
         *           "ULimitsName": "NoFile",
         *           "ULimitsType": "Hard",
         *           "ULimitsValue": 2048
         *         }
         *       ],
         *       "description": "A resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
         *       "environmentVariables": [
         *         {
         *           "key": "MYSQL_ROOT_PASSWORD",
         *           "value": "password"
         *         }
         *       ],
         *       "fileSystemConfiguration": {
         *         "EFSFileSystemConfiguration": {
         *           "PerformanceMode": "generalPurpose|maxIO",
         *           "ProvisionedThroughputInMibps": 125,
         *           "ThroughputMode": "provisioned|bursting|elastic"
         *         }
         *       },
         *       "helmChartConfiguration": {
         *         "chartName": "my-chart",
         *         "chartRepoName": "my-repo",
         *         "chartRepoUrl": "https://my-repo.com",
         *         "chartValues": {
         *           "key1": "value1",
         *           "key2": 3,
         *           "key3": {
         *             "key4": "value4"
         *           }
         *         },
         *         "chartVersion": "1.0.0",
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "layeredChartValues": [
         *           {
         *             "values": {
         *               "global": {
         *                 "image": {
         *                   "tag": "v1.0.0"
         *                 },
         *                 "replicaCount": 1,
         *                 "resources": {
         *                   "requests": {
         *                     "cpu": "100m",
         *                     "memory": "128Mi"
         *                   }
         *                 }
         *               }
         *             }
         *           },
         *           {
         *             "scope": {
         *               "{{ $sys.cloudProviderName }}": "aws"
         *             },
         *             "valuesFile": {
         *               "gitConfiguration": {
         *                 "accessToken": "ghp_...",
         *                 "commitSHA": "a1b2c3d4e5f6",
         *                 "path": "aws/production.yaml",
         *                 "referenceName": "refs/heads/main",
         *                 "repositoryUrl": "https://github.com/org/helm-values"
         *               }
         *             }
         *           }
         *         ],
         *         "namespace": "postgres",
         *         "password": "my-password",
         *         "runtimeConfiguration": {
         *           "disableHooks": true,
         *           "recreate": true,
         *           "resetThenReuseValues": true,
         *           "resetValues": true,
         *           "reuseValues": true,
         *           "skipCRDs": true,
         *           "timeoutNanos": 1000000000,
         *           "upgradeCRDs": true,
         *           "wait": true,
         *           "waitForJobs": true
         *         },
         *         "username": "my-user"
         *       },
         *       "imageConfigId": "imgc-12345678",
         *       "infraConfigId": "ic-12345678",
         *       "internal": true,
         *       "isProxy": false,
         *       "jobConfig": {
         *         "activeDeadlineSeconds": 300,
         *         "backoffLimit": 5
         *       },
         *       "key": "galera",
         *       "kustomizeConfiguration": {
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "gitConfiguration": {
         *           "accessToken": "my-token",
         *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *           "referenceName": "tags/v1.0.0",
         *           "repositoryUrl": "https://github.com/username/myrepo",
         *           "userName": "my-user"
         *         },
         *         "helmChartDependencies": [
         *           {
         *             "chartName": "cert-manager",
         *             "chartVersion": "v1.5.3"
         *           },
         *           {
         *             "chartName": "nginx-ingress",
         *             "chartVersion": "v0.48.1"
         *           },
         *           {
         *             "chartName": "external-dns",
         *             "chartVersion": "v0.7.0"
         *           },
         *           {
         *             "chartName": "cnpg-operator",
         *             "chartVersion": "v0.23.1"
         *           }
         *         ],
         *         "kustomizePath": "/kustomize"
         *       },
         *       "l4LoadBalancerConfiguration": {
         *         "ingressPortConfiguration": [
         *           {
         *             "associatedResourceIDs": [
         *               "r-12345678",
         *               "r-abcdef12"
         *             ],
         *             "backendPort": 8080,
         *             "ingressPort": 1234
         *           },
         *           {
         *             "associatedResourceIDs": [
         *               "r-12345678",
         *               "r-abcdef12"
         *             ],
         *             "backendPort": 8081,
         *             "ingressPort": 5678
         *           },
         *           {
         *             "associatedResourceIDs": [
         *               "r-vwxybz12",
         *               "r-poij122v"
         *             ],
         *             "backendPort": 8082,
         *             "ingressPort": 9012
         *           }
         *         ]
         *       },
         *       "l7LoadBalancerConfiguration": {
         *         "paths": [
         *           {
         *             "associatedResourceID": "r-12345678",
         *             "path": "/path",
         *             "port": 8080
         *           }
         *         ]
         *       },
         *       "name": "Galera",
         *       "onPremTerraformConfigurations": {
         *         "OpenShift": {
         *           "gitConfiguration": {
         *             "referenceName": "ref",
         *             "repositoryUrl": "gitUrl"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "terraformPath": "/project1/tf"
         *         }
         *       },
         *       "operatorCRDConfiguration": {
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "helmChartDependencies": [
         *           {
         *             "chartName": "cert-manager",
         *             "chartVersion": "v1.5.3"
         *           },
         *           {
         *             "chartName": "nginx-ingress",
         *             "chartVersion": "v0.48.1"
         *           },
         *           {
         *             "chartName": "external-dns",
         *             "chartVersion": "v0.7.0"
         *           },
         *           {
         *             "chartName": "cnpg-operator",
         *             "chartVersion": "v0.23.1"
         *           }
         *         ],
         *         "outputParameters": {
         *           "expiresAt": "$out.status.notAfter",
         *           "issuerName": "letsencrypt-prod"
         *         },
         *         "readinessConditions": {
         *           "$out.status.conditions[?(@.type=='Ready')].status": true
         *         },
         *         "supplementalFiles": [
         *           "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
         *           "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
         *         ],
         *         "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
         *       },
         *       "productTierId": "pt-12345678",
         *       "proxyType": "PortsBasedProxy",
         *       "resourceDependencies": [
         *         {
         *           "parameterMap": {
         *             "userDatabase": "clusterOrg",
         *             "writerId": "clusterWriterId"
         *           },
         *           "resourceId": "r-12345678"
         *         },
         *         {
         *           "parameterMap": {
         *             "readerId": "clusterReaderId",
         *             "userDatabase": "clusterOrg"
         *           },
         *           "resourceId": "r-abcdef12"
         *         }
         *       ],
         *       "resourceType": "Generic",
         *       "serviceId": "s-12345678",
         *       "terraformConfigurations": {
         *         "aws": {
         *           "gitConfiguration": {
         *             "referenceName": "ref",
         *             "repositoryUrl": "gitUrl"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "terraformPath": "/project1/tf"
         *         }
         *       },
         *       "token": "l9r"
         *     } */
        CreateResourceRequest: {
            additionalSecurityContext?: components["schemas"]["AdditionalSecurityContext"];
            backupConfiguration?: components["schemas"]["BackupConfiguration"];
            blobStorageConfiguration?: components["schemas"]["BlobStorageConfiguration"];
            /**
             * @description Custom labels for the resource
             * @example {
             *       "key": "value"
             *     }
             */
            customLabels?: {
                [key: string]: string;
            };
            /**
             * @description Custom sysctl settings for the resource
             * @example {
             *       "net.ipv4.tcp_syncookies": "1"
             *     }
             */
            customSysCTLs?: {
                [key: string]: string;
            };
            /**
             * @description Custom ulimits for the resource
             * @example [
             *       {
             *         "ULimitsName": "NoProc",
             *         "ULimitsType": "Soft",
             *         "ULimitsValue": 1000
             *       },
             *       {
             *         "ULimitsName": "NoFile",
             *         "ULimitsType": "Hard",
             *         "ULimitsValue": 2048
             *       }
             *     ]
             */
            customULimits?: components["schemas"]["CustomULimits"][];
            /**
             * @description A brief description of the resource
             * @example A resource to manage a hosted public SaaS offering of a multi-writer MySQL service
             */
            description: string;
            /**
             * @description The environment variables that this resource requires
             * @example [
             *       {
             *         "key": "MYSQL_ROOT_PASSWORD",
             *         "value": "password"
             *       }
             *     ]
             */
            environmentVariables?: components["schemas"]["EnvironmentVariable"][];
            fileSystemConfiguration?: components["schemas"]["FileSystemConfiguration"];
            helmChartConfiguration?: components["schemas"]["HelmChartConfiguration"];
            /**
             * @description ID of an Image Config
             * @example Reprehenderit velit dolores sunt ut.
             */
            imageConfigId?: string;
            /**
             * @description ID of an Infra Config
             * @example Eaque et qui illo officia minima.
             */
            infraConfigId?: string;
            /**
             * @description Whether this resource is internal or not
             * @default false
             * @example false
             */
            internal: boolean;
            /**
             * @description Whether this resource is a proxy or not
             * @default false
             * @example true
             */
            isProxy: boolean;
            jobConfig?: components["schemas"]["JobConfig"];
            /**
             * @description The key of the resource
             * @example galera
             */
            key?: string;
            kustomizeConfiguration?: components["schemas"]["KustomizeConfiguration"];
            l4LoadBalancerConfiguration?: components["schemas"]["L4LoadBalancerConfiguration"];
            l7LoadBalancerConfiguration?: components["schemas"]["L7LoadBalancerConfiguration"];
            /**
             * @description Name of the resource
             * @example Galera
             */
            name: string;
            onPremTerraformConfigurations?: components["schemas"]["OnPremTerraformConfigurations"];
            operatorCRDConfiguration?: components["schemas"]["OperatorCRDConfiguration"];
            /**
             * @description ID of a Product Tier
             * @example Animi nostrum quidem natus eos eligendi asperiores.
             */
            productTierId: string;
            /**
             * @description A proxy type of resource
             * @default PortsBasedProxy
             * @example PortsBasedProxy
             */
            proxyType: string;
            /** @example [
             *       {
             *         "parameterMap": {
             *           "userDatabase": "clusterOrg",
             *           "writerId": "clusterWriterId"
             *         },
             *         "resourceId": "r-12345678"
             *       },
             *       {
             *         "parameterMap": {
             *           "readerId": "clusterReaderId",
             *           "userDatabase": "clusterOrg"
             *         },
             *         "resourceId": "r-abcdef12"
             *       }
             *     ] */
            resourceDependencies?: components["schemas"]["ResourceDependency"][];
            /**
             * @description The type of the resource
             * @example |Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize
             */
            resourceType?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            terraformConfigurations?: components["schemas"]["TerraformConfigurations"];
            /**
             * @description JWT token used to perform authorization
             * @example to
             */
            token: string;
        };
        /** @example {
         *       "additionalSecurityContext": {
         *         "AddCapabilities": [
         *           "CAP_NET_ADMIN",
         *           "CAP_NET_RAW"
         *         ],
         *         "DropCapabilities": [
         *           "CAP_NET_ADMIN",
         *           "CAP_NET_RAW"
         *         ],
         *         "SupplementalGroupIDs": [
         *           1001,
         *           999
         *         ]
         *       },
         *       "backupConfiguration": {
         *         "backupPeriodInHours": 24,
         *         "backupRetentionInDays": 7
         *       },
         *       "blobStorageConfiguration": {
         *         "GCSConfiguration": {},
         *         "S3Configuration": {}
         *       },
         *       "customLabels": {
         *         "key": "value"
         *       },
         *       "customSysCTLs": {
         *         "net.ipv4.tcp_syncookies": "1"
         *       },
         *       "customULimits": [
         *         {
         *           "ULimitsName": "NoProc",
         *           "ULimitsType": "Soft",
         *           "ULimitsValue": 1000
         *         },
         *         {
         *           "ULimitsName": "NoFile",
         *           "ULimitsType": "Hard",
         *           "ULimitsValue": 2048
         *         }
         *       ],
         *       "description": "A resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
         *       "environmentVariables": [
         *         {
         *           "key": "MYSQL_ROOT_PASSWORD",
         *           "value": "password"
         *         }
         *       ],
         *       "fileSystemConfiguration": {
         *         "EFSFileSystemConfiguration": {
         *           "PerformanceMode": "generalPurpose|maxIO",
         *           "ProvisionedThroughputInMibps": 125,
         *           "ThroughputMode": "provisioned|bursting|elastic"
         *         }
         *       },
         *       "helmChartConfiguration": {
         *         "chartName": "my-chart",
         *         "chartRepoName": "my-repo",
         *         "chartRepoUrl": "https://my-repo.com",
         *         "chartValues": {
         *           "key1": "value1",
         *           "key2": 3,
         *           "key3": {
         *             "key4": "value4"
         *           }
         *         },
         *         "chartVersion": "1.0.0",
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "layeredChartValues": [
         *           {
         *             "values": {
         *               "global": {
         *                 "image": {
         *                   "tag": "v1.0.0"
         *                 },
         *                 "replicaCount": 1,
         *                 "resources": {
         *                   "requests": {
         *                     "cpu": "100m",
         *                     "memory": "128Mi"
         *                   }
         *                 }
         *               }
         *             }
         *           },
         *           {
         *             "scope": {
         *               "{{ $sys.cloudProviderName }}": "aws"
         *             },
         *             "valuesFile": {
         *               "gitConfiguration": {
         *                 "accessToken": "ghp_...",
         *                 "commitSHA": "a1b2c3d4e5f6",
         *                 "path": "aws/production.yaml",
         *                 "referenceName": "refs/heads/main",
         *                 "repositoryUrl": "https://github.com/org/helm-values"
         *               }
         *             }
         *           }
         *         ],
         *         "namespace": "postgres",
         *         "password": "my-password",
         *         "runtimeConfiguration": {
         *           "disableHooks": true,
         *           "recreate": true,
         *           "resetThenReuseValues": true,
         *           "resetValues": true,
         *           "reuseValues": true,
         *           "skipCRDs": true,
         *           "timeoutNanos": 1000000000,
         *           "upgradeCRDs": true,
         *           "wait": true,
         *           "waitForJobs": true
         *         },
         *         "username": "my-user"
         *       },
         *       "imageConfigId": "imgc-12345678",
         *       "infraConfigId": "ic-12345678",
         *       "internal": true,
         *       "isProxy": true,
         *       "jobConfig": {
         *         "activeDeadlineSeconds": 300,
         *         "backoffLimit": 5
         *       },
         *       "key": "galera",
         *       "kustomizeConfiguration": {
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "gitConfiguration": {
         *           "accessToken": "my-token",
         *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *           "referenceName": "tags/v1.0.0",
         *           "repositoryUrl": "https://github.com/username/myrepo",
         *           "userName": "my-user"
         *         },
         *         "helmChartDependencies": [
         *           {
         *             "chartName": "cert-manager",
         *             "chartVersion": "v1.5.3"
         *           },
         *           {
         *             "chartName": "nginx-ingress",
         *             "chartVersion": "v0.48.1"
         *           },
         *           {
         *             "chartName": "external-dns",
         *             "chartVersion": "v0.7.0"
         *           },
         *           {
         *             "chartName": "cnpg-operator",
         *             "chartVersion": "v0.23.1"
         *           }
         *         ],
         *         "kustomizePath": "/kustomize"
         *       },
         *       "l4LoadBalancerConfiguration": {
         *         "ingressPortConfiguration": [
         *           {
         *             "associatedResourceIDs": [
         *               "r-12345678",
         *               "r-abcdef12"
         *             ],
         *             "backendPort": 8080,
         *             "ingressPort": 1234
         *           },
         *           {
         *             "associatedResourceIDs": [
         *               "r-12345678",
         *               "r-abcdef12"
         *             ],
         *             "backendPort": 8081,
         *             "ingressPort": 5678
         *           },
         *           {
         *             "associatedResourceIDs": [
         *               "r-vwxybz12",
         *               "r-poij122v"
         *             ],
         *             "backendPort": 8082,
         *             "ingressPort": 9012
         *           }
         *         ]
         *       },
         *       "l7LoadBalancerConfiguration": {
         *         "paths": [
         *           {
         *             "associatedResourceID": "r-12345678",
         *             "path": "/path",
         *             "port": 8080
         *           }
         *         ]
         *       },
         *       "name": "Galera",
         *       "onPremTerraformConfigurations": {
         *         "Error vero rem.": {
         *           "gitConfiguration": {
         *             "accessToken": "my-token",
         *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *             "referenceName": "tags/v1.0.0",
         *             "repositoryUrl": "https://github.com/username/myrepo",
         *             "userName": "my-user"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "requiredOutputKeys": [
         *             "output1"
         *           ],
         *           "requiredOutputs": [
         *             {
         *               "exported": true,
         *               "key": "output1"
         *             }
         *           ],
         *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
         *           "terraformPath": "/project1/tf"
         *         },
         *         "Nam beatae magni veritatis aut eos.": {
         *           "gitConfiguration": {
         *             "accessToken": "my-token",
         *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *             "referenceName": "tags/v1.0.0",
         *             "repositoryUrl": "https://github.com/username/myrepo",
         *             "userName": "my-user"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "requiredOutputKeys": [
         *             "output1"
         *           ],
         *           "requiredOutputs": [
         *             {
         *               "exported": true,
         *               "key": "output1"
         *             }
         *           ],
         *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
         *           "terraformPath": "/project1/tf"
         *         }
         *       },
         *       "operatorCRDConfiguration": {
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "helmChartDependencies": [
         *           {
         *             "chartName": "cert-manager",
         *             "chartVersion": "v1.5.3"
         *           },
         *           {
         *             "chartName": "nginx-ingress",
         *             "chartVersion": "v0.48.1"
         *           },
         *           {
         *             "chartName": "external-dns",
         *             "chartVersion": "v0.7.0"
         *           },
         *           {
         *             "chartName": "cnpg-operator",
         *             "chartVersion": "v0.23.1"
         *           }
         *         ],
         *         "outputParameters": {
         *           "expiresAt": "$out.status.notAfter",
         *           "issuerName": "letsencrypt-prod"
         *         },
         *         "readinessConditions": {
         *           "$out.status.conditions[?(@.type=='Ready')].status": true
         *         },
         *         "supplementalFiles": [
         *           "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
         *           "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
         *         ],
         *         "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
         *       },
         *       "productTierId": "pt-12345678",
         *       "proxyType": "PortsBasedProxy",
         *       "resourceDependencies": [
         *         {
         *           "parameterMap": {
         *             "userDatabase": "clusterOrg",
         *             "writerId": "clusterWriterId"
         *           },
         *           "resourceId": "r-12345678"
         *         },
         *         {
         *           "parameterMap": {
         *             "readerId": "clusterReaderId",
         *             "userDatabase": "clusterOrg"
         *           },
         *           "resourceId": "r-abcdef12"
         *         }
         *       ],
         *       "resourceType": "Generic",
         *       "terraformConfigurations": {
         *         "Maiores numquam aspernatur.": {
         *           "gitConfiguration": {
         *             "accessToken": "my-token",
         *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *             "referenceName": "tags/v1.0.0",
         *             "repositoryUrl": "https://github.com/username/myrepo",
         *             "userName": "my-user"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "requiredOutputKeys": [
         *             "output1"
         *           ],
         *           "requiredOutputs": [
         *             {
         *               "exported": true,
         *               "key": "output1"
         *             }
         *           ],
         *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
         *           "terraformPath": "/project1/tf"
         *         },
         *         "Nesciunt culpa quod sequi.": {
         *           "gitConfiguration": {
         *             "accessToken": "my-token",
         *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *             "referenceName": "tags/v1.0.0",
         *             "repositoryUrl": "https://github.com/username/myrepo",
         *             "userName": "my-user"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "requiredOutputKeys": [
         *             "output1"
         *           ],
         *           "requiredOutputs": [
         *             {
         *               "exported": true,
         *               "key": "output1"
         *             }
         *           ],
         *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
         *           "terraformPath": "/project1/tf"
         *         }
         *       }
         *     } */
        CreateResourceRequest2: {
            additionalSecurityContext?: components["schemas"]["AdditionalSecurityContext"];
            backupConfiguration?: components["schemas"]["BackupConfiguration"];
            blobStorageConfiguration?: components["schemas"]["BlobStorageConfiguration"];
            /**
             * @description Custom labels for the resource
             * @example {
             *       "key": "value"
             *     }
             */
            customLabels?: {
                [key: string]: string;
            };
            /**
             * @description Custom sysctl settings for the resource
             * @example {
             *       "net.ipv4.tcp_syncookies": "1"
             *     }
             */
            customSysCTLs?: {
                [key: string]: string;
            };
            /**
             * @description Custom ulimits for the resource
             * @example [
             *       {
             *         "ULimitsName": "NoProc",
             *         "ULimitsType": "Soft",
             *         "ULimitsValue": 1000
             *       },
             *       {
             *         "ULimitsName": "NoFile",
             *         "ULimitsType": "Hard",
             *         "ULimitsValue": 2048
             *       }
             *     ]
             */
            customULimits?: components["schemas"]["CustomULimits"][];
            /**
             * @description A brief description of the resource
             * @example A resource to manage a hosted public SaaS offering of a multi-writer MySQL service
             */
            description: string;
            /**
             * @description The environment variables that this resource requires
             * @example [
             *       {
             *         "key": "MYSQL_ROOT_PASSWORD",
             *         "value": "password"
             *       }
             *     ]
             */
            environmentVariables?: components["schemas"]["EnvironmentVariable"][];
            fileSystemConfiguration?: components["schemas"]["FileSystemConfiguration"];
            helmChartConfiguration?: components["schemas"]["HelmChartConfiguration"];
            /**
             * @description The ID of the image configuration that this resource refers to
             * @example imgc-12345678
             */
            imageConfigId?: string;
            /**
             * @description The ID of the infrastructure configuration that this resource refers to
             * @example ic-12345678
             */
            infraConfigId?: string;
            /**
             * @description Whether this resource is internal or not
             * @default false
             * @example true
             */
            internal: boolean;
            /**
             * @description Whether this resource is a proxy or not
             * @default false
             * @example true
             */
            isProxy: boolean;
            jobConfig?: components["schemas"]["JobConfig"];
            /**
             * @description The key of the resource
             * @example galera
             */
            key?: string;
            kustomizeConfiguration?: components["schemas"]["KustomizeConfiguration"];
            l4LoadBalancerConfiguration?: components["schemas"]["L4LoadBalancerConfiguration"];
            l7LoadBalancerConfiguration?: components["schemas"]["L7LoadBalancerConfiguration"];
            /**
             * @description Name of the resource
             * @example Galera
             */
            name: string;
            /**
             * @description The Terraform configurations for various OnPrem platforms
             * @example {
             *       "Et quae velit molestiae.": {
             *         "gitConfiguration": {
             *           "accessToken": "my-token",
             *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *           "referenceName": "tags/v1.0.0",
             *           "repositoryUrl": "https://github.com/username/myrepo",
             *           "userName": "my-user"
             *         },
             *         "privateModuleGitAccessTokens": {
             *           "tokenName": "accessToken"
             *         },
             *         "requiredOutputKeys": [
             *           "output1"
             *         ],
             *         "requiredOutputs": [
             *           {
             *             "exported": true,
             *             "key": "output1"
             *           }
             *         ],
             *         "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
             *         "terraformPath": "/project1/tf"
             *       },
             *       "Sed et iste blanditiis.": {
             *         "gitConfiguration": {
             *           "accessToken": "my-token",
             *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *           "referenceName": "tags/v1.0.0",
             *           "repositoryUrl": "https://github.com/username/myrepo",
             *           "userName": "my-user"
             *         },
             *         "privateModuleGitAccessTokens": {
             *           "tokenName": "accessToken"
             *         },
             *         "requiredOutputKeys": [
             *           "output1"
             *         ],
             *         "requiredOutputs": [
             *           {
             *             "exported": true,
             *             "key": "output1"
             *           }
             *         ],
             *         "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
             *         "terraformPath": "/project1/tf"
             *       },
             *       "Voluptatem sint nihil.": {
             *         "gitConfiguration": {
             *           "accessToken": "my-token",
             *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *           "referenceName": "tags/v1.0.0",
             *           "repositoryUrl": "https://github.com/username/myrepo",
             *           "userName": "my-user"
             *         },
             *         "privateModuleGitAccessTokens": {
             *           "tokenName": "accessToken"
             *         },
             *         "requiredOutputKeys": [
             *           "output1"
             *         ],
             *         "requiredOutputs": [
             *           {
             *             "exported": true,
             *             "key": "output1"
             *           }
             *         ],
             *         "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
             *         "terraformPath": "/project1/tf"
             *       }
             *     }
             */
            onPremTerraformConfigurations?: {
                [key: string]: components["schemas"]["TerraformConfiguration"];
            };
            operatorCRDConfiguration?: components["schemas"]["OperatorCRDConfiguration"];
            /**
             * @description The product tier ID
             * @example pt-12345678
             */
            productTierId: string;
            /**
             * @description A proxy type of resource
             * @default PortsBasedProxy
             * @example PortsBasedProxy
             */
            proxyType: string;
            /** @example [
             *       {
             *         "parameterMap": {
             *           "userDatabase": "clusterOrg",
             *           "writerId": "clusterWriterId"
             *         },
             *         "resourceId": "r-12345678"
             *       },
             *       {
             *         "parameterMap": {
             *           "readerId": "clusterReaderId",
             *           "userDatabase": "clusterOrg"
             *         },
             *         "resourceId": "r-abcdef12"
             *       }
             *     ] */
            resourceDependencies?: components["schemas"]["ResourceDependency"][];
            /**
             * @description The type of the resource
             * @example Generic
             */
            resourceType?: string;
            /**
             * @description The Terraform configurations for various cloud providers
             * @example {
             *       "Suscipit sapiente et maiores ut.": {
             *         "gitConfiguration": {
             *           "accessToken": "my-token",
             *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *           "referenceName": "tags/v1.0.0",
             *           "repositoryUrl": "https://github.com/username/myrepo",
             *           "userName": "my-user"
             *         },
             *         "privateModuleGitAccessTokens": {
             *           "tokenName": "accessToken"
             *         },
             *         "requiredOutputKeys": [
             *           "output1"
             *         ],
             *         "requiredOutputs": [
             *           {
             *             "exported": true,
             *             "key": "output1"
             *           }
             *         ],
             *         "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
             *         "terraformPath": "/project1/tf"
             *       },
             *       "Vitae est delectus sit aperiam.": {
             *         "gitConfiguration": {
             *           "accessToken": "my-token",
             *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *           "referenceName": "tags/v1.0.0",
             *           "repositoryUrl": "https://github.com/username/myrepo",
             *           "userName": "my-user"
             *         },
             *         "privateModuleGitAccessTokens": {
             *           "tokenName": "accessToken"
             *         },
             *         "requiredOutputKeys": [
             *           "output1"
             *         ],
             *         "requiredOutputs": [
             *           {
             *             "exported": true,
             *             "key": "output1"
             *           }
             *         ],
             *         "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
             *         "terraformPath": "/project1/tf"
             *       }
             *     }
             */
            terraformConfigurations?: {
                [key: string]: components["schemas"]["TerraformConfiguration"];
            };
        };
        /** @example {
         *       "customDomain": "mycustomdomain.com",
         *       "description": "My custom domain description",
         *       "environmentType": "DEV",
         *       "name": "MyCustomDomain",
         *       "token": "df"
         *     } */
        CreateSaaSPortalCustomDomainRequest: {
            /**
             * @description The custom domain
             * @example mycustomdomain.com
             */
            customDomain: string;
            /**
             * @description The custom domain description
             * @example My custom domain description
             */
            description: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType: string;
            /**
             * @description The custom domain name
             * @example MyCustomDomain
             */
            name: string;
            /**
             * @description JWT token used to perform authorization
             * @example c
             */
            token: string;
        };
        /** @example {
         *       "customDomain": "mycustomdomain.com",
         *       "description": "My custom domain description",
         *       "environmentType": "DEV",
         *       "name": "MyCustomDomain"
         *     } */
        CreateSaaSPortalCustomDomainRequest2: {
            /**
             * @description The custom domain
             * @example mycustomdomain.com
             */
            customDomain: string;
            /**
             * @description The custom domain description
             * @example My custom domain description
             */
            description: string;
            /**
             * @description The environment type for the custom domain
             * @example DEV
             */
            environmentType: string;
            /**
             * @description The custom domain name
             * @example MyCustomDomain
             */
            name: string;
        };
        /** @example {
         *       "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "8k"
         *     } */
        CreateServiceAPIRequest: {
            /**
             * @description A brief description of the service API bundle
             * @example A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability
             */
            description: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example d3
             */
            token: string;
        };
        /** @example {
         *       "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
         *       "serviceEnvironmentId": "se-12345678"
         *     } */
        CreateServiceAPIRequest2: {
            /**
             * @description A brief description of the service API bundle
             * @example A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability
             */
            description: string;
            /**
             * @description The service environment ID
             * @example se-12345678
             */
            serviceEnvironmentId: string;
        };
        /** @example {
         *       "autoApproveSubscription": false,
         *       "deploymentConfigId": "dc-12345678",
         *       "description": "The production environment for the MySQL multi-writer service",
         *       "name": "Production",
         *       "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
         *       "serviceId": "s-12345678",
         *       "sourceEnvironmentId": "se-12345678",
         *       "token": "u7",
         *       "type": "DEV",
         *       "visibility": "PUBLIC"
         *     } */
        CreateServiceEnvironmentRequest: {
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description ID of a Deployment Config
             * @example Perspiciatis quae et deserunt est.
             */
            deploymentConfigId: string;
            /**
             * @description A brief description of the service environment
             * @example The production environment for the MySQL multi-writer service
             */
            description: string;
            /**
             * @description Name of the Service Environment
             * @example Production
             */
            name: string;
            /**
             * @description PEM-encoded Public key part of the key used to sign the JWT tokens for the service control plane APIs
             * @example -----BEGIN PUBLIC KEY-----
             *     MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
             *     7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
             *     -----END PUBLIC KEY-----
             *
             */
            serviceAuthPublicKey?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            sourceEnvironmentId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example f6
             */
            token: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            type?: string;
            /**
             * @description This parameter is used to configure the visibility of the service control-plane APIs
             * @example PUBLIC
             */
            visibility?: string;
        };
        /** @example {
         *       "autoApproveSubscription": false,
         *       "deploymentConfigId": "dc-12345678",
         *       "description": "The production environment for the MySQL multi-writer service",
         *       "name": "Production",
         *       "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
         *       "sourceEnvironmentId": "se-12345678",
         *       "type": "DEV",
         *       "visibility": "Et debitis."
         *     } */
        CreateServiceEnvironmentRequest2: {
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description The deployment configuration ID
             * @example dc-12345678
             */
            deploymentConfigId: string;
            /**
             * @description A brief description of the service environment
             * @example The production environment for the MySQL multi-writer service
             */
            description: string;
            /**
             * @description Name of the Service Environment
             * @example Production
             */
            name: string;
            /**
             * @description PEM-encoded Public key part of the key used to sign the JWT tokens for the service control plane APIs
             * @example -----BEGIN PUBLIC KEY-----
             *     MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
             *     7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
             *     -----END PUBLIC KEY-----
             *
             */
            serviceAuthPublicKey?: string;
            /**
             * @description The ID of the service environment to use for promoting changes to this environment
             * @example se-12345678
             */
            sourceEnvironmentId?: string;
            /** @example DEV */
            type?: string;
            /**
             * @description This parameter is used to configure the visibility of the service control-plane APIs
             * @example Qui molestiae velit dolores sed deserunt qui.
             */
            visibility?: string;
        };
        /** @example {
         *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *       "fileContent": "Et qui et aperiam dolorum.",
         *       "fileFormat": "text/plain",
         *       "fileName": "mysql.yaml",
         *       "name": "MySQL multi-writer service",
         *       "serviceLogoURL": "http://raynorstroman.com/cory",
         *       "token": "x"
         *     } */
        CreateServiceFromComposeSpecRequest: {
            /**
             * @description A brief description of the service
             * @example A MySQL SaaS specializing in multi-writer clusters for high availability
             */
            description: string;
            /**
             * @description Base64 encoded Compose Spec YAML in docker compose format
             * @example Quasi omnis cumque eaque sed numquam sint.
             */
            fileContent: string;
            /**
             * @description MIME type of file format
             * @example text/plain
             */
            fileFormat: string;
            /**
             * @description Name of compose spec YAML file that is uploaded
             * @example mysql.yaml
             */
            fileName: string;
            /**
             * @description Name of the Service
             * @example MySQL multi-writer service
             */
            name: string;
            /**
             * Format: uri
             * @description The logo for the service
             * @example http://jenkins.com/christian.dicki
             */
            serviceLogoURL?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 0zu
             */
            token: string;
        };
        /** @example {
         *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *       "fileContent": "Commodi dolores quisquam nemo.",
         *       "fileFormat": "text/plain",
         *       "fileName": "mysql.yaml",
         *       "name": "MySQL multi-writer service",
         *       "serviceLogoURL": "http://stroman.com/alvena_o'keefe"
         *     } */
        CreateServiceFromComposeSpecRequest2: {
            /**
             * @description A brief description of the service
             * @example A MySQL SaaS specializing in multi-writer clusters for high availability
             */
            description: string;
            /**
             * @description Base64 encoded Compose Spec YAML in docker compose format
             * @example Voluptas enim voluptas vel accusamus non.
             */
            fileContent: string;
            /**
             * @description MIME type of file format
             * @example text/plain
             */
            fileFormat: string;
            /**
             * @description Name of compose spec YAML file that is uploaded
             * @example mysql.yaml
             */
            fileName: string;
            /**
             * @description Name of the Service
             * @example MySQL multi-writer service
             */
            name: string;
            /**
             * Format: uri
             * @description The logo for the service
             * @example http://terry.net/icie_beier
             */
            serviceLogoURL?: string;
        };
        /** @example {
         *       "accountConfigIds": [
         *         "ac-12345678",
         *         "ac-23456789"
         *       ],
         *       "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
         *       "features": [
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         },
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         }
         *       ],
         *       "modelType": "CUSTOMER_HOSTED",
         *       "name": "MySQL multi-writer service hosted model",
         *       "serviceApiId": "sa-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "o2z"
         *     } */
        CreateServiceModelRequest: {
            /**
             * @description The infrastructure account configuration ID list
             * @example [
             *       "ac-12345678",
             *       "ac-23456789"
             *     ]
             */
            accountConfigIds?: string[];
            /**
             * @description A brief description of the service model
             * @example A MySQL Hosted SaaS specializing in multi-writer clusters for high availability
             */
            description: string;
            /**
             * @description Enabled service model features
             * @example [
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       },
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       }
             *     ]
             */
            features?: components["schemas"]["ServiceModelFeatureDetail"][];
            /**
             * @description The model type encapsulating this service
             * @example OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
             */
            modelType: string;
            /**
             * @description Name of the Service Model
             * @example MySQL multi-writer service hosted model
             */
            name: string;
            /**
             * @description ID of a Service API
             * @example Mollitia tenetur et ipsam excepturi.
             */
            serviceApiId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example r
             */
            token: string;
        };
        /** @example {
         *       "accountConfigIds": [
         *         "ac-12345678",
         *         "ac-23456789"
         *       ],
         *       "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
         *       "features": [
         *         {
         *           "configuration": {
         *             "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
         *             "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
         *           },
         *           "feature": "Consequatur placeat in voluptate."
         *         },
         *         {
         *           "configuration": {
         *             "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
         *             "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
         *           },
         *           "feature": "Consequatur placeat in voluptate."
         *         },
         *         {
         *           "configuration": {
         *             "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
         *             "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
         *           },
         *           "feature": "Consequatur placeat in voluptate."
         *         },
         *         {
         *           "configuration": {
         *             "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
         *             "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
         *           },
         *           "feature": "Consequatur placeat in voluptate."
         *         }
         *       ],
         *       "modelType": "CUSTOMER_HOSTED",
         *       "name": "MySQL multi-writer service hosted model",
         *       "serviceApiId": "sa-12345678"
         *     } */
        CreateServiceModelRequest2: {
            /**
             * @description The infrastructure account configuration ID list
             * @example [
             *       "ac-12345678",
             *       "ac-23456789"
             *     ]
             */
            accountConfigIds?: string[];
            /**
             * @description A brief description of the service model
             * @example A MySQL Hosted SaaS specializing in multi-writer clusters for high availability
             */
            description: string;
            /**
             * @description Enabled service model features
             * @example [
             *       {
             *         "configuration": {
             *           "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
             *           "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
             *         },
             *         "feature": "Consequatur placeat in voluptate."
             *       },
             *       {
             *         "configuration": {
             *           "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
             *           "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
             *         },
             *         "feature": "Consequatur placeat in voluptate."
             *       },
             *       {
             *         "configuration": {
             *           "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
             *           "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
             *         },
             *         "feature": "Consequatur placeat in voluptate."
             *       },
             *       {
             *         "configuration": {
             *           "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
             *           "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
             *         },
             *         "feature": "Consequatur placeat in voluptate."
             *       }
             *     ]
             */
            features?: components["schemas"]["ServiceModelFeatureDetail"][];
            /**
             * @description The model type encapsulating this service
             * @example CUSTOMER_HOSTED
             */
            modelType: string;
            /**
             * @description Name of the Service Model
             * @example MySQL multi-writer service hosted model
             */
            name: string;
            /**
             * @description The service API this model is for
             * @example sa-12345678
             */
            serviceApiId: string;
        };
        /** @example {
         *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *       "name": "MySQL multi-writer service",
         *       "serviceLogoURL": "http://fayaufderhar.biz/addison.goodwin",
         *       "token": "f"
         *     } */
        CreateServiceRequest: {
            /**
             * @description A brief description of the service
             * @example A MySQL SaaS specializing in multi-writer clusters for high availability
             */
            description: string;
            /**
             * @description Name of the Service
             * @example MySQL multi-writer service
             */
            name: string;
            /**
             * Format: uri
             * @description The logo for the service
             * @example http://kshlerin.net/pauline
             */
            serviceLogoURL?: string;
            /**
             * @description JWT token used to perform authorization
             * @example f6z
             */
            token: string;
        };
        /** @example {
         *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *       "name": "MySQL multi-writer service",
         *       "serviceLogoURL": "http://sipes.biz/luther"
         *     } */
        CreateServiceRequest2: {
            /**
             * @description A brief description of the service
             * @example A MySQL SaaS specializing in multi-writer clusters for high availability
             */
            description: string;
            /**
             * @description Name of the Service
             * @example MySQL multi-writer service
             */
            name: string;
            /**
             * Format: uri
             * @description The logo for the service
             * @example http://kohler.net/fritz
             */
            serviceLogoURL?: string;
        };
        /** @example {
         *       "orchestrationCreateDSL": "Ducimus doloremque cumque sit dolorem.",
         *       "token": "wa"
         *     } */
        CreateServicesOrchestrationRequest: {
            /**
             * @description base64 encoded content of service orchestration create DSL
             * @example Voluptas quibusdam maiores et inventore laudantium fugit.
             */
            orchestrationCreateDSL: string;
            /**
             * @description JWT token used to perform authorization
             * @example js
             */
            token: string;
        };
        /** @example {
         *       "orchestrationCreateDSL": "Iste ullam nostrum ipsum officia excepturi quam."
         *     } */
        CreateServicesOrchestrationRequest2: {
            /**
             * @description base64 encoded content of service orchestration create DSL
             * @example Cumque maiores nesciunt.
             */
            orchestrationCreateDSL: string;
        };
        /** @example {
         *       "id": "Laborum omnis nihil incidunt maiores facere."
         *     } */
        CreateServicesOrchestrationResponseBody: {
            /**
             * @description Services Orchestration Id
             * @example Architecto ipsam nisi quia.
             */
            id?: string;
        };
        /** @example {
         *       "description": "my-storage-config-description",
         *       "name": "my-storage-config",
         *       "serviceId": "s-12345678",
         *       "token": "tse"
         *     } */
        CreateStorageConfigRequest: {
            /**
             * @description Description of the storage config
             * @example my-storage-config-description
             */
            description: string;
            /**
             * @description Name of the storage config
             * @example my-storage-config
             */
            name: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 4s0
             */
            token: string;
        };
        /** @example {
         *       "description": "my-storage-config-description",
         *       "name": "my-storage-config"
         *     } */
        CreateStorageConfigRequest2: {
            /**
             * @description Description of the storage config
             * @example my-storage-config-description
             */
            description: string;
            /**
             * @description Name of the storage config
             * @example my-storage-config
             */
            name: string;
        };
        /** @example {
         *       "clusterStorageType": "S3|$var.storageType|AWS::EFS",
         *       "description": "A storage volume set to store the MySQL data directory",
         *       "disableBackup": false,
         *       "instanceStorageIops": "$var.storageIops",
         *       "instanceStorageSizeGi": "$var.storage_size",
         *       "instanceStorageThroughputMiBps": "128",
         *       "instanceStorageType": "$var.storageType",
         *       "name": "MySQL Data Volume",
         *       "serviceId": "s-12345678",
         *       "storageResourceID": "r-12345678",
         *       "token": "4"
         *     } */
        CreateStorageVolumeConfigRequest: {
            /**
             * @description The type of the fixed storage for the cluster
             * @example S3|$var.storageType|AWS::EFS
             */
            clusterStorageType?: string;
            /**
             * @description A brief description of the context for the storage volume pool
             * @example A storage volume set to store the MySQL data directory
             */
            description: string;
            /**
             * @description Disable backup for the storage volume
             * @example false
             */
            disableBackup?: boolean;
            /**
             * @description The IOPS provisioned for the configured instance storage type
             * @example $var.storageIops
             */
            instanceStorageIops?: string;
            /**
             * @description The storage size (in Gi) provisioned for the configured instance storage type
             * @example $var.storage_size
             */
            instanceStorageSizeGi?: string;
            /**
             * @description The throughput (in MiBps) provisioned for the configured instance storage type
             * @example 128
             */
            instanceStorageThroughputMiBps?: string;
            /**
             * @description The type of the storage for a compute instance
             * @example $var.storageType
             */
            instanceStorageType?: string;
            /**
             * @description Name of the storage volume pool
             * @example MySQL Data Volume
             */
            name: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description The storage resource ID
             * @example r-12345678
             */
            storageResourceID?: string;
            /**
             * @description JWT token used to perform authorization
             * @example pj
             */
            token: string;
        };
        /** @example {
         *       "clusterStorageType": "S3|$var.storageType|AWS::EFS",
         *       "description": "A storage volume set to store the MySQL data directory",
         *       "disableBackup": false,
         *       "instanceStorageIops": "$var.storageIops",
         *       "instanceStorageSizeGi": "$var.storage_size",
         *       "instanceStorageThroughputMiBps": "128",
         *       "instanceStorageType": "$var.storageType",
         *       "name": "MySQL Data Volume",
         *       "storageResourceID": "r-12345678"
         *     } */
        CreateStorageVolumeConfigRequest2: {
            /**
             * @description The type of the fixed storage for the cluster
             * @example S3|$var.storageType|AWS::EFS
             */
            clusterStorageType?: string;
            /**
             * @description A brief description of the context for the storage volume pool
             * @example A storage volume set to store the MySQL data directory
             */
            description: string;
            /**
             * @description Disable backup for the storage volume
             * @example false
             */
            disableBackup?: boolean;
            /**
             * @description The IOPS provisioned for the configured instance storage type
             * @example $var.storageIops
             */
            instanceStorageIops?: string;
            /**
             * @description The storage size (in Gi) provisioned for the configured instance storage type
             * @example $var.storage_size
             */
            instanceStorageSizeGi?: string;
            /**
             * @description The throughput (in MiBps) provisioned for the configured instance storage type
             * @example 128
             */
            instanceStorageThroughputMiBps?: string;
            /**
             * @description The type of the storage for a compute instance
             * @example $var.storageType
             */
            instanceStorageType?: string;
            /**
             * @description Name of the storage volume pool
             * @example MySQL Data Volume
             */
            name: string;
            /**
             * @description The storage resource ID
             * @example r-12345678
             */
            storageResourceID?: string;
        };
        /** @example {
         *       "productTierId": "pt-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "tk"
         *     } */
        CreateSubscriptionRequest: {
            /**
             * @description ID of a Product Tier
             * @example Harum sit ut facilis.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example v
             */
            token: string;
        };
        /** @example {
         *       "productTierId": "pt-12345678",
         *       "serviceId": "s-12345678"
         *     } */
        CreateSubscriptionRequest2: {
            /**
             * @description The product tier ID
             * @example pt-12345678
             */
            productTierId: string;
            /**
             * @description The service ID
             * @example s-12345678
             */
            serviceId: string;
        };
        /** @example {
         *       "productTierId": "pt-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "9o"
         *     } */
        CreateSubscriptionRequestRequest: {
            /**
             * @description ID of a Product Tier
             * @example Rerum impedit aut quasi.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 6k
             */
            token: string;
        };
        /** @example {
         *       "productTierId": "pt-12345678",
         *       "serviceId": "s-12345678"
         *     } */
        CreateSubscriptionRequestRequest2: {
            /**
             * @description The product tier ID
             * @example pt-12345678
             */
            productTierId: string;
            /**
             * @description The service ID
             * @example s-12345678
             */
            serviceId: string;
        };
        /** @example {
         *       "description": "At nisi ad sed maxime nulla perspiciatis.",
         *       "name": "Major version set",
         *       "parentVersion": "2.0",
         *       "productTierId": "Beatae beatae.",
         *       "serviceId": "s-12345678",
         *       "token": "2",
         *       "type": "Major|Incremental|UserDefined"
         *     } */
        CreateTierVersionSetRequest: {
            /**
             * @description A brief description of the product-tier version set.
             * @example Recusandae voluptates quae quis et.
             */
            description?: string;
            /**
             * @description The name of the product-tier version set.
             * @example Major version set
             */
            name?: string;
            /**
             * @description The parent version of this version set.
             * @example 2.0
             */
            parentVersion?: string;
            /**
             * @description ID of a Product Tier
             * @example Autem et soluta velit.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example f
             */
            token: string;
            /**
             * @description The version-set type of the product-tier.
             * @example Major|Incremental|UserDefined
             */
            type: string;
        };
        /** @example {
         *       "description": "Iste et aliquam est.",
         *       "name": "Major version set",
         *       "parentVersion": "2.0",
         *       "type": "Major|Incremental|UserDefined"
         *     } */
        CreateTierVersionSetRequest2: {
            /**
             * @description A brief description of the product-tier version set.
             * @example Earum eaque voluptatum sequi eum.
             */
            description?: string;
            /**
             * @description The name of the product-tier version set.
             * @example Major version set
             */
            name?: string;
            /**
             * @description The parent version of this version set.
             * @example 2.0
             */
            parentVersion?: string;
            /**
             * @description The version-set type of the product-tier.
             * @example Major|Incremental|UserDefined
             */
            type: string;
        };
        /** @example {
         *       "version": "3.0"
         *     } */
        CreateTierVersionSetResult: {
            /**
             * @description The version number for the specific version set.
             * @example 3.0
             */
            version: string;
        };
        /** @example {
         *       "description": "An upgrade path migrating clusters from one LTS version to another",
         *       "name": "LTS upgrade path",
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "sourceVersion": "567.0",
         *       "targetVersion": "589.0",
         *       "token": "k3h"
         *     } */
        CreateUpgradePathRequest: {
            /**
             * @description A brief description of the upgrade path
             * @example An upgrade path migrating clusters from one LTS version to another
             */
            description: string;
            /**
             * @description Name of the upgrade path
             * @example LTS upgrade path
             */
            name: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description Version of the Entity to operate on
             * @example 1.0
             */
            sourceVersion: string;
            /**
             * @description Version of the Entity to operate on
             * @example 1.0
             */
            targetVersion: string;
            /**
             * @description JWT token used to perform authorization
             * @example 3p
             */
            token: string;
        };
        /** @example {
         *       "aRecordTarget": "1.1.1.1",
         *       "cnameTarget": "cname-target.com",
         *       "dnsHost": "https://my-custom-endpoint.com",
         *       "dnsName": "https://my-custom-endpoint.com",
         *       "enabled": true,
         *       "name": "DNS to access the dashboard",
         *       "status": "READY"
         *     } */
        CustomDNSEndpoint: {
            /** @example 1.1.1.1 */
            aRecordTarget?: string;
            /** @example cname-target.com */
            cnameTarget?: string;
            /** @example https://my-custom-endpoint.com */
            dnsHost?: string;
            /**
             * @description DEPRECATED: Use dnsHost instead
             * @example https://my-custom-endpoint.com
             */
            dnsName?: string;
            /** @example true */
            enabled: boolean;
            /** @example DNS to access the dashboard */
            name?: string;
            /**
             * @description The status of an operation
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
             */
            status?: string;
        };
        /** @example {
         *       "clusterEndpoint": "example.com",
         *       "customDomain": "mycustomdomain.com",
         *       "description": "My custom domain description",
         *       "environmentType": "DEV",
         *       "name": "MyCustomDomain",
         *       "status": "READY"
         *     } */
        CustomDomain: {
            /**
             * @description The cluster endpoint for the saas portal instance
             * @example example.com
             */
            clusterEndpoint: string;
            /**
             * @description The custom domain
             * @example mycustomdomain.com
             */
            customDomain: string;
            /**
             * @description The custom domain description
             * @example My custom domain description
             */
            description: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType: string;
            /**
             * @description The custom domain name
             * @example MyCustomDomain
             */
            name: string;
            /**
             * @description The status of an operation
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
             */
            status: string;
        };
        /** @example {
         *       "token": "kme"
         *     } */
        CustomDomainIdentityIDRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example zy3
             */
            token: string;
        };
        /** @example {
         *       "id": "org-12345678"
         *     } */
        CustomDomainIdentityIDResult: {
            /**
             * @description ID of an Org
             * @example Dignissimos non consectetur odit repellat rerum.
             */
            id: string;
        };
        /**
         * @description Commands and arguments to run in the container
         * @example {
         *       "args": [
         *         "-d",
         *         "mysql"
         *       ],
         *       "commands": [
         *         "echo",
         *         "Hello, World!"
         *       ]
         *     }
         */
        CustomImageCommandsAndArgs: {
            /**
             * @description Arguments to pass to the container
             * @example [
             *       "-d",
             *       "mysql"
             *     ]
             */
            args?: string[];
            /**
             * @description Commands to run in the container
             * @example [
             *       "echo",
             *       "Hello, World!"
             *     ]
             */
            commands?: string[];
        };
        /** @example {
         *       "cidr": "10.0.0.0/16",
         *       "cloudProviderName": "aws",
         *       "cloudProviderRegion": "us-east-1",
         *       "id": "n-12345678",
         *       "name": "Prod us-east-1",
         *       "networkDefinitionType": "Custom",
         *       "networkFeaturesConfiguration": {
         *         "isPrivateLinkEnabled": true
         *       },
         *       "networkInstances": [
         *         {
         *           "awsAccountID": "123456789012",
         *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *           "cloudProviderNativeNetworkId": "vpc-12345678",
         *           "gcpProjectID": "my-project",
         *           "gcpProjectNumber": "123456789012",
         *           "hostClusterID": "hc-12345678"
         *         },
         *         {
         *           "awsAccountID": "123456789012",
         *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *           "cloudProviderNativeNetworkId": "vpc-12345678",
         *           "gcpProjectID": "my-project",
         *           "gcpProjectNumber": "123456789012",
         *           "hostClusterID": "hc-12345678"
         *         }
         *       ],
         *       "owningUserId": "user-12345678",
         *       "owningUserName": "John Doe"
         *     } */
        CustomNetwork: {
            /**
             * @description CIDR block for the network
             * @default 10.0.0.0/16
             * @example 10.0.0.0/16
             */
            cidr: string;
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /**
             * @description The region of the cloud provider that the instance is running in.
             * @example us-east-1
             */
            cloudProviderRegion: string;
            /**
             * @description ID of a custom network
             * @example Nemo aut et perferendis.
             */
            id: string;
            /**
             * @description User friendly network name to help distinguish networks with same CIDRs
             * @example Prod us-east-1
             */
            name?: string;
            /**
             * @description Type of the network definition
             * @example Default|Custom|Imported
             */
            networkDefinitionType?: string;
            networkFeaturesConfiguration?: components["schemas"]["NetworkFeaturesConfiguration"];
            /**
             * @description List of network instances created within this custom network
             * @example [
             *       {
             *         "awsAccountID": "123456789012",
             *         "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *         "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *         "cloudProviderNativeNetworkId": "vpc-12345678",
             *         "gcpProjectID": "my-project",
             *         "gcpProjectNumber": "123456789012",
             *         "hostClusterID": "hc-12345678"
             *       },
             *       {
             *         "awsAccountID": "123456789012",
             *         "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *         "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *         "cloudProviderNativeNetworkId": "vpc-12345678",
             *         "gcpProjectID": "my-project",
             *         "gcpProjectNumber": "123456789012",
             *         "hostClusterID": "hc-12345678"
             *       },
             *       {
             *         "awsAccountID": "123456789012",
             *         "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *         "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *         "cloudProviderNativeNetworkId": "vpc-12345678",
             *         "gcpProjectID": "my-project",
             *         "gcpProjectNumber": "123456789012",
             *         "hostClusterID": "hc-12345678"
             *       }
             *     ]
             */
            networkInstances?: components["schemas"]["CustomNetworkInstance"][];
            /**
             * @description ID of a User
             * @example Numquam nulla cumque qui quaerat quia itaque.
             */
            owningUserId?: string;
            /**
             * @description The name of the user that created and owns the custom network
             * @example John Doe
             */
            owningUserName?: string;
        };
        /** @example {
         *       "awsAccountID": "123456789012",
         *       "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *       "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *       "cloudProviderNativeNetworkId": "vpc-12345678",
         *       "gcpProjectID": "my-project",
         *       "gcpProjectNumber": "123456789012",
         *       "hostClusterID": "hc-12345678"
         *     } */
        CustomNetworkInstance: {
            /**
             * @description The AWS account ID
             * @example 123456789012
             */
            awsAccountID?: string;
            /**
             * @description The Azure subscription ID
             * @example 12345678-1234-1234-1234-123456789012
             */
            azureSubscriptionID?: string;
            /**
             * @description The Azure tenant ID
             * @example 12345678-1234-1234-1234-123456789012
             */
            azureTenantID?: string;
            /**
             * @description The ID of the network within cloud provider account
             * @example vpc-12345678
             */
            cloudProviderNativeNetworkId?: string;
            /**
             * @description The GCP project ID
             * @example my-project
             */
            gcpProjectID?: string;
            /**
             * @description The GCP project number
             * @example 123456789012
             */
            gcpProjectNumber?: string;
            /**
             * @description ID of a Host Cluster
             * @example Error ut et quas.
             */
            hostClusterID?: string;
        };
        /**
         * @description Details of custom network used for instance
         * @example {
         *       "cidr": "10.177.0.0/16",
         *       "id": "n-12345678",
         *       "name": "Prod us-east-1"
         *     }
         */
        CustomNetworkResourceDetail: {
            /**
             * @description CIDR block of the network
             * @example 10.177.0.0/16
             */
            cidr?: string;
            /**
             * @description ID of a custom network
             * @example Labore eum temporibus labore asperiores pariatur pariatur.
             */
            id?: string;
            /**
             * @description User friendly network name
             * @example Prod us-east-1
             */
            name?: string;
        };
        /**
         * @description Custom tag
         * @example {
         *       "key": "customKey",
         *       "value": "customValue"
         *     }
         */
        CustomTag: {
            /**
             * @description Key of the custom tag
             * @example customKey
             */
            key: string;
            /**
             * @description Value of the custom tag
             * @example customValue
             */
            value: string;
        };
        /** @example {
         *       "ULimitsName": "nofile",
         *       "ULimitsType": "Soft",
         *       "ULimitsValue": 1000
         *     } */
        CustomULimits: {
            /**
             * @description The name of the ulimit
             * @example core|nofile|rss|stack|nproc|msgqueue
             */
            ULimitsName: string;
            /** @example Soft|Hard */
            ULimitsType: string;
            /**
             * Format: int64
             * @description The value of the ulimit
             * @example 1000
             */
            ULimitsValue: number;
        };
        /** @example {
         *       "balanceDueLink": "https://billing.provider.com/balance-due",
         *       "logoURL": "https://example.com/logo.png",
         *       "name": "Stripe",
         *       "paymentConfigurable": true,
         *       "paymentConfigured": true,
         *       "paymentInfoPortalURL": "https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx",
         *       "type": "STRIPE"
         *     } */
        CustomerBillingProvider: {
            /**
             * @description The URL to the balance due page. Only present when the payment channel is BRING_YOUR_OWN
             * @example https://billing.provider.com/balance-due
             */
            balanceDueLink?: string;
            /**
             * @description The URL of the logo for the payment channel. Only present when the payment channel is BRING_YOUR_OWN
             * @example https://example.com/logo.png
             */
            logoURL?: string;
            /**
             * @description A custom name for the payment channel
             * @example Stripe
             */
            name?: string;
            /**
             * @description Whether the payment channel payment information can be configured.
             * @example true
             */
            paymentConfigurable?: boolean;
            /**
             * @description Whether the customer has configured their payment information.
             * @example true
             */
            paymentConfigured?: boolean;
            /**
             * @description The URL from the billing provide to redirect users to so they can enter their payment information.  Only present when first adding payment information
             * @example https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
             */
            paymentInfoPortalURL?: string;
            /**
             * @description The billing provider type
             * @example STRIPE|BRING_YOUR_OWN
             */
            type: string;
        };
        /** @example {
         *       "token": "l"
         *     } */
        CustomerDeleteUserRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example ht
             */
            token: string;
        };
        /** @example {
         *       "email": "abc@example.com",
         *       "token": "ut"
         *     } */
        CustomerInviteUserRequest: {
            /**
             * Format: email
             * @example abc@example.com
             */
            email: string;
            /**
             * @description JWT token used to perform authorization
             * @example n1f
             */
            token: string;
        };
        /** @example {
         *       "email": "abc@example.com"
         *     } */
        CustomerInviteUserRequest2: {
            /**
             * Format: email
             * @example abc@example.com
             */
            email: string;
        };
        /** @example {
         *       "nextPageToken": "token",
         *       "pageSize": 10,
         *       "productTierId": "Beatae beatae.",
         *       "serviceId": "s-12345678",
         *       "token": "6j"
         *     } */
        CustomerListTierVersionSetsRequest: {
            /**
             * @description The next token to use for pagination
             * @example token
             */
            nextPageToken?: string;
            /**
             * Format: int64
             * @description The number of resources to return per page
             * @example 10
             */
            pageSize?: number;
            /**
             * @description ID of a Product Tier
             * @example Molestias nam quae nesciunt omnis.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example jnh
             */
            token: string;
        };
        /** @example {
         *       "nextPageToken": "next-token",
         *       "tierVersionSets": [
         *         {
         *           "autoApproveSubscription": false,
         *           "baseVersion": "3.0",
         *           "createdAt": "2020-01-01T00:00:00Z",
         *           "createdBy": "John Doe",
         *           "description": "Labore facilis officia placeat autem optio porro.",
         *           "enabledFeatures": [
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             }
         *           ],
         *           "features": {
         *             "LOGS": true,
         *             "METRICS": false
         *           },
         *           "instanceCount": 12,
         *           "latestUpgradePathId": "upgrade-12345678",
         *           "name": "Regular version set",
         *           "parentVersion": "2.0",
         *           "productTierId": "Beatae beatae.",
         *           "releasedAt": "2020-01-01T00:00:00Z",
         *           "releasedBy": "John Doe",
         *           "resources": [
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             }
         *           ],
         *           "serviceId": "s-12345678",
         *           "serviceModelId": "Deserunt ab est sequi rem ab in.",
         *           "status": "Preferred|Active|Deprecated|Pending",
         *           "type": "Major|Incremental|UserDefined",
         *           "updatedAt": "2020-01-01T00:00:00Z",
         *           "version": "3.0"
         *         },
         *         {
         *           "autoApproveSubscription": false,
         *           "baseVersion": "3.0",
         *           "createdAt": "2020-01-01T00:00:00Z",
         *           "createdBy": "John Doe",
         *           "description": "Labore facilis officia placeat autem optio porro.",
         *           "enabledFeatures": [
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             }
         *           ],
         *           "features": {
         *             "LOGS": true,
         *             "METRICS": false
         *           },
         *           "instanceCount": 12,
         *           "latestUpgradePathId": "upgrade-12345678",
         *           "name": "Regular version set",
         *           "parentVersion": "2.0",
         *           "productTierId": "Beatae beatae.",
         *           "releasedAt": "2020-01-01T00:00:00Z",
         *           "releasedBy": "John Doe",
         *           "resources": [
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             }
         *           ],
         *           "serviceId": "s-12345678",
         *           "serviceModelId": "Deserunt ab est sequi rem ab in.",
         *           "status": "Preferred|Active|Deprecated|Pending",
         *           "type": "Major|Incremental|UserDefined",
         *           "updatedAt": "2020-01-01T00:00:00Z",
         *           "version": "3.0"
         *         },
         *         {
         *           "autoApproveSubscription": false,
         *           "baseVersion": "3.0",
         *           "createdAt": "2020-01-01T00:00:00Z",
         *           "createdBy": "John Doe",
         *           "description": "Labore facilis officia placeat autem optio porro.",
         *           "enabledFeatures": [
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             }
         *           ],
         *           "features": {
         *             "LOGS": true,
         *             "METRICS": false
         *           },
         *           "instanceCount": 12,
         *           "latestUpgradePathId": "upgrade-12345678",
         *           "name": "Regular version set",
         *           "parentVersion": "2.0",
         *           "productTierId": "Beatae beatae.",
         *           "releasedAt": "2020-01-01T00:00:00Z",
         *           "releasedBy": "John Doe",
         *           "resources": [
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             }
         *           ],
         *           "serviceId": "s-12345678",
         *           "serviceModelId": "Deserunt ab est sequi rem ab in.",
         *           "status": "Preferred|Active|Deprecated|Pending",
         *           "type": "Major|Incremental|UserDefined",
         *           "updatedAt": "2020-01-01T00:00:00Z",
         *           "version": "3.0"
         *         },
         *         {
         *           "autoApproveSubscription": false,
         *           "baseVersion": "3.0",
         *           "createdAt": "2020-01-01T00:00:00Z",
         *           "createdBy": "John Doe",
         *           "description": "Labore facilis officia placeat autem optio porro.",
         *           "enabledFeatures": [
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             }
         *           ],
         *           "features": {
         *             "LOGS": true,
         *             "METRICS": false
         *           },
         *           "instanceCount": 12,
         *           "latestUpgradePathId": "upgrade-12345678",
         *           "name": "Regular version set",
         *           "parentVersion": "2.0",
         *           "productTierId": "Beatae beatae.",
         *           "releasedAt": "2020-01-01T00:00:00Z",
         *           "releasedBy": "John Doe",
         *           "resources": [
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             }
         *           ],
         *           "serviceId": "s-12345678",
         *           "serviceModelId": "Deserunt ab est sequi rem ab in.",
         *           "status": "Preferred|Active|Deprecated|Pending",
         *           "type": "Major|Incremental|UserDefined",
         *           "updatedAt": "2020-01-01T00:00:00Z",
         *           "version": "3.0"
         *         }
         *       ]
         *     } */
        CustomerListTierVersionSetsResult: {
            /**
             * @description Token to use for the next request
             * @example next-token
             */
            nextPageToken?: string;
            /**
             * @description List of product-tier version sets.
             * @example [
             *       {
             *         "autoApproveSubscription": false,
             *         "baseVersion": "3.0",
             *         "createdAt": "2020-01-01T00:00:00Z",
             *         "createdBy": "John Doe",
             *         "description": "Labore facilis officia placeat autem optio porro.",
             *         "enabledFeatures": [
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           }
             *         ],
             *         "features": {
             *           "LOGS": true,
             *           "METRICS": false
             *         },
             *         "instanceCount": 12,
             *         "latestUpgradePathId": "upgrade-12345678",
             *         "name": "Regular version set",
             *         "parentVersion": "2.0",
             *         "productTierId": "Beatae beatae.",
             *         "releasedAt": "2020-01-01T00:00:00Z",
             *         "releasedBy": "John Doe",
             *         "resources": [
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           }
             *         ],
             *         "serviceId": "s-12345678",
             *         "serviceModelId": "Deserunt ab est sequi rem ab in.",
             *         "status": "Preferred|Active|Deprecated|Pending",
             *         "type": "Major|Incremental|UserDefined",
             *         "updatedAt": "2020-01-01T00:00:00Z",
             *         "version": "3.0"
             *       },
             *       {
             *         "autoApproveSubscription": false,
             *         "baseVersion": "3.0",
             *         "createdAt": "2020-01-01T00:00:00Z",
             *         "createdBy": "John Doe",
             *         "description": "Labore facilis officia placeat autem optio porro.",
             *         "enabledFeatures": [
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           }
             *         ],
             *         "features": {
             *           "LOGS": true,
             *           "METRICS": false
             *         },
             *         "instanceCount": 12,
             *         "latestUpgradePathId": "upgrade-12345678",
             *         "name": "Regular version set",
             *         "parentVersion": "2.0",
             *         "productTierId": "Beatae beatae.",
             *         "releasedAt": "2020-01-01T00:00:00Z",
             *         "releasedBy": "John Doe",
             *         "resources": [
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           }
             *         ],
             *         "serviceId": "s-12345678",
             *         "serviceModelId": "Deserunt ab est sequi rem ab in.",
             *         "status": "Preferred|Active|Deprecated|Pending",
             *         "type": "Major|Incremental|UserDefined",
             *         "updatedAt": "2020-01-01T00:00:00Z",
             *         "version": "3.0"
             *       },
             *       {
             *         "autoApproveSubscription": false,
             *         "baseVersion": "3.0",
             *         "createdAt": "2020-01-01T00:00:00Z",
             *         "createdBy": "John Doe",
             *         "description": "Labore facilis officia placeat autem optio porro.",
             *         "enabledFeatures": [
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           }
             *         ],
             *         "features": {
             *           "LOGS": true,
             *           "METRICS": false
             *         },
             *         "instanceCount": 12,
             *         "latestUpgradePathId": "upgrade-12345678",
             *         "name": "Regular version set",
             *         "parentVersion": "2.0",
             *         "productTierId": "Beatae beatae.",
             *         "releasedAt": "2020-01-01T00:00:00Z",
             *         "releasedBy": "John Doe",
             *         "resources": [
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           }
             *         ],
             *         "serviceId": "s-12345678",
             *         "serviceModelId": "Deserunt ab est sequi rem ab in.",
             *         "status": "Preferred|Active|Deprecated|Pending",
             *         "type": "Major|Incremental|UserDefined",
             *         "updatedAt": "2020-01-01T00:00:00Z",
             *         "version": "3.0"
             *       },
             *       {
             *         "autoApproveSubscription": false,
             *         "baseVersion": "3.0",
             *         "createdAt": "2020-01-01T00:00:00Z",
             *         "createdBy": "John Doe",
             *         "description": "Labore facilis officia placeat autem optio porro.",
             *         "enabledFeatures": [
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           }
             *         ],
             *         "features": {
             *           "LOGS": true,
             *           "METRICS": false
             *         },
             *         "instanceCount": 12,
             *         "latestUpgradePathId": "upgrade-12345678",
             *         "name": "Regular version set",
             *         "parentVersion": "2.0",
             *         "productTierId": "Beatae beatae.",
             *         "releasedAt": "2020-01-01T00:00:00Z",
             *         "releasedBy": "John Doe",
             *         "resources": [
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           }
             *         ],
             *         "serviceId": "s-12345678",
             *         "serviceModelId": "Deserunt ab est sequi rem ab in.",
             *         "status": "Preferred|Active|Deprecated|Pending",
             *         "type": "Major|Incremental|UserDefined",
             *         "updatedAt": "2020-01-01T00:00:00Z",
             *         "version": "3.0"
             *       }
             *     ]
             */
            tierVersionSets: components["schemas"]["TierVersionSet"][];
        };
        /** @example {
         *       "authorizationCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
         *       "companyDescription": "We sell xyz database software",
         *       "companyUrl": "https://www.mywebsite.com",
         *       "environmentType": "DEV",
         *       "identityProviderName": "Google",
         *       "invitedEmail": "abc@gmail.com",
         *       "legalCompanyName": "mywebsite",
         *       "redirectUri": "https://www.example/redirect",
         *       "state": "state",
         *       "token": "np7"
         *     } */
        CustomerLoginWithIdentityProviderRequest: {
            /**
             * @description The authorization code from the Identity Provider
             * @example 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
             */
            authorizationCode: string;
            /** @example We sell xyz database software */
            companyDescription?: string;
            /** @example https://www.mywebsite.com */
            companyUrl?: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType?: string;
            /**
             * @description The name of the identity provider
             * @example Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
             */
            identityProviderName?: string;
            /**
             * Format: email
             * @description Email address that the user was invited with
             * @example abc@gmail.com
             */
            invitedEmail?: string;
            /** @example mywebsite */
            legalCompanyName?: string;
            /**
             * @description The redirect URI used to get the authorization code
             * @example https://www.example/redirect
             */
            redirectUri?: string;
            /**
             * @description The state parameter used to prevent CSRF attacks
             * @example state
             */
            state?: string;
            /**
             * @description JWT token used to perform authorization
             * @example j
             */
            token: string;
        };
        /** @example {
         *       "authorizationCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
         *       "companyDescription": "We sell xyz database software",
         *       "companyUrl": "https://www.mywebsite.com",
         *       "environmentType": "DEV",
         *       "identityProviderName": "Google",
         *       "invitedEmail": "abc@gmail.com",
         *       "legalCompanyName": "mywebsite",
         *       "redirectUri": "https://www.example/redirect",
         *       "state": "state"
         *     } */
        CustomerLoginWithIdentityProviderRequest2: {
            /**
             * @description The authorization code from the Identity Provider
             * @example 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
             */
            authorizationCode: string;
            /** @example We sell xyz database software */
            companyDescription?: string;
            /** @example https://www.mywebsite.com */
            companyUrl?: string;
            /**
             * @description The environment type of the portal that the customer is signing in to
             * @example DEV
             */
            environmentType?: string;
            /**
             * @description The name or type of the Identity Provider
             * @example Google
             */
            identityProviderName?: string;
            /**
             * Format: email
             * @description Email address that the user was invited with
             * @example abc@gmail.com
             */
            invitedEmail?: string;
            /** @example mywebsite */
            legalCompanyName?: string;
            /**
             * @description The redirect URI used to get the authorization code
             * @example https://www.example/redirect
             */
            redirectUri?: string;
            /**
             * @description The state parameter used to prevent CSRF attacks
             * @example state
             */
            state?: string;
        };
        /** @example {
         *       "jwtToken": ""
         *     } */
        CustomerLoginWithIdentityProviderResult: {
            /**
             * @description The jwt token
             * @example
             */
            jwtToken: string;
        };
        /** @example {
         *       "email": "abc@example.com",
         *       "token": "2bb"
         *     } */
        CustomerResetPasswordRequest: {
            /**
             * Format: email
             * @example abc@example.com
             */
            email: string;
            /**
             * @description JWT token used to perform authorization
             * @example lal
             */
            token: string;
        };
        /** @example {
         *       "email": "abc@example.com"
         *     } */
        CustomerResetPasswordRequest2: {
            /**
             * Format: email
             * @example abc@example.com
             */
            email: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "environmentType": "DEV",
         *       "hashedPassword": "deprecated",
         *       "password": "password",
         *       "token": "ex8"
         *     } */
        CustomerSigninRequest: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType?: string;
            /** @example deprecated */
            hashedPassword?: string;
            /** @example password */
            password?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 0
             */
            token: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "environmentType": "DEV",
         *       "hashedPassword": "deprecated",
         *       "password": "password"
         *     } */
        CustomerSigninRequest2: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /**
             * @description The environment type of the portal that the customer is signing in to
             * @example DEV
             */
            environmentType?: string;
            /** @example deprecated */
            hashedPassword?: string;
            /** @example password */
            password?: string;
        };
        /** @example {
         *       "jwtToken": ""
         *     } */
        CustomerSigninResult: {
            /**
             * @description The jwt token
             * @example
             */
            jwtToken: string;
        };
        /** @example {
         *       "companyDescription": "We sell xyz database software",
         *       "companyUrl": "https://www.mywebsite.com",
         *       "email": "abc@gmail.com",
         *       "legalCompanyName": "mywebsite",
         *       "name": "John Doe",
         *       "password": "password",
         *       "token": "7"
         *     } */
        CustomerSignupRequest: {
            /** @example We sell xyz database software */
            companyDescription?: string;
            /** @example https://www.mywebsite.com */
            companyUrl?: string;
            /**
             * Format: email
             * @description Email address of the end-user
             * @example abc@gmail.com
             */
            email: string;
            /**
             * @default
             * @example mywebsite
             */
            legalCompanyName: string;
            /**
             * @description Name of the end-user
             * @example John Doe
             */
            name: string;
            /** @example password */
            password: string;
            /**
             * @description JWT token used to perform authorization
             * @example p
             */
            token: string;
        };
        /** @example {
         *       "companyDescription": "We sell xyz database software",
         *       "companyUrl": "https://www.mywebsite.com",
         *       "email": "abc@gmail.com",
         *       "legalCompanyName": "mywebsite",
         *       "name": "John Doe",
         *       "password": "password"
         *     } */
        CustomerSignupRequest2: {
            /** @example We sell xyz database software */
            companyDescription?: string;
            /** @example https://www.mywebsite.com */
            companyUrl?: string;
            /**
             * Format: email
             * @description Email address of the end-user
             * @example abc@gmail.com
             */
            email: string;
            /**
             * @default
             * @example mywebsite
             */
            legalCompanyName: string;
            /**
             * @description Name of the end-user
             * @example John Doe
             */
            name: string;
            /** @example password */
            password: string;
        };
        /** @example {
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "8"
         *     } */
        DeRegisterResourceMetricsConfigRequest: {
            /**
             * @description ID of a resource
             * @example Quos eligendi et sunt maxime suscipit.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example s
             */
            token: string;
        };
        /** @example {
         *       "id": "ac-12345678",
         *       "token": "ls"
         *     } */
        DeleteAccountConfigRequest: {
            /**
             * @description ID of an Account Config
             * @example Earum similique expedita.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 7p
             */
            token: string;
        };
        /** @example {
         *       "id": "cc-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "t"
         *     } */
        DeleteComputeConfigRequest: {
            /**
             * @description ID of a Compute Config
             * @example Cupiditate odio quam dolorem.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example a
             */
            token: string;
        };
        /** @example {
         *       "id": "cd-12345678",
         *       "token": "1e"
         *     } */
        DeleteCustomDomainRequest: {
            /**
             * @description ID of an Custom Domain
             * @example Dolor minima necessitatibus iste.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example t
             */
            token: string;
        };
        /** @example {
         *       "id": "n-12345678",
         *       "token": "zkh"
         *     } */
        DeleteCustomNetworkRequest: {
            /**
             * @description ID of a custom network
             * @example Facere quia eaque sunt sed et praesentium.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example zei
             */
            token: string;
        };
        /** @example {
         *       "id": "dc-12345678",
         *       "token": "2"
         *     } */
        DeleteDeploymentConfigRequest: {
            /**
             * @description ID of a Deployment Config
             * @example Dolorem architecto aut numquam incidunt voluptatem ad.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example is
             */
            token: string;
        };
        /** @example {
         *       "chartName": "my-chart",
         *       "chartVersion": "1.0.0",
         *       "token": "g07"
         *     } */
        DeleteHelmPackageRequest: {
            /**
             * @description The chart name of the Helm package to delete
             * @example my-chart
             */
            chartName: string;
            /**
             * @description The chart version of the Helm package to delete
             * @example 1.0.0
             */
            chartVersion: string;
            /**
             * @description JWT token used to perform authorization
             * @example hh
             */
            token: string;
        };
        /** @example {
         *       "id": "idp-12345678",
         *       "token": "f"
         *     } */
        DeleteIdentityProviderRequest: {
            /**
             * @description ID of an Identity Provider
             * @example Rerum et expedita.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 05u
             */
            token: string;
        };
        /**
         * @description Delete an image configuration
         * @example {
         *       "id": "imgc-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "3p"
         *     }
         */
        DeleteImageConfigRequest: {
            /**
             * @description ID of an Image Config
             * @example Qui exercitationem.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example e0
             */
            token: string;
        };
        /**
         * @description Delete an HTTP API v2 Docker Image Registry
         * @example {
         *       "id": "ir-12345678",
         *       "token": "ln"
         *     }
         */
        DeleteImageRegistryRequest: {
            /**
             * @description ID of an Image Registry
             * @example Quidem nobis rem et pariatur.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example cpw
             */
            token: string;
        };
        /** @example {
         *       "id": "ic-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "pyh"
         *     } */
        DeleteInfraConfigRequest: {
            /**
             * @description ID of an Infra Config
             * @example Et non veritatis.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example ob
             */
            token: string;
        };
        /** @example {
         *       "id": "var-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "m8"
         *     } */
        DeleteInputParameterRequest: {
            /**
             * @description ID of an Input Parameter
             * @example Ut ut dolore et sed.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example ggb
             */
            token: string;
        };
        /** @example {
         *       "family": "COMPUTE_INFRA",
         *       "key": "MAX_VIRTUAL_CORES_PER_RESOURCE",
         *       "token": "jk"
         *     } */
        DeleteLimitRequest: {
            /**
             * @description The limit family
             * @example SERVICE
             */
            family: string;
            /**
             * @description Unique key to identify the limit
             * @example MAX_VIRTUAL_CORES_PER_RESOURCE
             */
            key: string;
            /**
             * @description JWT token used to perform authorization
             * @example uyw
             */
            token: string;
        };
        /** @example {
         *       "id": "nc-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "uu6"
         *     } */
        DeleteNetworkConfigRequest: {
            /**
             * @description ID of a Network Config
             * @example Blanditiis optio eum.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example nn
             */
            token: string;
        };
        /** @example {
         *       "id": "op-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "0d"
         *     } */
        DeleteOutputParameterRequest: {
            /**
             * @description ID of an Output Parameter
             * @example Earum modi expedita porro.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example n
             */
            token: string;
        };
        /** @example {
         *       "id": "p-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "hbh"
         *     } */
        DeletePipelineRequest: {
            /**
             * @description ID of a Pipeline
             * @example Asperiores impedit accusamus.
             */
            id?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example rx
             */
            token: string;
        };
        /** @example {
         *       "id": "pt-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "jn5"
         *     } */
        DeleteProductTierRequest: {
            /**
             * @description ID of a Product Tier
             * @example Rerum est.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example t0
             */
            token: string;
        };
        /** @example {
         *       "id": "instance-abcd1234",
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "kd"
         *     } */
        DeleteResourceInstanceRequest: {
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Officia ipsam sed.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example b1c
             */
            token: string;
        };
        /** @example {
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "cuc"
         *     } */
        DeleteResourceRequest: {
            /**
             * @description ID of a resource
             * @example Labore aut et voluptatibus suscipit.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example b
             */
            token: string;
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "token": "usi"
         *     } */
        DeleteSaaSPortalCustomDomainRequest: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType: string;
            /**
             * @description JWT token used to perform authorization
             * @example i
             */
            token: string;
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "name": "my-secret",
         *       "token": "w"
         *     } */
        DeleteSecretRequest: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType: string;
            /**
             * @description Name of the secret
             * @example my-secret
             */
            name: string;
            /**
             * @description JWT token used to perform authorization
             * @example ap
             */
            token: string;
        };
        /** @example {
         *       "id": "sa-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "nxu"
         *     } */
        DeleteServiceAPIRequest: {
            /**
             * @description ID of a Service API
             * @example Fuga neque necessitatibus ab dolor ipsa maiores.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example cz
             */
            token: string;
        };
        /** @example {
         *       "id": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "mf"
         *     } */
        DeleteServiceEnvironmentRequest: {
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example r21
             */
            token: string;
        };
        /** @example {
         *       "id": "sm-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "m"
         *     } */
        DeleteServiceModelRequest: {
            /**
             * @description ID of a Service Model
             * @example Nihil ea dicta veritatis facere.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example nsr
             */
            token: string;
        };
        /** @example {
         *       "id": "s-12345678",
         *       "token": "n"
         *     } */
        DeleteServiceRequest: {
            /**
             * @description ID of a Service
             * @example s-123456
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example u
             */
            token: string;
        };
        /** @example {
         *       "id": "so-12345678",
         *       "token": "zy8"
         *     } */
        DeleteServicesOrchestrationRequest: {
            /**
             * @description ID of a Services Orchestration
             * @example Vero est occaecati magni natus consequuntur provident.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 1
             */
            token: string;
        };
        /** @example {
         *       "id": "sc-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "f97"
         *     } */
        DeleteStorageConfigRequest: {
            /**
             * @description ID of a Storage Config
             * @example Voluptatem sapiente quaerat nisi molestiae molestiae sunt.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example zfq
             */
            token: string;
        };
        /** @example {
         *       "id": "svc-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "gk"
         *     } */
        DeleteStorageVolumeConfigRequest: {
            /**
             * @description ID of a Storage Volume Config
             * @example Quas rem aut ea aliquam et.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example k
             */
            token: string;
        };
        /** @example {
         *       "id": "sub-12345678",
         *       "token": "4u"
         *     } */
        DeleteSubscriptionRequest: {
            /**
             * @description ID of a Subscription
             * @example Similique delectus perferendis animi et.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example n
             */
            token: string;
        };
        /** @example {
         *       "id": "up-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "1ox"
         *     } */
        DeleteUpgradePathRequest: {
            /**
             * @description ID of an Upgrade Path
             * @example Eos perspiciatis esse.
             */
            id?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 6l
             */
            token: string;
        };
        /** @example {
         *       "token": "9g"
         *     } */
        DeleteUserRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example 3
             */
            token: string;
        };
        /** @example {
         *       "company": "ABC",
         *       "email": "abc@gmail.com",
         *       "name": "John Doe",
         *       "phone": "+1-234567890"
         *     } */
        DemoRequest: {
            /** @example ABC */
            company: string;
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /** @example John Doe */
            name: string;
            /** @example +1-234567890 */
            phone?: string;
        };
        /** @example {
         *       "Amenities": [
         *         {
         *           "Description": "Ensures high availability across multiple zones.",
         *           "IsManaged": true,
         *           "Name": "Prometheus",
         *           "Properties": {
         *             "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *             "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *             "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *           },
         *           "Type": "HelmChart"
         *         },
         *         {
         *           "Description": "Ensures high availability across multiple zones.",
         *           "IsManaged": true,
         *           "Name": "Prometheus",
         *           "Properties": {
         *             "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *             "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *             "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *           },
         *           "Type": "HelmChart"
         *         }
         *       ]
         *     } */
        DeploymentCellConfiguration: {
            /**
             * @description The amenities available in the deployment cell.
             * @example [
             *       {
             *         "Description": "Ensures high availability across multiple zones.",
             *         "IsManaged": true,
             *         "Name": "Prometheus",
             *         "Properties": {
             *           "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *           "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *           "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *         },
             *         "Type": "HelmChart"
             *       },
             *       {
             *         "Description": "Ensures high availability across multiple zones.",
             *         "IsManaged": true,
             *         "Name": "Prometheus",
             *         "Properties": {
             *           "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *           "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *           "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *         },
             *         "Type": "HelmChart"
             *       }
             *     ]
             */
            Amenities?: components["schemas"]["Amenity"][];
        };
        /** @example {
         *       "DeploymentCellConfigurationPerCloudProvider": {
         *         "aws|azure|gcp|all": {
         *           "Amenities": [
         *             {
         *               "Description": "Ensures high availability across multiple zones.",
         *               "IsManaged": true,
         *               "Name": "Prometheus",
         *               "Properties": {
         *                 "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                 "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                 "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *               },
         *               "Type": "HelmChart"
         *             },
         *             {
         *               "Description": "Ensures high availability across multiple zones.",
         *               "IsManaged": true,
         *               "Name": "Prometheus",
         *               "Properties": {
         *                 "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                 "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                 "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *               },
         *               "Type": "HelmChart"
         *             },
         *             {
         *               "Description": "Ensures high availability across multiple zones.",
         *               "IsManaged": true,
         *               "Name": "Prometheus",
         *               "Properties": {
         *                 "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                 "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                 "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *               },
         *               "Type": "HelmChart"
         *             },
         *             {
         *               "Description": "Ensures high availability across multiple zones.",
         *               "IsManaged": true,
         *               "Name": "Prometheus",
         *               "Properties": {
         *                 "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                 "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                 "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *               },
         *               "Type": "HelmChart"
         *             }
         *           ]
         *         }
         *       }
         *     } */
        DeploymentCellConfigurations: {
            /**
             * @description The deployment cell configurations per cloud provider.
             * @example {
             *       "aws|azure|gcp|all": {
             *         "Amenities": [
             *           {
             *             "Description": "Ensures high availability across multiple zones.",
             *             "IsManaged": true,
             *             "Name": "Prometheus",
             *             "Properties": {
             *               "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *               "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *               "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *             },
             *             "Type": "HelmChart"
             *           },
             *           {
             *             "Description": "Ensures high availability across multiple zones.",
             *             "IsManaged": true,
             *             "Name": "Prometheus",
             *             "Properties": {
             *               "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *               "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *               "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *             },
             *             "Type": "HelmChart"
             *           },
             *           {
             *             "Description": "Ensures high availability across multiple zones.",
             *             "IsManaged": true,
             *             "Name": "Prometheus",
             *             "Properties": {
             *               "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *               "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *               "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *             },
             *             "Type": "HelmChart"
             *           },
             *           {
             *             "Description": "Ensures high availability across multiple zones.",
             *             "IsManaged": true,
             *             "Name": "Prometheus",
             *             "Properties": {
             *               "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *               "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *               "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *             },
             *             "Type": "HelmChart"
             *           }
             *         ]
             *       }
             *     }
             */
            DeploymentCellConfigurationPerCloudProvider?: {
                [key: string]: unknown;
            };
        };
        /** @example {
         *       "cloudProvider": "aws",
         *       "hostClusterID": "hc-12345678",
         *       "instanceHealth": {
         *         "Unde aut rerum dolorem a itaque in.": {
         *           "instanceID": "instance-12345678",
         *           "lifeCycleStatus": "RUNNING",
         *           "resourcesHealth": {
         *             "Aut maxime.": {
         *               "nodesHealth": {
         *                 "Ut modi.": {
         *                   "availabilityZone": "us-east-2a",
         *                   "connectivityStatus": "HEALTHY",
         *                   "diskHealth": "HEALTHY",
         *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *                   "integrationsHealth": {
         *                     "CustomerObservabilityHealth": "HEALTHY",
         *                     "InternalObservabilityHealth": "HEALTHY"
         *                   },
         *                   "loadStatus": "LOAD_NORMAL",
         *                   "nodeHealth": "HEALTHY",
         *                   "nodeName": "postgres-0",
         *                   "ports": [
         *                     80,
         *                     443
         *                   ],
         *                   "processHealth": "HEALTHY",
         *                   "processLiveness": "HEALTHY",
         *                   "status": "HEALTHY"
         *                 }
         *               },
         *               "resourceID": "resource-12345678",
         *               "resourceKey": "primary",
         *               "resourceType": "Kustomize",
         *               "status": "HEALTHY"
         *             },
         *             "Doloremque ducimus voluptatem.": {
         *               "nodesHealth": {
         *                 "Ut modi.": {
         *                   "availabilityZone": "us-east-2a",
         *                   "connectivityStatus": "HEALTHY",
         *                   "diskHealth": "HEALTHY",
         *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *                   "integrationsHealth": {
         *                     "CustomerObservabilityHealth": "HEALTHY",
         *                     "InternalObservabilityHealth": "HEALTHY"
         *                   },
         *                   "loadStatus": "LOAD_NORMAL",
         *                   "nodeHealth": "HEALTHY",
         *                   "nodeName": "postgres-0",
         *                   "ports": [
         *                     80,
         *                     443
         *                   ],
         *                   "processHealth": "HEALTHY",
         *                   "processLiveness": "HEALTHY",
         *                   "status": "HEALTHY"
         *                 }
         *               },
         *               "resourceID": "resource-12345678",
         *               "resourceKey": "primary",
         *               "resourceType": "Kustomize",
         *               "status": "HEALTHY"
         *             },
         *             "Perspiciatis et.": {
         *               "nodesHealth": {
         *                 "Ut modi.": {
         *                   "availabilityZone": "us-east-2a",
         *                   "connectivityStatus": "HEALTHY",
         *                   "diskHealth": "HEALTHY",
         *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *                   "integrationsHealth": {
         *                     "CustomerObservabilityHealth": "HEALTHY",
         *                     "InternalObservabilityHealth": "HEALTHY"
         *                   },
         *                   "loadStatus": "LOAD_NORMAL",
         *                   "nodeHealth": "HEALTHY",
         *                   "nodeName": "postgres-0",
         *                   "ports": [
         *                     80,
         *                     443
         *                   ],
         *                   "processHealth": "HEALTHY",
         *                   "processLiveness": "HEALTHY",
         *                   "status": "HEALTHY"
         *                 }
         *               },
         *               "resourceID": "resource-12345678",
         *               "resourceKey": "primary",
         *               "resourceType": "Kustomize",
         *               "status": "HEALTHY"
         *             }
         *           },
         *           "status": "HEALTHY"
         *         }
         *       },
         *       "regionCode": "us-west-1",
         *       "serviceEnvironmentName": "prod",
         *       "serviceName": "mysql"
         *     } */
        DeploymentCellHealthDetail: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProvider?: string;
            /**
             * @description ID of a Host Cluster
             * @example Non et quis omnis pariatur.
             */
            hostClusterID?: string;
            /**
             * @description The health summary of the instances by instance ID
             * @example {
             *       "Alias dolores magnam aut porro nostrum in.": {
             *         "instanceID": "instance-12345678",
             *         "lifeCycleStatus": "RUNNING",
             *         "resourcesHealth": {
             *           "Aut maxime.": {
             *             "nodesHealth": {
             *               "Ut modi.": {
             *                 "availabilityZone": "us-east-2a",
             *                 "connectivityStatus": "HEALTHY",
             *                 "diskHealth": "HEALTHY",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "integrationsHealth": {
             *                   "CustomerObservabilityHealth": "HEALTHY",
             *                   "InternalObservabilityHealth": "HEALTHY"
             *                 },
             *                 "loadStatus": "LOAD_NORMAL",
             *                 "nodeHealth": "HEALTHY",
             *                 "nodeName": "postgres-0",
             *                 "ports": [
             *                   80,
             *                   443
             *                 ],
             *                 "processHealth": "HEALTHY",
             *                 "processLiveness": "HEALTHY",
             *                 "status": "HEALTHY"
             *               }
             *             },
             *             "resourceID": "resource-12345678",
             *             "resourceKey": "primary",
             *             "resourceType": "Kustomize",
             *             "status": "HEALTHY"
             *           },
             *           "Doloremque ducimus voluptatem.": {
             *             "nodesHealth": {
             *               "Ut modi.": {
             *                 "availabilityZone": "us-east-2a",
             *                 "connectivityStatus": "HEALTHY",
             *                 "diskHealth": "HEALTHY",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "integrationsHealth": {
             *                   "CustomerObservabilityHealth": "HEALTHY",
             *                   "InternalObservabilityHealth": "HEALTHY"
             *                 },
             *                 "loadStatus": "LOAD_NORMAL",
             *                 "nodeHealth": "HEALTHY",
             *                 "nodeName": "postgres-0",
             *                 "ports": [
             *                   80,
             *                   443
             *                 ],
             *                 "processHealth": "HEALTHY",
             *                 "processLiveness": "HEALTHY",
             *                 "status": "HEALTHY"
             *               }
             *             },
             *             "resourceID": "resource-12345678",
             *             "resourceKey": "primary",
             *             "resourceType": "Kustomize",
             *             "status": "HEALTHY"
             *           },
             *           "Perspiciatis et.": {
             *             "nodesHealth": {
             *               "Ut modi.": {
             *                 "availabilityZone": "us-east-2a",
             *                 "connectivityStatus": "HEALTHY",
             *                 "diskHealth": "HEALTHY",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "integrationsHealth": {
             *                   "CustomerObservabilityHealth": "HEALTHY",
             *                   "InternalObservabilityHealth": "HEALTHY"
             *                 },
             *                 "loadStatus": "LOAD_NORMAL",
             *                 "nodeHealth": "HEALTHY",
             *                 "nodeName": "postgres-0",
             *                 "ports": [
             *                   80,
             *                   443
             *                 ],
             *                 "processHealth": "HEALTHY",
             *                 "processLiveness": "HEALTHY",
             *                 "status": "HEALTHY"
             *               }
             *             },
             *             "resourceID": "resource-12345678",
             *             "resourceKey": "primary",
             *             "resourceType": "Kustomize",
             *             "status": "HEALTHY"
             *           }
             *         },
             *         "status": "HEALTHY"
             *       },
             *       "Consequuntur adipisci pariatur vero exercitationem tempore esse.": {
             *         "instanceID": "instance-12345678",
             *         "lifeCycleStatus": "RUNNING",
             *         "resourcesHealth": {
             *           "Aut maxime.": {
             *             "nodesHealth": {
             *               "Ut modi.": {
             *                 "availabilityZone": "us-east-2a",
             *                 "connectivityStatus": "HEALTHY",
             *                 "diskHealth": "HEALTHY",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "integrationsHealth": {
             *                   "CustomerObservabilityHealth": "HEALTHY",
             *                   "InternalObservabilityHealth": "HEALTHY"
             *                 },
             *                 "loadStatus": "LOAD_NORMAL",
             *                 "nodeHealth": "HEALTHY",
             *                 "nodeName": "postgres-0",
             *                 "ports": [
             *                   80,
             *                   443
             *                 ],
             *                 "processHealth": "HEALTHY",
             *                 "processLiveness": "HEALTHY",
             *                 "status": "HEALTHY"
             *               }
             *             },
             *             "resourceID": "resource-12345678",
             *             "resourceKey": "primary",
             *             "resourceType": "Kustomize",
             *             "status": "HEALTHY"
             *           },
             *           "Doloremque ducimus voluptatem.": {
             *             "nodesHealth": {
             *               "Ut modi.": {
             *                 "availabilityZone": "us-east-2a",
             *                 "connectivityStatus": "HEALTHY",
             *                 "diskHealth": "HEALTHY",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "integrationsHealth": {
             *                   "CustomerObservabilityHealth": "HEALTHY",
             *                   "InternalObservabilityHealth": "HEALTHY"
             *                 },
             *                 "loadStatus": "LOAD_NORMAL",
             *                 "nodeHealth": "HEALTHY",
             *                 "nodeName": "postgres-0",
             *                 "ports": [
             *                   80,
             *                   443
             *                 ],
             *                 "processHealth": "HEALTHY",
             *                 "processLiveness": "HEALTHY",
             *                 "status": "HEALTHY"
             *               }
             *             },
             *             "resourceID": "resource-12345678",
             *             "resourceKey": "primary",
             *             "resourceType": "Kustomize",
             *             "status": "HEALTHY"
             *           },
             *           "Perspiciatis et.": {
             *             "nodesHealth": {
             *               "Ut modi.": {
             *                 "availabilityZone": "us-east-2a",
             *                 "connectivityStatus": "HEALTHY",
             *                 "diskHealth": "HEALTHY",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "integrationsHealth": {
             *                   "CustomerObservabilityHealth": "HEALTHY",
             *                   "InternalObservabilityHealth": "HEALTHY"
             *                 },
             *                 "loadStatus": "LOAD_NORMAL",
             *                 "nodeHealth": "HEALTHY",
             *                 "nodeName": "postgres-0",
             *                 "ports": [
             *                   80,
             *                   443
             *                 ],
             *                 "processHealth": "HEALTHY",
             *                 "processLiveness": "HEALTHY",
             *                 "status": "HEALTHY"
             *               }
             *             },
             *             "resourceID": "resource-12345678",
             *             "resourceKey": "primary",
             *             "resourceType": "Kustomize",
             *             "status": "HEALTHY"
             *           }
             *         },
             *         "status": "HEALTHY"
             *       },
             *       "Ipsam aut pariatur hic atque illo ea.": {
             *         "instanceID": "instance-12345678",
             *         "lifeCycleStatus": "RUNNING",
             *         "resourcesHealth": {
             *           "Aut maxime.": {
             *             "nodesHealth": {
             *               "Ut modi.": {
             *                 "availabilityZone": "us-east-2a",
             *                 "connectivityStatus": "HEALTHY",
             *                 "diskHealth": "HEALTHY",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "integrationsHealth": {
             *                   "CustomerObservabilityHealth": "HEALTHY",
             *                   "InternalObservabilityHealth": "HEALTHY"
             *                 },
             *                 "loadStatus": "LOAD_NORMAL",
             *                 "nodeHealth": "HEALTHY",
             *                 "nodeName": "postgres-0",
             *                 "ports": [
             *                   80,
             *                   443
             *                 ],
             *                 "processHealth": "HEALTHY",
             *                 "processLiveness": "HEALTHY",
             *                 "status": "HEALTHY"
             *               }
             *             },
             *             "resourceID": "resource-12345678",
             *             "resourceKey": "primary",
             *             "resourceType": "Kustomize",
             *             "status": "HEALTHY"
             *           },
             *           "Doloremque ducimus voluptatem.": {
             *             "nodesHealth": {
             *               "Ut modi.": {
             *                 "availabilityZone": "us-east-2a",
             *                 "connectivityStatus": "HEALTHY",
             *                 "diskHealth": "HEALTHY",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "integrationsHealth": {
             *                   "CustomerObservabilityHealth": "HEALTHY",
             *                   "InternalObservabilityHealth": "HEALTHY"
             *                 },
             *                 "loadStatus": "LOAD_NORMAL",
             *                 "nodeHealth": "HEALTHY",
             *                 "nodeName": "postgres-0",
             *                 "ports": [
             *                   80,
             *                   443
             *                 ],
             *                 "processHealth": "HEALTHY",
             *                 "processLiveness": "HEALTHY",
             *                 "status": "HEALTHY"
             *               }
             *             },
             *             "resourceID": "resource-12345678",
             *             "resourceKey": "primary",
             *             "resourceType": "Kustomize",
             *             "status": "HEALTHY"
             *           },
             *           "Perspiciatis et.": {
             *             "nodesHealth": {
             *               "Ut modi.": {
             *                 "availabilityZone": "us-east-2a",
             *                 "connectivityStatus": "HEALTHY",
             *                 "diskHealth": "HEALTHY",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "integrationsHealth": {
             *                   "CustomerObservabilityHealth": "HEALTHY",
             *                   "InternalObservabilityHealth": "HEALTHY"
             *                 },
             *                 "loadStatus": "LOAD_NORMAL",
             *                 "nodeHealth": "HEALTHY",
             *                 "nodeName": "postgres-0",
             *                 "ports": [
             *                   80,
             *                   443
             *                 ],
             *                 "processHealth": "HEALTHY",
             *                 "processLiveness": "HEALTHY",
             *                 "status": "HEALTHY"
             *               }
             *             },
             *             "resourceID": "resource-12345678",
             *             "resourceKey": "primary",
             *             "resourceType": "Kustomize",
             *             "status": "HEALTHY"
             *           }
             *         },
             *         "status": "HEALTHY"
             *       }
             *     }
             */
            instanceHealth?: {
                [key: string]: components["schemas"]["InstanceHealthSummary"];
            };
            /**
             * @description The region code of the host cluster
             * @example us-west-1
             */
            regionCode?: string;
            /**
             * @description The name of the service environment
             * @example prod
             */
            serviceEnvironmentName?: string;
            /**
             * @description The name of the service
             * @example mysql
             */
            serviceName?: string;
        };
        /** @example {
         *       "hostClusterID": "hc-12345678",
         *       "serviceEnvironmentID": "se-12345678",
         *       "serviceID": "s-12345678",
         *       "token": "c"
         *     } */
        DeploymentCellHealthRequest: {
            /**
             * @description ID of a Host Cluster
             * @example Et ut rerum sit impedit similique.
             */
            hostClusterID?: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentID?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceID?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 75j
             */
            token: string;
        };
        /** @example {
         *       "deployingInstances": 1936485061856951600,
         *       "healthyInstances": 1629574062214273300,
         *       "hostClusterID": "hc-12345678",
         *       "message": "Cell is healthy",
         *       "status": "Healthy",
         *       "totalInstances": 3112846470759311000,
         *       "unhealthyInstances": 6957828886517485000,
         *       "unknownInstances": 457932285216304000
         *     } */
        DeploymentCellHealthSummary: {
            /**
             * Format: int64
             * @description The number of instances currently deploying
             * @example 8835227243393240000
             */
            deployingInstances: number;
            /**
             * Format: int64
             * @description The number of healthy instances in the cell
             * @example 7012830201025638000
             */
            healthyInstances: number;
            /**
             * @description ID of a Host Cluster
             * @example Voluptate alias.
             */
            hostClusterID: string;
            /**
             * @description The status message
             * @example Cell is healthy
             */
            message: string;
            /**
             * @description The status of the cell
             * @example Healthy
             */
            status: string;
            /**
             * Format: int64
             * @description The total number of instances in the cell
             * @example 2151344910149538300
             */
            totalInstances: number;
            /**
             * Format: int64
             * @description The number of unhealthy instances in the cell
             * @example 5805292126628655000
             */
            unhealthyInstances: number;
            /**
             * Format: int64
             * @description The number of instances with unknown status
             * @example 3708320758333987300
             */
            unknownInstances?: number;
        };
        /** @example {
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "k"
         *     } */
        DeprecateResourceRequest: {
            /**
             * @description ID of a resource
             * @example Illo itaque odit.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example bs
             */
            token: string;
        };
        /** @example {
         *       "id": "sa-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "bj2"
         *     } */
        DeprecateServiceAPIRequest: {
            /**
             * @description ID of a Service API
             * @example Aut ut aut omnis consequuntur.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 3a
             */
            token: string;
        };
        /** @example {
         *       "productTierId": "Beatae beatae.",
         *       "serviceId": "s-12345678",
         *       "token": "ha",
         *       "version": "3.0"
         *     } */
        DeprecateTierVersionSetRequest: {
            /**
             * @description ID of a Product Tier
             * @example Facere quibusdam ab quia molestias.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 1n
             */
            token: string;
            /**
             * @description The version number for the specific version set.
             * @example 3.0
             */
            version: string;
        };
        /** @example {
         *       "id": "r-12345678",
         *       "scope": "CLUSTER",
         *       "serviceId": "s-12345678",
         *       "token": "f",
         *       "type": "ADD"
         *     } */
        DeregisterActionHookRequest: {
            /**
             * @description ID of a resource
             * @example Deserunt assumenda.
             */
            id: string;
            /**
             * @description The scope of the hook
             * @example CLUSTER|NODE
             */
            scope: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 5w
             */
            token: string;
            /**
             * @description The type of hook to execute
             * @example INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
             */
            type: string;
        };
        /** @example {
         *       "scope": "CLUSTER",
         *       "type": "ADD"
         *     } */
        DeregisterActionHookRequest2: {
            /**
             * @description The scope of the hook
             * @example CLUSTER
             */
            scope: string;
            /**
             * @description The type of hook to execute
             * @example ADD
             */
            type: string;
        };
        /** @example {
         *       "awsAccountID": "123456789012",
         *       "token": "4"
         *     } */
        DescribeAccountConfigByAWSAccountIDRequest: {
            /**
             * @description The AWS account ID
             * @example 123456789012
             */
            awsAccountID: string;
            /**
             * @description JWT token used to perform authorization
             * @example mqe
             */
            token: string;
        };
        /**
         * @description Account configuration including the role required to access
         * @example {
         *       "awsAccountID": "123456789012",
         *       "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
         *       "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml&param_CreateLoadBalancerPolicy=false",
         *       "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
         *       "byoaInstanceIDs": [
         *         "instance-12345678",
         *         "instance-abcdefgh"
         *       ],
         *       "cloudProviderId": "infra-12345678",
         *       "description": "An AWS account hosting multiple dev environments",
         *       "id": "ac-12345678",
         *       "name": "Dev AWS account",
         *       "status": "READY",
         *       "statusMessage": "Account is ready"
         *     }
         */
        DescribeAccountConfigByAWSAccountIDResult: {
            /**
             * @description The AWS account ID
             * @example 123456789012
             */
            awsAccountID: string;
            /**
             * @description The security role ARN or service account ARN that grants access to operate the infra
             * @example arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
             */
            awsBootstrapRoleARN: string;
            /**
             * @description The URL to the CloudFormation template (no LoadBalancer policy version)
             * @example https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml&param_CreateLoadBalancerPolicy=false
             */
            awsCloudFormationNoLBTemplateURL?: string;
            /**
             * @description The URL to the CloudFormation template
             * @example https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
             */
            awsCloudFormationTemplateURL?: string;
            /**
             * @description The BYOA instance IDs that this account config is tied to
             * @example [
             *       "instance-12345678",
             *       "instance-abcdefgh"
             *     ]
             */
            byoaInstanceIDs?: string[];
            /**
             * @description ID of an CloudProvider
             * @example Libero architecto odit id.
             */
            cloudProviderId: string;
            /**
             * @description The description for the account
             * @example An AWS account hosting multiple dev environments
             */
            description: string;
            /**
             * @description ID of an Account Config
             * @example Dolore ullam molestias quis cum.
             */
            id: string;
            /**
             * @description The name of the account
             * @example Dev AWS account
             */
            name: string;
            /**
             * @description The status of the account configuration
             * @example PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
             */
            status: string;
            /**
             * @description The status message of the account
             * @example Account is ready
             */
            statusMessage: string;
        };
        /** @example {
         *       "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *       "token": "ap"
         *     } */
        DescribeAccountConfigByAzureSubscriptionIDRequest: {
            /**
             * @description The Azure subscription ID
             * @example 12345678-1234-1234-1234-123456789012
             */
            azureSubscriptionID: string;
            /**
             * @description JWT token used to perform authorization
             * @example lyp
             */
            token: string;
        };
        /**
         * @description Account configuration for Azure
         * @example {
         *       "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *       "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *       "byoaInstanceIDs": [
         *         "instance-12345678",
         *         "instance-abcdefgh"
         *       ],
         *       "cloudProviderId": "infra-12345678",
         *       "description": "An AWS account hosting multiple dev environments",
         *       "id": "ac-12345678",
         *       "name": "Dev AWS account",
         *       "status": "READY",
         *       "statusMessage": "Account is ready"
         *     }
         */
        DescribeAccountConfigByAzureSubscriptionIDResult: {
            /**
             * @description The Azure subscription ID
             * @example 12345678-1234-1234-1234-123456789012
             */
            azureSubscriptionID: string;
            /**
             * @description The Azure tenant ID
             * @example 12345678-1234-1234-1234-123456789012
             */
            azureTenantID: string;
            /**
             * @description The BYOA instance IDs that this account config is tied to
             * @example [
             *       "instance-12345678",
             *       "instance-abcdefgh"
             *     ]
             */
            byoaInstanceIDs?: string[];
            /**
             * @description ID of an CloudProvider
             * @example Sapiente esse.
             */
            cloudProviderId: string;
            /**
             * @description The description for the account
             * @example An AWS account hosting multiple dev environments
             */
            description: string;
            /**
             * @description ID of an Account Config
             * @example Rem placeat eos est dolorum et ad.
             */
            id: string;
            /**
             * @description The name of the account
             * @example Dev AWS account
             */
            name: string;
            /**
             * @description The status of the account configuration
             * @example PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
             */
            status: string;
            /**
             * @description The status message of the account
             * @example Account is ready
             */
            statusMessage: string;
        };
        /** @example {
         *       "gcpProjectID": "my-project",
         *       "token": "7"
         *     } */
        DescribeAccountConfigByGCPProjectIDRequest: {
            /**
             * @description The GCP project ID
             * @example my-project
             */
            gcpProjectID: string;
            /**
             * @description JWT token used to perform authorization
             * @example 8
             */
            token: string;
        };
        /**
         * @description Account configuration including the role required to access
         * @example {
         *       "byoaInstanceIDs": [
         *         "instance-12345678",
         *         "instance-abcdefgh"
         *       ],
         *       "cloudProviderId": "infra-12345678",
         *       "description": "An AWS account hosting multiple dev environments",
         *       "gcpProjectID": "my-project",
         *       "gcpProjectNumber": "123456789012",
         *       "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
         *       "id": "ac-12345678",
         *       "name": "Dev AWS account",
         *       "status": "READY",
         *       "statusMessage": "Account is ready"
         *     }
         */
        DescribeAccountConfigByGCPProjectIDResult: {
            /**
             * @description The BYOA instance IDs that this account config is tied to
             * @example [
             *       "instance-12345678",
             *       "instance-abcdefgh"
             *     ]
             */
            byoaInstanceIDs?: string[];
            /**
             * @description ID of an CloudProvider
             * @example Accusantium quasi.
             */
            cloudProviderId: string;
            /**
             * @description The description for the account
             * @example An AWS account hosting multiple dev environments
             */
            description: string;
            /**
             * @description The GCP project ID
             * @example my-project
             */
            gcpProjectID: string;
            /**
             * @description The GCP project number
             * @example 123456789012
             */
            gcpProjectNumber: string;
            /**
             * @description The GCP service account email
             * @example bootstrap@my-project.iam.gserviceaccount.com
             */
            gcpServiceAccountEmail: string;
            /**
             * @description ID of an Account Config
             * @example Totam sunt optio nulla doloremque.
             */
            id: string;
            /**
             * @description The name of the account
             * @example Dev AWS account
             */
            name: string;
            /**
             * @description The status of the account configuration
             * @example PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
             */
            status: string;
            /**
             * @description The status message of the account
             * @example Account is ready
             */
            statusMessage: string;
        };
        /** @example {
         *       "id": "ac-12345678",
         *       "token": "cn9"
         *     } */
        DescribeAccountConfigRequest: {
            /**
             * @description ID of an Account Config
             * @example Illum quia et dolorum.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 3d
             */
            token: string;
        };
        /**
         * @description Account configuration including the role required to access
         * @example {
         *       "awsAccountID": "123456789012",
         *       "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
         *       "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
         *       "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
         *       "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *       "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *       "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *       "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *       "byoaInstanceIDs": [
         *         "instance-12345678",
         *         "instance-abcdefgh"
         *       ],
         *       "cloudProviderId": "infra-12345678",
         *       "description": "An AWS account hosting multiple dev environments",
         *       "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *       "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *       "gcpProjectID": "my-project",
         *       "gcpProjectNumber": "123456789012",
         *       "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
         *       "id": "ac-12345678",
         *       "name": "Dev AWS account",
         *       "status": "READY",
         *       "statusMessage": "Account is ready"
         *     }
         */
        DescribeAccountConfigResult: {
            /**
             * @description The AWS account ID
             * @example 123456789012
             */
            awsAccountID?: string;
            /**
             * @description The security role ARN or service account ARN that grants access to operate the infra
             * @example arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
             */
            awsBootstrapRoleARN?: string;
            /**
             * @description The URL to the CloudFormation template (no LoadBalancer policy version)
             * @example https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
             */
            awsCloudFormationNoLBTemplateURL?: string;
            /**
             * @description The URL to the CloudFormation template
             * @example https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
             */
            awsCloudFormationTemplateURL?: string;
            /**
             * @description The Azure bootstrap shell command
             * @example bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
             */
            azureBootstrapShellCommand?: string;
            /**
             * @description The Azure disconnect shell command
             * @example bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
             */
            azureDisconnectShellCommand?: string;
            /**
             * @description The Azure subscription ID
             * @example 12345678-1234-1234-1234-123456789012
             */
            azureSubscriptionID?: string;
            /**
             * @description The Azure tenant ID
             * @example 12345678-1234-1234-1234-123456789012
             */
            azureTenantID?: string;
            /**
             * @description The BYOA instance IDs that this account config is tied to
             * @example [
             *       "instance-12345678",
             *       "instance-abcdefgh"
             *     ]
             */
            byoaInstanceIDs?: string[];
            /**
             * @description ID of an CloudProvider
             * @example Omnis voluptatem et similique quas ad dignissimos.
             */
            cloudProviderId: string;
            /**
             * @description The description for the account
             * @example An AWS account hosting multiple dev environments
             */
            description: string;
            /**
             * @description The GCP bootstrap shell command
             * @example bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
             */
            gcpBootstrapShellCommand?: string;
            /**
             * @description The GCP disconnect shell command
             * @example bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
             */
            gcpDisconnectShellCommand?: string;
            /**
             * @description The GCP project ID
             * @example my-project
             */
            gcpProjectID?: string;
            /**
             * @description The GCP project number
             * @example 123456789012
             */
            gcpProjectNumber?: string;
            /**
             * @description The GCP service account email
             * @example bootstrap@my-project.iam.gserviceaccount.com
             */
            gcpServiceAccountEmail?: string;
            /**
             * @description ID of an Account Config
             * @example Tenetur id ut enim nemo optio.
             */
            id: string;
            /**
             * @description The name of the account
             * @example Dev AWS account
             */
            name: string;
            /**
             * @description The status of the account configuration
             * @example PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
             */
            status: string;
            /**
             * @description The status message of the account
             * @example Account is ready
             */
            statusMessage: string;
        };
        /** @example {
         *       "id": "event-12345678",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "bf"
         *     } */
        DescribeAuditEventRequest: {
            /**
             * @description ID of a Event
             * @example Minima et quia id exercitationem qui soluta.
             */
            id: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example a
             */
            token: string;
        };
        /** @example {
         *       "eventSource": "Customer, Infra or Maintenance",
         *       "id": "event-12345678",
         *       "message": "instance-abcd1234 created",
         *       "orgId": "org-12345678",
         *       "orgName": "Acme Corporation",
         *       "resourceInstanceId": "instance-abcd1234",
         *       "resourceName": "Galera",
         *       "subscriptionId": "sub-abcd1234",
         *       "time": "2023-01-10T00:00:00Z",
         *       "userId": "user-12345678",
         *       "userName": "John Doe",
         *       "workflowFailures": [
         *         {
         *           "eventTime": "2020-01-01T00:00:00Z",
         *           "message": "Bootstrap failed for reason X"
         *         },
         *         {
         *           "eventTime": "2020-01-01T00:01:00Z",
         *           "message": "Compute failed for reason Y"
         *         }
         *       ]
         *     } */
        DescribeAuditEventResult: {
            /**
             * @description The event source
             * @example Customer, Infra or Maintenance
             */
            eventSource?: string;
            /**
             * @description ID of a Event
             * @example Soluta voluptatem.
             */
            id: string;
            /**
             * @description Resource Instance of message
             * @example instance-abcd1234 created
             */
            message: string;
            /**
             * @description ID of an Org
             * @example Nam minus assumenda.
             */
            orgId?: string;
            /**
             * @description The organization name of the user that caused the event
             * @example Acme Corporation
             */
            orgName?: string;
            /**
             * @description Instance Id of the resource instance
             * @example instance-abcd1234
             */
            resourceInstanceId: string;
            /**
             * @description Name of the resource
             * @example Galera
             */
            resourceName: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId: string;
            /**
             * @description The event time
             * @example 2023-01-10T00:00:00Z
             */
            time: string;
            /**
             * @description ID of a User
             * @example Natus blanditiis nobis.
             */
            userId?: string;
            /**
             * @description The user name of the user that caused the event
             * @example John Doe
             */
            userName?: string;
            /**
             * @description The list of workflow events that indicate failures
             * @example [
             *       {
             *         "eventTime": "2020-01-01T00:00:00Z",
             *         "message": "Bootstrap failed for reason X"
             *       },
             *       {
             *         "eventTime": "2020-01-01T00:01:00Z",
             *         "message": "Compute failed for reason Y"
             *       }
             *     ]
             */
            workflowFailures?: components["schemas"]["WorkflowFailure"][];
        };
        /** @example {
         *       "id": "az-12345678",
         *       "token": "apf"
         *     } */
        DescribeAvailabilityZoneRequest: {
            /**
             * @description ID of an AZ
             * @example Corrupti rerum quidem.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example a7
             */
            token: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "code": "us-east-1a",
         *       "description": "US East (N. Virginia) Availability Zone A",
         *       "id": "az-12345678",
         *       "regionCode": "us-east-1"
         *     } */
        DescribeAvailabilityZoneResult: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /**
             * @description Cloud-provider native availability zone code
             * @example us-east-1a
             */
            code: string;
            /**
             * @description Description of the AvailabilityZone
             * @example US East (N. Virginia) Availability Zone A
             */
            description: string;
            /**
             * @description ID of an AZ
             * @example Odit veniam.
             */
            id: string;
            /**
             * @description Cloud-provider native region code
             * @example us-east-1
             */
            regionCode: string;
        };
        /** @example {
         *       "id": "infra-12345678",
         *       "token": "nm"
         *     } */
        DescribeCloudProviderRequest: {
            /**
             * @description ID of an CloudProvider
             * @example Sit sed ea tenetur quam sed.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 1da
             */
            token: string;
        };
        /** @example {
         *       "description": "Amazon Web Services",
         *       "id": "infra-12345678",
         *       "name": "aws"
         *     } */
        DescribeCloudProviderResult: {
            /**
             * @description Description of the CloudProvider
             * @example Amazon Web Services
             */
            description: string;
            /**
             * @description ID of an CloudProvider
             * @example Fugiat quia impedit aliquid hic.
             */
            id: string;
            /**
             * @description Name of the CloudProvider
             * @example aws
             */
            name: string;
        };
        /** @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Quidem magnam.",
         *       "id": "cc-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "lk9"
         *     } */
        DescribeComputeConfigRequest: {
            /**
             * @description ID of a Product Tier
             * @example Blanditiis et.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Impedit nihil quam autem dolore ut vel.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of a Compute Config
             * @example Voluptas nemo incidunt.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example y
             */
            token: string;
        };
        /** @example {
         *       "autoscalingPolicy": {
         *         "maxReplicas": 4,
         *         "minReplicas": 1
         *       },
         *       "computeInstanceTypeConfigOverrides": {
         *         "aws": {
         *           "t3.micro": {
         *             "instanceLifeCycleType": "Spot",
         *             "rootVolumeSizeGi": 10,
         *             "warmPoolConfiguration": {
         *               "minimumNodesInPool": 1
         *             }
         *           },
         *           "t3.small": {
         *             "instanceLifeCycleType": "OnDemand",
         *             "warmPoolConfiguration": {
         *               "minimumNodesInPool": 2
         *             }
         *           }
         *         },
         *         "azure": {
         *           "Standard_B1ls": {
         *             "rootVolumeSizeGi": 10,
         *             "warmPoolConfiguration": {
         *               "minimumNodesInPool": 1
         *             }
         *           }
         *         }
         *       },
         *       "cpuArchitecture": "X86_64|ARM64",
         *       "description": "my compute config description",
         *       "id": "cc-12345678",
         *       "infraConfigIDs": [
         *         "ic-12345678",
         *         "ic-abcdefgh"
         *       ],
         *       "instanceTypes": {
         *         "aws": [
         *           "t3.micro",
         *           "t3.small"
         *         ],
         *         "azure": [
         *           "Standard_B1ls",
         *           "Standard_B1ms"
         *         ],
         *         "gcp": [
         *           "$var.instance_type"
         *         ]
         *       },
         *       "name": "my compute config",
         *       "replicaCount": "3",
         *       "resources": {
         *         "limits": {
         *           "cpu": "1",
         *           "memory": "500Mi"
         *         },
         *         "requests": {
         *           "cpu": "0.5",
         *           "memory": "200Mi"
         *         }
         *       },
         *       "rootVolumeSizeGi": 10,
         *       "serviceId": "s-12345678",
         *       "warmPoolConfiguration": {
         *         "minimumNodesInPool": 1
         *       }
         *     } */
        DescribeComputeConfigResult: {
            autoscalingPolicy?: components["schemas"]["AutoscalingPolicy"];
            /**
             * @description The compute instance type config overrides for this compute config
             * @example {
             *       "aws": {
             *         "t3.micro": {
             *           "instanceLifeCycleType": "Spot",
             *           "rootVolumeSizeGi": 10,
             *           "warmPoolConfiguration": {
             *             "minimumNodesInPool": 1
             *           }
             *         },
             *         "t3.small": {
             *           "instanceLifeCycleType": "OnDemand",
             *           "warmPoolConfiguration": {
             *             "minimumNodesInPool": 2
             *           }
             *         }
             *       },
             *       "azure": {
             *         "Standard_B1ls": {
             *           "rootVolumeSizeGi": 10,
             *           "warmPoolConfiguration": {
             *             "minimumNodesInPool": 1
             *           }
             *         }
             *       }
             *     }
             */
            computeInstanceTypeConfigOverrides?: {
                [key: string]: unknown;
            };
            /**
             * @description Processor architecture
             * @example X86_64|ARM64
             */
            cpuArchitecture?: string;
            /**
             * @description Description of the compute config
             * @example my compute config description
             */
            description: string;
            /**
             * @description ID of a Compute Config
             * @example Error at quo reiciendis fuga et et.
             */
            id: string;
            /**
             * @description The list of infra config IDs associated with the compute config.
             * @example [
             *       "ic-12345678",
             *       "ic-abcdefgh"
             *     ]
             */
            infraConfigIDs?: string[];
            /**
             * @description The instance types for this compute config
             * @example {
             *       "aws": [
             *         "t3.micro",
             *         "t3.small"
             *       ],
             *       "azure": [
             *         "Standard_B1ls",
             *         "Standard_B1ms"
             *       ],
             *       "gcp": [
             *         "$var.instance_type"
             *       ]
             *     }
             */
            instanceTypes?: {
                [key: string]: unknown;
            };
            /**
             * @description Name of the compute config
             * @example my compute config
             */
            name: string;
            /**
             * @description Number of replicas to provision for this logical pool of nodes per instance of the resource
             * @example 3
             */
            replicaCount: string;
            resources?: components["schemas"]["ResourceSpec"];
            /**
             * Format: int64
             * @description Size of the root volume in Gi
             * @example 10
             */
            rootVolumeSizeGi?: number;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            warmPoolConfiguration?: components["schemas"]["WarmPoolConfiguration"];
        };
        /** @example {
         *       "returnUrl": "https://mysaasportal.com",
         *       "token": "s7w"
         *     } */
        DescribeConsumptionBillingDetailsRequest: {
            /**
             * @description Return Url used to configure payment methods links
             * @example https://mysaasportal.com
             */
            returnUrl?: string;
            /**
             * @description JWT token used to perform authorization
             * @example n
             */
            token: string;
        };
        /** @example {
         *       "billingProviders": [
         *         {
         *           "paymentConfigurable": true,
         *           "paymentConfigured": true,
         *           "paymentInfoPortalURL": "https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx",
         *           "type": "STRIPE"
         *         },
         *         {
         *           "balanceDueLink": "https://billing.provider.com/balance-due",
         *           "logoURL": "https://example.com/logo.png",
         *           "name": "GovPay",
         *           "paymentConfigurable": false,
         *           "paymentConfigured": false,
         *           "paymentInfoPortalURL": null,
         *           "type": "BRING_YOUR_OWN"
         *         }
         *       ],
         *       "paymentConfigured": true,
         *       "paymentInfoPortalURL": "https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx"
         *     } */
        DescribeConsumptionBillingDetailsResult: {
            /**
             * @description The billing providers available for the customer.
             * @example [
             *       {
             *         "paymentConfigurable": true,
             *         "paymentConfigured": true,
             *         "paymentInfoPortalURL": "https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx",
             *         "type": "STRIPE"
             *       },
             *       {
             *         "balanceDueLink": "https://billing.provider.com/balance-due",
             *         "logoURL": "https://example.com/logo.png",
             *         "name": "GovPay",
             *         "paymentConfigurable": false,
             *         "paymentConfigured": false,
             *         "paymentInfoPortalURL": null,
             *         "type": "BRING_YOUR_OWN"
             *       }
             *     ]
             */
            billingProviders?: components["schemas"]["CustomerBillingProvider"][];
            /**
             * @description Deprecated. Whether the customer has configured their payment information.
             * @example true
             */
            paymentConfigured: boolean;
            /**
             * @description Deprecated. The URL from the billing provide to redirect users to so they can enter their payment information.  Only present when first adding payment information
             * @example https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
             */
            paymentInfoPortalURL?: string;
        };
        /** @example {
         *       "token": "bx"
         *     } */
        DescribeConsumptionBillingStatusRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example xu
             */
            token: string;
        };
        /** @example {
         *       "enabled": true
         *     } */
        DescribeConsumptionBillingStatusResult: {
            /**
             * @description Whether billing is enabled
             * @example true
             */
            enabled?: boolean;
        };
        /** @example {
         *       "id": "user-abcd1234",
         *       "token": "9"
         *     } */
        DescribeConsumptionUserBillingDetailsRequest: {
            /**
             * @description ID of a User
             * @example Sed consequatur.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 9
             */
            token: string;
        };
        /** @example {
         *       "billingEmbedURL": "DEPRECATED",
         *       "name": "John Dae",
         *       "paymentConfigured": true,
         *       "paymentInfoPortalURL": "https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx",
         *       "userId": "user-abcd1234"
         *     } */
        DescribeConsumptionUserBillingDetailsResult: {
            /**
             * @description DEPRECATED
             * @example DEPRECATED
             */
            billingEmbedURL?: string;
            /**
             * @description DEPRECATED: The name of the user
             * @example John Dae
             */
            name?: string;
            /**
             * @description Whether the customer has configured their payment information.
             * @example true
             */
            paymentConfigured: boolean;
            /**
             * @description The URL from the billing provide to redirect users to so they can enter their payment information.  Only present when first adding payment information
             * @example https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
             */
            paymentInfoPortalURL?: string;
            /**
             * @description ID of a User
             * @example Debitis expedita aliquam molestiae qui incidunt est.
             */
            userId?: string;
        };
        /** @example {
         *       "id": "cd-12345678",
         *       "token": "qf8"
         *     } */
        DescribeCustomDomainRequest: {
            /**
             * @description ID of an Custom Domain
             * @example Qui alias ipsa.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 8
             */
            token: string;
        };
        /**
         * @description Custom domain including the role required to access
         * @example {
         *       "customDomain": "mydomain.dev",
         *       "description": "Description of the domain",
         *       "id": "cd-12345678",
         *       "name": "Dev domain",
         *       "route53Configuration": {
         *         "awsAccountID": "123456789012",
         *         "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
         *       },
         *       "status": "READY",
         *       "statusMessage": "Account is ready"
         *     }
         */
        DescribeCustomDomainResult: {
            /**
             * @description The root domain of the domain to use as suffix
             * @example mydomain.dev
             */
            customDomain: string;
            /**
             * @description The description for the domain
             * @example Description of the domain
             */
            description: string;
            /**
             * @description ID of an Custom Domain
             * @example Eos omnis atque in ut id.
             */
            id: string;
            /**
             * @description The name of the custom domain
             * @example Dev domain
             */
            name: string;
            route53Configuration: components["schemas"]["Route53ConfigurationDescription"];
            /** @example PENDING|VERIFYING|READY|FAILED */
            status?: string;
            /**
             * @description The status message of the custom domain
             * @example Account is ready
             */
            statusMessage?: string;
        };
        /** @example {
         *       "id": "n-12345678",
         *       "token": "r43"
         *     } */
        DescribeCustomNetworkRequest: {
            /**
             * @description ID of a custom network
             * @example Placeat autem.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 8za
             */
            token: string;
        };
        /** @example {
         *       "id": "default",
         *       "token": "flg"
         *     } */
        DescribeDeploymentConfigRequest: {
            /**
             * @description The deployment configuration ID
             * @example default
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 0qf
             */
            token: string;
        };
        /** @example {
         *       "description": "A production deployment config",
         *       "id": "dc-12345678",
         *       "infraRollConfiguration": {
         *         "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
         *         "maximumNumberOfResourceInstancesPerBatch": 1,
         *         "maximumUnavailableReplicas": 1
         *       },
         *       "name": "Production",
         *       "rolloutPriorityList": [
         *         "region-12345678",
         *         "region-abcd1234",
         *         "region-3c3c3c3c"
         *       ]
         *     } */
        DescribeDeploymentConfigResult: {
            /**
             * @description A brief description of the deployment config
             * @example A production deployment config
             */
            description: string;
            /**
             * @description ID of a Deployment Config
             * @example Saepe mollitia aut.
             */
            id: string;
            infraRollConfiguration: components["schemas"]["InfraRollConfiguration"];
            /**
             * @description Name of the deployment config
             * @example Production
             */
            name: string;
            /** @example [
             *       "region-12345678",
             *       "region-abcd1234",
             *       "region-3c3c3c3c"
             *     ] */
            rolloutPriorityList: string[];
        };
        /** @example {
         *       "chartName": "my-chart",
         *       "chartVersion": "1.0.0",
         *       "token": "3c"
         *     } */
        DescribeHelmPackageRequest: {
            /**
             * @description The chart name of the Helm package to describe
             * @example my-chart
             */
            chartName: string;
            /**
             * @description The chart version of the Helm package to describe
             * @example 1.0.0
             */
            chartVersion: string;
            /**
             * @description JWT token used to perform authorization
             * @example j1
             */
            token: string;
        };
        /** @example {
         *       "id": "idp-12345678",
         *       "token": "f9u"
         *     } */
        DescribeIdentityProviderRequest: {
            /**
             * @description ID of an Identity Provider
             * @example Qui consequatur explicabo quam libero qui.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 6x
             */
            token: string;
        };
        /** @example {
         *       "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
         *       "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
         *       "clientSecret": "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",
         *       "disabled": false,
         *       "emailIdentifiers": "company.com",
         *       "environmentType": "production",
         *       "id": "idp-12345678",
         *       "identityProviderName": "Google",
         *       "loginButtonIconUrl": "https://example.com/icon.png",
         *       "loginButtonText": "Login with Google",
         *       "name": "Google for my company",
         *       "scopes": "openid email profile",
         *       "status": "Ready",
         *       "tokenEndpoint": "https://oauth2.googleapis.com/token",
         *       "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
         *     } */
        DescribeIdentityProviderResult: {
            /**
             * @description The authorization endpoint of the Identity Provider
             * @example https://accounts.google.com/o/oauth2/auth
             */
            authorizationEndpoint?: string;
            /**
             * @description The Client ID of the Identity Provider
             * @example 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
             */
            clientId: string;
            /**
             * @description The Client Secret of the Identity Provider
             * @example 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
             */
            clientSecret?: string;
            /**
             * @description Whether the Identity Provider is disabled
             * @example false
             */
            disabled?: boolean;
            /**
             * @description The email identifiers to use for the Identity Provider
             * @example company.com
             */
            emailIdentifiers?: string;
            /**
             * @description The type of environment for the Identity Provider
             * @example production
             */
            environmentType?: string;
            /**
             * @description ID of an Identity Provider
             * @example Non omnis.
             */
            id: string;
            /**
             * @description The name of the identity provider
             * @example Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
             */
            identityProviderName: string;
            /**
             * @description The URL of the icon to use for the login button
             * @example https://example.com/icon.png
             */
            loginButtonIconUrl?: string;
            /**
             * @description The text to use for the login button
             * @example Login with Google
             */
            loginButtonText?: string;
            /**
             * @description The name of the Identity Provider
             * @example Google for my company
             */
            name?: string;
            /**
             * @description The scopes to request from the Identity Provider
             * @example openid email profile
             */
            scopes?: string;
            /**
             * @description The status of an operation
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
             */
            status: string;
            /**
             * @description The token endpoint of the Identity Provider
             * @example https://oauth2.googleapis.com/token
             */
            tokenEndpoint?: string;
            /**
             * @description The user info endpoint of the Identity Provider
             * @example https://www.googleapis.com/oauth2/v3/userinfo
             */
            userInfoEndpoint?: string;
        };
        /** @example {
         *       "SupportCustomEndpoints": true,
         *       "SupportCustomScopes": false,
         *       "identityProviderName": "Google"
         *     } */
        DescribeIdentityProviderTypeResult: {
            /**
             * @description Whether the Identity Provider supports custom endpoints
             * @example true
             */
            SupportCustomEndpoints: boolean;
            /**
             * @description Whether the Identity Provider supports custom scopes
             * @example false
             */
            SupportCustomScopes: boolean;
            /**
             * @description The name of the identity provider
             * @example Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
             */
            identityProviderName: string;
        };
        /**
         * @description Describe an image configuration
         * @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Rerum veritatis cum.",
         *       "id": "imgc-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "cyr"
         *     }
         */
        DescribeImageConfigRequest: {
            /**
             * @description ID of a Product Tier
             * @example Corporis rerum velit cupiditate dolorum.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Error fugiat.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of an Image Config
             * @example Fugit sint ea.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 3r
             */
            token: string;
        };
        /** @example {
         *       "customImageCommandsAndArgs": {
         *         "args": [
         *           "-d",
         *           "mysql"
         *         ],
         *         "commands": [
         *           "echo",
         *           "Hello, World!"
         *         ]
         *       },
         *       "description": "An image configuration for my new entity",
         *       "id": "imgc-12345678",
         *       "imageName": "mysql",
         *       "imageRegistryId": "ir-12345678",
         *       "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
         *       "imageTag": "v1",
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678"
         *     } */
        DescribeImageConfigResult: {
            customImageCommandsAndArgs?: components["schemas"]["CustomImageCommandsAndArgs"];
            /**
             * @description A brief description of the image configuration
             * @example An image configuration for my new entity
             */
            description: string;
            /**
             * @description ID of an Image Config
             * @example Ut ducimus assumenda.
             */
            id: string;
            /**
             * @description Name of the container image
             * @example mysql
             */
            imageName: string;
            /**
             * @description ID of an Image Registry
             * @example Libero rerum similique in hic dolore.
             */
            imageRegistryId: string;
            /**
             * @description PEM-encoded Public key part of the key used to sign the container image
             * @example -----BEGIN PUBLIC KEY-----
             *     MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
             *     7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
             *     -----END PUBLIC KEY-----
             *
             */
            imageSignaturePublicKeyPEM?: string;
            /**
             * @description Tag representing the software image version that is currently preferred
             * @default latest
             * @example v1
             */
            imageTag: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
        };
        /**
         * @description Describe an HTTP API v2 Docker Image Registry
         * @example {
         *       "id": "ir-12345678",
         *       "token": "n47"
         *     }
         */
        DescribeImageRegistryRequest: {
            /**
             * @description ID of an Image Registry
             * @example Quae officia repellendus dolores expedita nostrum ut.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example su
             */
            token: string;
        };
        /** @example {
         *       "description": "DockerHub is a public Docker Image Registry",
         *       "host": "docker.io",
         *       "id": "ir-12345678",
         *       "name": "DockerHub",
         *       "password": "mypassword",
         *       "username": "myusername"
         *     } */
        DescribeImageRegistryResult: {
            /**
             * @description A brief description of the Image Registry
             * @example DockerHub is a public Docker Image Registry
             */
            description: string;
            /**
             * @description The Image Registry host
             * @example docker.io
             */
            host: string;
            /**
             * @description ID of an Image Registry
             * @example Illum nesciunt libero autem ea.
             */
            id: string;
            /**
             * @description Name of the Image Registry
             * @example DockerHub
             */
            name: string;
            /**
             * @description The password to use when authenticating to the Image Registry
             * @example mypassword
             */
            password?: string;
            /**
             * @description The username to use when authenticating to the Image Registry
             * @example myusername
             */
            username?: string;
        };
        /** @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Officia est.",
         *       "id": "ic-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "4w"
         *     } */
        DescribeInfraConfigRequest: {
            /**
             * @description ID of a Product Tier
             * @example Assumenda et magni.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Sed exercitationem et qui quaerat ea.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of an Infra Config
             * @example Rerum quo veritatis eum aperiam.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example fuo
             */
            token: string;
        };
        /** @example {
         *       "computeConfigId": "cc-12345678",
         *       "customTag": {
         *         "key": "customKey",
         *         "value": "customValue"
         *       },
         *       "description": "Infra config used for the base tier MySQL service",
         *       "id": "ic-12345678",
         *       "name": "MySQL Writer Infra Config",
         *       "networkConfigId": "nc-12345678",
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "storageConfigId": "sc-12345678"
         *     } */
        DescribeInfraConfigResult: {
            /**
             * @description ID of a Compute Config
             * @example Rerum eligendi.
             */
            computeConfigId?: string;
            customTag?: components["schemas"]["CustomTag"];
            /**
             * @description The description for the infra config
             * @example Infra config used for the base tier MySQL service
             */
            description: string;
            /**
             * @description ID of an Infra Config
             * @example Perferendis esse reiciendis quibusdam libero nihil.
             */
            id: string;
            /**
             * @description The name of the infra config
             * @example MySQL Writer Infra Config
             */
            name: string;
            /**
             * @description ID of a Network Config
             * @example Inventore iure quis.
             */
            networkConfigId?: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Storage Config
             * @example Molestiae maxime aut.
             */
            storageConfigId?: string;
        };
        /** @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Quibusdam eius.",
         *       "id": "var-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "5"
         *     } */
        DescribeInputParameterRequest: {
            /**
             * @description ID of a Product Tier
             * @example Similique omnis cum quia eveniet ut.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example At sint qui et dolor.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of an Input Parameter
             * @example Dolore et fugit quia sed.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example m
             */
            token: string;
        };
        /** @example {
         *       "defaultValue": "true",
         *       "dependentResourceId": "r-12345678",
         *       "description": "Minima cumque ea sunt nesciunt ipsa.",
         *       "hasOptions": true,
         *       "id": "var-12345678",
         *       "isList": false,
         *       "key": "6",
         *       "labeledOptions": {
         *         "large": "t3.xlarge",
         *         "medium": "t3.large",
         *         "small": "t3.medium"
         *       },
         *       "limits": {
         *         "max": "Distinctio rerum.",
         *         "maxLength": "Modi incidunt quibusdam et atque quia.",
         *         "min": "Qui eveniet nihil hic sit sint.",
         *         "minLength": "Iure eligendi."
         *       },
         *       "modifiable": true,
         *       "name": "j",
         *       "options": [
         *         "true",
         *         "false"
         *       ],
         *       "regex": "^[a-zA-Z0-9_-]+$",
         *       "required": true,
         *       "resourceId": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "tabIndex": 1,
         *       "type": "Boolean|Float64|String|Resource|Secret|Password"
         *     } */
        DescribeInputParameterResult: {
            /**
             * @description Default value to use for an optional input parameter represented as a string
             * @example true
             */
            defaultValue?: string;
            /**
             * @description ID of a resource
             * @example Est soluta repudiandae tempora atque.
             */
            dependentResourceId?: string;
            /**
             * @description A brief description of the input parameter
             * @example Est iste dolor ad.
             */
            description: string;
            /**
             * @description Marks the input parameter to be selectable from a list of values
             * @default false
             * @example true
             */
            hasOptions: boolean;
            /**
             * @description ID of an Input Parameter
             * @example Qui saepe incidunt consequatur.
             */
            id: string;
            /**
             * @description Marks the input parameter as a list of values
             * @default false
             * @example false
             */
            isList: boolean;
            /**
             * @description Key of the input parameter
             * @example 60j
             */
            key: string;
            /**
             * @description A map for labeled options. The key is the label and the value is the option. When the option is selected, the label will be displayed to the end customer.
             * @example {
             *       "large": "t3.xlarge",
             *       "medium": "t3.large",
             *       "small": "t3.medium"
             *     }
             */
            labeledOptions?: {
                [key: string]: string;
            };
            limits?: components["schemas"]["Limits"];
            /**
             * @description Marks the input parameter as immutable
             * @example true
             */
            modifiable: boolean;
            /**
             * @description External name for the input parameter
             * @example tl
             */
            name: string;
            /**
             * @description A list of options to restrict the value of the input parameter to (represented as a string)
             * @example [
             *       "true",
             *       "false"
             *     ]
             */
            options?: string[];
            /**
             * @description Regular expression pattern for validating the input parameter value
             * @example ^[a-zA-Z0-9_-]+$
             */
            regex?: string;
            /**
             * @description Enforces the input parameter as a required parameter
             * @example false
             */
            required: boolean;
            /**
             * @description ID of a resource
             * @example Inventore reiciendis mollitia mollitia quasi ut.
             */
            resourceId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * Format: int64
             * @description Index for parameter ordering in the SaaS portal
             * @default 0
             * @example 1
             */
            tabIndex: number;
            /**
             * @description Type of the variable encoding the value
             * @example Boolean|Float64|String|Resource|Secret|Password
             */
            type: string;
        };
        /** @example {
         *       "family": "COMPUTE_INFRA",
         *       "key": "MAX_VIRTUAL_CORES_PER_RESOURCE",
         *       "token": "x9"
         *     } */
        DescribeLimitRequest: {
            /**
             * @description The limit family
             * @example SERVICE
             */
            family: string;
            /**
             * @description Unique key to identify the limit
             * @example MAX_VIRTUAL_CORES_PER_RESOURCE
             */
            key: string;
            /**
             * @description JWT token used to perform authorization
             * @example 1
             */
            token: string;
        };
        /** @example {
         *       "description": "A premium limit",
         *       "family": "COMPUTE_INFRA",
         *       "key": "MAX_VIRTUAL_CORES_PER_RESOURCE",
         *       "modifiable": true,
         *       "name": "Premium Tier",
         *       "value": 4
         *     } */
        DescribeLimitResult: {
            /**
             * @description A brief description of the limit
             * @example A premium limit
             */
            description: string;
            /**
             * @description The limit family
             * @example SERVICE
             */
            family: string;
            /**
             * @description Unique key to identify the limit
             * @example MAX_VIRTUAL_CORES_PER_RESOURCE
             */
            key: string;
            /**
             * @description Whether the limit can be modified
             * @example true
             */
            modifiable: boolean;
            /**
             * @description Name of the limit
             * @example Premium Tier
             */
            name: string;
            /**
             * Format: int64
             * @description Value of the limit being enforced
             * @example 4
             */
            value: number;
        };
        /** @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Aut aliquid illum dolore veritatis dolor.",
         *       "id": "nc-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "b"
         *     } */
        DescribeNetworkConfigRequest: {
            /**
             * @description ID of a Product Tier
             * @example Dolorum et et.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Est qui laborum ut dolorum soluta quis.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of a Network Config
             * @example Praesentium perspiciatis assumenda assumenda delectus explicabo.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example bw
             */
            token: string;
        };
        /** @example {
         *       "description": "A multi-zone HA network config",
         *       "endpointPerReplica": true,
         *       "id": "nc-12345678",
         *       "infraConfigIDs": [
         *         "ic-12345678",
         *         "ic-abcdefgh"
         *       ],
         *       "internal": true,
         *       "name": "Multi-zone",
         *       "openPorts": [
         *         1299,
         *         3306
         *       ],
         *       "privateNetworkingConfiguration": {
         *         "privateLinkConfiguration": {
         *           "awsPrivateLinkConfigurations": [
         *             {
         *               "port": 80,
         *               "targetGroupName": "my-target-group"
         *             },
         *             {
         *               "port": 80,
         *               "targetGroupName": "my-target-group"
         *             }
         *           ]
         *         }
         *       },
         *       "publicNetworkingConfiguration": {
         *         "enableClusterLoadBalancer": true,
         *         "enableNodeLoadBalancer": true
         *       },
         *       "serviceId": "s-12345678",
         *       "stableEgressIP": true,
         *       "tlsTerminationPort": 443,
         *       "zoneConfiguration": "SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE"
         *     } */
        DescribeNetworkConfigResult: {
            /**
             * @description A brief description of the network config
             * @example A multi-zone HA network config
             */
            description: string;
            /**
             * @description Generates a DNS endpoint per-replica for this network config
             * @example true
             */
            endpointPerReplica: boolean;
            /**
             * @description ID of a Network Config
             * @example Sit aut similique.
             */
            id: string;
            /**
             * @description The list of infra config IDs associated with the compute config.
             * @example [
             *       "ic-12345678",
             *       "ic-abcdefgh"
             *     ]
             */
            infraConfigIDs?: string[];
            /**
             * @description Restrict access to this network config to the internal network
             * @example true
             */
            internal: boolean;
            /**
             * @description Name of the network config
             * @example Multi-zone
             */
            name: string;
            /**
             * @description Ports to map to the generated DNS endpoint
             * @example [
             *       1299,
             *       3306
             *     ]
             */
            openPorts: number[];
            privateNetworkingConfiguration?: components["schemas"]["PrivateNetworkingConfiguration"];
            publicNetworkingConfiguration?: components["schemas"]["PublicNetworkingConfiguration"];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description Create an external node load balancer per node rather than expose the node ip directly
             * @example true
             */
            stableEgressIP: boolean;
            /**
             * Format: int64
             * @description The port that hosts the reverse proxy for TLS termination
             * @example 443
             */
            tlsTerminationPort?: number;
            /**
             * @description The preferred type of zonal availability for this resource and the specific zone(s) to deploy in
             * @example SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
             */
            zoneConfiguration: string;
        };
        /** @example {
         *       "id": "n-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "q"
         *     } */
        DescribeNetworkRequest: {
            /**
             * @description ID of a Network
             * @example Ea tempore quisquam eum et.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example d7
             */
            token: string;
        };
        /** @example {
         *       "cidr": "10.0.0.0/16",
         *       "id": "n-12345678",
         *       "networkConfigId": "nc-12345678",
         *       "serviceId": "s-12345678",
         *       "type": "PUBLIC",
         *       "vunitId": "vu-12345678"
         *     } */
        DescribeNetworkResult: {
            /**
             * @description CIDR block for the network
             * @example 10.0.0.0/16
             */
            cidr?: string;
            /**
             * @description ID of a Network
             * @example Quaerat laborum omnis rem optio maxime.
             */
            id?: string;
            /**
             * @description ID of a Network Config
             * @example Quisquam sapiente molestiae debitis est.
             */
            networkConfigId?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description The type of network
             * @example PUBLIC
             */
            type?: string;
            /**
             * @description ID of a VUnit
             * @example Exercitationem cum vel et maiores et.
             */
            vunitId?: string;
        };
        /** @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Soluta consequuntur culpa repellendus.",
         *       "id": "op-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "k9"
         *     } */
        DescribeOutputParameterRequest: {
            /**
             * @description ID of a Product Tier
             * @example Rem aperiam et non alias.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Distinctio est.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of an Output Parameter
             * @example Voluptatem atque iure ducimus voluptatum laudantium culpa.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 0
             */
            token: string;
        };
        /** @example {
         *       "description": "Username of the user created in the target system",
         *       "id": "op-12345678",
         *       "key": "username",
         *       "name": "Username",
         *       "resourceId": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "value": "johndoe",
         *       "valueRef": "$var.username",
         *       "valueType": "Boolean|Float64|String|Secret|Password"
         *     } */
        DescribeOutputParameterResult: {
            /**
             * @description Description of the output variable being exported
             * @example Username of the user created in the target system
             */
            description: string;
            /**
             * @description ID of an Output Parameter
             * @example Consectetur id in hic.
             */
            id: string;
            /**
             * @description Key of the output variable being exported
             * @example username
             */
            key: string;
            /**
             * @description External name of the output variable being exported
             * @example Username
             */
            name: string;
            /**
             * @description ID of a resource
             * @example Esse doloremque.
             */
            resourceId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description Value of the output variable being exported
             * @example johndoe
             */
            value?: string;
            /**
             * @description Reference to an input variable that will be used to set the value of the output variable being exported
             * @example $var.username
             */
            valueRef?: string;
            /**
             * @description Type of the variable encoding the value
             * @example Boolean|Float64|String|Secret|Password
             */
            valueType?: string;
        };
        /** @example {
         *       "id": "sa-12345678",
         *       "productTierId": "pt-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "3"
         *     } */
        DescribePendingChangesRequest: {
            /**
             * @description ID of a Service API
             * @example Aliquam quam.
             */
            id: string;
            /**
             * @description ID of a Product Tier
             * @example Velit eveniet modi excepturi.
             */
            productTierId?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 4fg
             */
            token: string;
        };
        /** @example {
         *       "id": "sa-12345678",
         *       "resourceChangeSets": {
         *         "Dolores sit aut repellendus eveniet recusandae fugit.": {
         *           "categorizedResourceChanges": {
         *             "Deserunt et sed.": {
         *               "changes": [
         *                 {
         *                   "attributes": {
         *                     "resourceId": "r-12345678"
         *                   },
         *                   "changeType": "PENDING_NEW",
         *                   "name": "Customer metrics"
         *                 },
         *                 {
         *                   "attributes": {
         *                     "resourceId": "r-12345678"
         *                   },
         *                   "changeType": "PENDING_NEW",
         *                   "name": "Customer metrics"
         *                 },
         *                 {
         *                   "attributes": {
         *                     "resourceId": "r-12345678"
         *                   },
         *                   "changeType": "PENDING_NEW",
         *                   "name": "Customer metrics"
         *                 },
         *                 {
         *                   "attributes": {
         *                     "resourceId": "r-12345678"
         *                   },
         *                   "changeType": "PENDING_NEW",
         *                   "name": "Customer metrics"
         *                 }
         *               ],
         *               "status": "PENDING_UPDATE"
         *             }
         *           },
         *           "imageConfigChanges": {
         *             "changeState": "PENDING_NEW",
         *             "imageConfigId": "imgc-12345678",
         *             "imageName": "mysql"
         *           },
         *           "infraConfigChanges": {
         *             "changeState": "PENDING_NEW",
         *             "infraConfigId": "ic-12345678",
         *             "name": "MySQL Writer Infra Config"
         *           },
         *           "overallResourceStatus": "PENDING_UPDATE",
         *           "productTierFeatureChanges": "PENDING_UPDATE",
         *           "resourceChanges": "PENDING_DELETE",
         *           "resourceName": "Voluptas est dolorem."
         *         }
         *       },
         *       "serviceId": "s-12345678"
         *     } */
        DescribePendingChangesResult: {
            /**
             * @description ID of a Service API
             * @example Fuga hic neque dolor.
             */
            id: string;
            /**
             * @description The difference for the service API configuration per resource
             * @example {
             *       "Dolores sit aut repellendus eveniet recusandae fugit.": {
             *         "categorizedResourceChanges": {
             *           "Deserunt et sed.": {
             *             "changes": [
             *               {
             *                 "attributes": {
             *                   "resourceId": "r-12345678"
             *                 },
             *                 "changeType": "PENDING_NEW",
             *                 "name": "Customer metrics"
             *               },
             *               {
             *                 "attributes": {
             *                   "resourceId": "r-12345678"
             *                 },
             *                 "changeType": "PENDING_NEW",
             *                 "name": "Customer metrics"
             *               },
             *               {
             *                 "attributes": {
             *                   "resourceId": "r-12345678"
             *                 },
             *                 "changeType": "PENDING_NEW",
             *                 "name": "Customer metrics"
             *               },
             *               {
             *                 "attributes": {
             *                   "resourceId": "r-12345678"
             *                 },
             *                 "changeType": "PENDING_NEW",
             *                 "name": "Customer metrics"
             *               }
             *             ],
             *             "status": "PENDING_UPDATE"
             *           }
             *         },
             *         "imageConfigChanges": {
             *           "changeState": "PENDING_NEW",
             *           "imageConfigId": "imgc-12345678",
             *           "imageName": "mysql"
             *         },
             *         "infraConfigChanges": {
             *           "changeState": "PENDING_NEW",
             *           "infraConfigId": "ic-12345678",
             *           "name": "MySQL Writer Infra Config"
             *         },
             *         "overallResourceStatus": "PENDING_UPDATE",
             *         "productTierFeatureChanges": "PENDING_UPDATE",
             *         "resourceChanges": "PENDING_DELETE",
             *         "resourceName": "Voluptas est dolorem."
             *       }
             *     }
             */
            resourceChangeSets: {
                [key: string]: unknown;
            };
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
        };
        /** @example {
         *       "id": "p-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "b6"
         *     } */
        DescribePipelineRequest: {
            /**
             * @description ID of a Pipeline
             * @example Expedita voluptas recusandae laudantium.
             */
            id?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example r
             */
            token: string;
        };
        /** @example {
         *       "description": "MySQL SaaS promotion pipeline",
         *       "id": "p-12345678",
         *       "name": "my-pipeline",
         *       "serviceEnvironmentSequence": [
         *         "se-12345678",
         *         "se-23456789"
         *       ],
         *       "serviceId": "s-12345678"
         *     } */
        DescribePipelineResult: {
            /**
             * @description Description of the pipeline
             * @example MySQL SaaS promotion pipeline
             */
            description?: string;
            /**
             * @description ID of a Pipeline
             * @example Deleniti officiis.
             */
            id?: string;
            /**
             * @description Name of the pipeline
             * @example my-pipeline
             */
            name?: string;
            /**
             * @description Sequence of service environments to be deployed in the pipeline
             * @example [
             *       "se-12345678",
             *       "se-23456789"
             *     ]
             */
            serviceEnvironmentSequence?: string[];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
        };
        /** @example {
         *       "token": "zf"
         *     } */
        DescribePlanRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example 1
             */
            token: string;
        };
        /** @example {
         *       "modifiedAt": "2023-01-01T00:00:00Z",
         *       "paymentConfigured": true,
         *       "paymentInfoPortalURL": "https://billing.stripe.com/p/session/abc123",
         *       "planCoreHourCost": 0.05,
         *       "planDescription": "The starter plan is priced at 'X' units",
         *       "planFrequency": "MONTHLY",
         *       "planMonthlyCost": 49,
         *       "planName": "STARTER",
         *       "startDate": "2023-01-01"
         *     } */
        DescribePlanResult: {
            /**
             * @description The time the plan was last modified
             * @example 2023-01-01T00:00:00Z
             */
            modifiedAt?: string;
            /**
             * @description Whether the customer has configured their payment information.
             * @example true
             */
            paymentConfigured?: boolean;
            /**
             * @description The URL from Stripe to configure payment information
             * @example https://billing.stripe.com/p/session/abc123
             */
            paymentInfoPortalURL?: string;
            /**
             * Format: double
             * @description The cost per core hour of this plan
             * @example 0.05
             */
            planCoreHourCost?: number;
            /**
             * @description The description of the plan
             * @example The starter plan is priced at 'X' units
             */
            planDescription?: string;
            /**
             * @description This parameter tells you if the plan is charged monthly or yearly
             * @example MONTHLY
             */
            planFrequency?: string;
            /**
             * Format: double
             * @description The minimum monthly cost of this plan
             * @example 49
             */
            planMonthlyCost?: number;
            /**
             * @description This parameter is used to select the appropriate Product Plan
             * @example STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
             */
            planName: string;
            /**
             * @description The date that the plan starts
             * @example 2023-01-01
             */
            startDate?: string;
        };
        /** @example {
         *       "id": "pt-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "en6",
         *       "version": "3.0"
         *     } */
        DescribeProductTierRequest: {
            /**
             * @description ID of a Product Tier
             * @example In omnis autem iste consequuntur aperiam molestiae.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example wwz
             */
            token: string;
            /**
             * @description The version number for the specific version set
             * @example 3.0
             */
            version?: string;
        };
        /** @example {
         *       "allowCreatesWhenPaymentNotConfigured": true,
         *       "apiGroups": {
         *         "r-12345678": "v1",
         *         "r-23456789": "v2",
         *         "r-34567890": "v3"
         *       },
         *       "autoApproveSubscription": false,
         *       "awsRegions": [
         *         "us-east-2",
         *         "ca-central-1"
         *       ],
         *       "azureRegions": [
         *         "northcentralus"
         *       ],
         *       "billingProductID": "abc123",
         *       "billingProviders": [
         *         "STRIPE",
         *         "BRING_YOUR_OWN"
         *       ],
         *       "cloudProvidersConfigReadiness": {
         *         "aws": {
         *           "resourceA": "missing terraform configuration",
         *           "resourceB": "missing cloudformation configuration"
         *         }
         *       },
         *       "defaultBillingProvider": "STRIPE",
         *       "description": "A premium product tier",
         *       "documentation": "Any documentation",
         *       "enabledFeatures": [
         *         {
         *           "configuration": {
         *             "provider": "native"
         *           },
         *           "feature": "LOGS",
         *           "scope": "INTERNAL"
         *         },
         *         {
         *           "configuration": {
         *             "provider": "native"
         *           },
         *           "feature": "LOGS",
         *           "scope": "INTERNAL"
         *         },
         *         {
         *           "configuration": {
         *             "provider": "native"
         *           },
         *           "feature": "LOGS",
         *           "scope": "INTERNAL"
         *         }
         *       ],
         *       "exportUsageMetering": true,
         *       "exportUsageMeteringConfig": {
         *         "GCS": {
         *           "GCSBucketName": "my_billing_bucket_name"
         *         },
         *         "S3": {
         *           "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
         *           "S3BucketRegion": "us-east-1"
         *         }
         *       },
         *       "features": {
         *         "LOGS": true,
         *         "METRICS": false
         *       },
         *       "gcpRegions": [
         *         "us-central1"
         *       ],
         *       "id": "pt-12345678",
         *       "isDisabled": false,
         *       "key": "premium",
         *       "maxNumberOfInstances": 5,
         *       "name": "Premium",
         *       "planDescription": "A premium plan",
         *       "pricePerUnit": {
         *         "CPU core hours": {
         *           "amount": 0.001,
         *           "currency": "USD"
         *         },
         *         "Memory GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         },
         *         "Storage GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         }
         *       },
         *       "pricing": {
         *         "price1": "value1"
         *       },
         *       "privateRegions": [
         *         "n/a"
         *       ],
         *       "serviceId": "s-12345678",
         *       "serviceModelId": "sm-12345678",
         *       "support": "Any support",
         *       "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *     } */
        DescribeProductTierResult: {
            /**
             * @description Allow creates when payment not configured
             * @example true
             */
            allowCreatesWhenPaymentNotConfigured?: boolean;
            /**
             * @description The resources that belong to this service API bundle and their active versions
             * @example {
             *       "r-12345678": "v1",
             *       "r-23456789": "v2",
             *       "r-34567890": "v3"
             *     }
             */
            apiGroups?: {
                [key: string]: unknown;
            };
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description The AWS regions that this product tier is available on
             * @example [
             *       "us-east-2",
             *       "ca-central-1"
             *     ]
             */
            awsRegions?: string[];
            /**
             * @description The Azure regions that this product tier is available on
             * @example [
             *       "northcentralus"
             *     ]
             */
            azureRegions?: string[];
            /**
             * @description Optional billing product ID for tax purposes
             * @example abc123
             */
            billingProductID?: string;
            /**
             * @description List of billing providers to be used for the product tier
             * @example [
             *       "STRIPE",
             *       "BRING_YOUR_OWN"
             *     ]
             */
            billingProviders?: string[];
            cloudProvidersConfigReadiness?: components["schemas"]["CloudProvidersConfigReadiness"];
            /**
             * @description The billing provider type
             * @example STRIPE|BRING_YOUR_OWN
             */
            defaultBillingProvider?: string;
            /**
             * @description A brief description of the product tier
             * @example A premium product tier
             */
            description: string;
            /**
             * @description Documentation
             * @example Any documentation
             */
            documentation: string;
            /**
             * @description The features that are enabled for this product tier, including scope details and configuration
             * @example [
             *       {
             *         "configuration": {
             *           "provider": "native"
             *         },
             *         "feature": "LOGS",
             *         "scope": "INTERNAL"
             *       },
             *       {
             *         "configuration": {
             *           "provider": "native"
             *         },
             *         "feature": "LOGS",
             *         "scope": "INTERNAL"
             *       }
             *     ]
             */
            enabledFeatures?: components["schemas"]["ProductTierFeatureDetail"][];
            /**
             * @description Export usage metering data
             * @example true
             */
            exportUsageMetering?: boolean;
            /**
             * @description Export usage metering data configuration
             * @example {
             *       "GCS": {
             *         "GCSBucketName": "my_billing_bucket_name"
             *       },
             *       "S3": {
             *         "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
             *         "S3BucketRegion": "us-east-1"
             *       }
             *     }
             */
            exportUsageMeteringConfig?: {
                [key: string]: unknown;
            };
            /**
             * @description The features that are enabled / disabled for this product tier
             * @example {
             *       "LOGS": true,
             *       "METRICS": false
             *     }
             */
            features?: {
                [key: string]: unknown;
            };
            /**
             * @description The GCP regions that this product tier is available on
             * @example [
             *       "us-central1"
             *     ]
             */
            gcpRegions?: string[];
            /**
             * @description ID of a Product Tier
             * @example Vero deleniti tempore aut eius fugiat nostrum.
             */
            id: string;
            /**
             * @description Flag to indicate if the product tier is disabled.
             * @example false
             */
            isDisabled: boolean;
            /**
             * @description Unique Key of the product tier
             * @example premium
             */
            key: string;
            /**
             * Format: int64
             * @description Maximum number of instances
             * @example 5
             */
            maxNumberOfInstances?: number;
            /**
             * @description Name of the product tier
             * @example Premium
             */
            name: string;
            /**
             * @description A brief description for the end user of the product tier
             * @example A premium plan
             */
            planDescription: string;
            /**
             * @description Price per unit.
             * @example {
             *       "CPU core hours": {
             *         "amount": 0.001,
             *         "currency": "USD"
             *       },
             *       "Memory GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       },
             *       "Storage GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       }
             *     }
             */
            pricePerUnit?: {
                [key: string]: unknown;
            };
            /**
             * @description Pricing
             * @example {
             *       "price1": "value1"
             *     }
             */
            pricing: unknown;
            /**
             * @description The Private regions that this product tier is available on
             * @example [
             *       "n/a"
             *     ]
             */
            privateRegions?: string[];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Service Model
             * @example Quibusdam ad qui illum.
             */
            serviceModelId: string;
            /**
             * @description Support
             * @example Any support
             */
            support: string;
            /**
             * @description ProductTierType is the type of tier for a product
             * @example OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
             */
            tierType: string;
        };
        /** @example {
         *       "id": "region-12345678",
         *       "token": "q"
         *     } */
        DescribeRegionRequest: {
            /**
             * @description ID of a Region
             * @example Omnis doloribus.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example n
             */
            token: string;
        };
        /** @example {
         *       "cloudProviderId": "infra-12345678",
         *       "cloudProviderName": "aws",
         *       "code": "us-east-1",
         *       "description": "US East (N. Virginia)",
         *       "id": "region-12345678"
         *     } */
        DescribeRegionResult: {
            /**
             * @description ID of an CloudProvider
             * @example Unde nobis.
             */
            cloudProviderId: string;
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /**
             * @description Cloud-provider native region code
             * @example us-east-1
             */
            code: string;
            /**
             * @description Description of the Region
             * @example US East (N. Virginia)
             */
            description: string;
            /**
             * @description ID of a Region
             * @example Voluptas accusantium reiciendis doloremque blanditiis fugiat et.
             */
            id: string;
        };
        /** @example {
         *       "id": "instance-abcd1234",
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "v"
         *     } */
        DescribeResourceInstanceRequest: {
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Est magnam eum assumenda qui.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example hz
             */
            token: string;
        };
        /** @example {
         *       "active": true,
         *       "autoscalingEnabled": true,
         *       "awsAccountID": "123456789012",
         *       "azureSubscriptionID": "0fa05079-dd73-4b88-babc-05537817604a",
         *       "backupStatus": {
         *         "backupPeriodInHours": 2,
         *         "backupRetentionInDays": 7,
         *         "earliestRestoreTime": "2021-09-01T00:00:00Z",
         *         "lastBackupTime": "2021-09-01T00:00:00Z"
         *       },
         *       "cloud_provider": "aws",
         *       "created_at": "2023-01-10T00:00:00Z",
         *       "createdByUserId": "user-12345678",
         *       "createdByUserName": "John Doe",
         *       "currentReplicas": "2",
         *       "customNetworkDetail": {
         *         "cidr": "10.177.0.0/16",
         *         "id": "n-12345678",
         *         "name": "Prod us-east-1"
         *       },
         *       "detailedNetworkTopology": {
         *         "r-abcd1234": {
         *           "allowedIPRanges": [
         *             "0.0.0.0/0"
         *           ],
         *           "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *           "clusterPorts": [
         *             3306
         *           ],
         *           "isJob": false,
         *           "jobMetrics": [
         *             {
         *               "additionalData": {
         *                 "exitCode": 0,
         *                 "status": "Succeeded"
         *               },
         *               "endTime": "2023-01-01T10:05:00Z",
         *               "metricType": "cpu_core_seconds",
         *               "startTime": "2023-01-01T10:00:00Z",
         *               "value": 120.5
         *             },
         *             {
         *               "additionalData": {
         *                 "peakMemoryUsage": "512MB"
         *               },
         *               "endTime": "2023-01-01T10:05:00Z",
         *               "metricType": "memory_mb_seconds",
         *               "startTime": "2023-01-01T10:00:00Z",
         *               "value": 2560
         *             }
         *           ],
         *           "main": true,
         *           "networkingType": "PUBLIC",
         *           "nodes": [
         *             {
         *               "availabilityZone": "us-east-2a",
         *               "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *               "healthStatus": "healthy",
         *               "id": "primary-0",
         *               "ports": [
         *                 3306
         *               ],
         *               "status": "RUNNING"
         *             }
         *           ],
         *           "privateNetworkCIDR": "10.0.0.2/24",
         *           "privateNetworkID": "n-1234abcd",
         *           "publiclyAccessible": true,
         *           "resourceKey": "primary",
         *           "resourceName": "Primary MySQL Instance"
         *         }
         *       },
         *       "externalPayerId": "external-payer-id-1234",
         *       "gcpProjectID": "my-project",
         *       "highAvailability": true,
         *       "id": "instance-abcd1234",
         *       "instanceLoadStatus": "LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A",
         *       "kubernetesDashboardEndpoint": {
         *         "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
         *         "deploymentCellID": "hc-12345678"
         *       },
         *       "last_modified_at": "2023-01-20T00:00:00Z",
         *       "maintenanceTasks": {
         *         "backups": [
         *           {
         *             "backup_id": "bk-12345678"
         *           }
         *         ],
         *         "upgrade_paths": [
         *           {
         *             "upgrade_path_id": "up-9876543",
         *             "upgrade_path_instance_status": "PENDING",
         *             "upgrade_path_scheduled_at": "2023-01-01T10:00:00Z",
         *             "upgrade_path_status": "IN_PROGRESS"
         *           },
         *           {
         *             "upgrade_path_id": "up-12345548",
         *             "upgrade_path_instance_status": "PENDING",
         *             "upgrade_path_released_at": "2023-01-01T09:00:00Z",
         *             "upgrade_path_scheduled_at": "2023-01-01T10:00:00Z",
         *             "upgrade_path_status": "SCHEDULED"
         *           }
         *         ]
         *       },
         *       "maxReplicas": "1",
         *       "minReplicas": "1",
         *       "network_type": "PUBLIC|INTERNAL",
         *       "productTierFeatures": {
         *         "LOGS": {
         *           "auth": {
         *             "password": "px3c4d5f6g7h8i",
         *             "username": "abcd1234"
         *           },
         *           "enabled": true,
         *           "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
         *         },
         *         "METRICS": {
         *           "enabled": false
         *         }
         *       },
         *       "region": "us-east-1",
         *       "resourceID": "r-abcd1234",
         *       "result_params": {
         *         "param1": "value1",
         *         "param2": "value2"
         *       },
         *       "serverlessEnabled": true,
         *       "status": "RUNNING",
         *       "subscriptionId": "sub-abcd1234",
         *       "subscriptionLicense": {
         *         "certificateBase64": "public-cert",
         *         "expirationDate": "2024-01-01T10:00:00Z",
         *         "licenseBase64": "license-file"
         *       },
         *       "subscriptionStatus": "ACTIVE",
         *       "tierVersion": "1.0"
         *     } */
        DescribeResourceInstanceResult: {
            /**
             * @description True if this resource instance has associated infrastructure deployed
             * @example true
             */
            active?: boolean;
            /**
             * @description Whether the instance has autoscaling enabled
             * @example true
             */
            autoscalingEnabled?: boolean;
            /**
             * @description The AWS account ID
             * @example 123456789012
             */
            awsAccountID?: string;
            /**
             * @description The Azure subscription ID
             * @example 0fa05079-dd73-4b88-babc-05537817604a
             */
            azureSubscriptionID?: string;
            backupStatus?: components["schemas"]["BackupStatus"];
            /**
             * @description The cloud provider name
             * @example aws
             */
            cloud_provider?: string;
            /**
             * @description The instance creation time
             * @example 2023-01-10T00:00:00Z
             */
            created_at?: string;
            /**
             * @description ID of a User
             * @example Earum aut.
             */
            createdByUserId?: string;
            /**
             * @description The name of the user that created the resource instance
             * @example John Doe
             */
            createdByUserName?: string;
            /**
             * @description The current number of replicas
             * @example 2
             */
            currentReplicas?: string;
            customNetworkDetail?: components["schemas"]["CustomNetworkResourceDetail"];
            /**
             * @description The detailed network topology
             * @example {
             *       "r-abcd1234": {
             *         "allowedIPRanges": [
             *           "0.0.0.0/0"
             *         ],
             *         "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *         "clusterPorts": [
             *           3306
             *         ],
             *         "isJob": false,
             *         "jobMetrics": [
             *           {
             *             "additionalData": {
             *               "exitCode": 0,
             *               "status": "Succeeded"
             *             },
             *             "endTime": "2023-01-01T10:05:00Z",
             *             "metricType": "cpu_core_seconds",
             *             "startTime": "2023-01-01T10:00:00Z",
             *             "value": 120.5
             *           },
             *           {
             *             "additionalData": {
             *               "peakMemoryUsage": "512MB"
             *             },
             *             "endTime": "2023-01-01T10:05:00Z",
             *             "metricType": "memory_mb_seconds",
             *             "startTime": "2023-01-01T10:00:00Z",
             *             "value": 2560
             *           }
             *         ],
             *         "main": true,
             *         "networkingType": "PUBLIC",
             *         "nodes": [
             *           {
             *             "availabilityZone": "us-east-2a",
             *             "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *             "healthStatus": "healthy",
             *             "id": "primary-0",
             *             "ports": [
             *               3306
             *             ],
             *             "status": "RUNNING"
             *           }
             *         ],
             *         "privateNetworkCIDR": "10.0.0.2/24",
             *         "privateNetworkID": "n-1234abcd",
             *         "publiclyAccessible": true,
             *         "resourceKey": "primary",
             *         "resourceName": "Primary MySQL Instance"
             *       }
             *     }
             */
            detailedNetworkTopology?: {
                [key: string]: unknown;
            };
            /**
             * @description The external payer id to record which customer should pay for this resource instance
             * @example external-payer-id-1234
             */
            externalPayerId?: string;
            /**
             * @description The GCP project ID
             * @example my-project
             */
            gcpProjectID?: string;
            /**
             * @description Whether the instance is High Availability
             * @example true
             */
            highAvailability?: boolean;
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id?: string;
            /**
             * @description The load status of a pod
             * @example LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
             */
            instanceLoadStatus?: string;
            kubernetesDashboardEndpoint?: components["schemas"]["KubernetesDashboardEndpoint"];
            /**
             * @description The instance update time
             * @example 2023-01-20T00:00:00Z
             */
            last_modified_at?: string;
            maintenanceTasks?: components["schemas"]["ResourceMaintenanceTasks"];
            /**
             * @description The maximum number of replicas
             * @example 1
             */
            maxReplicas?: string;
            /**
             * @description The minimum number of replicas
             * @example 1
             */
            minReplicas?: string;
            /**
             * @description The network type
             * @example PUBLIC|INTERNAL
             */
            network_type?: string;
            /**
             * @description The product tier features
             * @example {
             *       "LOGS": {
             *         "auth": {
             *           "password": "px3c4d5f6g7h8i",
             *           "username": "abcd1234"
             *         },
             *         "enabled": true,
             *         "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
             *       },
             *       "METRICS": {
             *         "enabled": false
             *       }
             *     }
             */
            productTierFeatures?: {
                [key: string]: unknown;
            };
            /**
             * @description The region code
             * @example us-east-1
             */
            region?: string;
            /**
             * @description ID of a resource
             * @example Et cum.
             */
            resourceID?: string;
            /**
             * @description Custom result parameters
             * @example {
             *       "param1": "value1",
             *       "param2": "value2"
             *     }
             */
            result_params?: unknown;
            /**
             * @description Whether the instance has serverless enabled
             * @example true
             */
            serverlessEnabled?: boolean;
            /**
             * @description The status of an operation
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
             */
            status?: string;
            /**
             * @description Subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            subscriptionLicense?: components["schemas"]["SubscriptionLicense"];
            /**
             * @description Subscription Status
             * @example ACTIVE|SUSPENDED|TERMINATED|CANCELLED
             */
            subscriptionStatus?: string;
            /**
             * @description The tier version of the resource instance.
             * @example 1.0
             */
            tierVersion?: string;
        };
        /** @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Dolor laborum mollitia quis animi voluptas.",
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "4"
         *     } */
        DescribeResourceMetricsConfigRequest: {
            /**
             * @description ID of a Product Tier
             * @example Dolorum iure iure deserunt sit iure architecto.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Quasi soluta dolor quae reprehenderit voluptatibus et.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of a resource
             * @example Suscipit amet nostrum doloremque iste quia.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example cp
             */
            token: string;
        };
        /** @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Amet harum sed nulla.",
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "1"
         *     } */
        DescribeResourceRequest: {
            /**
             * @description ID of a Product Tier
             * @example Aliquam beatae facere alias omnis.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Occaecati sint omnis quibusdam perspiciatis ea veniam.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of a resource
             * @example Corporis minus.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example qw
             */
            token: string;
        };
        /** @example {
         *       "actionHooks": [
         *         {
         *           "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
         *           "scope": "CLUSTER",
         *           "type": "INIT"
         *         }
         *       ],
         *       "additionalSecurityContext": {
         *         "AddCapabilities": [
         *           "CAP_NET_ADMIN",
         *           "CAP_NET_RAW"
         *         ],
         *         "DropCapabilities": [
         *           "CAP_NET_ADMIN",
         *           "CAP_NET_RAW"
         *         ],
         *         "SupplementalGroupIDs": [
         *           1001,
         *           999
         *         ]
         *       },
         *       "backupConfiguration": {
         *         "backupPeriodInHours": 24,
         *         "backupRetentionInDays": 7
         *       },
         *       "blobStorageConfiguration": {
         *         "GCSConfiguration": {},
         *         "S3Configuration": {}
         *       },
         *       "capabilities": [
         *         {
         *           "capability": "SERVERLESS",
         *           "configuration": {
         *             "EnableAutoStop": true,
         *             "MinimumNodesInPool": 5,
         *             "PortsMappingProxyConfig": {
         *               "MaxNumberOfClustersPerProxyInstance": 50,
         *               "NumberOfPortsPerCluster": 4
         *             },
         *             "ProxyId": "r-123456",
         *             "ReferenceProxyKey": "resource-proxy",
         *             "TargetPort": 5432
         *           }
         *         },
         *         {
         *           "capability": "SERVERLESS",
         *           "configuration": {
         *             "EnableAutoStop": true,
         *             "MinimumNodesInPool": 5,
         *             "PortsMappingProxyConfig": {
         *               "MaxNumberOfClustersPerProxyInstance": 50,
         *               "NumberOfPortsPerCluster": 4
         *             },
         *             "ProxyId": "r-123456",
         *             "ReferenceProxyKey": "resource-proxy",
         *             "TargetPort": 5432
         *           }
         *         },
         *         {
         *           "capability": "SERVERLESS",
         *           "configuration": {
         *             "EnableAutoStop": true,
         *             "MinimumNodesInPool": 5,
         *             "PortsMappingProxyConfig": {
         *               "MaxNumberOfClustersPerProxyInstance": 50,
         *               "NumberOfPortsPerCluster": 4
         *             },
         *             "ProxyId": "r-123456",
         *             "ReferenceProxyKey": "resource-proxy",
         *             "TargetPort": 5432
         *           }
         *         }
         *       ],
         *       "customLabels": {
         *         "key": "value"
         *       },
         *       "customSysCTLs": {
         *         "net.ipv4.tcp_syncookies": "1"
         *       },
         *       "customULimits": [
         *         {
         *           "ULimitsName": "NoProc",
         *           "ULimitsType": "Soft",
         *           "ULimitsValue": 1000
         *         },
         *         {
         *           "ULimitsName": "NoFile",
         *           "ULimitsType": "Hard",
         *           "ULimitsValue": 2048
         *         }
         *       ],
         *       "dependencies": [
         *         {
         *           "parameterMap": {
         *             "clusterId": "writerId",
         *             "clusterOrg": "userDatabase"
         *           },
         *           "resourceId": "r-12345678"
         *         },
         *         {
         *           "parameterMap": {
         *             "clusterId": "readerId",
         *             "clusterOrg": "userDatabase"
         *           },
         *           "resourceId": "r-abcdef12"
         *         }
         *       ],
         *       "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
         *       "environmentVariables": [
         *         {
         *           "name": "MYSQL_ROOT_PASSWORD",
         *           "value": "password"
         *         }
         *       ],
         *       "fileSystemConfiguration": {
         *         "EFSFileSystemConfiguration": {
         *           "PerformanceMode": "generalPurpose|maxIO",
         *           "ProvisionedThroughputInMibps": 125,
         *           "ThroughputMode": "provisioned|bursting|elastic"
         *         }
         *       },
         *       "helmChartConfiguration": {
         *         "chartName": "my-chart",
         *         "chartRepoName": "my-repo",
         *         "chartRepoUrl": "https://my-repo.com",
         *         "chartValues": {
         *           "key1": "value1",
         *           "key2": 3,
         *           "key3": {
         *             "key4": "value4"
         *           }
         *         },
         *         "chartVersion": "1.0.0",
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "layeredChartValues": [
         *           {
         *             "values": {
         *               "global": {
         *                 "image": {
         *                   "tag": "v1.0.0"
         *                 },
         *                 "replicaCount": 1,
         *                 "resources": {
         *                   "requests": {
         *                     "cpu": "100m",
         *                     "memory": "128Mi"
         *                   }
         *                 }
         *               }
         *             }
         *           },
         *           {
         *             "scope": {
         *               "{{ $sys.cloudProviderName }}": "aws"
         *             },
         *             "valuesFile": {
         *               "gitConfiguration": {
         *                 "accessToken": "ghp_...",
         *                 "commitSHA": "a1b2c3d4e5f6",
         *                 "path": "aws/production.yaml",
         *                 "referenceName": "refs/heads/main",
         *                 "repositoryUrl": "https://github.com/org/helm-values"
         *               }
         *             }
         *           }
         *         ],
         *         "namespace": "postgres",
         *         "password": "my-password",
         *         "runtimeConfiguration": {
         *           "disableHooks": true,
         *           "recreate": true,
         *           "resetThenReuseValues": true,
         *           "resetValues": true,
         *           "reuseValues": true,
         *           "skipCRDs": true,
         *           "timeoutNanos": 1000000000,
         *           "upgradeCRDs": true,
         *           "wait": true,
         *           "waitForJobs": true
         *         },
         *         "username": "my-user"
         *       },
         *       "id": "r-12345678",
         *       "imageConfigId": "imgc-12345678",
         *       "infraConfigId": "ic-12345678",
         *       "internal": false,
         *       "isDeprecated": false,
         *       "jobConfig": {
         *         "activeDeadlineSeconds": 300,
         *         "backoffLimit": 5
         *       },
         *       "key": "galera",
         *       "kustomizeConfiguration": {
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "gitConfiguration": {
         *           "accessToken": "my-token",
         *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *           "referenceName": "tags/v1.0.0",
         *           "repositoryUrl": "https://github.com/username/myrepo",
         *           "userName": "my-user"
         *         },
         *         "helmChartDependencies": [
         *           {
         *             "chartName": "cert-manager",
         *             "chartVersion": "v1.5.3"
         *           },
         *           {
         *             "chartName": "nginx-ingress",
         *             "chartVersion": "v0.48.1"
         *           },
         *           {
         *             "chartName": "external-dns",
         *             "chartVersion": "v0.7.0"
         *           },
         *           {
         *             "chartName": "cnpg-operator",
         *             "chartVersion": "v0.23.1"
         *           }
         *         ],
         *         "kustomizePath": "/kustomize"
         *       },
         *       "l4LoadBalancerConfiguration": {
         *         "ingressPortConfiguration": [
         *           {
         *             "associatedResourceIDs": [
         *               "r-12345678",
         *               "r-abcdef12"
         *             ],
         *             "backendPort": 8080,
         *             "ingressPort": 1234
         *           },
         *           {
         *             "associatedResourceIDs": [
         *               "r-12345678",
         *               "r-abcdef12"
         *             ],
         *             "backendPort": 8081,
         *             "ingressPort": 5678
         *           },
         *           {
         *             "associatedResourceIDs": [
         *               "r-vwxybz12",
         *               "r-poij122v"
         *             ],
         *             "backendPort": 8082,
         *             "ingressPort": 9012
         *           }
         *         ]
         *       },
         *       "l7LoadBalancerConfiguration": {
         *         "paths": [
         *           {
         *             "associatedResourceID": "r-12345678",
         *             "path": "/path",
         *             "port": 8080
         *           }
         *         ]
         *       },
         *       "name": "Galera",
         *       "onPremTerraformConfigurations": {
         *         "OpenShift": {
         *           "gitConfiguration": {
         *             "referenceName": "ref",
         *             "repositoryUrl": "gitUrl"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "terraformPath": "/project1/tf"
         *         }
         *       },
         *       "operatorCRDConfiguration": {
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "helmChartDependencies": [
         *           {
         *             "chartName": "cert-manager",
         *             "chartVersion": "v1.5.3"
         *           },
         *           {
         *             "chartName": "nginx-ingress",
         *             "chartVersion": "v0.48.1"
         *           },
         *           {
         *             "chartName": "external-dns",
         *             "chartVersion": "v0.7.0"
         *           },
         *           {
         *             "chartName": "cnpg-operator",
         *             "chartVersion": "v0.23.1"
         *           }
         *         ],
         *         "outputParameters": {
         *           "expiresAt": "$out.status.notAfter",
         *           "issuerName": "letsencrypt-prod"
         *         },
         *         "readinessConditions": {
         *           "$out.status.conditions[?(@.type=='Ready')].status": true
         *         },
         *         "supplementalFiles": [
         *           "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
         *           "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
         *         ],
         *         "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
         *       },
         *       "productTierId": "pt-12345678",
         *       "proxyType": "PortsBasedProxy",
         *       "resourceType": "Generic",
         *       "serviceId": "s-12345678",
         *       "terraformConfigurations": {
         *         "aws": {
         *           "gitConfiguration": {
         *             "referenceName": "ref",
         *             "repositoryUrl": "gitUrl"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "terraformPath": "/project1/tf"
         *         }
         *       }
         *     } */
        DescribeResourceResult: {
            /**
             * @description The action hooks that this resource supports
             * @example [
             *       {
             *         "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
             *         "scope": "CLUSTER",
             *         "type": "INIT"
             *       }
             *     ]
             */
            actionHooks?: components["schemas"]["ActionHook"][];
            additionalSecurityContext?: components["schemas"]["AdditionalSecurityContext"];
            backupConfiguration?: components["schemas"]["BackupConfiguration"];
            blobStorageConfiguration?: components["schemas"]["BlobStorageConfiguration"];
            /**
             * @description The capabilities enabled for the resource
             * @example [
             *       {
             *         "capability": "SERVERLESS",
             *         "configuration": {
             *           "EnableAutoStop": true,
             *           "MinimumNodesInPool": 5,
             *           "PortsMappingProxyConfig": {
             *             "MaxNumberOfClustersPerProxyInstance": 50,
             *             "NumberOfPortsPerCluster": 4
             *           },
             *           "ProxyId": "r-123456",
             *           "ReferenceProxyKey": "resource-proxy",
             *           "TargetPort": 5432
             *         }
             *       },
             *       {
             *         "capability": "SERVERLESS",
             *         "configuration": {
             *           "EnableAutoStop": true,
             *           "MinimumNodesInPool": 5,
             *           "PortsMappingProxyConfig": {
             *             "MaxNumberOfClustersPerProxyInstance": 50,
             *             "NumberOfPortsPerCluster": 4
             *           },
             *           "ProxyId": "r-123456",
             *           "ReferenceProxyKey": "resource-proxy",
             *           "TargetPort": 5432
             *         }
             *       }
             *     ]
             */
            capabilities?: components["schemas"]["ResourceCapability"][];
            /**
             * @description Custom labels for the resource
             * @example {
             *       "key": "value"
             *     }
             */
            customLabels?: {
                [key: string]: string;
            };
            /**
             * @description Custom sysctl settings for the resource
             * @example {
             *       "net.ipv4.tcp_syncookies": "1"
             *     }
             */
            customSysCTLs?: {
                [key: string]: string;
            };
            /**
             * @description Custom ulimits for the resource
             * @example [
             *       {
             *         "ULimitsName": "NoProc",
             *         "ULimitsType": "Soft",
             *         "ULimitsValue": 1000
             *       },
             *       {
             *         "ULimitsName": "NoFile",
             *         "ULimitsType": "Hard",
             *         "ULimitsValue": 2048
             *       }
             *     ]
             */
            customULimits?: components["schemas"]["CustomULimits"][];
            /** @example [
             *       {
             *         "parameterMap": {
             *           "clusterId": "writerId",
             *           "clusterOrg": "userDatabase"
             *         },
             *         "resourceId": "r-12345678"
             *       },
             *       {
             *         "parameterMap": {
             *           "clusterId": "readerId",
             *           "clusterOrg": "userDatabase"
             *         },
             *         "resourceId": "r-abcdef12"
             *       }
             *     ] */
            dependencies?: components["schemas"]["ResourceDependency"][];
            /**
             * @description A brief description of the resource
             * @example An resource to manage a hosted public SaaS offering of a multi-writer MySQL service
             */
            description: string;
            /**
             * @description The environment variables that this resource requires
             * @example [
             *       {
             *         "name": "MYSQL_ROOT_PASSWORD",
             *         "value": "password"
             *       }
             *     ]
             */
            environmentVariables?: components["schemas"]["EnvironmentVariable"][];
            fileSystemConfiguration?: components["schemas"]["FileSystemConfiguration"];
            helmChartConfiguration?: components["schemas"]["HelmChartConfiguration"];
            /**
             * @description ID of a resource
             * @example Officiis iusto dolorem quisquam.
             */
            id: string;
            /**
             * @description ID of an Image Config
             * @example Qui reprehenderit atque accusantium quis laborum eum.
             */
            imageConfigId?: string;
            /**
             * @description ID of an Infra Config
             * @example Aspernatur quo et vel.
             */
            infraConfigId?: string;
            /**
             * @description Whether this resource is internal or not
             * @default false
             * @example true
             */
            internal: boolean;
            /**
             * @description Whether this resource is deprecated or not
             * @default false
             * @example true
             */
            isDeprecated: boolean;
            jobConfig?: components["schemas"]["JobConfig"];
            /**
             * @description The key of the resource
             * @example galera
             */
            key: string;
            kustomizeConfiguration?: components["schemas"]["KustomizeConfiguration"];
            l4LoadBalancerConfiguration?: components["schemas"]["L4LoadBalancerConfiguration"];
            l7LoadBalancerConfiguration?: components["schemas"]["L7LoadBalancerConfiguration"];
            /**
             * @description Name of the resource
             * @example Galera
             */
            name: string;
            onPremTerraformConfigurations?: components["schemas"]["OnPremTerraformConfigurations"];
            operatorCRDConfiguration?: components["schemas"]["OperatorCRDConfiguration"];
            /**
             * @description ID of a Product Tier
             * @example Iste possimus nostrum.
             */
            productTierId: string;
            /**
             * @description The proxy type of instance
             * @example PortsBasedProxy
             */
            proxyType?: string;
            /**
             * @description The type of the resource
             * @example |Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize
             */
            resourceType: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            terraformConfigurations?: components["schemas"]["TerraformConfigurations"];
        };
        /** @example {
         *       "id": "sa-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "u"
         *     } */
        DescribeServiceAPIRequest: {
            /**
             * @description ID of a Service API
             * @example Velit facilis libero eveniet accusantium molestias.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example tat
             */
            token: string;
        };
        /** @example {
         *       "apiVersion": "v1",
         *       "deploymentConfigId": "dc-12345678",
         *       "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
         *       "id": "sa-12345678",
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "serviceName": "mysql"
         *     } */
        DescribeServiceAPIResult: {
            /**
             * @description The external version of the API
             * @example v1
             */
            apiVersion: string;
            /**
             * @description ID of a Deployment Config
             * @example Eligendi hic ut impedit quo sed.
             */
            deploymentConfigId: string;
            /**
             * @description A brief description of the service API bundle
             * @example A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability
             */
            description: string;
            /**
             * @description ID of a Service API
             * @example Ea provident id voluptatem.
             */
            id: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description The name of the service
             * @example mysql
             */
            serviceName: string;
        };
        /** @example {
         *       "id": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "790"
         *     } */
        DescribeServiceEnvironmentRequest: {
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example r
             */
            token: string;
        };
        /** @example {
         *       "autoApproveSubscription": false,
         *       "deploymentConfigId": "dc-12345678",
         *       "description": "The production environment for the MySQL multi-writer service",
         *       "id": "se-12345678",
         *       "key": "production",
         *       "name": "Production",
         *       "roleType": "admin",
         *       "saasPortalStatus": "READY",
         *       "saasPortalUrl": "https://saas-portal.example.com",
         *       "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
         *       "serviceId": "s-12345678",
         *       "sourceEnvironmentId": "se-12345678",
         *       "type": "DEV",
         *       "visibility": "PUBLIC"
         *     } */
        DescribeServiceEnvironmentResult: {
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description ID of a Deployment Config
             * @example Est ipsam commodi alias dolor.
             */
            deploymentConfigId: string;
            /**
             * @description A brief description of the service environment
             * @example The production environment for the MySQL multi-writer service
             */
            description: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            id: string;
            /**
             * @description Unique Key of the Service Environment
             * @example production
             */
            key: string;
            /**
             * @description Name of the Service Environment
             * @example Production
             */
            name: string;
            /**
             * @description Type of the role
             * @example root|editor|reader|service_editor|service_reader|admin|service_operator
             */
            roleType?: string;
            /**
             * @description The status of an operation
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
             */
            saasPortalStatus?: string;
            /**
             * @description The URL of the SaaS portal for this environment type
             * @example https://saas-portal.example.com
             */
            saasPortalUrl?: string;
            /**
             * @description PEM-encoded Public key part of the key used to sign the JWT tokens for the service control plane APIs
             * @example -----BEGIN PUBLIC KEY-----
             *     MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
             *     7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
             *     -----END PUBLIC KEY-----
             *
             */
            serviceAuthPublicKey?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            sourceEnvironmentId?: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            type: string;
            /**
             * @description This parameter is used to configure the visibility of the service control-plane APIs
             * @example PUBLIC
             */
            visibility: string;
        };
        /** @example {
         *       "id": "sm-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "o"
         *     } */
        DescribeServiceModelRequest: {
            /**
             * @description ID of a Service Model
             * @example Odit ad consequatur et error.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 8
             */
            token: string;
        };
        /** @example {
         *       "accountConfigIds": [
         *         "ac-12345678",
         *         "ac-23456789"
         *       ],
         *       "activeAccountConfigIds": {
         *         "aws": "ac-12345678",
         *         "gcp": "ac-23456789"
         *       },
         *       "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
         *       "features": [
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         },
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         },
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         },
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         }
         *       ],
         *       "id": "sm-12345678",
         *       "key": "mysql-multi-writer-service-hosted-model",
         *       "modelType": "CUSTOMER_HOSTED",
         *       "name": "MySQL multi-writer service hosted model",
         *       "productTiers": [
         *         "pt-12345678",
         *         "pt-87654321"
         *       ],
         *       "serviceApiId": "sa-12345678",
         *       "serviceId": "s-12345678"
         *     } */
        DescribeServiceModelResult: {
            /**
             * @description The infrastructure account configuration ID list
             * @example [
             *       "ac-12345678",
             *       "ac-23456789"
             *     ]
             */
            accountConfigIds?: string[];
            /**
             * @description The active infrastructure account configuration IDs per cloud provider
             * @example {
             *       "aws": "ac-12345678",
             *       "gcp": "ac-23456789"
             *     }
             */
            activeAccountConfigIds?: {
                [key: string]: unknown;
            };
            /**
             * @description A brief description of the service model
             * @example A MySQL Hosted SaaS specializing in multi-writer clusters for high availability
             */
            description: string;
            /**
             * @description Enabled service model features
             * @example [
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       },
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       }
             *     ]
             */
            features?: components["schemas"]["ServiceModelFeatureDetail"][];
            /**
             * @description ID of a Service Model
             * @example Quo mollitia natus.
             */
            id: string;
            /**
             * @description The unique key for this service model
             * @example mysql-multi-writer-service-hosted-model
             */
            key: string;
            /**
             * @description The model type encapsulating this service
             * @example OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
             */
            modelType: string;
            /**
             * @description Name of the Service Model
             * @example MySQL multi-writer service hosted model
             */
            name: string;
            /**
             * @description The product tiers associated with this service model
             * @example [
             *       "pt-12345678",
             *       "pt-87654321"
             *     ]
             */
            productTiers?: string[];
            /**
             * @description ID of a Service API
             * @example Odit impedit sunt magni earum.
             */
            serviceApiId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "serviceId": "s-12345678",
         *       "token": "3h8",
         *       "visibility": "PRIVATE"
         *     } */
        DescribeServiceOfferingRequest: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 9
             */
            token: string;
            /**
             * @description This parameter is used to configure the visibility of the service control-plane APIs
             * @example PUBLIC
             */
            visibility?: string;
        };
        /** @example {
         *       "instanceId": "instance-12345678",
         *       "productTierId": "pt-12345678",
         *       "productTierVersion": "1.0.0",
         *       "resourceId": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "vrm"
         *     } */
        DescribeServiceOfferingResourceRequest: {
            /**
             * @description The instance ID
             * @default none
             * @example instance-12345678
             */
            instanceId: string;
            /**
             * @description ID of a Product Tier
             * @example Quo cumque cumque et aut ducimus nulla.
             */
            productTierId?: string;
            /**
             * @description The product tier version
             * @example 1.0.0
             */
            productTierVersion?: string;
            /**
             * @description ID of a resource
             * @example Aliquid esse.
             */
            resourceId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example u83
             */
            token: string;
        };
        /** @example {
         *       "apis": [
         *         {
         *           "inputParameters": [
         *             {
         *               "defaultValue": null,
         *               "description": "The name of the server",
         *               "displayName": "Server Name",
         *               "isList": false,
         *               "key": "serverName",
         *               "modifiable": true,
         *               "options": null,
         *               "required": true,
         *               "type": "string"
         *             },
         *             {
         *               "defaultValue": "option1",
         *               "description": "The type of the server",
         *               "displayName": "Server Type",
         *               "isList": false,
         *               "key": "serverType",
         *               "modifiable": true,
         *               "options": [
         *                 "option1",
         *                 "option2"
         *               ],
         *               "required": true,
         *               "type": "string"
         *             }
         *           ],
         *           "outputParameters": [
         *             {
         *               "description": "The name of the server",
         *               "displayName": "Server Name",
         *               "isList": false,
         *               "key": "serverName",
         *               "type": "string"
         *             },
         *             {
         *               "description": "The type of the server",
         *               "displayName": "Server Type",
         *               "isList": false,
         *               "key": "serverType",
         *               "type": "string"
         *             }
         *           ],
         *           "verb": "create"
         *         },
         *         {
         *           "inputParameters": [
         *             {
         *               "defaultValue": null,
         *               "description": "The name of the server",
         *               "displayName": "Server Name",
         *               "isList": false,
         *               "key": "serverName",
         *               "modifiable": true,
         *               "options": null,
         *               "required": true,
         *               "type": "string"
         *             }
         *           ],
         *           "outputParameters": [
         *             {
         *               "description": "The name of the server",
         *               "displayName": "Server Name",
         *               "isList": false,
         *               "key": "serverName",
         *               "type": "string"
         *             },
         *             {
         *               "description": "The type of the server",
         *               "displayName": "Server Type",
         *               "isList": false,
         *               "key": "serverType",
         *               "type": "string"
         *             }
         *           ],
         *           "verb": "describe"
         *         }
         *       ]
         *     } */
        DescribeServiceOfferingResourceResult: {
            /**
             * @description The APIs
             * @example [
             *       {
             *         "inputParameters": [
             *           {
             *             "defaultValue": null,
             *             "description": "The name of the server",
             *             "displayName": "Server Name",
             *             "isList": false,
             *             "key": "serverName",
             *             "modifiable": true,
             *             "options": null,
             *             "required": true,
             *             "type": "string"
             *           },
             *           {
             *             "defaultValue": "option1",
             *             "description": "The type of the server",
             *             "displayName": "Server Type",
             *             "isList": false,
             *             "key": "serverType",
             *             "modifiable": true,
             *             "options": [
             *               "option1",
             *               "option2"
             *             ],
             *             "required": true,
             *             "type": "string"
             *           }
             *         ],
             *         "outputParameters": [
             *           {
             *             "description": "The name of the server",
             *             "displayName": "Server Name",
             *             "isList": false,
             *             "key": "serverName",
             *             "type": "string"
             *           },
             *           {
             *             "description": "The type of the server",
             *             "displayName": "Server Type",
             *             "isList": false,
             *             "key": "serverType",
             *             "type": "string"
             *           }
             *         ],
             *         "verb": "create"
             *       },
             *       {
             *         "inputParameters": [
             *           {
             *             "defaultValue": null,
             *             "description": "The name of the server",
             *             "displayName": "Server Name",
             *             "isList": false,
             *             "key": "serverName",
             *             "modifiable": true,
             *             "options": null,
             *             "required": true,
             *             "type": "string"
             *           }
             *         ],
             *         "outputParameters": [
             *           {
             *             "description": "The name of the server",
             *             "displayName": "Server Name",
             *             "isList": false,
             *             "key": "serverName",
             *             "type": "string"
             *           },
             *           {
             *             "description": "The type of the server",
             *             "displayName": "Server Type",
             *             "isList": false,
             *             "key": "serverType",
             *             "type": "string"
             *           }
             *         ],
             *         "verb": "describe"
             *       }
             *     ]
             */
            apis?: components["schemas"]["APIEntity"][];
        };
        /** @example {
         *       "createdAt": "2019-01-01T00:00:00Z",
         *       "isDeprecated": false,
         *       "offerings": [
         *         {
         *           "allowCreatesWhenPaymentNotConfigured": true,
         *           "assets": {
         *             "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
         *             "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
         *           },
         *           "maxNumberOfInstances": 4,
         *           "productTierName": "Premium",
         *           "productTierURLKey": "premium",
         *           "resourceParameters": [
         *             {
         *               "name": "MySQL",
         *               "urlKey": "mysql"
         *             },
         *             {
         *               "name": "Redis",
         *               "urlKey": "redis"
         *             }
         *           ],
         *           "serviceAPIID": "sa-12345678",
         *           "serviceAPIVersion": "v1",
         *           "serviceEnvironmentName": "Production",
         *           "serviceEnvironmentURLKey": "prod",
         *           "serviceEnvironmentVisibility": "PRIVATE",
         *           "serviceModelName": "Bring Your Own Account",
         *           "serviceModelURLKey": "byoa"
         *         },
         *         {
         *           "productTierName": "Basic",
         *           "productTierURLKey": "basic",
         *           "resourceParameters": [
         *             {
         *               "name": "MySQL",
         *               "urlKey": "mysql"
         *             },
         *             {
         *               "name": "Redis",
         *               "urlKey": "redis"
         *             }
         *           ],
         *           "serviceAPIID": "sa-abcdefgh",
         *           "serviceAPIVersion": "v1",
         *           "serviceEnvironmentName": "Production",
         *           "serviceEnvironmentURLKey": "prod",
         *           "serviceEnvironmentVisibility": "PUBLIC",
         *           "serviceModelName": "Hosted",
         *           "serviceModelURLKey": "hosted"
         *         }
         *       ],
         *       "serviceDescription": "MySQL is a relational database",
         *       "serviceId": "s-12345678",
         *       "serviceName": "MySQL",
         *       "serviceOrgId": "org-12345678",
         *       "serviceProviderId": "sp-9zrg9W8Are",
         *       "serviceProviderName": "Omnistrate, Inc.",
         *       "serviceURLKey": "mysql"
         *     } */
        DescribeServiceOfferingResult: {
            /**
             * @description The time the service was created
             * @example 2019-01-01T00:00:00Z
             */
            createdAt: string;
            /**
             * @description Whether the service offering is deprecated
             * @default false
             * @example false
             */
            isDeprecated: boolean;
            /**
             * @description The service offerings
             * @example [
             *       {
             *         "allowCreatesWhenPaymentNotConfigured": true,
             *         "assets": {
             *           "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
             *           "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
             *         },
             *         "maxNumberOfInstances": 4,
             *         "productTierName": "Premium",
             *         "productTierURLKey": "premium",
             *         "resourceParameters": [
             *           {
             *             "name": "MySQL",
             *             "urlKey": "mysql"
             *           },
             *           {
             *             "name": "Redis",
             *             "urlKey": "redis"
             *           }
             *         ],
             *         "serviceAPIID": "sa-12345678",
             *         "serviceAPIVersion": "v1",
             *         "serviceEnvironmentName": "Production",
             *         "serviceEnvironmentURLKey": "prod",
             *         "serviceEnvironmentVisibility": "PRIVATE",
             *         "serviceModelName": "Bring Your Own Account",
             *         "serviceModelURLKey": "byoa"
             *       },
             *       {
             *         "productTierName": "Basic",
             *         "productTierURLKey": "basic",
             *         "resourceParameters": [
             *           {
             *             "name": "MySQL",
             *             "urlKey": "mysql"
             *           },
             *           {
             *             "name": "Redis",
             *             "urlKey": "redis"
             *           }
             *         ],
             *         "serviceAPIID": "sa-abcdefgh",
             *         "serviceAPIVersion": "v1",
             *         "serviceEnvironmentName": "Production",
             *         "serviceEnvironmentURLKey": "prod",
             *         "serviceEnvironmentVisibility": "PUBLIC",
             *         "serviceModelName": "Hosted",
             *         "serviceModelURLKey": "hosted"
             *       }
             *     ]
             */
            offerings: components["schemas"]["ServiceOffering"][];
            /**
             * @description The service description
             * @example MySQL is a relational database
             */
            serviceDescription: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description The service name
             * @example MySQL
             */
            serviceName: string;
            /**
             * @description ID of an Org
             * @example Sapiente quaerat illo hic suscipit asperiores.
             */
            serviceOrgId: string;
            /**
             * @description The id of the service provider
             * @example sp-9zrg9W8Are
             */
            serviceProviderId: string;
            /**
             * @description The name of the service provider
             * @example Omnistrate, Inc.
             */
            serviceProviderName: string;
            /**
             * @description The service URL key
             * @example mysql
             */
            serviceURLKey: string;
        };
        /** @example {
         *       "token": "dr"
         *     } */
        DescribeServiceProviderOrganizationRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example pq
             */
            token: string;
        };
        /** @example {
         *       "DefaultDeploymentCellConfigurations": {
         *         "DeploymentCellConfigurationPerCloudProvider": {
         *           "aws|azure|gcp|all": {
         *             "Amenities": [
         *               {
         *                 "Description": "Ensures high availability across multiple zones.",
         *                 "IsManaged": true,
         *                 "Name": "Prometheus",
         *                 "Properties": {
         *                   "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                   "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                   "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *                 },
         *                 "Type": "HelmChart"
         *               },
         *               {
         *                 "Description": "Ensures high availability across multiple zones.",
         *                 "IsManaged": true,
         *                 "Name": "Prometheus",
         *                 "Properties": {
         *                   "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                   "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                   "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *                 },
         *                 "Type": "HelmChart"
         *               },
         *               {
         *                 "Description": "Ensures high availability across multiple zones.",
         *                 "IsManaged": true,
         *                 "Name": "Prometheus",
         *                 "Properties": {
         *                   "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                   "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                   "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *                 },
         *                 "Type": "HelmChart"
         *               },
         *               {
         *                 "Description": "Ensures high availability across multiple zones.",
         *                 "IsManaged": true,
         *                 "Name": "Prometheus",
         *                 "Properties": {
         *                   "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                   "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                   "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *                 },
         *                 "Type": "HelmChart"
         *               }
         *             ]
         *           }
         *         }
         *       },
         *       "DeploymentCellConfigurationsPerEnv": {
         *         "PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL": {
         *           "DeploymentCellConfigurationPerCloudProvider": {
         *             "aws|azure|gcp|all": {
         *               "Amenities": [
         *                 {
         *                   "Description": "Ensures high availability across multiple zones.",
         *                   "IsManaged": true,
         *                   "Name": "Prometheus",
         *                   "Properties": {
         *                     "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                     "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                     "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *                   },
         *                   "Type": "HelmChart"
         *                 },
         *                 {
         *                   "Description": "Ensures high availability across multiple zones.",
         *                   "IsManaged": true,
         *                   "Name": "Prometheus",
         *                   "Properties": {
         *                     "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                     "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                     "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *                   },
         *                   "Type": "HelmChart"
         *                 },
         *                 {
         *                   "Description": "Ensures high availability across multiple zones.",
         *                   "IsManaged": true,
         *                   "Name": "Prometheus",
         *                   "Properties": {
         *                     "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                     "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                     "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *                   },
         *                   "Type": "HelmChart"
         *                 },
         *                 {
         *                   "Description": "Ensures high availability across multiple zones.",
         *                   "IsManaged": true,
         *                   "Name": "Prometheus",
         *                   "Properties": {
         *                     "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                     "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                     "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *                   },
         *                   "Type": "HelmChart"
         *                 }
         *               ]
         *             }
         *           }
         *         }
         *       },
         *       "id": "org-aKQ8G13QeR"
         *     } */
        DescribeServiceProviderOrganizationResult: {
            DefaultDeploymentCellConfigurations?: components["schemas"]["DeploymentCellConfigurations"];
            /**
             * @description The default deployment cell configurations for the organization per environment.
             * @example {
             *       "PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL": {
             *         "DeploymentCellConfigurationPerCloudProvider": {
             *           "aws|azure|gcp|all": {
             *             "Amenities": [
             *               {
             *                 "Description": "Ensures high availability across multiple zones.",
             *                 "IsManaged": true,
             *                 "Name": "Prometheus",
             *                 "Properties": {
             *                   "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *                   "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *                   "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *                 },
             *                 "Type": "HelmChart"
             *               },
             *               {
             *                 "Description": "Ensures high availability across multiple zones.",
             *                 "IsManaged": true,
             *                 "Name": "Prometheus",
             *                 "Properties": {
             *                   "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *                   "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *                   "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *                 },
             *                 "Type": "HelmChart"
             *               },
             *               {
             *                 "Description": "Ensures high availability across multiple zones.",
             *                 "IsManaged": true,
             *                 "Name": "Prometheus",
             *                 "Properties": {
             *                   "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *                   "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *                   "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *                 },
             *                 "Type": "HelmChart"
             *               },
             *               {
             *                 "Description": "Ensures high availability across multiple zones.",
             *                 "IsManaged": true,
             *                 "Name": "Prometheus",
             *                 "Properties": {
             *                   "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *                   "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *                   "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *                 },
             *                 "Type": "HelmChart"
             *               }
             *             ]
             *           }
             *         }
             *       }
             *     }
             */
            DeploymentCellConfigurationsPerEnv?: {
                [key: string]: unknown;
            };
            /**
             * @description ID of an Org
             * @example Doloremque soluta laborum facere quia qui pariatur.
             */
            id?: string;
        };
        /** @example {
         *       "id": "s-12345678",
         *       "token": "nl"
         *     } */
        DescribeServiceRequest: {
            /**
             * @description ID of a Service
             * @example s-123456
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 7s
             */
            token: string;
        };
        /** @example {
         *       "createdAt": "2019-01-01T00:00:00Z",
         *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *       "id": "s-12345678",
         *       "key": "mysql",
         *       "name": "MySQL multi-writer service",
         *       "roleType": "admin",
         *       "serviceEnvironments": [
         *         {
         *           "id": "se-12345678",
         *           "name": "dev",
         *           "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *           "saasPortalStatus": "READY",
         *           "saasPortalUrl": "https://saas-portal.example.com",
         *           "servicePlans": [
         *             {
         *               "description": "A Basic product tier",
         *               "modelType": "CUSTOMER_HOSTED",
         *               "name": "Basic",
         *               "productTierID": "pt-12345678",
         *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *             },
         *             {
         *               "description": "A Basic product tier",
         *               "modelType": "CUSTOMER_HOSTED",
         *               "name": "Basic",
         *               "productTierID": "pt-12345678",
         *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *             }
         *           ],
         *           "sourceEnvironmentID": "se-12345678",
         *           "sourceEnvironmentName": "dev",
         *           "type": "DEV",
         *           "visibility": "private"
         *         },
         *         {
         *           "id": "se-12345678",
         *           "name": "dev",
         *           "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *           "saasPortalStatus": "READY",
         *           "saasPortalUrl": "https://saas-portal.example.com",
         *           "servicePlans": [
         *             {
         *               "description": "A Basic product tier",
         *               "modelType": "CUSTOMER_HOSTED",
         *               "name": "Basic",
         *               "productTierID": "pt-12345678",
         *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *             },
         *             {
         *               "description": "A Basic product tier",
         *               "modelType": "CUSTOMER_HOSTED",
         *               "name": "Basic",
         *               "productTierID": "pt-12345678",
         *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *             }
         *           ],
         *           "sourceEnvironmentID": "se-12345678",
         *           "sourceEnvironmentName": "dev",
         *           "type": "DEV",
         *           "visibility": "private"
         *         }
         *       ],
         *       "serviceLogoURL": "Occaecati ut officiis omnis ducimus fugit sed.",
         *       "serviceProviderID": "sp-12345678",
         *       "serviceProviderName": "Omnistrate, Inc."
         *     } */
        DescribeServiceResult: {
            /**
             * @description The time the service was created
             * @example 2019-01-01T00:00:00Z
             */
            createdAt: string;
            /**
             * @description A brief description of the service
             * @example A MySQL SaaS specializing in multi-writer clusters for high availability
             */
            description: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            id: string;
            /**
             * @description Unique key of the service
             * @example mysql
             */
            key: string;
            /**
             * @description Name of the Service
             * @example MySQL multi-writer service
             */
            name: string;
            /**
             * @description Type of the role
             * @example root|editor|reader|service_editor|service_reader|admin|service_operator
             */
            roleType?: string;
            /**
             * @description List of service environments
             * @example [
             *       {
             *         "id": "se-12345678",
             *         "name": "dev",
             *         "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *         "saasPortalStatus": "READY",
             *         "saasPortalUrl": "https://saas-portal.example.com",
             *         "servicePlans": [
             *           {
             *             "description": "A Basic product tier",
             *             "modelType": "CUSTOMER_HOSTED",
             *             "name": "Basic",
             *             "productTierID": "pt-12345678",
             *             "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *           },
             *           {
             *             "description": "A Basic product tier",
             *             "modelType": "CUSTOMER_HOSTED",
             *             "name": "Basic",
             *             "productTierID": "pt-12345678",
             *             "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *           }
             *         ],
             *         "sourceEnvironmentID": "se-12345678",
             *         "sourceEnvironmentName": "dev",
             *         "type": "DEV",
             *         "visibility": "private"
             *       },
             *       {
             *         "id": "se-12345678",
             *         "name": "dev",
             *         "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *         "saasPortalStatus": "READY",
             *         "saasPortalUrl": "https://saas-portal.example.com",
             *         "servicePlans": [
             *           {
             *             "description": "A Basic product tier",
             *             "modelType": "CUSTOMER_HOSTED",
             *             "name": "Basic",
             *             "productTierID": "pt-12345678",
             *             "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *           },
             *           {
             *             "description": "A Basic product tier",
             *             "modelType": "CUSTOMER_HOSTED",
             *             "name": "Basic",
             *             "productTierID": "pt-12345678",
             *             "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *           }
             *         ],
             *         "sourceEnvironmentID": "se-12345678",
             *         "sourceEnvironmentName": "dev",
             *         "type": "DEV",
             *         "visibility": "private"
             *       },
             *       {
             *         "id": "se-12345678",
             *         "name": "dev",
             *         "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *         "saasPortalStatus": "READY",
             *         "saasPortalUrl": "https://saas-portal.example.com",
             *         "servicePlans": [
             *           {
             *             "description": "A Basic product tier",
             *             "modelType": "CUSTOMER_HOSTED",
             *             "name": "Basic",
             *             "productTierID": "pt-12345678",
             *             "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *           },
             *           {
             *             "description": "A Basic product tier",
             *             "modelType": "CUSTOMER_HOSTED",
             *             "name": "Basic",
             *             "productTierID": "pt-12345678",
             *             "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *           }
             *         ],
             *         "sourceEnvironmentID": "se-12345678",
             *         "sourceEnvironmentName": "dev",
             *         "type": "DEV",
             *         "visibility": "private"
             *       },
             *       {
             *         "id": "se-12345678",
             *         "name": "dev",
             *         "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *         "saasPortalStatus": "READY",
             *         "saasPortalUrl": "https://saas-portal.example.com",
             *         "servicePlans": [
             *           {
             *             "description": "A Basic product tier",
             *             "modelType": "CUSTOMER_HOSTED",
             *             "name": "Basic",
             *             "productTierID": "pt-12345678",
             *             "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *           },
             *           {
             *             "description": "A Basic product tier",
             *             "modelType": "CUSTOMER_HOSTED",
             *             "name": "Basic",
             *             "productTierID": "pt-12345678",
             *             "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *           }
             *         ],
             *         "sourceEnvironmentID": "se-12345678",
             *         "sourceEnvironmentName": "dev",
             *         "type": "DEV",
             *         "visibility": "private"
             *       }
             *     ]
             */
            serviceEnvironments: components["schemas"]["ServiceEnvironment"][];
            /**
             * @description The logo for the service
             * @example Itaque laudantium est in aperiam.
             */
            serviceLogoURL?: string;
            /**
             * @description ID of a Service Provider
             * @example Earum sunt quos temporibus.
             */
            serviceProviderID: string;
            /**
             * @description The name of the service provider
             * @example Omnistrate, Inc.
             */
            serviceProviderName: string;
        };
        /** @example {
         *       "id": "so-12345678",
         *       "token": "5"
         *     } */
        DescribeServicesOrchestrationRequest: {
            /**
             * @description ID of a Services Orchestration
             * @example Quas sed quod corporis.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example u
             */
            token: string;
        };
        /** @example {
         *       "ServicesTopology": [
         *         {
         *           "dependsOnDeployment": [
         *             "instanceDeploymentAlias1",
         *             "instanceDeploymentAlias2"
         *           ],
         *           "failedReason": "Invalid inputs",
         *           "instanceDeploymentAlias": "instanceDeploymentAlias",
         *           "instanceId": "i-12345678",
         *           "serviceId": "s-12345678",
         *           "status": "PENDING",
         *           "statusMessage": "Creating deployment",
         *           "subscriptionId": "Enim blanditiis."
         *         },
         *         {
         *           "dependsOnDeployment": [
         *             "instanceDeploymentAlias1",
         *             "instanceDeploymentAlias2"
         *           ],
         *           "failedReason": "Invalid inputs",
         *           "instanceDeploymentAlias": "instanceDeploymentAlias",
         *           "instanceId": "i-12345678",
         *           "serviceId": "s-12345678",
         *           "status": "PENDING",
         *           "statusMessage": "Creating deployment",
         *           "subscriptionId": "Enim blanditiis."
         *         }
         *       ],
         *       "createdAt": "2021-01-01T00:00:00Z",
         *       "id": "so-12345678",
         *       "orchestrationFailedReason": "Invalid DSL",
         *       "resultParams": {
         *         "param1": "value1",
         *         "param2": "value2"
         *       },
         *       "status": "PENDING",
         *       "updatedAt": "2021-01-01T00:00:00Z"
         *     } */
        DescribeServicesOrchestrationResult: {
            /**
             * @description The services deployment details
             * @example [
             *       {
             *         "dependsOnDeployment": [
             *           "instanceDeploymentAlias1",
             *           "instanceDeploymentAlias2"
             *         ],
             *         "failedReason": "Invalid inputs",
             *         "instanceDeploymentAlias": "instanceDeploymentAlias",
             *         "instanceId": "i-12345678",
             *         "serviceId": "s-12345678",
             *         "status": "PENDING",
             *         "statusMessage": "Creating deployment",
             *         "subscriptionId": "Enim blanditiis."
             *       },
             *       {
             *         "dependsOnDeployment": [
             *           "instanceDeploymentAlias1",
             *           "instanceDeploymentAlias2"
             *         ],
             *         "failedReason": "Invalid inputs",
             *         "instanceDeploymentAlias": "instanceDeploymentAlias",
             *         "instanceId": "i-12345678",
             *         "serviceId": "s-12345678",
             *         "status": "PENDING",
             *         "statusMessage": "Creating deployment",
             *         "subscriptionId": "Enim blanditiis."
             *       }
             *     ]
             */
            ServicesTopology?: components["schemas"]["ServiceDeploymentDetails"][];
            /**
             * @description The time the services orchestration was created
             * @example 2021-01-01T00:00:00Z
             */
            createdAt: string;
            /**
             * @description ID of a Services Orchestration
             * @example Aut distinctio veniam quae praesentium animi.
             */
            id: string;
            /**
             * @description The reason why the orchestration failed
             * @example Invalid DSL
             */
            orchestrationFailedReason?: string;
            /**
             * @description Custom result parameters of the services orchestration
             * @example {
             *       "param1": "value1",
             *       "param2": "value2"
             *     }
             */
            resultParams?: unknown;
            /**
             * @description The status of the services orchestration
             * @example PENDING
             */
            status: string;
            /**
             * @description The time the services orchestration was last updated
             * @example 2021-01-01T00:00:00Z
             */
            updatedAt: string;
        };
        /** @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Et mollitia.",
         *       "id": "sc-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "3"
         *     } */
        DescribeStorageConfigRequest: {
            /**
             * @description ID of a Product Tier
             * @example Amet fugit aut rerum.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Quia et commodi tenetur ea.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of a Storage Config
             * @example Velit nobis eos perferendis corrupti omnis.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 64
             */
            token: string;
        };
        /** @example {
         *       "description": "my-storage-config-description",
         *       "id": "sc-12345678",
         *       "infraConfigIDs": [
         *         "ic-12345678",
         *         "ic-abcdefgh"
         *       ],
         *       "name": "my-storage-config",
         *       "serviceId": "s-12345678",
         *       "volumes": {
         *         "svc-12345678": [
         *           "/data",
         *           "/mnt/logs"
         *         ],
         *         "svc-23456789": [
         *           "/config"
         *         ]
         *       }
         *     } */
        DescribeStorageConfigResult: {
            /**
             * @description Description of the storage config
             * @example my-storage-config-description
             */
            description: string;
            /**
             * @description ID of a Storage Config
             * @example Iure est ex.
             */
            id: string;
            /**
             * @description The list of infra config IDs associated with the compute config.
             * @example [
             *       "ic-12345678",
             *       "ic-abcdefgh"
             *     ]
             */
            infraConfigIDs?: string[];
            /**
             * @description Name of the storage config
             * @example my-storage-config
             */
            name: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description The storage volume config IDs and the corresponding mount path
             * @example {
             *       "svc-12345678": [
             *         "/data",
             *         "/mnt/logs"
             *       ],
             *       "svc-23456789": [
             *         "/config"
             *       ]
             *     }
             */
            volumes: {
                [key: string]: unknown;
            };
        };
        /** @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Ex illo nam cupiditate.",
         *       "id": "svc-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "2y"
         *     } */
        DescribeStorageVolumeConfigRequest: {
            /**
             * @description ID of a Product Tier
             * @example Consequatur doloribus.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Voluptates molestias odio mollitia et omnis magni.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of a Storage Volume Config
             * @example Esse explicabo ullam voluptas.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example m
             */
            token: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "clusterStorageType": "S3|$var.storageType|AWS::EFS",
         *       "description": "A storage volume set to store the MySQL data directory",
         *       "disableBackup": false,
         *       "id": "svc-12345678",
         *       "instanceStorageIops": "7500",
         *       "instanceStorageSizeGi": "128",
         *       "instanceStorageThroughputMiBps": "128",
         *       "instanceStorageType": "$var.storageType",
         *       "name": "MySQL Data Volume",
         *       "serviceId": "s-12345678",
         *       "storageResourceID": "r-12345678"
         *     } */
        DescribeStorageVolumeConfigResult: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName?: string;
            /**
             * @description The type of the fixed storage for the cluster
             * @example S3|$var.storageType|AWS::EFS
             */
            clusterStorageType?: string;
            /**
             * @description A brief description of the context for the storage volume pool
             * @example A storage volume set to store the MySQL data directory
             */
            description: string;
            /**
             * @description Disable backup for the storage volume
             * @example false
             */
            disableBackup?: boolean;
            /**
             * @description ID of a Storage Volume Config
             * @example Ut in consequatur non praesentium.
             */
            id: string;
            /**
             * @description The IOPS provisioned for the configured instance storage type
             * @example 7500
             */
            instanceStorageIops?: string;
            /**
             * @description The fixed storage size (in Gi) provisioned for the configured instance storage type
             * @example 128
             */
            instanceStorageSizeGi?: string;
            /**
             * @description The throughput (in MiBps) provisioned for the configured instance storage type
             * @example 128
             */
            instanceStorageThroughputMiBps?: string;
            /**
             * @description The type of the fixed storage for a compute instance
             * @example $var.storageType
             */
            instanceStorageType?: string;
            /**
             * @description Name of the storage volume pool
             * @example MySQL Data Volume
             */
            name: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description The storage resource ID
             * @example r-12345678
             */
            storageResourceID?: string;
        };
        /** @example {
         *       "id": "sub-12345678",
         *       "token": "ev"
         *     } */
        DescribeSubscriptionRequest: {
            /**
             * @description ID of a Subscription
             * @example Cupiditate corrupti rerum eligendi.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example 7
             */
            token: string;
        };
        /** @example {
         *       "id": "subr-12345678",
         *       "token": "zn"
         *     } */
        DescribeSubscriptionRequestRequest: {
            /**
             * @description ID of a Subscription Request
             * @example Nihil et qui laudantium.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example q
             */
            token: string;
        };
        /** @example {
         *       "createdAt": "2019-01-01T00:00:00Z",
         *       "id": "subr-12345678",
         *       "productTierId": "pt-12345678",
         *       "productTierName": "Omnistrate Multi Tenancy",
         *       "rootUserEmail": "abc@gmail.com",
         *       "rootUserId": "org-12345678",
         *       "rootUserName": "John Doe",
         *       "serviceId": "s-12345678",
         *       "serviceLogoURL": "Asperiores fugiat dolor in vero.",
         *       "serviceName": "MySQL multi-writer service",
         *       "status": "PENDING",
         *       "updatedAt": "2019-01-01T00:00:00Z",
         *       "updatedByUserId": "user-12345678",
         *       "updatedByUserName": "John Doe"
         *     } */
        DescribeSubscriptionRequestResult: {
            /**
             * @description The time that this subscription request was issued
             * @example 2019-01-01T00:00:00Z
             */
            createdAt: string;
            /**
             * @description ID of a Subscription Request
             * @example Non sit reprehenderit culpa qui ipsum fuga.
             */
            id: string;
            /**
             * @description ID of a Product Tier
             * @example Illum ipsam inventore.
             */
            productTierId: string;
            /**
             * @description The name of the product tier
             * @example Omnistrate Multi Tenancy
             */
            productTierName: string;
            /**
             * @description The email of the user that issued the subscription request
             * @example abc@gmail.com
             */
            rootUserEmail: string;
            /**
             * @description ID of a User
             * @example Libero ullam officia nam non maiores fugit.
             */
            rootUserId: string;
            /**
             * @description The name of the user that issued the subscription request
             * @example John Doe
             */
            rootUserName: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description The logo for the service
             * @example Omnis modi rerum dolore rerum delectus cumque.
             */
            serviceLogoURL?: string;
            /**
             * @description The name of the service
             * @example MySQL multi-writer service
             */
            serviceName: string;
            /**
             * @description The status of the subscription request
             * @example PENDING|APPROVED|DENIED|CANCELLED
             */
            status: string;
            /**
             * @description The time that this subscription request was issued
             * @example 2019-01-01T00:00:00Z
             */
            updatedAt: string;
            /**
             * @description ID of a User
             * @example Eum doloremque veritatis cum inventore.
             */
            updatedByUserId: string;
            /**
             * @description The user that last updated the subscription request
             * @example John Doe
             */
            updatedByUserName: string;
        };
        /** @example {
         *       "accountConfigIdentityId": "org-12345678",
         *       "allowCreatesWhenPaymentNotConfigured": true,
         *       "cloudProviderNames": [
         *         "aws",
         *         "gcp"
         *       ],
         *       "createdAt": "2019-01-01T00:00:00Z",
         *       "defaultSubscription": true,
         *       "id": "sub-12345678",
         *       "maxNumberOfInstances": 10,
         *       "paymentMethodConfigured": true,
         *       "productTierId": "pt-12345678",
         *       "productTierName": "Omnistrate Multi Tenancy",
         *       "roleType": "root",
         *       "rootUserId": "user-12345678",
         *       "serviceId": "s-12345678",
         *       "serviceLogoURL": "Facilis mollitia aut temporibus sapiente.",
         *       "serviceName": "MySQL multi-writer service",
         *       "serviceOrgId": "org-12345678",
         *       "serviceOrgName": "Omnistrate",
         *       "status": "ACTIVE",
         *       "subscriptionOwnerName": "John Doe"
         *     } */
        DescribeSubscriptionResult: {
            /**
             * @description ID of an Org
             * @example Dignissimos laboriosam facilis sed.
             */
            accountConfigIdentityId: string;
            /**
             * @description Whether to allow creating instances when payment is not configured.
             * @example true
             */
            allowCreatesWhenPaymentNotConfigured?: boolean;
            /**
             * @description List of cloud provider names
             * @example [
             *       "aws",
             *       "gcp"
             *     ]
             */
            cloudProviderNames: string[];
            /**
             * @description The time that this subscription was created
             * @example 2019-01-01T00:00:00Z
             */
            createdAt: string;
            /**
             * @description Whether this is the default subscription for the user
             * @example true
             */
            defaultSubscription: boolean;
            /**
             * @description ID of a Subscription
             * @example Enim voluptatibus.
             */
            id: string;
            /**
             * Format: int64
             * @description The maximum number of instances that can be created for this subscription.
             * @example 10
             */
            maxNumberOfInstances?: number;
            /**
             * @description Return true if the required payment method is configured for this subscription or no payment method is required. False if the subscription requires a payment method but it is not configured.
             * @example true
             */
            paymentMethodConfigured?: boolean;
            /**
             * @description ID of a Product Tier
             * @example Voluptatibus quasi dignissimos.
             */
            productTierId: string;
            /**
             * @description The name of the product tier
             * @example Omnistrate Multi Tenancy
             */
            productTierName: string;
            /**
             * @description Type of the role
             * @example root|editor|reader|service_editor|service_reader|admin|service_operator
             */
            roleType: string;
            /**
             * @description ID of a User
             * @example Ducimus minima voluptates quidem pariatur facere.
             */
            rootUserId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description The logo for the service
             * @example Quas dolore ipsum eos.
             */
            serviceLogoURL: string;
            /**
             * @description The name of the service
             * @example MySQL multi-writer service
             */
            serviceName: string;
            /**
             * @description ID of an Org
             * @example Iusto nihil atque quos totam.
             */
            serviceOrgId: string;
            /**
             * @description The name of the org that owns the service
             * @example Omnistrate
             */
            serviceOrgName: string;
            /**
             * @description Subscription Status
             * @example ACTIVE|SUSPENDED|TERMINATED|CANCELLED
             */
            status: string;
            /**
             * @description The name of the subscription owner user
             * @example John Doe
             */
            subscriptionOwnerName: string;
        };
        /** @example {
         *       "productTierId": "Beatae beatae.",
         *       "serviceId": "s-12345678",
         *       "token": "a",
         *       "version": "3.0"
         *     } */
        DescribeTierVersionSetRequest: {
            /**
             * @description ID of a Product Tier
             * @example Voluptatem iste enim.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 9rg
             */
            token: string;
            /**
             * @description The version number for the specific version set.
             * @example 3.0
             */
            version: string;
        };
        /** @example {
         *       "id": "up-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "k"
         *     } */
        DescribeUpgradePathRequest: {
            /**
             * @description ID of an Upgrade Path
             * @example Recusandae rem veniam necessitatibus ratione amet.
             */
            id?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 1m
             */
            token: string;
        };
        /** @example {
         *       "description": "An upgrade path migrating clusters from one LTS version to another",
         *       "id": "up-12345678",
         *       "name": "LTS upgrade path",
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "sourceVersion": "567.0",
         *       "targetVersion": "589.0"
         *     } */
        DescribeUpgradePathResult: {
            /**
             * @description A brief description of the upgrade path
             * @example An upgrade path migrating clusters from one LTS version to another
             */
            description?: string;
            /**
             * @description ID of an Upgrade Path
             * @example Sed exercitationem natus doloremque quis dolorem reiciendis.
             */
            id?: string;
            /**
             * @description Name of the upgrade path
             * @example LTS upgrade path
             */
            name?: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description Version of the Entity to operate on
             * @example 1.0
             */
            sourceVersion?: string;
            /**
             * @description Version of the Entity to operate on
             * @example 1.0
             */
            targetVersion?: string;
        };
        /** @example {
         *       "token": "irr"
         *     } */
        DescribeUserRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example 33o
             */
            token: string;
        };
        /** @example {
         *       "address": {
         *         "addressLine1": "1234 Main St",
         *         "addressLine2": "Apt 123",
         *         "addressLine3": "Building 123",
         *         "city": "San Francisco",
         *         "country": "US",
         *         "state": "CA",
         *         "zip": "94123"
         *       },
         *       "createdAt": "2023-01-10T00:00:00Z",
         *       "email": "abc@gmail.com",
         *       "enabled": true,
         *       "id": "user-abcd1234",
         *       "lastModifiedAt": "2023-01-20T00:00:00Z",
         *       "name": "John Dae",
         *       "orgCookiePolicy": "Et atque facilis consequatur exercitationem possimus iste.",
         *       "orgDescription": "ACME Inc.",
         *       "orgFavIconURL": "Nihil rerum error et consequatur et.",
         *       "orgId": "org-aKQ8G13QeR",
         *       "orgLogoURL": "Quia eligendi.",
         *       "orgName": "ACME",
         *       "orgPrivacyPolicy": "Molestias quia dolorem.",
         *       "orgSupportEmail": "support@example.com",
         *       "orgTermsOfUse": "Laboriosam autem eos.",
         *       "orgURL": "something.acme",
         *       "planName": "STARTER",
         *       "roleType": "reader",
         *       "status": "ACTIVE"
         *     } */
        DescribeUserResult: {
            address?: components["schemas"]["Address"];
            /**
             * @description The user creation time
             * @example 2023-01-10T00:00:00Z
             */
            createdAt?: string;
            /**
             * @description The email of the user
             * @example abc@gmail.com
             */
            email?: string;
            /**
             * @description Is the user enabled.
             * @example true
             */
            enabled?: boolean;
            /**
             * @description The User ID
             * @example user-abcd1234
             */
            id: string;
            /**
             * @description The user update time
             * @example 2023-01-20T00:00:00Z
             */
            lastModifiedAt?: string;
            /**
             * @description The name of the user
             * @example John Dae
             */
            name?: string;
            /**
             * @description The cookie policy for the org that this user owns
             * @example In voluptate.
             */
            orgCookiePolicy?: string;
            /**
             * @description The description of the org that this user owns
             * @example ACME Inc.
             */
            orgDescription?: string;
            /**
             * @description The favicon of the org that this user owns
             * @example Nostrum molestiae.
             */
            orgFavIconURL?: string;
            /**
             * @description The ID of the org that this user owns
             * @example org-aKQ8G13QeR
             */
            orgId?: string;
            /**
             * @description The logo of the org that this user owns
             * @example Maxime distinctio sapiente omnis quas placeat ea.
             */
            orgLogoURL?: string;
            /**
             * @description The org name that this user owns
             * @example ACME
             */
            orgName?: string;
            /**
             * @description The privacy policy for the org that this user owns
             * @example Velit accusantium fuga iure aspernatur porro enim.
             */
            orgPrivacyPolicy?: string;
            /**
             * @description The support email of the org that this user owns
             * @example support@example.com
             */
            orgSupportEmail?: string;
            /**
             * @description The terms of use for the org that this user owns
             * @example Et voluptatibus nam.
             */
            orgTermsOfUse?: string;
            /**
             * @description The url of the org that this user owns
             * @example something.acme
             */
            orgURL?: string;
            /**
             * @description This parameter is used to select the appropriate Product Plan
             * @example STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
             */
            planName?: string;
            /**
             * @description Type of the role
             * @example root|editor|reader|service_editor|service_reader|admin|service_operator
             */
            roleType?: string;
            /**
             * @description The status of the user.
             * @example ACTIVE|NOT_ENABLED
             */
            status?: string;
        };
        /** @example {
         *       "token": "17"
         *     } */
        DescribeUsersByOrgRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example 4l
             */
            token: string;
        };
        /** @example {
         *       "Id": "org-aKQ8G13QeR",
         *       "orgUsers": [
         *         {
         *           "email": "abc@gmail.com",
         *           "invitedAt": "2023-01-10T00:00:00Z",
         *           "name": "John Doe",
         *           "roleType": "reader",
         *           "userId": "user-abcd1234"
         *         }
         *       ]
         *     } */
        DescribeUsersByOrgResult: {
            /**
             * @description The ID of the org
             * @example org-aKQ8G13QeR
             */
            Id: string;
            /**
             * @description The users associated with the corresponding org
             * @example [
             *       {
             *         "email": "abc@gmail.com",
             *         "invitedAt": "2023-01-10T00:00:00Z",
             *         "name": "John Doe",
             *         "roleType": "reader",
             *         "userId": "user-abcd1234"
             *       }
             *     ]
             */
            orgUsers: components["schemas"]["OrgUsers"][];
        };
        /** @example {
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "o"
         *     } */
        DescribeUsersBySubscriptionRequest: {
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId: string;
            /**
             * @description JWT token used to perform authorization
             * @example v04
             */
            token: string;
        };
        /** @example {
         *       "Id": "sub-abcd1234",
         *       "subscriptionUsers": [
         *         {
         *           "email": "abc@gmail.com",
         *           "name": "John Doe",
         *           "roleType": "reader",
         *           "subscriptionId": "sub-abcd1234",
         *           "userId": "user-abcd1234"
         *         }
         *       ]
         *     } */
        DescribeUsersBySubscriptionResult: {
            /**
             * @description The ID of the subscription
             * @example sub-abcd1234
             */
            Id: string;
            /**
             * @description The users associated with the corresponding subscription
             * @example [
             *       {
             *         "email": "abc@gmail.com",
             *         "name": "John Doe",
             *         "roleType": "reader",
             *         "subscriptionId": "sub-abcd1234",
             *         "userId": "user-abcd1234"
             *       }
             *     ]
             */
            subscriptionUsers: components["schemas"]["SubscriptionUsers"][];
        };
        /** @example {
         *       "id": "vu-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "4"
         *     } */
        DescribeVUnitRequest: {
            /**
             * @description ID of a VUnit
             * @example Soluta nemo.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example b
             */
            token: string;
        };
        /** @example {
         *       "cloudProvider": "aws",
         *       "id": "vu-12345678",
         *       "networkIds": [
         *         "n-12345678",
         *         "n-abcdefgh",
         *         "n-1234efgh"
         *       ],
         *       "region": "us-west-2",
         *       "serviceId": "s-12345678",
         *       "serviceModelId": "sm-12345678"
         *     } */
        DescribeVUnitResult: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProvider: string;
            /**
             * @description ID of a VUnit
             * @example Et illum placeat incidunt temporibus.
             */
            id?: string;
            /**
             * @description List of network IDs in the given context
             * @example [
             *       "n-12345678",
             *       "n-abcdefgh",
             *       "n-1234efgh"
             *     ]
             */
            networkIds: string[];
            /**
             * @description Region code specific to the cloud-provider
             * @example us-west-2
             */
            region: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description ID of a Service Model
             * @example Nemo aliquid corporis aut quia.
             */
            serviceModelId: string;
        };
        /** @example {
         *       "id": "r-12345678",
         *       "metricEndpoint": "http://localhost:9187/metrics",
         *       "serviceId": "s-12345678"
         *     } */
        Describeresourcemetricsconfigresult: {
            /**
             * @description ID of a resource
             * @example At dolores et porro autem eveniet.
             */
            id: string;
            /**
             * @description The local host endpoint to supply prometheus metric
             * @example http://localhost:9187/metrics
             */
            metricEndpoint: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
        };
        /** @example {
         *       "id": "ic-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "gy"
         *     } */
        DetachComputeConfigRequest: {
            /**
             * @description ID of an Infra Config
             * @example Voluptatum soluta inventore voluptas ipsam et ea.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example v2
             */
            token: string;
        };
        /** @example {
         *       "id": "ic-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "c1"
         *     } */
        DetachNetworkConfigRequest: {
            /**
             * @description ID of an Infra Config
             * @example Dolor repellendus voluptatem vitae dolores reprehenderit.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 1n
             */
            token: string;
        };
        /** @example {
         *       "id": "ic-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "kqt"
         *     } */
        DetachStorageConfigRequest: {
            /**
             * @description ID of an Infra Config
             * @example Dignissimos excepturi commodi natus.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 3
             */
            token: string;
        };
        /** @example {
         *       "ConnectivityStatus": "HEALTHY",
         *       "DiskHealth": "HEALTHY",
         *       "IntegrationsHealth": {
         *         "CustomerObservabilityHealth": "HEALTHY",
         *         "InternalObservabilityHealth": "HEALTHY"
         *       },
         *       "LoadStatus": "LOAD_NORMAL",
         *       "NodeHealth": "HEALTHY",
         *       "ProcessHealth": "HEALTHY",
         *       "ProcessLiveness": "HEALTHY"
         *     } */
        DetailedNodeHealthResult: {
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            ConnectivityStatus?: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            DiskHealth?: string;
            IntegrationsHealth?: components["schemas"]["IntegrationsHealth"];
            /**
             * @description The load status of a pod
             * @example LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
             */
            LoadStatus?: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            NodeHealth?: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            ProcessHealth?: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            ProcessLiveness?: string;
        };
        /** @example {
         *       "anotherVersion": "3.1",
         *       "productTierId": "Beatae beatae.",
         *       "serviceId": "s-12345678",
         *       "token": "8p",
         *       "version": "3.0"
         *     } */
        DiffTierVersionSetsRequest: {
            /**
             * @description The target version to compare against.
             * @example 3.1
             */
            anotherVersion: string;
            /**
             * @description ID of a Product Tier
             * @example Maiores ad quibusdam ut.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example zsi
             */
            token: string;
            /**
             * @description The version number for the version set.
             * @example 3.0
             */
            version: string;
        };
        /** @example {
         *       "anotherVersion": "3.1",
         *       "productTierId": "Beatae beatae.",
         *       "resourceChangeSets": {
         *         "Dolores sit aut repellendus eveniet recusandae fugit.": {
         *           "categorizedResourceChanges": {
         *             "Deserunt et sed.": {
         *               "changes": [
         *                 {
         *                   "attributes": {
         *                     "resourceId": "r-12345678"
         *                   },
         *                   "changeType": "PENDING_NEW",
         *                   "name": "Customer metrics"
         *                 },
         *                 {
         *                   "attributes": {
         *                     "resourceId": "r-12345678"
         *                   },
         *                   "changeType": "PENDING_NEW",
         *                   "name": "Customer metrics"
         *                 },
         *                 {
         *                   "attributes": {
         *                     "resourceId": "r-12345678"
         *                   },
         *                   "changeType": "PENDING_NEW",
         *                   "name": "Customer metrics"
         *                 },
         *                 {
         *                   "attributes": {
         *                     "resourceId": "r-12345678"
         *                   },
         *                   "changeType": "PENDING_NEW",
         *                   "name": "Customer metrics"
         *                 }
         *               ],
         *               "status": "PENDING_UPDATE"
         *             }
         *           },
         *           "imageConfigChanges": {
         *             "changeState": "PENDING_NEW",
         *             "imageConfigId": "imgc-12345678",
         *             "imageName": "mysql"
         *           },
         *           "infraConfigChanges": {
         *             "changeState": "PENDING_NEW",
         *             "infraConfigId": "ic-12345678",
         *             "name": "MySQL Writer Infra Config"
         *           },
         *           "overallResourceStatus": "PENDING_UPDATE",
         *           "productTierFeatureChanges": "PENDING_UPDATE",
         *           "resourceChanges": "PENDING_DELETE",
         *           "resourceName": "Voluptas est dolorem."
         *         }
         *       },
         *       "serviceId": "s-12345678",
         *       "version": "3.0"
         *     } */
        DiffTierVersionSetsResult: {
            /**
             * @description The target version to compare against.
             * @example 3.1
             */
            anotherVersion: string;
            /**
             * @description ID of a Product Tier
             * @example Doloremque aperiam officiis non et dolorem.
             */
            productTierId: string;
            /**
             * @description The difference for the service API configuration per resource
             * @example {
             *       "Dolores sit aut repellendus eveniet recusandae fugit.": {
             *         "categorizedResourceChanges": {
             *           "Deserunt et sed.": {
             *             "changes": [
             *               {
             *                 "attributes": {
             *                   "resourceId": "r-12345678"
             *                 },
             *                 "changeType": "PENDING_NEW",
             *                 "name": "Customer metrics"
             *               },
             *               {
             *                 "attributes": {
             *                   "resourceId": "r-12345678"
             *                 },
             *                 "changeType": "PENDING_NEW",
             *                 "name": "Customer metrics"
             *               },
             *               {
             *                 "attributes": {
             *                   "resourceId": "r-12345678"
             *                 },
             *                 "changeType": "PENDING_NEW",
             *                 "name": "Customer metrics"
             *               },
             *               {
             *                 "attributes": {
             *                   "resourceId": "r-12345678"
             *                 },
             *                 "changeType": "PENDING_NEW",
             *                 "name": "Customer metrics"
             *               }
             *             ],
             *             "status": "PENDING_UPDATE"
             *           }
             *         },
             *         "imageConfigChanges": {
             *           "changeState": "PENDING_NEW",
             *           "imageConfigId": "imgc-12345678",
             *           "imageName": "mysql"
             *         },
             *         "infraConfigChanges": {
             *           "changeState": "PENDING_NEW",
             *           "infraConfigId": "ic-12345678",
             *           "name": "MySQL Writer Infra Config"
             *         },
             *         "overallResourceStatus": "PENDING_UPDATE",
             *         "productTierFeatureChanges": "PENDING_UPDATE",
             *         "resourceChanges": "PENDING_DELETE",
             *         "resourceName": "Voluptas est dolorem."
             *       }
             *     }
             */
            resourceChangeSets: {
                [key: string]: unknown;
            };
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description The version number for the version set.
             * @example 3.0
             */
            version: string;
        };
        /** @example {
         *       "billingProviderType": "STRIPE",
         *       "token": "3"
         *     } */
        DisableBillingProviderRequest: {
            /**
             * @description The billing provider type
             * @example STRIPE|BRING_YOUR_OWN
             */
            billingProviderType: string;
            /**
             * @description JWT token used to perform authorization
             * @example nf
             */
            token: string;
        };
        /** @example {
         *       "feature": "LOGS",
         *       "id": "pt-12345678",
         *       "scope": "INTERNAL",
         *       "serviceId": "s-12345678",
         *       "token": "q9r"
         *     } */
        DisableProductTierFeatureRequest: {
            /**
             * @description ProductTierFeatureType is to enable / disable features per product tier
             * @example LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
             */
            feature: string;
            /**
             * @description ID of a Product Tier
             * @example Eaque molestiae expedita exercitationem nihil.
             */
            id: string;
            /**
             * @description ProductTierFeatureScope defines scope of the feature within product tier
             * @example INTERNAL|CUSTOMER
             */
            scope?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example n
             */
            token: string;
        };
        /** @example {
         *       "feature": "LOGS",
         *       "scope": "INTERNAL"
         *     } */
        DisableProductTierFeatureRequest2: {
            /**
             * @description Feature to disable
             * @example LOGS
             */
            feature: string;
            /**
             * @description Feature scope
             * @example INTERNAL
             */
            scope?: string;
        };
        /** @example {
         *       "capability": "SERVERLESS",
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "il6"
         *     } */
        DisableResourceCapabilityRequest: {
            /**
             * @description The type of capability of a resource
             * @example SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
             */
            capability: string;
            /**
             * @description ID of a resource
             * @example Fugiat ratione.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example ca
             */
            token: string;
        };
        /** @example {
         *       "capability": "SERVERLESS"
         *     } */
        DisableResourceCapabilityRequest2: {
            /**
             * @description The capability to disable
             * @example SERVERLESS
             */
            capability: string;
        };
        /** @example {
         *       "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY",
         *       "id": "sm-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "k"
         *     } */
        DisableServiceModelFeatureRequest: {
            /**
             * @description Name of the service model feature
             * @example CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
             */
            feature: string;
            /**
             * @description ID of a Service Model
             * @example Voluptatibus ea nihil.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example q
             */
            token: string;
        };
        /** @example {
         *       "feature": "Qui quas quis vel."
         *     } */
        DisableServiceModelFeatureRequest2: {
            /** @example Ut voluptatem. */
            feature: string;
        };
        /** @example {
         *       "token": "0kx"
         *     } */
        DisableTenantBillingRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example 96
             */
            token: string;
        };
        /** @example {
         *       "id": "sa-12345678",
         *       "productTierId": "pt-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "i"
         *     } */
        DiscardPendingChangesRequest: {
            /**
             * @description ID of a Service API
             * @example Cupiditate quis.
             */
            id: string;
            /**
             * @description ID of a Product Tier
             * @example Ut fugit.
             */
            productTierId?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example h
             */
            token: string;
        };
        /** @example {
         *       "PerformanceMode": "generalPurpose|maxIO",
         *       "ProvisionedThroughputInMibps": 125,
         *       "ThroughputMode": "provisioned|bursting|elastic"
         *     } */
        EFSFileSystemConfiguration: {
            /**
             * @description The performance mode of the EFS file system
             * @example generalPurpose|maxIO
             */
            PerformanceMode: string;
            /**
             * Format: double
             * @description The throughput, measured in MiBps, that you want to provision for the EFS file system, if throughput mode if provisioned
             * @example 125
             */
            ProvisionedThroughputInMibps?: number;
            /**
             * @description The throughput mode of the EFS file system
             * @example provisioned|bursting|elastic
             */
            ThroughputMode: string;
        };
        /** @example {
         *       "balanceDueLink": "https://billing.provider.com/balance-due. Only present when the billing provider is BRING_YOUR_OWN",
         *       "billingProviderType": "STRIPE",
         *       "logoURL": "https://example.com/logo.png",
         *       "name": "Stripe",
         *       "token": "y9b"
         *     } */
        EnableBillingProviderRequest: {
            /**
             * @description The URL to the balance due page
             * @example https://billing.provider.com/balance-due. Only present when the billing provider is BRING_YOUR_OWN
             */
            balanceDueLink?: string;
            /**
             * @description The billing provider type
             * @example STRIPE|BRING_YOUR_OWN
             */
            billingProviderType: string;
            /**
             * @description The URL of the logo for the billing provider. Only present when the billing provider is BRING_YOUR_OWN
             * @example https://example.com/logo.png
             */
            logoURL?: string;
            /**
             * @description A custom name for the billing provider. Only present when the billing provider is BRING_YOUR_OWN
             * @example Stripe
             */
            name?: string;
            /**
             * @description JWT token used to perform authorization
             * @example jr0
             */
            token: string;
        };
        /** @example {
         *       "balanceDueLink": "https://billing.provider.com/balance-due. Only present when the billing provider is BRING_YOUR_OWN",
         *       "logoURL": "https://example.com/logo.png",
         *       "name": "Stripe"
         *     } */
        EnableBillingProviderRequest2: {
            /**
             * @description The URL to the balance due page
             * @example https://billing.provider.com/balance-due. Only present when the billing provider is BRING_YOUR_OWN
             */
            balanceDueLink?: string;
            /**
             * @description The URL of the logo for the billing provider. Only present when the billing provider is BRING_YOUR_OWN
             * @example https://example.com/logo.png
             */
            logoURL?: string;
            /**
             * @description A custom name for the billing provider. Only present when the billing provider is BRING_YOUR_OWN
             * @example Stripe
             */
            name?: string;
        };
        /** @example {
         *       "configuration": {
         *         "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name"
         *       },
         *       "feature": "LOGS",
         *       "id": "pt-12345678",
         *       "scope": "INTERNAL",
         *       "serviceId": "s-12345678",
         *       "token": "uw"
         *     } */
        EnableProductTierFeatureRequest: {
            /**
             * @description The configuration parameters of the product tier feature
             * @example {
             *       "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name"
             *     }
             */
            configuration?: {
                [key: string]: unknown;
            };
            /**
             * @description ProductTierFeatureType is to enable / disable features per product tier
             * @example LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
             */
            feature: string;
            /**
             * @description ID of a Product Tier
             * @example Doloremque dolorem commodi accusamus quo.
             */
            id: string;
            /**
             * @description ProductTierFeatureScope defines scope of the feature within product tier
             * @example INTERNAL|CUSTOMER
             */
            scope?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example zi8
             */
            token: string;
        };
        /** @example {
         *       "configuration": {
         *         "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name"
         *       },
         *       "feature": "LOGS",
         *       "scope": "INTERNAL"
         *     } */
        EnableProductTierFeatureRequest2: {
            /**
             * @description The configuration parameters of the product tier feature
             * @example {
             *       "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name"
             *     }
             */
            configuration?: {
                [key: string]: unknown;
            };
            /**
             * @description Feature to enable
             * @example LOGS
             */
            feature: string;
            /**
             * @description Feature scope
             * @example INTERNAL
             */
            scope?: string;
        };
        /** @example {
         *       "capability": "SERVERLESS",
         *       "configuration": {
         *         "EnableAutoStop": true,
         *         "MinimumNodesInPool": 5,
         *         "PortsMappingProxyConfig": {
         *           "MaxNumberOfClustersPerProxyInstance": 50,
         *           "NumberOfPortsPerCluster": 4
         *         },
         *         "ReferenceProxyKey": "resource-proxy",
         *         "TargetPort": 5432
         *       },
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "0"
         *     } */
        EnableResourceCapabilityRequest: {
            /**
             * @description The type of capability of a resource
             * @example SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
             */
            capability: string;
            /**
             * @description The configuration parameters of a capability of a resource
             * @example {
             *       "EnableAutoStop": true,
             *       "MinimumNodesInPool": 5,
             *       "PortsMappingProxyConfig": {
             *         "MaxNumberOfClustersPerProxyInstance": 50,
             *         "NumberOfPortsPerCluster": 4
             *       },
             *       "ReferenceProxyKey": "resource-proxy",
             *       "TargetPort": 5432
             *     }
             */
            configuration?: {
                [key: string]: unknown;
            };
            /**
             * @description ID of a resource
             * @example Et quae illo.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 4
             */
            token: string;
        };
        /** @example {
         *       "capability": "SERVERLESS",
         *       "configuration": {
         *         "EnableAutoStop": true,
         *         "MinimumNodesInPool": 5,
         *         "PortsMappingProxyConfig": {
         *           "MaxNumberOfClustersPerProxyInstance": 50,
         *           "NumberOfPortsPerCluster": 4
         *         },
         *         "ReferenceProxyKey": "resource-proxy",
         *         "TargetPort": 5432
         *       }
         *     } */
        EnableResourceCapabilityRequest2: {
            /**
             * @description The type of capability of a resource
             * @example SERVERLESS
             */
            capability: string;
            /**
             * @description The configuration parameters of a capability of a resource
             * @example {
             *       "EnableAutoStop": true,
             *       "MinimumNodesInPool": 5,
             *       "PortsMappingProxyConfig": {
             *         "MaxNumberOfClustersPerProxyInstance": 50,
             *         "NumberOfPortsPerCluster": 4
             *       },
             *       "ReferenceProxyKey": "resource-proxy",
             *       "TargetPort": 5432
             *     }
             */
            configuration?: {
                [key: string]: unknown;
            };
        };
        /** @example {
         *       "configuration": {
         *         "status": "ON"
         *       },
         *       "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY",
         *       "id": "sm-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "3b"
         *     } */
        EnableServiceModelFeatureRequest: {
            configuration: components["schemas"]["ServiceModelFeatureConfiguration"];
            /**
             * @description Name of the service model feature
             * @example CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
             */
            feature: string;
            /**
             * @description ID of a Service Model
             * @example Consequatur nemo dolor.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example o
             */
            token: string;
        };
        /** @example {
         *       "configuration": {
         *         "Distinctio fugit deserunt.": "Ut officia dolores harum dolorem voluptatem voluptatem."
         *       },
         *       "feature": "Aliquid ipsum."
         *     } */
        EnableServiceModelFeatureRequest2: {
            /** @example {
             *       "Illo porro.": "Voluptatem expedita est debitis eius repellendus quod.",
             *       "Ut voluptas totam rerum natus modi.": "Sint est tempora officiis.",
             *       "Voluptate repellendus consequuntur.": "Ratione deleniti cum."
             *     } */
            configuration: {
                [key: string]: unknown;
            };
            /** @example Et placeat pariatur. */
            feature: string;
        };
        /** @example {
         *       "token": "o"
         *     } */
        EnableTenantBillingRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example 83
             */
            token: string;
        };
        /** @example {
         *       "eventID": "e-123456",
         *       "eventPayload": {
         *         "eventType": "CustomerSignUp",
         *         "token": "123456"
         *       },
         *       "eventType": "InviteUser",
         *       "orgID": "o-123456",
         *       "orgName": "Acme Corp",
         *       "orgURL": "https://acme.com",
         *       "priority": "Critical",
         *       "time": "2023-01-10T00:00:00Z",
         *       "userEmail": "user@example.com",
         *       "userID": "user-123456",
         *       "userName": "user"
         *     } */
        EndCustomerEvent: {
            /**
             * @description ID of a Event
             * @example Reprehenderit consequatur quas maxime quo doloremque.
             */
            eventID: string;
            /**
             * @description The event payload for a service provider.
             * @example {
             *       "eventType": "CustomerSignUp",
             *       "token": "123456"
             *     }
             */
            eventPayload: {
                [key: string]: unknown;
            };
            /**
             * @description The type of the end customer specific event
             * @example InviteUser|RevokeUserRole|InstanceMaintenanceScheduled|CustomerSignUp|DisconnectAccountComplete|ConnectAccountComplete|PendingRevokePermissions|PendingRestorePermissions
             */
            eventType: string;
            /**
             * @description ID of an Org
             * @example Dolore eius cupiditate cumque dolor.
             */
            orgID: string;
            /**
             * @description Associated organization name.
             * @example Acme Corp
             */
            orgName: string;
            /**
             * @description Associated organization URL.
             * @example https://acme.com
             */
            orgURL: string;
            /**
             * @description The priority of the event
             * @example Critical|High|Medium|Low
             */
            priority: string;
            /**
             * @description The event time
             * @example 2023-01-10T00:00:00Z
             */
            time: string;
            /**
             * @description User email associated with the event.
             * @example user@example.com
             */
            userEmail?: string;
            /**
             * @description ID of a User
             * @example Aspernatur excepturi esse.
             */
            userID?: string;
            /**
             * @description Name of the user associated with the event.
             * @example user
             */
            userName?: string;
        };
        /** @example {
         *       "disableMonitoring": false,
         *       "host": "https://my-endpoint.com",
         *       "networkingType": "PUBLIC|PRIVATE",
         *       "ports": [
         *         8080,
         *         8081
         *       ],
         *       "primary": false
         *     } */
        Endpoint: {
            /**
             * @description Whether to disable monitoring for this endpoint
             * @default false
             * @example false
             */
            disableMonitoring: boolean;
            /**
             * @description The host of the endpoint
             * @default
             * @example https://my-endpoint.com
             */
            host: string;
            /**
             * @description The networking type of the endpoint
             * @default PUBLIC
             * @example PUBLIC|PRIVATE
             */
            networkingType: string;
            /**
             * @description The ports of the endpoint
             * @example [
             *       8080,
             *       8081
             *     ]
             */
            ports?: number[];
            /**
             * @description Whether this is the primary endpoint to highlight
             * @default false
             * @example true
             */
            primary: boolean;
        };
        /** @example {
         *       "models": {
         *         "sm-12345678": {
         *           "vu-11111111": "UNKNOWN",
         *           "vu-12345678": "UP",
         *           "vu-87654321": "DOWN"
         *         }
         *       }
         *     } */
        EnvironmentHealthReport: {
            /**
             * @description Health report for each model in the environment
             * @example {
             *       "sm-12345678": {
             *         "vu-11111111": "UNKNOWN",
             *         "vu-12345678": "UP",
             *         "vu-87654321": "DOWN"
             *       }
             *     }
             */
            models?: {
                [key: string]: unknown;
            };
        };
        /** @example {
         *       "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *       "targetEnvironmentID": "se-12345678"
         *     } */
        EnvironmentPromotionStatus: {
            /**
             * @description The status of the promotion
             * @example IN_SYNC|OUT_OF_SYNC|UNKNOWN
             */
            status: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            targetEnvironmentID: string;
        };
        /**
         * @description A service environment variable
         * @example {
         *       "key": "MYSQL_ROOT_PASSWORD",
         *       "value": "password"
         *     }
         */
        EnvironmentVariable: {
            /**
             * @description The key of the environment variable
             * @example MYSQL_ROOT_PASSWORD
             */
            key: string;
            /**
             * @description The value of the environment variable
             * @example password
             */
            value: string;
        };
        /** @example {
         *       "fault": false,
         *       "id": "123abc",
         *       "message": "parameter 'p' must be an integer",
         *       "name": "bad_request",
         *       "temporary": false,
         *       "timeout": false
         *     } */
        Error: {
            /**
             * @description Is the error a server-side fault?
             * @example false
             */
            fault: boolean;
            /**
             * @description ID is a unique identifier for this particular occurrence of the problem.
             * @example 123abc
             */
            id: string;
            /**
             * @description Message is a human-readable explanation specific to this occurrence of the problem.
             * @example parameter 'p' must be an integer
             */
            message: string;
            /**
             * @description Name is the name of this class of errors.
             * @example bad_request
             */
            name: string;
            /**
             * @description Is the error temporary?
             * @example true
             */
            temporary: boolean;
            /**
             * @description Is the error a timeout?
             * @example true
             */
            timeout: boolean;
        };
        /** @example {
         *       "failedReplicaAction": "FAILOVER_AND_RESTART",
         *       "failedReplicaID": "db-0",
         *       "id": "instance-abcd1234",
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "ma"
         *     } */
        FailoverResourceInstanceRequest: {
            /**
             * @description The action to take for the replica that has failed
             * @example FAILOVER_ONLY|FAILOVER_AND_RESTART|FAILOVER_AND_RECREATE
             */
            failedReplicaAction?: string;
            /**
             * @description The failed replica ID
             * @example db-0
             */
            failedReplicaID: string;
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Autem suscipit dolor quibusdam vitae.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example ox4
             */
            token: string;
        };
        /** @example {
         *       "failedReplicaAction": "FAILOVER_AND_RESTART",
         *       "failedReplicaID": "db-0"
         *     } */
        FailoverResourceInstanceRequest2: {
            /**
             * @description The failed replica action
             * @example FAILOVER_AND_RESTART
             */
            failedReplicaAction?: string;
            /**
             * @description The failed replica ID
             * @example db-0
             */
            failedReplicaID: string;
        };
        /** @example {
         *       "description": "A file to store the configuration for the resource",
         *       "fileId": "f-12345678",
         *       "mountPath": "/etc/config",
         *       "name": "file.txt",
         *       "size": 1234,
         *       "type": "Config",
         *       "uploadTime": "2023-01-10T00:00:00Z",
         *       "uploadedBy": "user"
         *     } */
        FileMetadata: {
            /**
             * @description The description of the file
             * @example A file to store the configuration for the resource
             */
            description: string;
            /**
             * @description ID of a File
             * @example Voluptatem exercitationem optio nihil quaerat sunt.
             */
            fileId: string;
            /**
             * @description The mount path of the file
             * @example /etc/config
             */
            mountPath: string;
            /**
             * @description The name of the file
             * @example file.txt
             */
            name: string;
            /**
             * Format: int64
             * @description The size of the file
             * @example 1234
             */
            size: number;
            /**
             * @description The type of the file
             * @example Config|Secret
             */
            type: string;
            /**
             * @description The time the file was uploaded
             * @example 2023-01-10T00:00:00Z
             */
            uploadTime: string;
            /**
             * @description The user who uploaded the file
             * @example user
             */
            uploadedBy: string;
        };
        /** @example {
         *       "EFSFileSystemConfiguration": {
         *         "PerformanceMode": "generalPurpose|maxIO",
         *         "ProvisionedThroughputInMibps": 125,
         *         "ThroughputMode": "provisioned|bursting|elastic"
         *       }
         *     } */
        FileSystemConfiguration: {
            EFSFileSystemConfiguration?: components["schemas"]["EFSFileSystemConfiguration"];
        };
        /** @example {} */
        GCSConfiguration: Record<string, never>;
        /** @example {
         *       "environmentVariables": [
         *         {
         *           "key": "MYSQL_ROOT_PASSWORD",
         *           "value": "password"
         *         }
         *       ],
         *       "image": "library/mysql:5.7",
         *       "imageRegistry": "docker.io",
         *       "password": "password",
         *       "token": "y01",
         *       "username": "username"
         *     } */
        GenerateComposeSpecFromContainerImageRequest: {
            /**
             * @description Runtime environment variables needed to run the image
             * @example [
             *       {
             *         "key": "MYSQL_ROOT_PASSWORD",
             *         "value": "password"
             *       }
             *     ]
             */
            environmentVariables?: components["schemas"]["EnvironmentVariable"][];
            /**
             * @description Name of the image along with the tag. Include the repository name if the image is not from the official repository
             * @example library/mysql:5.7
             */
            image: string;
            /**
             * @description Registry where the image is stored
             * @example docker.io
             */
            imageRegistry: string;
            /**
             * @description Password to access the image registry
             * @example password
             */
            password?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 3g
             */
            token: string;
            /**
             * @description Username to access the image registry
             * @example username
             */
            username?: string;
        };
        /** @example {
         *       "environmentVariables": [
         *         {
         *           "key": "MYSQL_ROOT_PASSWORD",
         *           "value": "password"
         *         }
         *       ],
         *       "image": "library/mysql:5.7",
         *       "imageRegistry": "docker.io",
         *       "password": "password",
         *       "username": "username"
         *     } */
        GenerateComposeSpecFromContainerImageRequest2: {
            /**
             * @description Runtime environment variables needed to run the image
             * @example [
             *       {
             *         "key": "MYSQL_ROOT_PASSWORD",
             *         "value": "password"
             *       }
             *     ]
             */
            environmentVariables?: components["schemas"]["EnvironmentVariable"][];
            /**
             * @description Name of the image along with the tag. Include the repository name if the image is not from the official repository
             * @example library/mysql:5.7
             */
            image: string;
            /**
             * @description Registry where the image is stored
             * @example docker.io
             */
            imageRegistry: string;
            /**
             * @description Password to access the image registry
             * @example password
             */
            password?: string;
            /**
             * @description Username to access the image registry
             * @example username
             */
            username?: string;
        };
        /** @example {
         *       "fileContent": "Assumenda saepe laboriosam commodi mollitia."
         *     } */
        GenerateComposeSpecFromContainerImageResult: {
            /**
             * @description Base64 encoded Compose Spec YAML in docker compose format
             * @example Quae ipsum.
             */
            fileContent: string;
        };
        /** @example {
         *       "id": "instance-abcd1234",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "ll1"
         *     } */
        GenerateTokenForDeploymentCellDashboardRequest: {
            /**
             * @description ID of a Resource Instance
             * @example instance-12345678
             */
            id: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId: string;
            /**
             * @description JWT token used to perform authorization
             * @example b
             */
            token: string;
        };
        /** @example {
         *       "deploymentCellID": "hc-12345678",
         *       "expirationTimestamp": "2021-01-01T00:00:00Z",
         *       "token": "token"
         *     } */
        GenerateTokenForDeploymentCellDashboardResult: {
            /**
             * @description The deployment cell ID
             * @example hc-12345678
             */
            deploymentCellID: string;
            /**
             * @description The timestamp when the token expires
             * @example 2021-01-01T00:00:00Z
             */
            expirationTimestamp: string;
            /**
             * @description The token to access the dashboard
             * @example token
             */
            token: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "code": "us-east-1a",
         *       "token": "6m5"
         *     } */
        GetAvailabilityZoneByCodeRequest: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /**
             * @description Cloud-provider native availability zone code
             * @example us-east-1a
             */
            code: string;
            /**
             * @description JWT token used to perform authorization
             * @example t
             */
            token: string;
        };
        /** @example {
         *       "name": "aws",
         *       "token": "6s"
         *     } */
        GetCloudProviderByNameRequest: {
            /**
             * @description Name of the CloudProvider
             * @example aws
             */
            name: string;
            /**
             * @description JWT token used to perform authorization
             * @example 3y
             */
            token: string;
        };
        /** @example {
         *       "endDate": "2024-01-01T10:00:00Z",
         *       "startDate": "2023-01-01T10:00:00Z",
         *       "subscriptionID": "sub-12345678",
         *       "token": "z1"
         *     } */
        GetConsumptionUsageRequest: {
            /**
             * Format: date-time
             * @description End time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
             * @example 2024-01-01T10:00:00Z
             */
            endDate?: string;
            /**
             * Format: date-time
             * @description Start time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
             * @example 2023-01-01T10:00:00Z
             */
            startDate?: string;
            /**
             * @description ID of a Subscription
             * @example Explicabo itaque voluptas animi.
             */
            subscriptionID?: string;
            /**
             * @description JWT token used to perform authorization
             * @example uy
             */
            token: string;
        };
        /** @example {
         *       "endTime": "2021-01-01T00:00:00.000Z",
         *       "startTime": "2021-01-01T00:00:00.000Z",
         *       "usage": [
         *         {
         *           "dimension": "core/hours",
         *           "endTime": "2021-01-01T00:00:00.000Z",
         *           "startTime": "2021-01-01T00:00:00.000Z",
         *           "total": 0.67
         *         }
         *       ]
         *     } */
        GetConsumptionUsageResult: {
            /**
             * @description End timestamp of usage
             * @example 2021-01-01T00:00:00.000Z
             */
            endTime?: string;
            /**
             * @description Start timestamp of usage
             * @example 2021-01-01T00:00:00.000Z
             */
            startTime?: string;
            /**
             * @description Usage for the current plan
             * @example [
             *       {
             *         "dimension": "core/hours",
             *         "endTime": "2021-01-01T00:00:00.000Z",
             *         "startTime": "2021-01-01T00:00:00.000Z",
             *         "total": 0.67
             *       }
             *     ]
             */
            usage?: components["schemas"]["UsagePerDimension"][];
        };
        /** @example {
         *       "subscriptionID": "sub-12345678",
         *       "token": "e"
         *     } */
        GetCurrentConsumptionUsageRequest: {
            /**
             * @description ID of a Subscription
             * @example Alias sit aut dolorem repellat et ut.
             */
            subscriptionID?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 2m
             */
            token: string;
        };
        /** @example {
         *       "token": "0r"
         *     } */
        GetCurrentUsageRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example fx
             */
            token: string;
        };
        /** @example {
         *       "fileId": "f-12345678",
         *       "id": "r-12345678",
         *       "productTierId": "pt-12345678",
         *       "productTierVersion": "1.0",
         *       "serviceId": "s-12345678",
         *       "token": "c7"
         *     } */
        GetFileRequest: {
            /**
             * @description ID of a File
             * @example Officiis eligendi iure sunt provident dolores.
             */
            fileId: string;
            /**
             * @description ID of a resource
             * @example Suscipit eos quasi culpa dolore est.
             */
            id: string;
            /**
             * @description ID of a Product Tier
             * @example Veniam fugit deserunt perferendis molestiae aut.
             */
            productTierId?: string;
            /**
             * @description Version of the product tier
             * @example 1.0
             */
            productTierVersion?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 8
             */
            token: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "code": "us-east-1",
         *       "token": "es"
         *     } */
        GetRegionByCodeRequest: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /**
             * @description Cloud-provider native region code
             * @example us-east-1
             */
            code: string;
            /**
             * @description JWT token used to perform authorization
             * @example txb
             */
            token: string;
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "name": "my-secret",
         *       "token": "pqh"
         *     } */
        GetSecretRequest: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType: string;
            /**
             * @description Name of the secret
             * @example my-secret
             */
            name: string;
            /**
             * @description JWT token used to perform authorization
             * @example ft
             */
            token: string;
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "name": "my-secret",
         *       "value": "super-secret-value"
         *     } */
        GetSecretResult: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType: string;
            /**
             * @description Name of the secret
             * @example my-secret
             */
            name: string;
            /**
             * @description The value of the secret
             * @example super-secret-value
             */
            value: string;
        };
        /** @example {
         *       "productTierId": "pt-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "6"
         *     } */
        GetServicePlanRequest: {
            /**
             * @description ID of a Product Tier
             * @example Sed corporis eligendi dolor occaecati.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 68
             */
            token: string;
        };
        /** @example {
         *       "AutoApproveSubscription": false,
         *       "accountConfigIds": [
         *         "ac-12345678",
         *         "ac-23456789"
         *       ],
         *       "activeAccountConfigIds": {
         *         "aws": "ac-12345678",
         *         "gcp": "ac-23456789"
         *       },
         *       "apiVersion": "v1",
         *       "awsRegions": [
         *         "us-east-2",
         *         "ca-central-1"
         *       ],
         *       "azureRegions": [
         *         "northcentralus"
         *       ],
         *       "deploymentConfigId": "dc-12345678",
         *       "gcpRegions": [
         *         "us-central1"
         *       ],
         *       "hasPendingChanges": true,
         *       "isProductTierDisabled": true,
         *       "latestMajorVersion": "3.0",
         *       "modelType": "CUSTOMER_HOSTED",
         *       "privateRegions": [
         *         "n/a"
         *       ],
         *       "productTierDescription": "A premium product tier",
         *       "productTierDocumentation": "Any documentation",
         *       "productTierFeatures": {
         *         "LOGS": true,
         *         "METRICS": false
         *       },
         *       "productTierId": "pt-12345678",
         *       "productTierKey": "premium",
         *       "productTierName": "Premium",
         *       "productTierPlanDescription": "A premium plan",
         *       "productTierPricing": {
         *         "price1": "value1"
         *       },
         *       "productTierSupport": "Any support",
         *       "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
         *       "serviceApiId": "sa-12345678",
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
         *       "serviceModelFeatures": [
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         },
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         },
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         },
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         }
         *       ],
         *       "serviceModelId": "sm-12345678",
         *       "serviceModelName": "MySQL multi-writer service hosted model",
         *       "tierType": "OMNISTRATE_DEDICATED_TENANCY",
         *       "versionSetStatus": "Preferred|Active|Deprecated|Pending"
         *     } */
        GetServicePlanResult: {
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            AutoApproveSubscription: boolean;
            /**
             * @description The infrastructure account configuration ID list
             * @example [
             *       "ac-12345678",
             *       "ac-23456789"
             *     ]
             */
            accountConfigIds?: string[];
            /**
             * @description The active infrastructure account configuration IDs per cloud provider
             * @example {
             *       "aws": "ac-12345678",
             *       "gcp": "ac-23456789"
             *     }
             */
            activeAccountConfigIds?: {
                [key: string]: unknown;
            };
            /**
             * @description The external version of the API
             * @example v1
             */
            apiVersion: string;
            /**
             * @description The AWS regions that this service plan is available on
             * @example [
             *       "us-east-2",
             *       "ca-central-1"
             *     ]
             */
            awsRegions?: string[];
            /**
             * @description The Azure regions that this service plan is available on
             * @example [
             *       "northcentralus"
             *     ]
             */
            azureRegions?: string[];
            /**
             * @description ID of a Deployment Config
             * @example Non voluptas reprehenderit aperiam ut omnis.
             */
            deploymentConfigId: string;
            /**
             * @description The GCP regions that this service plan is available on
             * @example [
             *       "us-central1"
             *     ]
             */
            gcpRegions?: string[];
            /**
             * @description Whether there are any pending changes for the product tier configuration
             * @example true
             */
            hasPendingChanges?: boolean;
            /**
             * @description Whether the product tier is disabled
             * @example true
             */
            isProductTierDisabled: boolean;
            /**
             * @description The version number for the latest major version set.
             * @example 3.0
             */
            latestMajorVersion: string;
            /**
             * @description The model type encapsulating this service
             * @example OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
             */
            modelType: string;
            /**
             * @description The Private regions that this service plan is available on
             * @example [
             *       "n/a"
             *     ]
             */
            privateRegions?: string[];
            /**
             * @description A brief description of the product tier
             * @example A premium product tier
             */
            productTierDescription: string;
            /**
             * @description Documentation
             * @example Any documentation
             */
            productTierDocumentation: string;
            /**
             * @description The features that are enabled / disabled for this product tier
             * @example {
             *       "LOGS": true,
             *       "METRICS": false
             *     }
             */
            productTierFeatures?: {
                [key: string]: unknown;
            };
            /**
             * @description ID of a Product Tier
             * @example Autem enim fuga.
             */
            productTierId: string;
            /**
             * @description Unique Key of the product tier
             * @example premium
             */
            productTierKey: string;
            /**
             * @description Name of the product tier
             * @example Premium
             */
            productTierName: string;
            /**
             * @description A brief description for the end user of the product tier
             * @example A premium plan
             */
            productTierPlanDescription: string;
            /**
             * @description Pricing
             * @example {
             *       "price1": "value1"
             *     }
             */
            productTierPricing: unknown;
            /**
             * @description Support
             * @example Any support
             */
            productTierSupport: string;
            /**
             * @description A brief description of the service API bundle
             * @example A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability
             */
            serviceApiDescription: string;
            /**
             * @description ID of a Service API
             * @example Optio illo unde odit quo vitae aperiam.
             */
            serviceApiId: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId: string;
            /**
             * @description A brief description of the service model
             * @example A MySQL Hosted SaaS specializing in multi-writer clusters for high availability
             */
            serviceModelDescription: string;
            /**
             * @description Enabled service model features
             * @example [
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       },
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       },
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       },
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       }
             *     ]
             */
            serviceModelFeatures?: components["schemas"]["ServiceModelFeatureDetail"][];
            /**
             * @description ID of a Service Model
             * @example Id culpa exercitationem consequatur et nam voluptate.
             */
            serviceModelId: string;
            /**
             * @description Name of the Service Model
             * @example MySQL multi-writer service hosted model
             */
            serviceModelName: string;
            /**
             * @description ProductTierType is the type of tier for a product
             * @example OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
             */
            tierType: string;
            /**
             * @description The tier version set status.
             * @example Preferred|Active|Deprecated|Pending
             */
            versionSetStatus: string;
        };
        /** @example {
         *       "token": "5"
         *     } */
        GetTenantBillingStatusRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example a
             */
            token: string;
        };
        /** @example {
         *       "billingProviders": [
         *         {
         *           "connectClientID": "ca_1234567890",
         *           "status": "ENABLED",
         *           "stripeCustomerID": "cus_1234567890",
         *           "type": "STRIPE"
         *         },
         *         {
         *           "balanceDueLink": "https://billing.provider.com/balance-due",
         *           "logoURL": "https://example.com/logo.png",
         *           "name": "GovPay",
         *           "status": "ENABLED",
         *           "type": "BRING_YOUR_OWN"
         *         }
         *       ],
         *       "enabled": true
         *     } */
        GetTenantBillingStatusResult: {
            /**
             * @description List of billing providers
             * @example [
             *       {
             *         "connectClientID": "ca_1234567890",
             *         "status": "ENABLED",
             *         "stripeCustomerID": "cus_1234567890",
             *         "type": "STRIPE"
             *       },
             *       {
             *         "balanceDueLink": "https://billing.provider.com/balance-due",
             *         "logoURL": "https://example.com/logo.png",
             *         "name": "GovPay",
             *         "status": "ENABLED",
             *         "type": "BRING_YOUR_OWN"
             *       }
             *     ]
             */
            billingProviders?: components["schemas"]["BillingProvider"][];
            /**
             * @description Whether tenant billing is enabled for the organization
             * @example true
             */
            enabled?: boolean;
        };
        /** @example {
         *       "endDate": "2024-01-01T10:00:00Z",
         *       "startDate": "2023-01-01T10:00:00Z",
         *       "token": "m"
         *     } */
        GetUsageRequest: {
            /**
             * Format: date-time
             * @description End time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
             * @example 2024-01-01T10:00:00Z
             */
            endDate?: string;
            /**
             * Format: date-time
             * @description Start time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
             * @example 2023-01-01T10:00:00Z
             */
            startDate?: string;
            /**
             * @description JWT token used to perform authorization
             * @example v
             */
            token: string;
        };
        /** @example {
         *       "endTime": "2021-01-01T00:00:00.000Z",
         *       "planName": "STARTER",
         *       "startTime": "2021-01-01T00:00:00.000Z",
         *       "usage": [
         *         {
         *           "dimension": "core/hours",
         *           "endTime": "2021-01-01T00:00:00.000Z",
         *           "startTime": "2021-01-01T00:00:00.000Z",
         *           "total": 0.67
         *         }
         *       ]
         *     } */
        GetUsageResult: {
            /**
             * @description End timestamp of usage
             * @example 2021-01-01T00:00:00.000Z
             */
            endTime?: string;
            /**
             * @description This parameter is used to select the appropriate Product Plan
             * @example STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
             */
            planName?: string;
            /**
             * @description Start timestamp of usage
             * @example 2021-01-01T00:00:00.000Z
             */
            startTime?: string;
            /**
             * @description Usage for the current plan
             * @example [
             *       {
             *         "dimension": "core/hours",
             *         "endTime": "2021-01-01T00:00:00.000Z",
             *         "startTime": "2021-01-01T00:00:00.000Z",
             *         "total": 0.67
             *       }
             *     ]
             */
            usage?: components["schemas"]["UsagePerDimension"][];
        };
        /** @example {
         *       "accessToken": "my-token",
         *       "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *       "referenceName": "tags/v1.0.0",
         *       "repositoryUrl": "https://github.com/username/myrepo",
         *       "userName": "my-user"
         *     } */
        GitConfiguration: {
            /**
             * @description The access token
             * @example my-token
             */
            accessToken?: string;
            /**
             * @description The commit SHA to checkout
             * @example 1e386b5f54de9150d336ccfe2e14782b94faf67c
             */
            commitSHA?: string;
            /**
             * @description The reference name of the repository
             * @example tags/v1.0.0
             */
            referenceName: string;
            /**
             * @description The URL of the repository
             * @example https://github.com/username/myrepo
             */
            repositoryUrl: string;
            /**
             * @description The name of github user
             * @example my-user
             */
            userName?: string;
        };
        /** @example {
         *       "chartName": "my-chart",
         *       "chartRepoName": "my-repo",
         *       "chartRepoUrl": "https://my-repo.com",
         *       "chartValues": {
         *         "key1": "value1",
         *         "key2": 3,
         *         "key3": {
         *           "key4": "value4"
         *         }
         *       },
         *       "chartVersion": "1.0.0",
         *       "endpointConfiguration": {
         *         "admin": {
         *           "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *           "networkingType": "PRIVATE",
         *           "ports": [
         *             8080,
         *             8081
         *           ],
         *           "primary": false
         *         },
         *         "cluster": {
         *           "host": "https://my-endpoint.com",
         *           "networkingType": "PUBLIC",
         *           "ports": [
         *             8080,
         *             8081
         *           ],
         *           "primary": true
         *         }
         *       },
         *       "layeredChartValues": [
         *         {
         *           "values": {
         *             "global": {
         *               "image": {
         *                 "tag": "v1.0.0"
         *               },
         *               "replicaCount": 1,
         *               "resources": {
         *                 "requests": {
         *                   "cpu": "100m",
         *                   "memory": "128Mi"
         *                 }
         *               }
         *             }
         *           }
         *         },
         *         {
         *           "scope": {
         *             "{{ $sys.cloudProviderName }}": "aws"
         *           },
         *           "valuesFile": {
         *             "gitConfiguration": {
         *               "accessToken": "ghp_...",
         *               "commitSHA": "a1b2c3d4e5f6",
         *               "path": "aws/production.yaml",
         *               "referenceName": "refs/heads/main",
         *               "repositoryUrl": "https://github.com/org/helm-values"
         *             }
         *           }
         *         }
         *       ],
         *       "namespace": "postgres",
         *       "password": "my-password",
         *       "runtimeConfiguration": {
         *         "disableHooks": true,
         *         "recreate": true,
         *         "resetThenReuseValues": true,
         *         "resetValues": true,
         *         "reuseValues": true,
         *         "skipCRDs": true,
         *         "timeoutNanos": 1000000000,
         *         "upgradeCRDs": true,
         *         "wait": true,
         *         "waitForJobs": true
         *       },
         *       "username": "my-user"
         *     } */
        HelmChartConfiguration: {
            /**
             * @description The chart name of the Helm package
             * @example my-chart
             */
            chartName: string;
            /**
             * @description The chart repository name of the Helm package
             * @example my-repo
             */
            chartRepoName: string;
            /**
             * @description The chart repository URL of the Helm package
             * @example https://my-repo.com
             */
            chartRepoUrl: string;
            /**
             * @description The values of the Helm package (mutually exclusive with layeredChartValues)
             * @example {
             *       "key1": "value1",
             *       "key2": 3,
             *       "key3": {
             *         "key4": "value4"
             *       }
             *     }
             */
            chartValues?: {
                [key: string]: unknown;
            };
            /**
             * @description The chart version of the Helm package
             * @example 1.0.0
             */
            chartVersion: string;
            /**
             * @description The endpoints from the Helm Deployment to expose to the customer
             * @example {
             *       "admin": {
             *         "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
             *         "networkingType": "PRIVATE",
             *         "ports": [
             *           8080,
             *           8081
             *         ],
             *         "primary": false
             *       },
             *       "cluster": {
             *         "host": "https://my-endpoint.com",
             *         "networkingType": "PUBLIC",
             *         "ports": [
             *           8080,
             *           8081
             *         ],
             *         "primary": true
             *       }
             *     }
             */
            endpointConfiguration?: {
                [key: string]: components["schemas"]["Endpoint"];
            };
            /**
             * @description Layered chart values configuration with conditional scoping (mutually exclusive with chartValues). Values are processed in order - later entries override earlier ones for the same keys.
             * @example [
             *       {
             *         "values": {
             *           "global": {
             *             "image": {
             *               "tag": "v1.0.0"
             *             },
             *             "replicaCount": 1,
             *             "resources": {
             *               "requests": {
             *                 "cpu": "100m",
             *                 "memory": "128Mi"
             *               }
             *             }
             *           }
             *         }
             *       },
             *       {
             *         "scope": {
             *           "{{ $sys.cloudProviderName }}": "aws"
             *         },
             *         "valuesFile": {
             *           "gitConfiguration": {
             *             "accessToken": "ghp_...",
             *             "commitSHA": "a1b2c3d4e5f6",
             *             "path": "aws/production.yaml",
             *             "referenceName": "refs/heads/main",
             *             "repositoryUrl": "https://github.com/org/helm-values"
             *           }
             *         }
             *       }
             *     ]
             */
            layeredChartValues?: components["schemas"]["ChartValuesRef"][];
            /**
             * @description The namespace to deploy the Helm chart into (only applicable to OnPrem hosting model)
             * @example postgres
             */
            namespace?: string;
            /**
             * @description The password to authenticate with the registry
             * @example my-password
             */
            password?: string;
            runtimeConfiguration?: components["schemas"]["HelmRuntimeConfiguration"];
            /**
             * @description The username to authenticate with the registry
             * @example my-user
             */
            username?: string;
        };
        /** @example {
         *       "chartName": "my-chart",
         *       "chartRepoName": "my-repo",
         *       "chartRepoUrl": "https://my-repo.com",
         *       "chartValues": {
         *         "key1": "value1",
         *         "key2": 3,
         *         "key3": {
         *           "key4": "value4"
         *         }
         *       },
         *       "chartVersion": "1.0.0",
         *       "layeredChartValues": [
         *         {
         *           "name": "my-layer",
         *           "scope": {
         *             "{{ $sys.cloudProviderName }}": "aws"
         *           },
         *           "values": {
         *             "global": {
         *               "affinity": {
         *                 "nodeAffinity": {
         *                   "requiredDuringSchedulingIgnoredDuringExecution": {
         *                     "nodeSelectorTerms": [
         *                       {
         *                         "matchExpressions": [
         *                           {
         *                             "key": "omnistrate.com/managed-by",
         *                             "operator": "In",
         *                             "values": [
         *                               "omnistrate"
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     ]
         *                   }
         *                 }
         *               }
         *             }
         *           },
         *           "valuesFile": {
         *             "gitConfiguration": {
         *               "accessToken": "my-token",
         *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *               "referenceName": "tags/v1.0.0",
         *               "repositoryUrl": "https://github.com/username/myrepo",
         *               "userName": "my-user"
         *             },
         *             "path": "helm/values/production.yaml"
         *           }
         *         },
         *         {
         *           "name": "my-layer",
         *           "scope": {
         *             "{{ $sys.cloudProviderName }}": "aws"
         *           },
         *           "values": {
         *             "global": {
         *               "affinity": {
         *                 "nodeAffinity": {
         *                   "requiredDuringSchedulingIgnoredDuringExecution": {
         *                     "nodeSelectorTerms": [
         *                       {
         *                         "matchExpressions": [
         *                           {
         *                             "key": "omnistrate.com/managed-by",
         *                             "operator": "In",
         *                             "values": [
         *                               "omnistrate"
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     ]
         *                   }
         *                 }
         *               }
         *             }
         *           },
         *           "valuesFile": {
         *             "gitConfiguration": {
         *               "accessToken": "my-token",
         *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *               "referenceName": "tags/v1.0.0",
         *               "repositoryUrl": "https://github.com/username/myrepo",
         *               "userName": "my-user"
         *             },
         *             "path": "helm/values/production.yaml"
         *           }
         *         },
         *         {
         *           "name": "my-layer",
         *           "scope": {
         *             "{{ $sys.cloudProviderName }}": "aws"
         *           },
         *           "values": {
         *             "global": {
         *               "affinity": {
         *                 "nodeAffinity": {
         *                   "requiredDuringSchedulingIgnoredDuringExecution": {
         *                     "nodeSelectorTerms": [
         *                       {
         *                         "matchExpressions": [
         *                           {
         *                             "key": "omnistrate.com/managed-by",
         *                             "operator": "In",
         *                             "values": [
         *                               "omnistrate"
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     ]
         *                   }
         *                 }
         *               }
         *             }
         *           },
         *           "valuesFile": {
         *             "gitConfiguration": {
         *               "accessToken": "my-token",
         *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *               "referenceName": "tags/v1.0.0",
         *               "repositoryUrl": "https://github.com/username/myrepo",
         *               "userName": "my-user"
         *             },
         *             "path": "helm/values/production.yaml"
         *           }
         *         }
         *       ],
         *       "namespace": "default",
         *       "password": "my-password",
         *       "username": "my-user"
         *     } */
        HelmPackage: {
            /**
             * @description The chart name of the Helm package
             * @example my-chart
             */
            chartName: string;
            /**
             * @description The chart repository name of the Helm package
             * @example my-repo
             */
            chartRepoName: string;
            /**
             * @description The chart repository URL of the Helm package
             * @example https://my-repo.com
             */
            chartRepoUrl: string;
            /**
             * @description The values of the Helm package (mutually exclusive with layeredChartValues)
             * @example {
             *       "key1": "value1",
             *       "key2": 3,
             *       "key3": {
             *         "key4": "value4"
             *       }
             *     }
             */
            chartValues?: {
                [key: string]: unknown;
            };
            /**
             * @description The chart version of the Helm package
             * @example 1.0.0
             */
            chartVersion: string;
            /**
             * @description Layered chart values configuration allowing multiple conditional value sets (mutually exclusive with chartValues).
             * @example [
             *       {
             *         "name": "my-layer",
             *         "scope": {
             *           "{{ $sys.cloudProviderName }}": "aws"
             *         },
             *         "values": {
             *           "global": {
             *             "affinity": {
             *               "nodeAffinity": {
             *                 "requiredDuringSchedulingIgnoredDuringExecution": {
             *                   "nodeSelectorTerms": [
             *                     {
             *                       "matchExpressions": [
             *                         {
             *                           "key": "omnistrate.com/managed-by",
             *                           "operator": "In",
             *                           "values": [
             *                             "omnistrate"
             *                           ]
             *                         }
             *                       ]
             *                     }
             *                   ]
             *                 }
             *               }
             *             }
             *           }
             *         },
             *         "valuesFile": {
             *           "gitConfiguration": {
             *             "accessToken": "my-token",
             *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *             "referenceName": "tags/v1.0.0",
             *             "repositoryUrl": "https://github.com/username/myrepo",
             *             "userName": "my-user"
             *           },
             *           "path": "helm/values/production.yaml"
             *         }
             *       },
             *       {
             *         "name": "my-layer",
             *         "scope": {
             *           "{{ $sys.cloudProviderName }}": "aws"
             *         },
             *         "values": {
             *           "global": {
             *             "affinity": {
             *               "nodeAffinity": {
             *                 "requiredDuringSchedulingIgnoredDuringExecution": {
             *                   "nodeSelectorTerms": [
             *                     {
             *                       "matchExpressions": [
             *                         {
             *                           "key": "omnistrate.com/managed-by",
             *                           "operator": "In",
             *                           "values": [
             *                             "omnistrate"
             *                           ]
             *                         }
             *                       ]
             *                     }
             *                   ]
             *                 }
             *               }
             *             }
             *           }
             *         },
             *         "valuesFile": {
             *           "gitConfiguration": {
             *             "accessToken": "my-token",
             *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *             "referenceName": "tags/v1.0.0",
             *             "repositoryUrl": "https://github.com/username/myrepo",
             *             "userName": "my-user"
             *           },
             *           "path": "helm/values/production.yaml"
             *         }
             *       },
             *       {
             *         "name": "my-layer",
             *         "scope": {
             *           "{{ $sys.cloudProviderName }}": "aws"
             *         },
             *         "values": {
             *           "global": {
             *             "affinity": {
             *               "nodeAffinity": {
             *                 "requiredDuringSchedulingIgnoredDuringExecution": {
             *                   "nodeSelectorTerms": [
             *                     {
             *                       "matchExpressions": [
             *                         {
             *                           "key": "omnistrate.com/managed-by",
             *                           "operator": "In",
             *                           "values": [
             *                             "omnistrate"
             *                           ]
             *                         }
             *                       ]
             *                     }
             *                   ]
             *                 }
             *               }
             *             }
             *           }
             *         },
             *         "valuesFile": {
             *           "gitConfiguration": {
             *             "accessToken": "my-token",
             *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *             "referenceName": "tags/v1.0.0",
             *             "repositoryUrl": "https://github.com/username/myrepo",
             *             "userName": "my-user"
             *           },
             *           "path": "helm/values/production.yaml"
             *         }
             *       }
             *     ]
             */
            layeredChartValues?: components["schemas"]["ChartValuesRef"][];
            /**
             * @description The namespace where the Helm package should be installed
             * @example default
             */
            namespace: string;
            /**
             * @description The password to authenticate with the registry
             * @example my-password
             */
            password?: string;
            /**
             * @description The username to authenticate with the registry
             * @example my-user
             */
            username?: string;
        };
        /** @example {
         *       "disableHooks": true,
         *       "recreate": true,
         *       "resetThenReuseValues": true,
         *       "resetValues": true,
         *       "reuseValues": true,
         *       "skipCRDs": true,
         *       "timeoutNanos": 1000000000,
         *       "upgradeCRDs": true,
         *       "wait": true,
         *       "waitForJobs": true
         *     } */
        HelmRuntimeConfiguration: {
            /**
             * @description Disable Helm hooks
             * @example true
             */
            disableHooks: boolean;
            /**
             * @description Recreate the Helm package if it already exists
             * @example true
             */
            recreate: boolean;
            /**
             * @description Reset then reuse values for the Helm package before applying
             * @example true
             */
            resetThenReuseValues: boolean;
            /**
             * @description Reset values for the Helm package before applying
             * @example true
             */
            resetValues: boolean;
            /**
             * @description Reuse values for the Helm package before applying
             * @example true
             */
            reuseValues: boolean;
            /**
             * @description Skip CRDs for the Helm package
             * @example true
             */
            skipCRDs: boolean;
            /**
             * Format: int64
             * @description Timeout (nanos) for the Helm package to be deployed
             * @example 1000000000
             */
            timeoutNanos: number;
            /**
             * @description Upgrade CRDs for the Helm package
             * @example true
             */
            upgradeCRDs: boolean;
            /**
             * @description Wait for the Helm package to be deployed
             * @example true
             */
            wait: boolean;
            /**
             * @description Wait for all jobs to be completed
             * @example true
             */
            waitForJobs: boolean;
        };
        /** @example {
         *       "changeState": "PENDING_NEW",
         *       "imageConfigId": "imgc-12345678",
         *       "imageName": "mysql"
         *     } */
        ImageConfigChangeSummary: {
            /**
             * @description State of the configuration change
             * @example PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
             */
            changeState?: string;
            /**
             * @description ID of an Image Config
             * @example Rem dicta ea laudantium sit officia.
             */
            imageConfigId?: string;
            /**
             * @description Name of the container image
             * @example mysql
             */
            imageName?: string;
        };
        /** @example {
         *       "changeState": "PENDING_NEW",
         *       "infraConfigId": "ic-12345678",
         *       "name": "MySQL Writer Infra Config"
         *     } */
        InfraConfigChangeSummary: {
            /**
             * @description State of the configuration change
             * @example PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
             */
            changeState?: string;
            /**
             * @description ID of an Infra Config
             * @example Et temporibus quibusdam.
             */
            infraConfigId?: string;
            /**
             * @description The name of the infra config
             * @example MySQL Writer Infra Config
             */
            name?: string;
        };
        /**
         * @description The rollout configuration to use for making changes to the resources backed by this infra
         * @example {
         *       "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
         *       "maximumNumberOfResourceInstancesPerBatch": 1,
         *       "maximumUnavailableReplicas": 1
         *     }
         */
        InfraRollConfiguration: {
            /**
             * @description Rollout strategy to use for infra config updates
             * @example APPLY_IMMEDIATELY
             */
            infraRolloutStrategy?: string;
            /**
             * Format: int64
             * @description Maximum number of resource instances to update in a single batch
             * @default 1
             * @example 1
             */
            maximumNumberOfResourceInstancesPerBatch: number;
            /**
             * Format: int64
             * @description Maximum number of replicas of this resource that can be unavailable before halting the rollout
             * @default 1
             * @example 1
             */
            maximumUnavailableReplicas: number;
        };
        /** @example {
         *       "custom": false,
         *       "defaultValue": "option1",
         *       "dependentResourceID": "r-12345678",
         *       "description": "The name of the server",
         *       "displayName": "Server Name",
         *       "isList": false,
         *       "key": "serverName",
         *       "modifiable": true,
         *       "options": [
         *         "option1",
         *         "option2"
         *       ],
         *       "regex": "^[a-zA-Z0-9_-]{3,16}$",
         *       "required": true,
         *       "tabIndex": 1,
         *       "type": "Boolean|Float64|String|JSON|Resource"
         *     } */
        InputParameterEntity: {
            /**
             * @description Whether the parameter is custom
             * @example false
             */
            custom: boolean;
            /**
             * @description The parameter default value
             * @example option1
             */
            defaultValue?: string;
            /**
             * @description The parameter dependent resource ID
             * @example r-12345678
             */
            dependentResourceID?: string;
            /**
             * @description The parameter description
             * @example The name of the server
             */
            description: string;
            /**
             * @description The parameter display name
             * @example Server Name
             */
            displayName: string;
            /**
             * @description Whether the parameter is a list
             * @example false
             */
            isList: boolean;
            /**
             * @description The parameter key
             * @example serverName
             */
            key: string;
            /**
             * @description Whether the parameter is modifiable
             * @example true
             */
            modifiable: boolean;
            /**
             * @description The parameter options
             * @example [
             *       "option1",
             *       "option2"
             *     ]
             */
            options?: string[];
            /**
             * @description The parameter regex for validation
             * @example ^[a-zA-Z0-9_-]{3,16}$
             */
            regex?: string;
            /**
             * @description Whether the parameter is required
             * @example true
             */
            required: boolean;
            /**
             * Format: int64
             * @description Index for parameter ordering in the SaaS portal
             * @default 0
             * @example 1
             */
            tabIndex: number;
            /**
             * @description The parameter type
             * @example Boolean|Float64|String|JSON|Resource
             */
            type: string;
        };
        /** @example {
         *       "instanceID": "instance-12345678",
         *       "lifeCycleStatus": "RUNNING",
         *       "resourcesHealth": {
         *         "Magnam excepturi odit et delectus sit quas.": {
         *           "nodesHealth": {
         *             "Ut modi.": {
         *               "availabilityZone": "us-east-2a",
         *               "connectivityStatus": "HEALTHY",
         *               "diskHealth": "HEALTHY",
         *               "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *               "integrationsHealth": {
         *                 "CustomerObservabilityHealth": "HEALTHY",
         *                 "InternalObservabilityHealth": "HEALTHY"
         *               },
         *               "loadStatus": "LOAD_NORMAL",
         *               "nodeHealth": "HEALTHY",
         *               "nodeName": "postgres-0",
         *               "ports": [
         *                 80,
         *                 443
         *               ],
         *               "processHealth": "HEALTHY",
         *               "processLiveness": "HEALTHY",
         *               "status": "HEALTHY"
         *             }
         *           },
         *           "resourceID": "resource-12345678",
         *           "resourceKey": "primary",
         *           "resourceType": "Kustomize",
         *           "status": "HEALTHY"
         *         }
         *       },
         *       "status": "HEALTHY"
         *     } */
        InstanceHealthSummary: {
            /**
             * @description ID of a Resource Instance
             * @example instance-12345678
             */
            instanceID?: string;
            /**
             * @description The status of an operation
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
             */
            lifeCycleStatus?: string;
            /**
             * @description The health summary of the resources by resource ID
             * @example {
             *       "Et molestias temporibus est ea dolores aliquam.": {
             *         "nodesHealth": {
             *           "Ut modi.": {
             *             "availabilityZone": "us-east-2a",
             *             "connectivityStatus": "HEALTHY",
             *             "diskHealth": "HEALTHY",
             *             "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *             "integrationsHealth": {
             *               "CustomerObservabilityHealth": "HEALTHY",
             *               "InternalObservabilityHealth": "HEALTHY"
             *             },
             *             "loadStatus": "LOAD_NORMAL",
             *             "nodeHealth": "HEALTHY",
             *             "nodeName": "postgres-0",
             *             "ports": [
             *               80,
             *               443
             *             ],
             *             "processHealth": "HEALTHY",
             *             "processLiveness": "HEALTHY",
             *             "status": "HEALTHY"
             *           }
             *         },
             *         "resourceID": "resource-12345678",
             *         "resourceKey": "primary",
             *         "resourceType": "Kustomize",
             *         "status": "HEALTHY"
             *       },
             *       "Placeat et est dolore magnam quo autem.": {
             *         "nodesHealth": {
             *           "Ut modi.": {
             *             "availabilityZone": "us-east-2a",
             *             "connectivityStatus": "HEALTHY",
             *             "diskHealth": "HEALTHY",
             *             "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *             "integrationsHealth": {
             *               "CustomerObservabilityHealth": "HEALTHY",
             *               "InternalObservabilityHealth": "HEALTHY"
             *             },
             *             "loadStatus": "LOAD_NORMAL",
             *             "nodeHealth": "HEALTHY",
             *             "nodeName": "postgres-0",
             *             "ports": [
             *               80,
             *               443
             *             ],
             *             "processHealth": "HEALTHY",
             *             "processLiveness": "HEALTHY",
             *             "status": "HEALTHY"
             *           }
             *         },
             *         "resourceID": "resource-12345678",
             *         "resourceKey": "primary",
             *         "resourceType": "Kustomize",
             *         "status": "HEALTHY"
             *       }
             *     }
             */
            resourcesHealth?: {
                [key: string]: components["schemas"]["ResourceHealthSummary"];
            };
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            status?: string;
        };
        /** @example {
         *       "completeTime": "2021-09-01T00:00:00Z",
         *       "createdTime": "2021-09-01T00:00:00Z",
         *       "encrypted": true,
         *       "progress": 99,
         *       "snapshotId": "instance-ss-12345678",
         *       "status": "completed"
         *     } */
        InstanceSnapshot: {
            /**
             * @description The snapshot time
             * @example 2021-09-01T00:00:00Z
             */
            completeTime: string;
            /**
             * @description The snapshot creation time
             * @example 2021-09-01T00:00:00Z
             */
            createdTime: string;
            /**
             * @description Whether the snapshot is encrypted
             * @example true
             */
            encrypted: boolean;
            /**
             * Format: int64
             * @description The backup progress. 0-100
             * @example 99
             */
            progress: number;
            /**
             * @description ID of a Resource Instance Snapshot
             * @example Quo sunt sed ut.
             */
            snapshotId: string;
            /**
             * @description The snapshot status
             * @example completed
             */
            status: string;
        };
        /** @example {
         *       "CustomerObservabilityHealth": "HEALTHY",
         *       "InternalObservabilityHealth": "HEALTHY"
         *     } */
        IntegrationsHealth: {
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            CustomerObservabilityHealth?: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            InternalObservabilityHealth?: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "roleType": "reader",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "dwl"
         *     } */
        InviteConsumptionUserRequest: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /**
             * @description Type of the role
             * @example root|editor|reader|service_editor|service_reader|admin|service_operator
             */
            roleType: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 32
             */
            token: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "roleType": "reader"
         *     } */
        InviteConsumptionUserRequest2: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /** @example reader */
            roleType: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "roleType": "reader",
         *       "token": "u"
         *     } */
        InviteUserRequest: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /**
             * @description Type of the role
             * @example root|editor|reader|service_editor|service_reader|admin|service_operator
             */
            roleType: string;
            /**
             * @description JWT token used to perform authorization
             * @example bu
             */
            token: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "roleType": "reader"
         *     } */
        InviteUserRequest2: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /** @example reader */
            roleType: string;
        };
        /** @example {
         *       "currency": "USD",
         *       "dueDate": "2023-10-01T00:00:00Z",
         *       "invoiceDate": "2021-01-01T00:00:00.000Z",
         *       "invoiceId": "in_1234568",
         *       "invoiceNumber": "2021-01-01-1234567890",
         *       "invoicePdf": "https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap",
         *       "invoiceStatus": "Open",
         *       "invoiceUrl": "https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap",
         *       "paymentTerms": "Net 30",
         *       "taxAmount": 10,
         *       "totalAmount": 110,
         *       "totalAmountWithoutTax": 100
         *     } */
        Invoice: {
            /**
             * @description The currency of the charge
             * @example USD
             */
            currency?: string;
            /**
             * @description Due date in ISO 8601 format
             * @example 2023-10-01T00:00:00Z
             */
            dueDate?: string;
            /**
             * @description Date of the invoice
             * @example 2021-01-01T00:00:00.000Z
             */
            invoiceDate?: string;
            /**
             * @description ID of the invoice
             * @example in_1234568
             */
            invoiceId?: string;
            /**
             * @description The invoice number
             * @example 2021-01-01-1234567890
             */
            invoiceNumber?: string;
            /**
             * @description URL for the PDF of the invoice
             * @example https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
             */
            invoicePdf?: string;
            /**
             * @description This describes the status of the invoice and is set by the payment provider
             * @example draft|open|paid|uncollectible|void
             */
            invoiceStatus?: string;
            /**
             * @description URL for this invoice
             * @example https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
             */
            invoiceUrl?: string;
            /**
             * @description Payment terms of the invoice
             * @example Net 30
             */
            paymentTerms?: string;
            /**
             * Format: double
             * @description Amount of tax, if any
             * @example 10
             */
            taxAmount?: number;
            /**
             * Format: double
             * @description Amount of Invoice
             * @example 110
             */
            totalAmount?: number;
            /**
             * Format: double
             * @description Amount of Invoice without tax
             * @example 100
             */
            totalAmountWithoutTax?: number;
        };
        /** @example {
         *       "activeDeadlineSeconds": 3600,
         *       "backoffLimit": 5
         *     } */
        JobConfig: {
            /**
             * Format: int64
             * @description The duration in seconds relative to the startTime that the job may be active before the system tries to terminate it
             * @default 3600
             * @example 3600
             */
            activeDeadlineSeconds: number;
            /**
             * Format: int32
             * @description The number of retries before marking the job as failed
             * @default 5
             * @example 5
             */
            backoffLimit: number;
        };
        /** @example {
         *       "additionalData": {
         *         "completionStatus": "Succeeded",
         *         "retries": 2
         *       },
         *       "endTime": "2021-09-01T01:00:00Z",
         *       "metricType": "cpu_core_seconds",
         *       "startTime": "2021-09-01T00:00:00Z",
         *       "value": 120.5
         *     } */
        JobMetric: {
            /**
             * @description Additional metadata about the job
             * @example {
             *       "completionStatus": "Succeeded",
             *       "retries": 2
             *     }
             */
            additionalData?: {
                [key: string]: unknown;
            };
            /**
             * @description When the job completed
             * @example 2021-09-01T01:00:00Z
             */
            endTime?: string;
            /**
             * @description Type of job metric being tracked
             * @example cpu_core_seconds|memory_mb_seconds
             */
            metricType: string;
            /**
             * @description When the job started running
             * @example 2021-09-01T00:00:00Z
             */
            startTime: string;
            /**
             * Format: double
             * @description Value of the metric
             * @example 120.5
             */
            value: number;
        };
        /** @example {
         *       "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
         *       "deploymentCellID": "hc-12345678"
         *     } */
        KubernetesDashboardEndpoint: {
            /**
             * @description The dashboard endpoint
             * @default
             * @example https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
             */
            dashboardEndpoint: string;
            /**
             * @description The deployment cell ID
             * @default
             * @example hc-12345678
             */
            deploymentCellID: string;
        };
        /** @example {
         *       "endpointConfiguration": {
         *         "admin": {
         *           "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *           "networkingType": "PRIVATE",
         *           "ports": [
         *             8080,
         *             8081
         *           ],
         *           "primary": false
         *         },
         *         "cluster": {
         *           "host": "https://my-endpoint.com",
         *           "networkingType": "PUBLIC",
         *           "ports": [
         *             8080,
         *             8081
         *           ],
         *           "primary": true
         *         }
         *       },
         *       "gitConfiguration": {
         *         "accessToken": "my-token",
         *         "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *         "referenceName": "tags/v1.0.0",
         *         "repositoryUrl": "https://github.com/username/myrepo",
         *         "userName": "my-user"
         *       },
         *       "helmChartDependencies": [
         *         {
         *           "chartName": "cert-manager",
         *           "chartVersion": "v1.5.3"
         *         },
         *         {
         *           "chartName": "nginx-ingress",
         *           "chartVersion": "v0.48.1"
         *         },
         *         {
         *           "chartName": "external-dns",
         *           "chartVersion": "v0.7.0"
         *         },
         *         {
         *           "chartName": "cnpg-operator",
         *           "chartVersion": "v0.23.1"
         *         }
         *       ],
         *       "kustomizePath": "/kustomize"
         *     } */
        KustomizeConfiguration: {
            /**
             * @description The endpoints from the Kustomize Deployment to expose to the customer
             * @example {
             *       "admin": {
             *         "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
             *         "networkingType": "PRIVATE",
             *         "ports": [
             *           8080,
             *           8081
             *         ],
             *         "primary": false
             *       },
             *       "cluster": {
             *         "host": "https://my-endpoint.com",
             *         "networkingType": "PUBLIC",
             *         "ports": [
             *           8080,
             *           8081
             *         ],
             *         "primary": true
             *       }
             *     }
             */
            endpointConfiguration?: {
                [key: string]: components["schemas"]["Endpoint"];
            };
            gitConfiguration?: components["schemas"]["GitConfiguration"];
            /**
             * @description The helm chart dependencies for the CRD - Optional
             * @example [
             *       {
             *         "chartName": "cert-manager",
             *         "chartVersion": "v1.5.3"
             *       },
             *       {
             *         "chartName": "nginx-ingress",
             *         "chartVersion": "v0.48.1"
             *       },
             *       {
             *         "chartName": "external-dns",
             *         "chartVersion": "v0.7.0"
             *       },
             *       {
             *         "chartName": "cnpg-operator",
             *         "chartVersion": "v0.23.1"
             *       }
             *     ]
             */
            helmChartDependencies?: components["schemas"]["OperatorHelmChartDependency"][];
            /**
             * @description The path to the kustomize directory
             * @example /kustomize
             */
            kustomizePath: string;
        };
        /** @example {
         *       "ingressPortConfiguration": [
         *         {
         *           "associatedResourceIDs": [
         *             "r-12345678",
         *             "r-abcdef12"
         *           ],
         *           "backendPort": 8080,
         *           "ingressPort": 1234
         *         },
         *         {
         *           "associatedResourceIDs": [
         *             "r-12345678",
         *             "r-abcdef12"
         *           ],
         *           "backendPort": 8081,
         *           "ingressPort": 5678
         *         },
         *         {
         *           "associatedResourceIDs": [
         *             "r-vwxybz12",
         *             "r-poij122v"
         *           ],
         *           "backendPort": 8082,
         *           "ingressPort": 9012
         *         }
         *       ]
         *     } */
        L4LoadBalancerConfiguration: {
            /**
             * @description The ingress port configuration to configure on the load balancer
             * @example [
             *       {
             *         "associatedResourceIDs": [
             *           "r-12345678",
             *           "r-abcdef12"
             *         ],
             *         "backendPort": 8080,
             *         "ingressPort": 1234
             *       },
             *       {
             *         "associatedResourceIDs": [
             *           "r-12345678",
             *           "r-abcdef12"
             *         ],
             *         "backendPort": 8081,
             *         "ingressPort": 5678
             *       },
             *       {
             *         "associatedResourceIDs": [
             *           "r-vwxybz12",
             *           "r-poij122v"
             *         ],
             *         "backendPort": 8082,
             *         "ingressPort": 9012
             *       }
             *     ]
             */
            ingressPortConfiguration?: components["schemas"]["BackendPortConfiguration"][];
        };
        /** @example {
         *       "paths": [
         *         {
         *           "associatedResourceID": "r-12345678",
         *           "path": "/path",
         *           "port": 8080
         *         }
         *       ]
         *     } */
        L7LoadBalancerConfiguration: {
            /**
             * @description The paths to configure on the load balancer
             * @example [
             *       {
             *         "associatedResourceID": "r-12345678",
             *         "path": "/path",
             *         "port": 8080
             *       }
             *     ]
             */
            paths?: components["schemas"]["LoadBalancerPathConfiguration"][];
        };
        /**
         * @description Limit of a parameter
         * @example {
         *       "max": "Et ea odio aliquam qui voluptas dolor.",
         *       "maxLength": "Est quia tempore voluptas modi in qui.",
         *       "min": "Maxime vero nam ducimus.",
         *       "minLength": "Eveniet eligendi non a."
         *     }
         */
        Limits: {
            /**
             * @description Maximum value for an integer or floating-point parameter
             * @example Recusandae laborum.
             */
            max?: string;
            /**
             * @description Maximum length of a string parameter
             * @example Eum ratione hic similique repellendus atque.
             */
            maxLength?: string;
            /**
             * @description Minimum value for an integer or floating-point parameter
             * @example Voluptatum necessitatibus voluptas sit asperiores.
             */
            min?: string;
            /**
             * @description Minimum length of a string parameter
             * @example Suscipit et consequatur et id.
             */
            minLength?: string;
        };
        /** @example {
         *       "token": "h"
         *     } */
        List: {
            /**
             * @description JWT token used to perform authorization
             * @example c
             */
            token: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "token": "k"
         *     } */
        ListAccountConfigRequest: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /**
             * @description JWT token used to perform authorization
             * @example wh1
             */
            token: string;
        };
        /**
         * @description List of Account Config IDs
         * @example {
         *       "accountConfigs": [
         *         {
         *           "awsAccountID": "123456789012",
         *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
         *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
         *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
         *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *           "byoaInstanceIDs": [
         *             "instance-12345678",
         *             "instance-abcdefgh"
         *           ],
         *           "cloudProviderId": "infra-12345678",
         *           "description": "An AWS account hosting multiple dev environments",
         *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpProjectID": "my-project",
         *           "gcpProjectNumber": "123456789012",
         *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
         *           "id": "ac-12345678",
         *           "name": "Dev AWS account",
         *           "status": "READY",
         *           "statusMessage": "Account is ready"
         *         },
         *         {
         *           "awsAccountID": "123456789012",
         *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
         *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
         *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
         *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *           "byoaInstanceIDs": [
         *             "instance-12345678",
         *             "instance-abcdefgh"
         *           ],
         *           "cloudProviderId": "infra-12345678",
         *           "description": "An AWS account hosting multiple dev environments",
         *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpProjectID": "my-project",
         *           "gcpProjectNumber": "123456789012",
         *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
         *           "id": "ac-12345678",
         *           "name": "Dev AWS account",
         *           "status": "READY",
         *           "statusMessage": "Account is ready"
         *         },
         *         {
         *           "awsAccountID": "123456789012",
         *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
         *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
         *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
         *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *           "byoaInstanceIDs": [
         *             "instance-12345678",
         *             "instance-abcdefgh"
         *           ],
         *           "cloudProviderId": "infra-12345678",
         *           "description": "An AWS account hosting multiple dev environments",
         *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpProjectID": "my-project",
         *           "gcpProjectNumber": "123456789012",
         *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
         *           "id": "ac-12345678",
         *           "name": "Dev AWS account",
         *           "status": "READY",
         *           "statusMessage": "Account is ready"
         *         }
         *       ],
         *       "ids": [
         *         "ac-12345678",
         *         "ac-abcdefgh",
         *         "ac-1234efgh"
         *       ],
         *       "nextPageToken": "next-token"
         *     }
         */
        ListAccountConfigResult: {
            /**
             * @description The list of account configs
             * @example [
             *       {
             *         "awsAccountID": "123456789012",
             *         "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
             *         "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
             *         "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
             *         "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *         "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *         "byoaInstanceIDs": [
             *           "instance-12345678",
             *           "instance-abcdefgh"
             *         ],
             *         "cloudProviderId": "infra-12345678",
             *         "description": "An AWS account hosting multiple dev environments",
             *         "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpProjectID": "my-project",
             *         "gcpProjectNumber": "123456789012",
             *         "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
             *         "id": "ac-12345678",
             *         "name": "Dev AWS account",
             *         "status": "READY",
             *         "statusMessage": "Account is ready"
             *       },
             *       {
             *         "awsAccountID": "123456789012",
             *         "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
             *         "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
             *         "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
             *         "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *         "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *         "byoaInstanceIDs": [
             *           "instance-12345678",
             *           "instance-abcdefgh"
             *         ],
             *         "cloudProviderId": "infra-12345678",
             *         "description": "An AWS account hosting multiple dev environments",
             *         "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpProjectID": "my-project",
             *         "gcpProjectNumber": "123456789012",
             *         "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
             *         "id": "ac-12345678",
             *         "name": "Dev AWS account",
             *         "status": "READY",
             *         "statusMessage": "Account is ready"
             *       },
             *       {
             *         "awsAccountID": "123456789012",
             *         "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
             *         "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
             *         "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
             *         "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *         "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *         "byoaInstanceIDs": [
             *           "instance-12345678",
             *           "instance-abcdefgh"
             *         ],
             *         "cloudProviderId": "infra-12345678",
             *         "description": "An AWS account hosting multiple dev environments",
             *         "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpProjectID": "my-project",
             *         "gcpProjectNumber": "123456789012",
             *         "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
             *         "id": "ac-12345678",
             *         "name": "Dev AWS account",
             *         "status": "READY",
             *         "statusMessage": "Account is ready"
             *       },
             *       {
             *         "awsAccountID": "123456789012",
             *         "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
             *         "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
             *         "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
             *         "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *         "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *         "byoaInstanceIDs": [
             *           "instance-12345678",
             *           "instance-abcdefgh"
             *         ],
             *         "cloudProviderId": "infra-12345678",
             *         "description": "An AWS account hosting multiple dev environments",
             *         "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpProjectID": "my-project",
             *         "gcpProjectNumber": "123456789012",
             *         "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
             *         "id": "ac-12345678",
             *         "name": "Dev AWS account",
             *         "status": "READY",
             *         "statusMessage": "Account is ready"
             *       }
             *     ]
             */
            accountConfigs?: components["schemas"]["DescribeAccountConfigResult"][];
            /** @example [
             *       "ac-12345678",
             *       "ac-abcdefgh",
             *       "ac-1234efgh"
             *     ] */
            ids?: string[];
            /**
             * @description Token to use for the next page
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "4g"
         *     } */
        ListActionHooksRequest: {
            /**
             * @description ID of a resource
             * @example Laboriosam et consequatur omnis excepturi sed natus.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example b
             */
            token: string;
        };
        /** @example {
         *       "hooks": [
         *         {
         *           "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
         *           "customCommand": [
         *             "/bin/sh",
         *             "-c"
         *           ],
         *           "customImage": "my-custom-image:latest",
         *           "scope": "CLUSTER",
         *           "type": "ADD"
         *         },
         *         {
         *           "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
         *           "customCommand": [
         *             "/bin/sh",
         *             "-c"
         *           ],
         *           "customImage": "my-custom-image:latest",
         *           "scope": "CLUSTER",
         *           "type": "ADD"
         *         },
         *         {
         *           "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
         *           "customCommand": [
         *             "/bin/sh",
         *             "-c"
         *           ],
         *           "customImage": "my-custom-image:latest",
         *           "scope": "CLUSTER",
         *           "type": "ADD"
         *         },
         *         {
         *           "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
         *           "customCommand": [
         *             "/bin/sh",
         *             "-c"
         *           ],
         *           "customImage": "my-custom-image:latest",
         *           "scope": "CLUSTER",
         *           "type": "ADD"
         *         }
         *       ]
         *     } */
        ListActionHooksResult: {
            /**
             * @description The list of action hooks
             * @example [
             *       {
             *         "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
             *         "customCommand": [
             *           "/bin/sh",
             *           "-c"
             *         ],
             *         "customImage": "my-custom-image:latest",
             *         "scope": "CLUSTER",
             *         "type": "ADD"
             *       },
             *       {
             *         "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
             *         "customCommand": [
             *           "/bin/sh",
             *           "-c"
             *         ],
             *         "customImage": "my-custom-image:latest",
             *         "scope": "CLUSTER",
             *         "type": "ADD"
             *       },
             *       {
             *         "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
             *         "customCommand": [
             *           "/bin/sh",
             *           "-c"
             *         ],
             *         "customImage": "my-custom-image:latest",
             *         "scope": "CLUSTER",
             *         "type": "ADD"
             *       },
             *       {
             *         "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
             *         "customCommand": [
             *           "/bin/sh",
             *           "-c"
             *         ],
             *         "customImage": "my-custom-image:latest",
             *         "scope": "CLUSTER",
             *         "type": "ADD"
             *       }
             *     ]
             */
            hooks: components["schemas"]["ActionHook"][];
        };
        /** @example {
         *       "endDate": "2024-01-01T10:00:00Z",
         *       "environmentType": "PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL",
         *       "eventSourceTypes": [
         *         "Reiciendis dolorum rem a repellat aliquid.",
         *         "Voluptas nihil.",
         *         "Quae est sunt aperiam est.",
         *         "Unde ad nihil quas laboriosam praesentium."
         *       ],
         *       "instanceID": "instance-12345678",
         *       "nextPageToken": "token",
         *       "pageSize": 10,
         *       "serviceID": "s-123456",
         *       "startDate": "2023-01-01T10:00:00Z",
         *       "token": "njw"
         *     } */
        ListAllAuditEventsRequest: {
            /**
             * Format: date-time
             * @description End time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
             * @example 2024-01-01T10:00:00Z
             */
            endDate?: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType?: string;
            /**
             * @description The event types to filter by
             * @example [
             *       "Beatae et aliquid.",
             *       "Enim consequuntur nesciunt.",
             *       "Est sint sunt nihil."
             *     ]
             */
            eventSourceTypes?: string[];
            /**
             * @description ID of a Resource Instance
             * @example instance-12345678
             */
            instanceID?: string;
            /**
             * @description The next token to use for pagination
             * @example token
             */
            nextPageToken?: string;
            /**
             * Format: int64
             * @description The number of resources to return per page
             * @example 10
             */
            pageSize?: number;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceID?: string;
            /**
             * Format: date-time
             * @description Start time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
             * @example 2023-01-01T10:00:00Z
             */
            startDate?: string;
            /**
             * @description JWT token used to perform authorization
             * @example yqh
             */
            token: string;
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "token": "b"
         *     } */
        ListAllResourceInstancesRequest: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType?: string;
            /**
             * @description JWT token used to perform authorization
             * @example m44
             */
            token: string;
        };
        /** @example {
         *       "nextPageToken": "next-token",
         *       "resourceInstances": [
         *         {
         *           "active": true,
         *           "autoscalingEnabled": true,
         *           "awsAccountID": "123456789012",
         *           "azureSubscriptionID": "0fa05079-dd73-4b88-babc-05537817604a",
         *           "backupStatus": {
         *             "backupPeriodInHours": 2,
         *             "backupRetentionInDays": 7,
         *             "earliestRestoreTime": "2021-09-01T00:00:00Z",
         *             "lastBackupTime": "2021-09-01T00:00:00Z"
         *           },
         *           "cloud_provider": "aws",
         *           "created_at": "2023-01-10T00:00:00Z",
         *           "createdByUserId": "user-12345678",
         *           "createdByUserName": "John Doe",
         *           "currentReplicas": "2",
         *           "customNetworkDetail": {
         *             "cidr": "10.177.0.0/16",
         *             "id": "n-12345678",
         *             "name": "Prod us-east-1"
         *           },
         *           "detailedNetworkTopology": {
         *             "r-abcd1234": {
         *               "allowedIPRanges": [
         *                 "0.0.0.0/0"
         *               ],
         *               "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *               "clusterPorts": [
         *                 3306
         *               ],
         *               "isJob": false,
         *               "jobMetrics": [
         *                 {
         *                   "additionalData": {
         *                     "exitCode": 0,
         *                     "status": "Succeeded"
         *                   },
         *                   "endTime": "2023-01-01T10:05:00Z",
         *                   "metricType": "cpu_core_seconds",
         *                   "startTime": "2023-01-01T10:00:00Z",
         *                   "value": 120.5
         *                 },
         *                 {
         *                   "additionalData": {
         *                     "peakMemoryUsage": "512MB"
         *                   },
         *                   "endTime": "2023-01-01T10:05:00Z",
         *                   "metricType": "memory_mb_seconds",
         *                   "startTime": "2023-01-01T10:00:00Z",
         *                   "value": 2560
         *                 }
         *               ],
         *               "main": true,
         *               "networkingType": "PUBLIC",
         *               "nodes": [
         *                 {
         *                   "availabilityZone": "us-east-2a",
         *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *                   "healthStatus": "healthy",
         *                   "id": "primary-0",
         *                   "ports": [
         *                     3306
         *                   ],
         *                   "status": "RUNNING"
         *                 }
         *               ],
         *               "privateNetworkCIDR": "10.0.0.2/24",
         *               "privateNetworkID": "n-1234abcd",
         *               "publiclyAccessible": true,
         *               "resourceKey": "primary",
         *               "resourceName": "Primary MySQL Instance"
         *             }
         *           },
         *           "externalPayerId": "external-payer-id-1234",
         *           "gcpProjectID": "my-project",
         *           "highAvailability": true,
         *           "id": "instance-abcd1234",
         *           "instanceLoadStatus": "LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A",
         *           "kubernetesDashboardEndpoint": {
         *             "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
         *             "deploymentCellID": "hc-12345678"
         *           },
         *           "last_modified_at": "2023-01-20T00:00:00Z",
         *           "maintenanceTasks": {
         *             "backups": [
         *               {
         *                 "backup_id": "bk-12345678"
         *               }
         *             ],
         *             "upgrade_paths": [
         *               {
         *                 "upgrade_path_id": "up-9876543",
         *                 "upgrade_path_instance_status": "PENDING",
         *                 "upgrade_path_scheduled_at": "2023-01-01T10:00:00Z",
         *                 "upgrade_path_status": "IN_PROGRESS"
         *               },
         *               {
         *                 "upgrade_path_id": "up-12345548",
         *                 "upgrade_path_instance_status": "PENDING",
         *                 "upgrade_path_released_at": "2023-01-01T09:00:00Z",
         *                 "upgrade_path_scheduled_at": "2023-01-01T10:00:00Z",
         *                 "upgrade_path_status": "SCHEDULED"
         *               }
         *             ]
         *           },
         *           "maxReplicas": "1",
         *           "minReplicas": "1",
         *           "network_type": "PUBLIC|INTERNAL",
         *           "productTierFeatures": {
         *             "LOGS": {
         *               "auth": {
         *                 "password": "px3c4d5f6g7h8i",
         *                 "username": "abcd1234"
         *               },
         *               "enabled": true,
         *               "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
         *             },
         *             "METRICS": {
         *               "enabled": false
         *             }
         *           },
         *           "region": "us-east-1",
         *           "resourceID": "r-abcd1234",
         *           "result_params": {
         *             "param1": "value1",
         *             "param2": "value2"
         *           },
         *           "serverlessEnabled": true,
         *           "status": "RUNNING",
         *           "subscriptionId": "sub-abcd1234",
         *           "subscriptionLicense": {
         *             "certificateBase64": "public-cert",
         *             "expirationDate": "2024-01-01T10:00:00Z",
         *             "licenseBase64": "license-file"
         *           },
         *           "subscriptionStatus": "ACTIVE",
         *           "tierVersion": "1.0"
         *         },
         *         {
         *           "active": true,
         *           "autoscalingEnabled": true,
         *           "awsAccountID": "123456789012",
         *           "azureSubscriptionID": "0fa05079-dd73-4b88-babc-05537817604a",
         *           "backupStatus": {
         *             "backupPeriodInHours": 2,
         *             "backupRetentionInDays": 7,
         *             "earliestRestoreTime": "2021-09-01T00:00:00Z",
         *             "lastBackupTime": "2021-09-01T00:00:00Z"
         *           },
         *           "cloud_provider": "aws",
         *           "created_at": "2023-01-10T00:00:00Z",
         *           "createdByUserId": "user-12345678",
         *           "createdByUserName": "John Doe",
         *           "currentReplicas": "2",
         *           "customNetworkDetail": {
         *             "cidr": "10.177.0.0/16",
         *             "id": "n-12345678",
         *             "name": "Prod us-east-1"
         *           },
         *           "detailedNetworkTopology": {
         *             "r-abcd1234": {
         *               "allowedIPRanges": [
         *                 "0.0.0.0/0"
         *               ],
         *               "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *               "clusterPorts": [
         *                 3306
         *               ],
         *               "isJob": false,
         *               "jobMetrics": [
         *                 {
         *                   "additionalData": {
         *                     "exitCode": 0,
         *                     "status": "Succeeded"
         *                   },
         *                   "endTime": "2023-01-01T10:05:00Z",
         *                   "metricType": "cpu_core_seconds",
         *                   "startTime": "2023-01-01T10:00:00Z",
         *                   "value": 120.5
         *                 },
         *                 {
         *                   "additionalData": {
         *                     "peakMemoryUsage": "512MB"
         *                   },
         *                   "endTime": "2023-01-01T10:05:00Z",
         *                   "metricType": "memory_mb_seconds",
         *                   "startTime": "2023-01-01T10:00:00Z",
         *                   "value": 2560
         *                 }
         *               ],
         *               "main": true,
         *               "networkingType": "PUBLIC",
         *               "nodes": [
         *                 {
         *                   "availabilityZone": "us-east-2a",
         *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *                   "healthStatus": "healthy",
         *                   "id": "primary-0",
         *                   "ports": [
         *                     3306
         *                   ],
         *                   "status": "RUNNING"
         *                 }
         *               ],
         *               "privateNetworkCIDR": "10.0.0.2/24",
         *               "privateNetworkID": "n-1234abcd",
         *               "publiclyAccessible": true,
         *               "resourceKey": "primary",
         *               "resourceName": "Primary MySQL Instance"
         *             }
         *           },
         *           "externalPayerId": "external-payer-id-1234",
         *           "gcpProjectID": "my-project",
         *           "highAvailability": true,
         *           "id": "instance-abcd1234",
         *           "instanceLoadStatus": "LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A",
         *           "kubernetesDashboardEndpoint": {
         *             "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
         *             "deploymentCellID": "hc-12345678"
         *           },
         *           "last_modified_at": "2023-01-20T00:00:00Z",
         *           "maintenanceTasks": {
         *             "backups": [
         *               {
         *                 "backup_id": "bk-12345678"
         *               }
         *             ],
         *             "upgrade_paths": [
         *               {
         *                 "upgrade_path_id": "up-9876543",
         *                 "upgrade_path_instance_status": "PENDING",
         *                 "upgrade_path_scheduled_at": "2023-01-01T10:00:00Z",
         *                 "upgrade_path_status": "IN_PROGRESS"
         *               },
         *               {
         *                 "upgrade_path_id": "up-12345548",
         *                 "upgrade_path_instance_status": "PENDING",
         *                 "upgrade_path_released_at": "2023-01-01T09:00:00Z",
         *                 "upgrade_path_scheduled_at": "2023-01-01T10:00:00Z",
         *                 "upgrade_path_status": "SCHEDULED"
         *               }
         *             ]
         *           },
         *           "maxReplicas": "1",
         *           "minReplicas": "1",
         *           "network_type": "PUBLIC|INTERNAL",
         *           "productTierFeatures": {
         *             "LOGS": {
         *               "auth": {
         *                 "password": "px3c4d5f6g7h8i",
         *                 "username": "abcd1234"
         *               },
         *               "enabled": true,
         *               "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
         *             },
         *             "METRICS": {
         *               "enabled": false
         *             }
         *           },
         *           "region": "us-east-1",
         *           "resourceID": "r-abcd1234",
         *           "result_params": {
         *             "param1": "value1",
         *             "param2": "value2"
         *           },
         *           "serverlessEnabled": true,
         *           "status": "RUNNING",
         *           "subscriptionId": "sub-abcd1234",
         *           "subscriptionLicense": {
         *             "certificateBase64": "public-cert",
         *             "expirationDate": "2024-01-01T10:00:00Z",
         *             "licenseBase64": "license-file"
         *           },
         *           "subscriptionStatus": "ACTIVE",
         *           "tierVersion": "1.0"
         *         }
         *       ]
         *     } */
        ListAllResourceInstancesResult: {
            /**
             * @description Token to use for the next request
             * @example next-token
             */
            nextPageToken?: string;
            /**
             * @description The list of resource instances
             * @example [
             *       {
             *         "active": true,
             *         "autoscalingEnabled": true,
             *         "awsAccountID": "123456789012",
             *         "azureSubscriptionID": "0fa05079-dd73-4b88-babc-05537817604a",
             *         "backupStatus": {
             *           "backupPeriodInHours": 2,
             *           "backupRetentionInDays": 7,
             *           "earliestRestoreTime": "2021-09-01T00:00:00Z",
             *           "lastBackupTime": "2021-09-01T00:00:00Z"
             *         },
             *         "cloud_provider": "aws",
             *         "created_at": "2023-01-10T00:00:00Z",
             *         "createdByUserId": "user-12345678",
             *         "createdByUserName": "John Doe",
             *         "currentReplicas": "2",
             *         "customNetworkDetail": {
             *           "cidr": "10.177.0.0/16",
             *           "id": "n-12345678",
             *           "name": "Prod us-east-1"
             *         },
             *         "detailedNetworkTopology": {
             *           "r-abcd1234": {
             *             "allowedIPRanges": [
             *               "0.0.0.0/0"
             *             ],
             *             "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *             "clusterPorts": [
             *               3306
             *             ],
             *             "isJob": false,
             *             "jobMetrics": [
             *               {
             *                 "additionalData": {
             *                   "exitCode": 0,
             *                   "status": "Succeeded"
             *                 },
             *                 "endTime": "2023-01-01T10:05:00Z",
             *                 "metricType": "cpu_core_seconds",
             *                 "startTime": "2023-01-01T10:00:00Z",
             *                 "value": 120.5
             *               },
             *               {
             *                 "additionalData": {
             *                   "peakMemoryUsage": "512MB"
             *                 },
             *                 "endTime": "2023-01-01T10:05:00Z",
             *                 "metricType": "memory_mb_seconds",
             *                 "startTime": "2023-01-01T10:00:00Z",
             *                 "value": 2560
             *               }
             *             ],
             *             "main": true,
             *             "networkingType": "PUBLIC",
             *             "nodes": [
             *               {
             *                 "availabilityZone": "us-east-2a",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "healthStatus": "healthy",
             *                 "id": "primary-0",
             *                 "ports": [
             *                   3306
             *                 ],
             *                 "status": "RUNNING"
             *               }
             *             ],
             *             "privateNetworkCIDR": "10.0.0.2/24",
             *             "privateNetworkID": "n-1234abcd",
             *             "publiclyAccessible": true,
             *             "resourceKey": "primary",
             *             "resourceName": "Primary MySQL Instance"
             *           }
             *         },
             *         "externalPayerId": "external-payer-id-1234",
             *         "gcpProjectID": "my-project",
             *         "highAvailability": true,
             *         "id": "instance-abcd1234",
             *         "instanceLoadStatus": "LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A",
             *         "kubernetesDashboardEndpoint": {
             *           "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
             *           "deploymentCellID": "hc-12345678"
             *         },
             *         "last_modified_at": "2023-01-20T00:00:00Z",
             *         "maintenanceTasks": {
             *           "backups": [
             *             {
             *               "backup_id": "bk-12345678"
             *             }
             *           ],
             *           "upgrade_paths": [
             *             {
             *               "upgrade_path_id": "up-9876543",
             *               "upgrade_path_instance_status": "PENDING",
             *               "upgrade_path_scheduled_at": "2023-01-01T10:00:00Z",
             *               "upgrade_path_status": "IN_PROGRESS"
             *             },
             *             {
             *               "upgrade_path_id": "up-12345548",
             *               "upgrade_path_instance_status": "PENDING",
             *               "upgrade_path_released_at": "2023-01-01T09:00:00Z",
             *               "upgrade_path_scheduled_at": "2023-01-01T10:00:00Z",
             *               "upgrade_path_status": "SCHEDULED"
             *             }
             *           ]
             *         },
             *         "maxReplicas": "1",
             *         "minReplicas": "1",
             *         "network_type": "PUBLIC|INTERNAL",
             *         "productTierFeatures": {
             *           "LOGS": {
             *             "auth": {
             *               "password": "px3c4d5f6g7h8i",
             *               "username": "abcd1234"
             *             },
             *             "enabled": true,
             *             "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
             *           },
             *           "METRICS": {
             *             "enabled": false
             *           }
             *         },
             *         "region": "us-east-1",
             *         "resourceID": "r-abcd1234",
             *         "result_params": {
             *           "param1": "value1",
             *           "param2": "value2"
             *         },
             *         "serverlessEnabled": true,
             *         "status": "RUNNING",
             *         "subscriptionId": "sub-abcd1234",
             *         "subscriptionLicense": {
             *           "certificateBase64": "public-cert",
             *           "expirationDate": "2024-01-01T10:00:00Z",
             *           "licenseBase64": "license-file"
             *         },
             *         "subscriptionStatus": "ACTIVE",
             *         "tierVersion": "1.0"
             *       },
             *       {
             *         "active": true,
             *         "autoscalingEnabled": true,
             *         "awsAccountID": "123456789012",
             *         "azureSubscriptionID": "0fa05079-dd73-4b88-babc-05537817604a",
             *         "backupStatus": {
             *           "backupPeriodInHours": 2,
             *           "backupRetentionInDays": 7,
             *           "earliestRestoreTime": "2021-09-01T00:00:00Z",
             *           "lastBackupTime": "2021-09-01T00:00:00Z"
             *         },
             *         "cloud_provider": "aws",
             *         "created_at": "2023-01-10T00:00:00Z",
             *         "createdByUserId": "user-12345678",
             *         "createdByUserName": "John Doe",
             *         "currentReplicas": "2",
             *         "customNetworkDetail": {
             *           "cidr": "10.177.0.0/16",
             *           "id": "n-12345678",
             *           "name": "Prod us-east-1"
             *         },
             *         "detailedNetworkTopology": {
             *           "r-abcd1234": {
             *             "allowedIPRanges": [
             *               "0.0.0.0/0"
             *             ],
             *             "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *             "clusterPorts": [
             *               3306
             *             ],
             *             "isJob": false,
             *             "jobMetrics": [
             *               {
             *                 "additionalData": {
             *                   "exitCode": 0,
             *                   "status": "Succeeded"
             *                 },
             *                 "endTime": "2023-01-01T10:05:00Z",
             *                 "metricType": "cpu_core_seconds",
             *                 "startTime": "2023-01-01T10:00:00Z",
             *                 "value": 120.5
             *               },
             *               {
             *                 "additionalData": {
             *                   "peakMemoryUsage": "512MB"
             *                 },
             *                 "endTime": "2023-01-01T10:05:00Z",
             *                 "metricType": "memory_mb_seconds",
             *                 "startTime": "2023-01-01T10:00:00Z",
             *                 "value": 2560
             *               }
             *             ],
             *             "main": true,
             *             "networkingType": "PUBLIC",
             *             "nodes": [
             *               {
             *                 "availabilityZone": "us-east-2a",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "healthStatus": "healthy",
             *                 "id": "primary-0",
             *                 "ports": [
             *                   3306
             *                 ],
             *                 "status": "RUNNING"
             *               }
             *             ],
             *             "privateNetworkCIDR": "10.0.0.2/24",
             *             "privateNetworkID": "n-1234abcd",
             *             "publiclyAccessible": true,
             *             "resourceKey": "primary",
             *             "resourceName": "Primary MySQL Instance"
             *           }
             *         },
             *         "externalPayerId": "external-payer-id-1234",
             *         "gcpProjectID": "my-project",
             *         "highAvailability": true,
             *         "id": "instance-abcd1234",
             *         "instanceLoadStatus": "LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A",
             *         "kubernetesDashboardEndpoint": {
             *           "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
             *           "deploymentCellID": "hc-12345678"
             *         },
             *         "last_modified_at": "2023-01-20T00:00:00Z",
             *         "maintenanceTasks": {
             *           "backups": [
             *             {
             *               "backup_id": "bk-12345678"
             *             }
             *           ],
             *           "upgrade_paths": [
             *             {
             *               "upgrade_path_id": "up-9876543",
             *               "upgrade_path_instance_status": "PENDING",
             *               "upgrade_path_scheduled_at": "2023-01-01T10:00:00Z",
             *               "upgrade_path_status": "IN_PROGRESS"
             *             },
             *             {
             *               "upgrade_path_id": "up-12345548",
             *               "upgrade_path_instance_status": "PENDING",
             *               "upgrade_path_released_at": "2023-01-01T09:00:00Z",
             *               "upgrade_path_scheduled_at": "2023-01-01T10:00:00Z",
             *               "upgrade_path_status": "SCHEDULED"
             *             }
             *           ]
             *         },
             *         "maxReplicas": "1",
             *         "minReplicas": "1",
             *         "network_type": "PUBLIC|INTERNAL",
             *         "productTierFeatures": {
             *           "LOGS": {
             *             "auth": {
             *               "password": "px3c4d5f6g7h8i",
             *               "username": "abcd1234"
             *             },
             *             "enabled": true,
             *             "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
             *           },
             *           "METRICS": {
             *             "enabled": false
             *           }
             *         },
             *         "region": "us-east-1",
             *         "resourceID": "r-abcd1234",
             *         "result_params": {
             *           "param1": "value1",
             *           "param2": "value2"
             *         },
             *         "serverlessEnabled": true,
             *         "status": "RUNNING",
             *         "subscriptionId": "sub-abcd1234",
             *         "subscriptionLicense": {
             *           "certificateBase64": "public-cert",
             *           "expirationDate": "2024-01-01T10:00:00Z",
             *           "licenseBase64": "license-file"
             *         },
             *         "subscriptionStatus": "ACTIVE",
             *         "tierVersion": "1.0"
             *       }
             *     ]
             */
            resourceInstances: components["schemas"]["DescribeResourceInstanceResult"][];
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "token": "fy"
         *     } */
        ListAllSubscriptionUsersRequest: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType?: string;
            /**
             * @description JWT token used to perform authorization
             * @example a
             */
            token: string;
        };
        /** @example {
         *       "subscriptionUsers": [
         *         {
         *           "email": "abc@gmail.com",
         *           "name": "John Doe",
         *           "roleType": "reader",
         *           "userId": "user-abcd1234"
         *         }
         *       ]
         *     } */
        ListAllSubscriptionUsersResult: {
            /**
             * @description The users associated with the corresponding subscription
             * @example [
             *       {
             *         "email": "abc@gmail.com",
             *         "name": "John Doe",
             *         "roleType": "reader",
             *         "userId": "user-abcd1234"
             *       }
             *     ]
             */
            subscriptionUsers: components["schemas"]["SubscriptionUsers"][];
        };
        /** @example {
         *       "id": "ic-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "5"
         *     } */
        ListAssociatedResourcesRequest: {
            /**
             * @description ID of an Infra Config
             * @example Voluptatibus quis eveniet eveniet facere.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example o
             */
            token: string;
        };
        /** @example {
         *       "id": "ic-12345678",
         *       "resourceIds": [
         *         "r-12345678",
         *         "r-abcdefgh"
         *       ],
         *       "serviceId": "s-12345678"
         *     } */
        ListAssociatedResourcesResult: {
            /**
             * @description ID of an Infra Config
             * @example Aut sunt at rem est ullam.
             */
            id: string;
            /**
             * @description The resources associated with the infra config
             * @example [
             *       "r-12345678",
             *       "r-abcdefgh"
             *     ]
             */
            resourceIds: string[];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
        };
        /** @example {
         *       "instanceId": "instance-12345678",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "b6"
         *     } */
        ListAuditEventsForInstanceRequest: {
            /**
             * @description The ID of the resource instance
             * @example instance-12345678
             */
            instanceId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example r
             */
            token: string;
        };
        /** @example {
         *       "productTierKey": "premium",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "iw9"
         *     } */
        ListAuditEventsForServicePlanRequest: {
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Dolorum in rerum minima ut odio.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 19g
             */
            token: string;
        };
        /** @example {
         *       "events": [
         *         {
         *           "eventSource": "Customer, Infra or Maintenance",
         *           "id": "event-12345678",
         *           "message": "instance-abcd1234 created",
         *           "orgId": "org-12345678",
         *           "orgName": "Acme Corporation",
         *           "resourceInstanceId": "instance-abcd1234",
         *           "resourceName": "Galera",
         *           "subscriptionId": "sub-abcd1234",
         *           "time": "2023-01-10T00:00:00Z",
         *           "userId": "user-12345678",
         *           "userName": "John Doe",
         *           "workflowFailures": [
         *             {
         *               "eventTime": "2020-01-01T00:00:00Z",
         *               "message": "Bootstrap failed for reason X"
         *             },
         *             {
         *               "eventTime": "2020-01-01T00:01:00Z",
         *               "message": "Compute failed for reason Y"
         *             }
         *           ]
         *         },
         *         {
         *           "eventSource": "Customer, Infra or Maintenance",
         *           "id": "event-12345678",
         *           "message": "instance-abcd1234 created",
         *           "orgId": "org-12345678",
         *           "orgName": "Acme Corporation",
         *           "resourceInstanceId": "instance-abcd1234",
         *           "resourceName": "Galera",
         *           "subscriptionId": "sub-abcd1234",
         *           "time": "2023-01-10T00:00:00Z",
         *           "userId": "user-12345678",
         *           "userName": "John Doe",
         *           "workflowFailures": [
         *             {
         *               "eventTime": "2020-01-01T00:00:00Z",
         *               "message": "Bootstrap failed for reason X"
         *             },
         *             {
         *               "eventTime": "2020-01-01T00:01:00Z",
         *               "message": "Compute failed for reason Y"
         *             }
         *           ]
         *         }
         *       ],
         *       "ids": [
         *         "event-12345678"
         *       ],
         *       "nextPageToken": "token"
         *     } */
        ListAuditEventsResult: {
            /**
             * @description The list of events
             * @example [
             *       {
             *         "eventSource": "Customer, Infra or Maintenance",
             *         "id": "event-12345678",
             *         "message": "instance-abcd1234 created",
             *         "orgId": "org-12345678",
             *         "orgName": "Acme Corporation",
             *         "resourceInstanceId": "instance-abcd1234",
             *         "resourceName": "Galera",
             *         "subscriptionId": "sub-abcd1234",
             *         "time": "2023-01-10T00:00:00Z",
             *         "userId": "user-12345678",
             *         "userName": "John Doe",
             *         "workflowFailures": [
             *           {
             *             "eventTime": "2020-01-01T00:00:00Z",
             *             "message": "Bootstrap failed for reason X"
             *           },
             *           {
             *             "eventTime": "2020-01-01T00:01:00Z",
             *             "message": "Compute failed for reason Y"
             *           }
             *         ]
             *       },
             *       {
             *         "eventSource": "Customer, Infra or Maintenance",
             *         "id": "event-12345678",
             *         "message": "instance-abcd1234 created",
             *         "orgId": "org-12345678",
             *         "orgName": "Acme Corporation",
             *         "resourceInstanceId": "instance-abcd1234",
             *         "resourceName": "Galera",
             *         "subscriptionId": "sub-abcd1234",
             *         "time": "2023-01-10T00:00:00Z",
             *         "userId": "user-12345678",
             *         "userName": "John Doe",
             *         "workflowFailures": [
             *           {
             *             "eventTime": "2020-01-01T00:00:00Z",
             *             "message": "Bootstrap failed for reason X"
             *           },
             *           {
             *             "eventTime": "2020-01-01T00:01:00Z",
             *             "message": "Compute failed for reason Y"
             *           }
             *         ]
             *       },
             *       {
             *         "eventSource": "Customer, Infra or Maintenance",
             *         "id": "event-12345678",
             *         "message": "instance-abcd1234 created",
             *         "orgId": "org-12345678",
             *         "orgName": "Acme Corporation",
             *         "resourceInstanceId": "instance-abcd1234",
             *         "resourceName": "Galera",
             *         "subscriptionId": "sub-abcd1234",
             *         "time": "2023-01-10T00:00:00Z",
             *         "userId": "user-12345678",
             *         "userName": "John Doe",
             *         "workflowFailures": [
             *           {
             *             "eventTime": "2020-01-01T00:00:00Z",
             *             "message": "Bootstrap failed for reason X"
             *           },
             *           {
             *             "eventTime": "2020-01-01T00:01:00Z",
             *             "message": "Compute failed for reason Y"
             *           }
             *         ]
             *       },
             *       {
             *         "eventSource": "Customer, Infra or Maintenance",
             *         "id": "event-12345678",
             *         "message": "instance-abcd1234 created",
             *         "orgId": "org-12345678",
             *         "orgName": "Acme Corporation",
             *         "resourceInstanceId": "instance-abcd1234",
             *         "resourceName": "Galera",
             *         "subscriptionId": "sub-abcd1234",
             *         "time": "2023-01-10T00:00:00Z",
             *         "userId": "user-12345678",
             *         "userName": "John Doe",
             *         "workflowFailures": [
             *           {
             *             "eventTime": "2020-01-01T00:00:00Z",
             *             "message": "Bootstrap failed for reason X"
             *           },
             *           {
             *             "eventTime": "2020-01-01T00:01:00Z",
             *             "message": "Compute failed for reason Y"
             *           }
             *         ]
             *       }
             *     ]
             */
            events: components["schemas"]["DescribeAuditEventResult"][];
            /**
             * @description The list of event IDs
             * @example [
             *       "event-12345678"
             *     ]
             */
            ids: string[];
            /**
             * @description The next token to use for pagination
             * @example token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "regionCode": "us-east-1",
         *       "token": "hbv"
         *     } */
        ListAvailabilityZonesByRegionCodeRequest: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /** @example us-east-1 */
            regionCode: string;
            /**
             * @description JWT token used to perform authorization
             * @example t
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "az-12345678",
         *         "az-87654321"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListAvailabilityZonesByRegionCodeResult: {
            /** @example [
             *       "az-12345678",
             *       "az-87654321"
             *     ] */
            ids: string[];
            /**
             * @description Token to use for the next request
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "token": "wz"
         *     } */
        ListAvailabilityZonesRequest: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /**
             * @description JWT token used to perform authorization
             * @example x9
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "az-12345678",
         *         "az-87654321"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListAvailabilityZonesResult: {
            /** @example [
             *       "az-12345678",
             *       "az-87654321"
             *     ] */
            ids: string[];
            /**
             * @description Token to use for the next request
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "token": "0"
         *     } */
        ListBYOAConfigRequest: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /**
             * @description JWT token used to perform authorization
             * @example j
             */
            token: string;
        };
        /** @example {
         *       "cloudProviderName": "aws"
         *     } */
        ListBYOAConfigRequest2: {
            /**
             * @description Cloud Provider name to filter on
             * @example aws
             */
            cloudProviderName: string;
        };
        /**
         * @description List of BYOA Config IDs
         * @example {
         *       "accountConfigs": [
         *         {
         *           "awsAccountID": "123456789012",
         *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
         *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
         *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
         *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *           "byoaInstanceIDs": [
         *             "instance-12345678",
         *             "instance-abcdefgh"
         *           ],
         *           "cloudProviderId": "infra-12345678",
         *           "description": "An AWS account hosting multiple dev environments",
         *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpProjectID": "my-project",
         *           "gcpProjectNumber": "123456789012",
         *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
         *           "id": "ac-12345678",
         *           "name": "Dev AWS account",
         *           "status": "READY",
         *           "statusMessage": "Account is ready"
         *         },
         *         {
         *           "awsAccountID": "123456789012",
         *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
         *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
         *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
         *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *           "byoaInstanceIDs": [
         *             "instance-12345678",
         *             "instance-abcdefgh"
         *           ],
         *           "cloudProviderId": "infra-12345678",
         *           "description": "An AWS account hosting multiple dev environments",
         *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpProjectID": "my-project",
         *           "gcpProjectNumber": "123456789012",
         *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
         *           "id": "ac-12345678",
         *           "name": "Dev AWS account",
         *           "status": "READY",
         *           "statusMessage": "Account is ready"
         *         },
         *         {
         *           "awsAccountID": "123456789012",
         *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
         *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
         *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
         *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *           "byoaInstanceIDs": [
         *             "instance-12345678",
         *             "instance-abcdefgh"
         *           ],
         *           "cloudProviderId": "infra-12345678",
         *           "description": "An AWS account hosting multiple dev environments",
         *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpProjectID": "my-project",
         *           "gcpProjectNumber": "123456789012",
         *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
         *           "id": "ac-12345678",
         *           "name": "Dev AWS account",
         *           "status": "READY",
         *           "statusMessage": "Account is ready"
         *         },
         *         {
         *           "awsAccountID": "123456789012",
         *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
         *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
         *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
         *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *           "byoaInstanceIDs": [
         *             "instance-12345678",
         *             "instance-abcdefgh"
         *           ],
         *           "cloudProviderId": "infra-12345678",
         *           "description": "An AWS account hosting multiple dev environments",
         *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
         *           "gcpProjectID": "my-project",
         *           "gcpProjectNumber": "123456789012",
         *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
         *           "id": "ac-12345678",
         *           "name": "Dev AWS account",
         *           "status": "READY",
         *           "statusMessage": "Account is ready"
         *         }
         *       ],
         *       "ids": [
         *         "ac-12345678",
         *         "ac-abcdefgh",
         *         "ac-1234efgh"
         *       ],
         *       "nextPageToken": "next-token"
         *     }
         */
        ListBYOAConfigResult: {
            /**
             * @description The list of account configs
             * @example [
             *       {
             *         "awsAccountID": "123456789012",
             *         "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
             *         "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
             *         "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
             *         "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *         "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *         "byoaInstanceIDs": [
             *           "instance-12345678",
             *           "instance-abcdefgh"
             *         ],
             *         "cloudProviderId": "infra-12345678",
             *         "description": "An AWS account hosting multiple dev environments",
             *         "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpProjectID": "my-project",
             *         "gcpProjectNumber": "123456789012",
             *         "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
             *         "id": "ac-12345678",
             *         "name": "Dev AWS account",
             *         "status": "READY",
             *         "statusMessage": "Account is ready"
             *       },
             *       {
             *         "awsAccountID": "123456789012",
             *         "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
             *         "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
             *         "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
             *         "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *         "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *         "byoaInstanceIDs": [
             *           "instance-12345678",
             *           "instance-abcdefgh"
             *         ],
             *         "cloudProviderId": "infra-12345678",
             *         "description": "An AWS account hosting multiple dev environments",
             *         "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpProjectID": "my-project",
             *         "gcpProjectNumber": "123456789012",
             *         "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
             *         "id": "ac-12345678",
             *         "name": "Dev AWS account",
             *         "status": "READY",
             *         "statusMessage": "Account is ready"
             *       },
             *       {
             *         "awsAccountID": "123456789012",
             *         "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
             *         "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
             *         "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
             *         "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *         "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *         "byoaInstanceIDs": [
             *           "instance-12345678",
             *           "instance-abcdefgh"
             *         ],
             *         "cloudProviderId": "infra-12345678",
             *         "description": "An AWS account hosting multiple dev environments",
             *         "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpProjectID": "my-project",
             *         "gcpProjectNumber": "123456789012",
             *         "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
             *         "id": "ac-12345678",
             *         "name": "Dev AWS account",
             *         "status": "READY",
             *         "statusMessage": "Account is ready"
             *       },
             *       {
             *         "awsAccountID": "123456789012",
             *         "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
             *         "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
             *         "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
             *         "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *         "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *         "byoaInstanceIDs": [
             *           "instance-12345678",
             *           "instance-abcdefgh"
             *         ],
             *         "cloudProviderId": "infra-12345678",
             *         "description": "An AWS account hosting multiple dev environments",
             *         "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
             *         "gcpProjectID": "my-project",
             *         "gcpProjectNumber": "123456789012",
             *         "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
             *         "id": "ac-12345678",
             *         "name": "Dev AWS account",
             *         "status": "READY",
             *         "statusMessage": "Account is ready"
             *       }
             *     ]
             */
            accountConfigs?: components["schemas"]["DescribeAccountConfigResult"][];
            /** @example [
             *       "ac-12345678",
             *       "ac-abcdefgh",
             *       "ac-1234efgh"
             *     ] */
            ids?: string[];
            /**
             * @description Token to use for the next page
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "productTierId": "pt-12345678",
         *       "serviceId": "s-12345678",
         *       "serviceModelId": "sm-12345678",
         *       "token": "j7c"
         *     } */
        ListCloudProvidersRequest: {
            /**
             * @description ID of a Product Tier
             * @example Tempore neque commodi.
             */
            productTierId?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description ID of a Service Model
             * @example Velit beatae sed illo expedita deleniti repudiandae.
             */
            serviceModelId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example lxs
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "infra-12345678",
         *         "infra-87654321"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListCloudProvidersResult: {
            /** @example [
             *       "infra-12345678",
             *       "infra-87654321"
             *     ] */
            ids: string[];
            /**
             * @description Token to use for the next request
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "managed": false,
         *       "serviceId": "s-12345678",
         *       "token": "j"
         *     } */
        ListComputeConfigsRequest: {
            /**
             * @description Is compute config managed by omnistrate
             * @example false
             */
            managed?: boolean;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example b
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "cc-12345678",
         *         "cc-abcdefgh",
         *         "cc-1234efgh"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListComputeConfigsResult: {
            /**
             * @description The list of compute config IDs
             * @example [
             *       "cc-12345678",
             *       "cc-abcdefgh",
             *       "cc-1234efgh"
             *     ]
             */
            ids: string[];
            /**
             * @description The next page token
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "serviceId": "s-12345678",
         *       "token": "9"
         *     } */
        ListComputeInstanceTypesRequest: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 1fy
             */
            token: string;
        };
        /** @example {
         *       "nextPageToken": "next-token",
         *       "types": [
         *         "m5.xlarge",
         *         "c5.xlarge",
         *         "r5.xlarge"
         *       ]
         *     } */
        ListComputeInstanceTypesResult: {
            /**
             * @description The next page token
             * @example next-token
             */
            nextPageToken?: string;
            /**
             * @description The list of compute instance type IDs
             * @example [
             *       "m5.xlarge",
             *       "c5.xlarge",
             *       "r5.xlarge"
             *     ]
             */
            types: string[];
        };
        /** @example {
         *       "token": "n"
         *     } */
        ListCustomDomainRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example atc
             */
            token: string;
        };
        /**
         * @description List of custom domain IDs
         * @example {
         *       "CustomDomains": [
         *         {
         *           "customDomain": "mydomain.dev",
         *           "description": "Description of the domain",
         *           "id": "cd-12345678",
         *           "name": "Dev domain",
         *           "route53Configuration": {
         *             "awsAccountID": "123456789012",
         *             "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
         *           },
         *           "status": "READY",
         *           "statusMessage": "Account is ready"
         *         },
         *         {
         *           "customDomain": "mydomain.dev",
         *           "description": "Description of the domain",
         *           "id": "cd-12345678",
         *           "name": "Dev domain",
         *           "route53Configuration": {
         *             "awsAccountID": "123456789012",
         *             "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
         *           },
         *           "status": "READY",
         *           "statusMessage": "Account is ready"
         *         }
         *       ],
         *       "ids": [
         *         "cd-12345678",
         *         "cd-abcdefgh",
         *         "cd-1234efgh"
         *       ],
         *       "nextPageToken": "next-token"
         *     }
         */
        ListCustomDomainResult: {
            /**
             * @description The list of custom domains
             * @example [
             *       {
             *         "customDomain": "mydomain.dev",
             *         "description": "Description of the domain",
             *         "id": "cd-12345678",
             *         "name": "Dev domain",
             *         "route53Configuration": {
             *           "awsAccountID": "123456789012",
             *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
             *         },
             *         "status": "READY",
             *         "statusMessage": "Account is ready"
             *       },
             *       {
             *         "customDomain": "mydomain.dev",
             *         "description": "Description of the domain",
             *         "id": "cd-12345678",
             *         "name": "Dev domain",
             *         "route53Configuration": {
             *           "awsAccountID": "123456789012",
             *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
             *         },
             *         "status": "READY",
             *         "statusMessage": "Account is ready"
             *       },
             *       {
             *         "customDomain": "mydomain.dev",
             *         "description": "Description of the domain",
             *         "id": "cd-12345678",
             *         "name": "Dev domain",
             *         "route53Configuration": {
             *           "awsAccountID": "123456789012",
             *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
             *         },
             *         "status": "READY",
             *         "statusMessage": "Account is ready"
             *       }
             *     ]
             */
            CustomDomains?: components["schemas"]["DescribeCustomDomainResult"][];
            /** @example [
             *       "cd-12345678",
             *       "cd-abcdefgh",
             *       "cd-1234efgh"
             *     ] */
            ids?: string[];
            /**
             * @description Token to use for the next page
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "cloudProviderRegion": "us-east-1",
         *       "customNetworksOnly": false,
         *       "token": "p8"
         *     } */
        ListCustomNetworksRequest: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName?: string;
            /**
             * @description The region of the cloud provider that the instance is running in.
             * @example us-east-1
             */
            cloudProviderRegion?: string;
            /**
             * @description Flag indicating whether to return only custom networks, or to include default and imported networks as well
             * @example false
             */
            customNetworksOnly?: boolean;
            /**
             * @description JWT token used to perform authorization
             * @example vwn
             */
            token: string;
        };
        /** @example {
         *       "customNetworks": [
         *         {
         *           "cidr": "10.0.0.0/16",
         *           "cloudProviderName": "aws",
         *           "cloudProviderRegion": "us-east-1",
         *           "id": "n-12345678",
         *           "name": "Prod us-east-1",
         *           "networkDefinitionType": "Custom",
         *           "networkFeaturesConfiguration": {
         *             "isPrivateLinkEnabled": true
         *           },
         *           "networkInstances": [
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             },
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             },
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             },
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             }
         *           ],
         *           "owningUserId": "user-12345678",
         *           "owningUserName": "John Doe"
         *         },
         *         {
         *           "cidr": "10.0.0.0/16",
         *           "cloudProviderName": "aws",
         *           "cloudProviderRegion": "us-east-1",
         *           "id": "n-12345678",
         *           "name": "Prod us-east-1",
         *           "networkDefinitionType": "Custom",
         *           "networkFeaturesConfiguration": {
         *             "isPrivateLinkEnabled": true
         *           },
         *           "networkInstances": [
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             },
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             },
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             },
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             }
         *           ],
         *           "owningUserId": "user-12345678",
         *           "owningUserName": "John Doe"
         *         },
         *         {
         *           "cidr": "10.0.0.0/16",
         *           "cloudProviderName": "aws",
         *           "cloudProviderRegion": "us-east-1",
         *           "id": "n-12345678",
         *           "name": "Prod us-east-1",
         *           "networkDefinitionType": "Custom",
         *           "networkFeaturesConfiguration": {
         *             "isPrivateLinkEnabled": true
         *           },
         *           "networkInstances": [
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             },
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             },
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             },
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             }
         *           ],
         *           "owningUserId": "user-12345678",
         *           "owningUserName": "John Doe"
         *         },
         *         {
         *           "cidr": "10.0.0.0/16",
         *           "cloudProviderName": "aws",
         *           "cloudProviderRegion": "us-east-1",
         *           "id": "n-12345678",
         *           "name": "Prod us-east-1",
         *           "networkDefinitionType": "Custom",
         *           "networkFeaturesConfiguration": {
         *             "isPrivateLinkEnabled": true
         *           },
         *           "networkInstances": [
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             },
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             },
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             },
         *             {
         *               "awsAccountID": "123456789012",
         *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
         *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
         *               "cloudProviderNativeNetworkId": "vpc-12345678",
         *               "gcpProjectID": "my-project",
         *               "gcpProjectNumber": "123456789012",
         *               "hostClusterID": "hc-12345678"
         *             }
         *           ],
         *           "owningUserId": "user-12345678",
         *           "owningUserName": "John Doe"
         *         }
         *       ]
         *     } */
        ListCustomNetworksResult: {
            /**
             * @description List of custom networks
             * @example [
             *       {
             *         "cidr": "10.0.0.0/16",
             *         "cloudProviderName": "aws",
             *         "cloudProviderRegion": "us-east-1",
             *         "id": "n-12345678",
             *         "name": "Prod us-east-1",
             *         "networkDefinitionType": "Custom",
             *         "networkFeaturesConfiguration": {
             *           "isPrivateLinkEnabled": true
             *         },
             *         "networkInstances": [
             *           {
             *             "awsAccountID": "123456789012",
             *             "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *             "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *             "cloudProviderNativeNetworkId": "vpc-12345678",
             *             "gcpProjectID": "my-project",
             *             "gcpProjectNumber": "123456789012",
             *             "hostClusterID": "hc-12345678"
             *           },
             *           {
             *             "awsAccountID": "123456789012",
             *             "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *             "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *             "cloudProviderNativeNetworkId": "vpc-12345678",
             *             "gcpProjectID": "my-project",
             *             "gcpProjectNumber": "123456789012",
             *             "hostClusterID": "hc-12345678"
             *           },
             *           {
             *             "awsAccountID": "123456789012",
             *             "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *             "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *             "cloudProviderNativeNetworkId": "vpc-12345678",
             *             "gcpProjectID": "my-project",
             *             "gcpProjectNumber": "123456789012",
             *             "hostClusterID": "hc-12345678"
             *           },
             *           {
             *             "awsAccountID": "123456789012",
             *             "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *             "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *             "cloudProviderNativeNetworkId": "vpc-12345678",
             *             "gcpProjectID": "my-project",
             *             "gcpProjectNumber": "123456789012",
             *             "hostClusterID": "hc-12345678"
             *           }
             *         ],
             *         "owningUserId": "user-12345678",
             *         "owningUserName": "John Doe"
             *       },
             *       {
             *         "cidr": "10.0.0.0/16",
             *         "cloudProviderName": "aws",
             *         "cloudProviderRegion": "us-east-1",
             *         "id": "n-12345678",
             *         "name": "Prod us-east-1",
             *         "networkDefinitionType": "Custom",
             *         "networkFeaturesConfiguration": {
             *           "isPrivateLinkEnabled": true
             *         },
             *         "networkInstances": [
             *           {
             *             "awsAccountID": "123456789012",
             *             "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *             "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *             "cloudProviderNativeNetworkId": "vpc-12345678",
             *             "gcpProjectID": "my-project",
             *             "gcpProjectNumber": "123456789012",
             *             "hostClusterID": "hc-12345678"
             *           },
             *           {
             *             "awsAccountID": "123456789012",
             *             "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *             "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *             "cloudProviderNativeNetworkId": "vpc-12345678",
             *             "gcpProjectID": "my-project",
             *             "gcpProjectNumber": "123456789012",
             *             "hostClusterID": "hc-12345678"
             *           },
             *           {
             *             "awsAccountID": "123456789012",
             *             "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *             "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *             "cloudProviderNativeNetworkId": "vpc-12345678",
             *             "gcpProjectID": "my-project",
             *             "gcpProjectNumber": "123456789012",
             *             "hostClusterID": "hc-12345678"
             *           },
             *           {
             *             "awsAccountID": "123456789012",
             *             "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *             "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *             "cloudProviderNativeNetworkId": "vpc-12345678",
             *             "gcpProjectID": "my-project",
             *             "gcpProjectNumber": "123456789012",
             *             "hostClusterID": "hc-12345678"
             *           }
             *         ],
             *         "owningUserId": "user-12345678",
             *         "owningUserName": "John Doe"
             *       },
             *       {
             *         "cidr": "10.0.0.0/16",
             *         "cloudProviderName": "aws",
             *         "cloudProviderRegion": "us-east-1",
             *         "id": "n-12345678",
             *         "name": "Prod us-east-1",
             *         "networkDefinitionType": "Custom",
             *         "networkFeaturesConfiguration": {
             *           "isPrivateLinkEnabled": true
             *         },
             *         "networkInstances": [
             *           {
             *             "awsAccountID": "123456789012",
             *             "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *             "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *             "cloudProviderNativeNetworkId": "vpc-12345678",
             *             "gcpProjectID": "my-project",
             *             "gcpProjectNumber": "123456789012",
             *             "hostClusterID": "hc-12345678"
             *           },
             *           {
             *             "awsAccountID": "123456789012",
             *             "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *             "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *             "cloudProviderNativeNetworkId": "vpc-12345678",
             *             "gcpProjectID": "my-project",
             *             "gcpProjectNumber": "123456789012",
             *             "hostClusterID": "hc-12345678"
             *           },
             *           {
             *             "awsAccountID": "123456789012",
             *             "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *             "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *             "cloudProviderNativeNetworkId": "vpc-12345678",
             *             "gcpProjectID": "my-project",
             *             "gcpProjectNumber": "123456789012",
             *             "hostClusterID": "hc-12345678"
             *           },
             *           {
             *             "awsAccountID": "123456789012",
             *             "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
             *             "azureTenantID": "12345678-1234-1234-1234-123456789012",
             *             "cloudProviderNativeNetworkId": "vpc-12345678",
             *             "gcpProjectID": "my-project",
             *             "gcpProjectNumber": "123456789012",
             *             "hostClusterID": "hc-12345678"
             *           }
             *         ],
             *         "owningUserId": "user-12345678",
             *         "owningUserName": "John Doe"
             *       }
             *     ]
             */
            customNetworks: components["schemas"]["CustomNetwork"][];
        };
        /** @example {
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "f09"
         *     } */
        ListDependentResourcesRequest: {
            /**
             * @description ID of a resource
             * @example Cupiditate delectus.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 316
             */
            token: string;
        };
        /** @example {
         *       "id": "r-12345678",
         *       "ids": [
         *         "r-12345678",
         *         "r-abcdefgh",
         *         "r-1234abcd"
         *       ],
         *       "nextPageToken": "next-token",
         *       "serviceId": "s-12345678"
         *     } */
        ListDependentResourcesResult: {
            /**
             * @description ID of a resource
             * @example Ut provident.
             */
            id?: string;
            /**
             * @description List of dependent resource IDs
             * @example [
             *       "r-12345678",
             *       "r-abcdefgh",
             *       "r-1234abcd"
             *     ]
             */
            ids: string[];
            /**
             * @description Token to use for the next page
             * @example next-token
             */
            nextPageToken?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
        };
        /** @example {
         *       "token": "2o"
         *     } */
        ListDeploymentConfigsRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example ng
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "dc-12345678"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListDeploymentConfigsResult: {
            /**
             * @description The deployment config IDs
             * @example [
             *       "dc-12345678"
             *     ]
             */
            ids: string[];
            /**
             * @description The next token to use for pagination
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "token": "c"
         *     } */
        ListEndCustomerEvents: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 7
             */
            token: string;
        };
        /** @example {
         *       "events": [
         *         {
         *           "eventID": "e-123456",
         *           "eventPayload": {
         *             "eventType": "CustomerSignUp",
         *             "token": "123456"
         *           },
         *           "eventType": "InviteUser",
         *           "orgID": "o-123456",
         *           "orgName": "Acme Corp",
         *           "orgURL": "https://acme.com",
         *           "priority": "Critical",
         *           "time": "2023-01-10T00:00:00Z",
         *           "userEmail": "user@example.com",
         *           "userID": "user-123456",
         *           "userName": "user"
         *         },
         *         {
         *           "eventID": "e-123456",
         *           "eventPayload": {
         *             "eventType": "CustomerSignUp",
         *             "token": "123456"
         *           },
         *           "eventType": "InviteUser",
         *           "orgID": "o-123456",
         *           "orgName": "Acme Corp",
         *           "orgURL": "https://acme.com",
         *           "priority": "Critical",
         *           "time": "2023-01-10T00:00:00Z",
         *           "userEmail": "user@example.com",
         *           "userID": "user-123456",
         *           "userName": "user"
         *         },
         *         {
         *           "eventID": "e-123456",
         *           "eventPayload": {
         *             "eventType": "CustomerSignUp",
         *             "token": "123456"
         *           },
         *           "eventType": "InviteUser",
         *           "orgID": "o-123456",
         *           "orgName": "Acme Corp",
         *           "orgURL": "https://acme.com",
         *           "priority": "Critical",
         *           "time": "2023-01-10T00:00:00Z",
         *           "userEmail": "user@example.com",
         *           "userID": "user-123456",
         *           "userName": "user"
         *         },
         *         {
         *           "eventID": "e-123456",
         *           "eventPayload": {
         *             "eventType": "CustomerSignUp",
         *             "token": "123456"
         *           },
         *           "eventType": "InviteUser",
         *           "orgID": "o-123456",
         *           "orgName": "Acme Corp",
         *           "orgURL": "https://acme.com",
         *           "priority": "Critical",
         *           "time": "2023-01-10T00:00:00Z",
         *           "userEmail": "user@example.com",
         *           "userID": "user-123456",
         *           "userName": "user"
         *         }
         *       ]
         *     } */
        ListEndCustomerEventsResult: {
            /**
             * @description List of events
             * @example [
             *       {
             *         "eventID": "e-123456",
             *         "eventPayload": {
             *           "eventType": "CustomerSignUp",
             *           "token": "123456"
             *         },
             *         "eventType": "InviteUser",
             *         "orgID": "o-123456",
             *         "orgName": "Acme Corp",
             *         "orgURL": "https://acme.com",
             *         "priority": "Critical",
             *         "time": "2023-01-10T00:00:00Z",
             *         "userEmail": "user@example.com",
             *         "userID": "user-123456",
             *         "userName": "user"
             *       },
             *       {
             *         "eventID": "e-123456",
             *         "eventPayload": {
             *           "eventType": "CustomerSignUp",
             *           "token": "123456"
             *         },
             *         "eventType": "InviteUser",
             *         "orgID": "o-123456",
             *         "orgName": "Acme Corp",
             *         "orgURL": "https://acme.com",
             *         "priority": "Critical",
             *         "time": "2023-01-10T00:00:00Z",
             *         "userEmail": "user@example.com",
             *         "userID": "user-123456",
             *         "userName": "user"
             *       },
             *       {
             *         "eventID": "e-123456",
             *         "eventPayload": {
             *           "eventType": "CustomerSignUp",
             *           "token": "123456"
             *         },
             *         "eventType": "InviteUser",
             *         "orgID": "o-123456",
             *         "orgName": "Acme Corp",
             *         "orgURL": "https://acme.com",
             *         "priority": "Critical",
             *         "time": "2023-01-10T00:00:00Z",
             *         "userEmail": "user@example.com",
             *         "userID": "user-123456",
             *         "userName": "user"
             *       },
             *       {
             *         "eventID": "e-123456",
             *         "eventPayload": {
             *           "eventType": "CustomerSignUp",
             *           "token": "123456"
             *         },
             *         "eventType": "InviteUser",
             *         "orgID": "o-123456",
             *         "orgName": "Acme Corp",
             *         "orgURL": "https://acme.com",
             *         "priority": "Critical",
             *         "time": "2023-01-10T00:00:00Z",
             *         "userEmail": "user@example.com",
             *         "userID": "user-123456",
             *         "userName": "user"
             *       }
             *     ]
             */
            events: components["schemas"]["EndCustomerEvent"][];
        };
        /** @example {
         *       "id": "r-12345678",
         *       "productTierId": "pt-12345678",
         *       "productTierVersion": "1.0",
         *       "serviceId": "s-12345678",
         *       "token": "4"
         *     } */
        ListFilesRequest: {
            /**
             * @description ID of a resource
             * @example Ut sed ipsum ut praesentium maiores velit.
             */
            id: string;
            /**
             * @description ID of a Product Tier
             * @example Labore exercitationem consectetur soluta rem.
             */
            productTierId?: string;
            /**
             * @description Version of the product tier
             * @example 1.0
             */
            productTierVersion?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 0q
             */
            token: string;
        };
        /** @example {
         *       "files": [
         *         {
         *           "description": "A file to store the configuration for the resource",
         *           "fileId": "f-12345678",
         *           "mountPath": "/etc/config",
         *           "name": "file.txt",
         *           "size": 1234,
         *           "type": "Config",
         *           "uploadTime": "2023-01-10T00:00:00Z",
         *           "uploadedBy": "user"
         *         },
         *         {
         *           "description": "A file to store the configuration for the resource",
         *           "fileId": "f-12345678",
         *           "mountPath": "/etc/config",
         *           "name": "file.txt",
         *           "size": 1234,
         *           "type": "Config",
         *           "uploadTime": "2023-01-10T00:00:00Z",
         *           "uploadedBy": "user"
         *         },
         *         {
         *           "description": "A file to store the configuration for the resource",
         *           "fileId": "f-12345678",
         *           "mountPath": "/etc/config",
         *           "name": "file.txt",
         *           "size": 1234,
         *           "type": "Config",
         *           "uploadTime": "2023-01-10T00:00:00Z",
         *           "uploadedBy": "user"
         *         }
         *       ]
         *     } */
        ListFilesResult: {
            /**
             * @description List of files
             * @example [
             *       {
             *         "description": "A file to store the configuration for the resource",
             *         "fileId": "f-12345678",
             *         "mountPath": "/etc/config",
             *         "name": "file.txt",
             *         "size": 1234,
             *         "type": "Config",
             *         "uploadTime": "2023-01-10T00:00:00Z",
             *         "uploadedBy": "user"
             *       },
             *       {
             *         "description": "A file to store the configuration for the resource",
             *         "fileId": "f-12345678",
             *         "mountPath": "/etc/config",
             *         "name": "file.txt",
             *         "size": 1234,
             *         "type": "Config",
             *         "uploadTime": "2023-01-10T00:00:00Z",
             *         "uploadedBy": "user"
             *       },
             *       {
             *         "description": "A file to store the configuration for the resource",
             *         "fileId": "f-12345678",
             *         "mountPath": "/etc/config",
             *         "name": "file.txt",
             *         "size": 1234,
             *         "type": "Config",
             *         "uploadTime": "2023-01-10T00:00:00Z",
             *         "uploadedBy": "user"
             *       }
             *     ]
             */
            files: components["schemas"]["FileMetadata"][];
        };
        /** @example {
         *       "chartName": "my-chart",
         *       "token": "3j"
         *     } */
        ListHelmPackagesRequest: {
            /**
             * @description The chart name of the Helm package to filter by
             * @example my-chart
             */
            chartName?: string;
            /**
             * @description JWT token used to perform authorization
             * @example w
             */
            token: string;
        };
        /** @example {
         *       "helmPackages": [
         *         {
         *           "chartName": "my-chart",
         *           "chartRepoName": "my-repo",
         *           "chartRepoUrl": "https://my-repo.com",
         *           "chartValues": {
         *             "key1": "value1",
         *             "key2": 3,
         *             "key3": {
         *               "key4": "value4"
         *             }
         *           },
         *           "chartVersion": "1.0.0",
         *           "layeredChartValues": [
         *             {
         *               "name": "my-layer",
         *               "scope": {
         *                 "{{ $sys.cloudProviderName }}": "aws"
         *               },
         *               "values": {
         *                 "global": {
         *                   "affinity": {
         *                     "nodeAffinity": {
         *                       "requiredDuringSchedulingIgnoredDuringExecution": {
         *                         "nodeSelectorTerms": [
         *                           {
         *                             "matchExpressions": [
         *                               {
         *                                 "key": "omnistrate.com/managed-by",
         *                                 "operator": "In",
         *                                 "values": [
         *                                   "omnistrate"
         *                                 ]
         *                               }
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     }
         *                   }
         *                 }
         *               },
         *               "valuesFile": {
         *                 "gitConfiguration": {
         *                   "accessToken": "my-token",
         *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *                   "referenceName": "tags/v1.0.0",
         *                   "repositoryUrl": "https://github.com/username/myrepo",
         *                   "userName": "my-user"
         *                 },
         *                 "path": "helm/values/production.yaml"
         *               }
         *             },
         *             {
         *               "name": "my-layer",
         *               "scope": {
         *                 "{{ $sys.cloudProviderName }}": "aws"
         *               },
         *               "values": {
         *                 "global": {
         *                   "affinity": {
         *                     "nodeAffinity": {
         *                       "requiredDuringSchedulingIgnoredDuringExecution": {
         *                         "nodeSelectorTerms": [
         *                           {
         *                             "matchExpressions": [
         *                               {
         *                                 "key": "omnistrate.com/managed-by",
         *                                 "operator": "In",
         *                                 "values": [
         *                                   "omnistrate"
         *                                 ]
         *                               }
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     }
         *                   }
         *                 }
         *               },
         *               "valuesFile": {
         *                 "gitConfiguration": {
         *                   "accessToken": "my-token",
         *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *                   "referenceName": "tags/v1.0.0",
         *                   "repositoryUrl": "https://github.com/username/myrepo",
         *                   "userName": "my-user"
         *                 },
         *                 "path": "helm/values/production.yaml"
         *               }
         *             }
         *           ],
         *           "namespace": "default",
         *           "password": "my-password",
         *           "username": "my-user"
         *         },
         *         {
         *           "chartName": "my-chart",
         *           "chartRepoName": "my-repo",
         *           "chartRepoUrl": "https://my-repo.com",
         *           "chartValues": {
         *             "key1": "value1",
         *             "key2": 3,
         *             "key3": {
         *               "key4": "value4"
         *             }
         *           },
         *           "chartVersion": "1.0.0",
         *           "layeredChartValues": [
         *             {
         *               "name": "my-layer",
         *               "scope": {
         *                 "{{ $sys.cloudProviderName }}": "aws"
         *               },
         *               "values": {
         *                 "global": {
         *                   "affinity": {
         *                     "nodeAffinity": {
         *                       "requiredDuringSchedulingIgnoredDuringExecution": {
         *                         "nodeSelectorTerms": [
         *                           {
         *                             "matchExpressions": [
         *                               {
         *                                 "key": "omnistrate.com/managed-by",
         *                                 "operator": "In",
         *                                 "values": [
         *                                   "omnistrate"
         *                                 ]
         *                               }
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     }
         *                   }
         *                 }
         *               },
         *               "valuesFile": {
         *                 "gitConfiguration": {
         *                   "accessToken": "my-token",
         *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *                   "referenceName": "tags/v1.0.0",
         *                   "repositoryUrl": "https://github.com/username/myrepo",
         *                   "userName": "my-user"
         *                 },
         *                 "path": "helm/values/production.yaml"
         *               }
         *             },
         *             {
         *               "name": "my-layer",
         *               "scope": {
         *                 "{{ $sys.cloudProviderName }}": "aws"
         *               },
         *               "values": {
         *                 "global": {
         *                   "affinity": {
         *                     "nodeAffinity": {
         *                       "requiredDuringSchedulingIgnoredDuringExecution": {
         *                         "nodeSelectorTerms": [
         *                           {
         *                             "matchExpressions": [
         *                               {
         *                                 "key": "omnistrate.com/managed-by",
         *                                 "operator": "In",
         *                                 "values": [
         *                                   "omnistrate"
         *                                 ]
         *                               }
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     }
         *                   }
         *                 }
         *               },
         *               "valuesFile": {
         *                 "gitConfiguration": {
         *                   "accessToken": "my-token",
         *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *                   "referenceName": "tags/v1.0.0",
         *                   "repositoryUrl": "https://github.com/username/myrepo",
         *                   "userName": "my-user"
         *                 },
         *                 "path": "helm/values/production.yaml"
         *               }
         *             }
         *           ],
         *           "namespace": "default",
         *           "password": "my-password",
         *           "username": "my-user"
         *         },
         *         {
         *           "chartName": "my-chart",
         *           "chartRepoName": "my-repo",
         *           "chartRepoUrl": "https://my-repo.com",
         *           "chartValues": {
         *             "key1": "value1",
         *             "key2": 3,
         *             "key3": {
         *               "key4": "value4"
         *             }
         *           },
         *           "chartVersion": "1.0.0",
         *           "layeredChartValues": [
         *             {
         *               "name": "my-layer",
         *               "scope": {
         *                 "{{ $sys.cloudProviderName }}": "aws"
         *               },
         *               "values": {
         *                 "global": {
         *                   "affinity": {
         *                     "nodeAffinity": {
         *                       "requiredDuringSchedulingIgnoredDuringExecution": {
         *                         "nodeSelectorTerms": [
         *                           {
         *                             "matchExpressions": [
         *                               {
         *                                 "key": "omnistrate.com/managed-by",
         *                                 "operator": "In",
         *                                 "values": [
         *                                   "omnistrate"
         *                                 ]
         *                               }
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     }
         *                   }
         *                 }
         *               },
         *               "valuesFile": {
         *                 "gitConfiguration": {
         *                   "accessToken": "my-token",
         *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *                   "referenceName": "tags/v1.0.0",
         *                   "repositoryUrl": "https://github.com/username/myrepo",
         *                   "userName": "my-user"
         *                 },
         *                 "path": "helm/values/production.yaml"
         *               }
         *             },
         *             {
         *               "name": "my-layer",
         *               "scope": {
         *                 "{{ $sys.cloudProviderName }}": "aws"
         *               },
         *               "values": {
         *                 "global": {
         *                   "affinity": {
         *                     "nodeAffinity": {
         *                       "requiredDuringSchedulingIgnoredDuringExecution": {
         *                         "nodeSelectorTerms": [
         *                           {
         *                             "matchExpressions": [
         *                               {
         *                                 "key": "omnistrate.com/managed-by",
         *                                 "operator": "In",
         *                                 "values": [
         *                                   "omnistrate"
         *                                 ]
         *                               }
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     }
         *                   }
         *                 }
         *               },
         *               "valuesFile": {
         *                 "gitConfiguration": {
         *                   "accessToken": "my-token",
         *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *                   "referenceName": "tags/v1.0.0",
         *                   "repositoryUrl": "https://github.com/username/myrepo",
         *                   "userName": "my-user"
         *                 },
         *                 "path": "helm/values/production.yaml"
         *               }
         *             }
         *           ],
         *           "namespace": "default",
         *           "password": "my-password",
         *           "username": "my-user"
         *         },
         *         {
         *           "chartName": "my-chart",
         *           "chartRepoName": "my-repo",
         *           "chartRepoUrl": "https://my-repo.com",
         *           "chartValues": {
         *             "key1": "value1",
         *             "key2": 3,
         *             "key3": {
         *               "key4": "value4"
         *             }
         *           },
         *           "chartVersion": "1.0.0",
         *           "layeredChartValues": [
         *             {
         *               "name": "my-layer",
         *               "scope": {
         *                 "{{ $sys.cloudProviderName }}": "aws"
         *               },
         *               "values": {
         *                 "global": {
         *                   "affinity": {
         *                     "nodeAffinity": {
         *                       "requiredDuringSchedulingIgnoredDuringExecution": {
         *                         "nodeSelectorTerms": [
         *                           {
         *                             "matchExpressions": [
         *                               {
         *                                 "key": "omnistrate.com/managed-by",
         *                                 "operator": "In",
         *                                 "values": [
         *                                   "omnistrate"
         *                                 ]
         *                               }
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     }
         *                   }
         *                 }
         *               },
         *               "valuesFile": {
         *                 "gitConfiguration": {
         *                   "accessToken": "my-token",
         *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *                   "referenceName": "tags/v1.0.0",
         *                   "repositoryUrl": "https://github.com/username/myrepo",
         *                   "userName": "my-user"
         *                 },
         *                 "path": "helm/values/production.yaml"
         *               }
         *             },
         *             {
         *               "name": "my-layer",
         *               "scope": {
         *                 "{{ $sys.cloudProviderName }}": "aws"
         *               },
         *               "values": {
         *                 "global": {
         *                   "affinity": {
         *                     "nodeAffinity": {
         *                       "requiredDuringSchedulingIgnoredDuringExecution": {
         *                         "nodeSelectorTerms": [
         *                           {
         *                             "matchExpressions": [
         *                               {
         *                                 "key": "omnistrate.com/managed-by",
         *                                 "operator": "In",
         *                                 "values": [
         *                                   "omnistrate"
         *                                 ]
         *                               }
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     }
         *                   }
         *                 }
         *               },
         *               "valuesFile": {
         *                 "gitConfiguration": {
         *                   "accessToken": "my-token",
         *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *                   "referenceName": "tags/v1.0.0",
         *                   "repositoryUrl": "https://github.com/username/myrepo",
         *                   "userName": "my-user"
         *                 },
         *                 "path": "helm/values/production.yaml"
         *               }
         *             }
         *           ],
         *           "namespace": "default",
         *           "password": "my-password",
         *           "username": "my-user"
         *         }
         *       ]
         *     } */
        ListHelmPackagesResult: {
            /**
             * @description List of Helm packages
             * @example [
             *       {
             *         "chartName": "my-chart",
             *         "chartRepoName": "my-repo",
             *         "chartRepoUrl": "https://my-repo.com",
             *         "chartValues": {
             *           "key1": "value1",
             *           "key2": 3,
             *           "key3": {
             *             "key4": "value4"
             *           }
             *         },
             *         "chartVersion": "1.0.0",
             *         "layeredChartValues": [
             *           {
             *             "name": "my-layer",
             *             "scope": {
             *               "{{ $sys.cloudProviderName }}": "aws"
             *             },
             *             "values": {
             *               "global": {
             *                 "affinity": {
             *                   "nodeAffinity": {
             *                     "requiredDuringSchedulingIgnoredDuringExecution": {
             *                       "nodeSelectorTerms": [
             *                         {
             *                           "matchExpressions": [
             *                             {
             *                               "key": "omnistrate.com/managed-by",
             *                               "operator": "In",
             *                               "values": [
             *                                 "omnistrate"
             *                               ]
             *                             }
             *                           ]
             *                         }
             *                       ]
             *                     }
             *                   }
             *                 }
             *               }
             *             },
             *             "valuesFile": {
             *               "gitConfiguration": {
             *                 "accessToken": "my-token",
             *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *                 "referenceName": "tags/v1.0.0",
             *                 "repositoryUrl": "https://github.com/username/myrepo",
             *                 "userName": "my-user"
             *               },
             *               "path": "helm/values/production.yaml"
             *             }
             *           },
             *           {
             *             "name": "my-layer",
             *             "scope": {
             *               "{{ $sys.cloudProviderName }}": "aws"
             *             },
             *             "values": {
             *               "global": {
             *                 "affinity": {
             *                   "nodeAffinity": {
             *                     "requiredDuringSchedulingIgnoredDuringExecution": {
             *                       "nodeSelectorTerms": [
             *                         {
             *                           "matchExpressions": [
             *                             {
             *                               "key": "omnistrate.com/managed-by",
             *                               "operator": "In",
             *                               "values": [
             *                                 "omnistrate"
             *                               ]
             *                             }
             *                           ]
             *                         }
             *                       ]
             *                     }
             *                   }
             *                 }
             *               }
             *             },
             *             "valuesFile": {
             *               "gitConfiguration": {
             *                 "accessToken": "my-token",
             *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *                 "referenceName": "tags/v1.0.0",
             *                 "repositoryUrl": "https://github.com/username/myrepo",
             *                 "userName": "my-user"
             *               },
             *               "path": "helm/values/production.yaml"
             *             }
             *           }
             *         ],
             *         "namespace": "default",
             *         "password": "my-password",
             *         "username": "my-user"
             *       },
             *       {
             *         "chartName": "my-chart",
             *         "chartRepoName": "my-repo",
             *         "chartRepoUrl": "https://my-repo.com",
             *         "chartValues": {
             *           "key1": "value1",
             *           "key2": 3,
             *           "key3": {
             *             "key4": "value4"
             *           }
             *         },
             *         "chartVersion": "1.0.0",
             *         "layeredChartValues": [
             *           {
             *             "name": "my-layer",
             *             "scope": {
             *               "{{ $sys.cloudProviderName }}": "aws"
             *             },
             *             "values": {
             *               "global": {
             *                 "affinity": {
             *                   "nodeAffinity": {
             *                     "requiredDuringSchedulingIgnoredDuringExecution": {
             *                       "nodeSelectorTerms": [
             *                         {
             *                           "matchExpressions": [
             *                             {
             *                               "key": "omnistrate.com/managed-by",
             *                               "operator": "In",
             *                               "values": [
             *                                 "omnistrate"
             *                               ]
             *                             }
             *                           ]
             *                         }
             *                       ]
             *                     }
             *                   }
             *                 }
             *               }
             *             },
             *             "valuesFile": {
             *               "gitConfiguration": {
             *                 "accessToken": "my-token",
             *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *                 "referenceName": "tags/v1.0.0",
             *                 "repositoryUrl": "https://github.com/username/myrepo",
             *                 "userName": "my-user"
             *               },
             *               "path": "helm/values/production.yaml"
             *             }
             *           },
             *           {
             *             "name": "my-layer",
             *             "scope": {
             *               "{{ $sys.cloudProviderName }}": "aws"
             *             },
             *             "values": {
             *               "global": {
             *                 "affinity": {
             *                   "nodeAffinity": {
             *                     "requiredDuringSchedulingIgnoredDuringExecution": {
             *                       "nodeSelectorTerms": [
             *                         {
             *                           "matchExpressions": [
             *                             {
             *                               "key": "omnistrate.com/managed-by",
             *                               "operator": "In",
             *                               "values": [
             *                                 "omnistrate"
             *                               ]
             *                             }
             *                           ]
             *                         }
             *                       ]
             *                     }
             *                   }
             *                 }
             *               }
             *             },
             *             "valuesFile": {
             *               "gitConfiguration": {
             *                 "accessToken": "my-token",
             *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *                 "referenceName": "tags/v1.0.0",
             *                 "repositoryUrl": "https://github.com/username/myrepo",
             *                 "userName": "my-user"
             *               },
             *               "path": "helm/values/production.yaml"
             *             }
             *           }
             *         ],
             *         "namespace": "default",
             *         "password": "my-password",
             *         "username": "my-user"
             *       },
             *       {
             *         "chartName": "my-chart",
             *         "chartRepoName": "my-repo",
             *         "chartRepoUrl": "https://my-repo.com",
             *         "chartValues": {
             *           "key1": "value1",
             *           "key2": 3,
             *           "key3": {
             *             "key4": "value4"
             *           }
             *         },
             *         "chartVersion": "1.0.0",
             *         "layeredChartValues": [
             *           {
             *             "name": "my-layer",
             *             "scope": {
             *               "{{ $sys.cloudProviderName }}": "aws"
             *             },
             *             "values": {
             *               "global": {
             *                 "affinity": {
             *                   "nodeAffinity": {
             *                     "requiredDuringSchedulingIgnoredDuringExecution": {
             *                       "nodeSelectorTerms": [
             *                         {
             *                           "matchExpressions": [
             *                             {
             *                               "key": "omnistrate.com/managed-by",
             *                               "operator": "In",
             *                               "values": [
             *                                 "omnistrate"
             *                               ]
             *                             }
             *                           ]
             *                         }
             *                       ]
             *                     }
             *                   }
             *                 }
             *               }
             *             },
             *             "valuesFile": {
             *               "gitConfiguration": {
             *                 "accessToken": "my-token",
             *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *                 "referenceName": "tags/v1.0.0",
             *                 "repositoryUrl": "https://github.com/username/myrepo",
             *                 "userName": "my-user"
             *               },
             *               "path": "helm/values/production.yaml"
             *             }
             *           },
             *           {
             *             "name": "my-layer",
             *             "scope": {
             *               "{{ $sys.cloudProviderName }}": "aws"
             *             },
             *             "values": {
             *               "global": {
             *                 "affinity": {
             *                   "nodeAffinity": {
             *                     "requiredDuringSchedulingIgnoredDuringExecution": {
             *                       "nodeSelectorTerms": [
             *                         {
             *                           "matchExpressions": [
             *                             {
             *                               "key": "omnistrate.com/managed-by",
             *                               "operator": "In",
             *                               "values": [
             *                                 "omnistrate"
             *                               ]
             *                             }
             *                           ]
             *                         }
             *                       ]
             *                     }
             *                   }
             *                 }
             *               }
             *             },
             *             "valuesFile": {
             *               "gitConfiguration": {
             *                 "accessToken": "my-token",
             *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *                 "referenceName": "tags/v1.0.0",
             *                 "repositoryUrl": "https://github.com/username/myrepo",
             *                 "userName": "my-user"
             *               },
             *               "path": "helm/values/production.yaml"
             *             }
             *           }
             *         ],
             *         "namespace": "default",
             *         "password": "my-password",
             *         "username": "my-user"
             *       }
             *     ]
             */
            helmPackages?: components["schemas"]["HelmPackage"][];
        };
        /** @example {
         *       "token": "i"
         *     } */
        ListIdentityProviderTypesRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example jj
             */
            token: string;
        };
        /** @example {
         *       "identityProviderTypes": [
         *         {
         *           "SupportCustomEndpoints": true,
         *           "SupportCustomScopes": false,
         *           "identityProviderName": "Google"
         *         },
         *         {
         *           "SupportCustomEndpoints": true,
         *           "SupportCustomScopes": false,
         *           "identityProviderName": "Google"
         *         },
         *         {
         *           "SupportCustomEndpoints": true,
         *           "SupportCustomScopes": false,
         *           "identityProviderName": "Google"
         *         }
         *       ]
         *     } */
        ListIdentityProviderTypesResult: {
            /**
             * @description The list of Identity Provider Types
             * @example [
             *       {
             *         "SupportCustomEndpoints": true,
             *         "SupportCustomScopes": false,
             *         "identityProviderName": "Google"
             *       },
             *       {
             *         "SupportCustomEndpoints": true,
             *         "SupportCustomScopes": false,
             *         "identityProviderName": "Google"
             *       },
             *       {
             *         "SupportCustomEndpoints": true,
             *         "SupportCustomScopes": false,
             *         "identityProviderName": "Google"
             *       }
             *     ]
             */
            identityProviderTypes: components["schemas"]["DescribeIdentityProviderTypeResult"][];
        };
        /** @example {
         *       "token": "l"
         *     } */
        ListIdentityProvidersRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example 6s4
             */
            token: string;
        };
        /** @example {
         *       "identityProviders": [
         *         {
         *           "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
         *           "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
         *           "clientSecret": "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",
         *           "disabled": false,
         *           "emailIdentifiers": "company.com",
         *           "environmentType": "production",
         *           "id": "idp-12345678",
         *           "identityProviderName": "Google",
         *           "loginButtonIconUrl": "https://example.com/icon.png",
         *           "loginButtonText": "Login with Google",
         *           "name": "Google for my company",
         *           "scopes": "openid email profile",
         *           "status": "Ready",
         *           "tokenEndpoint": "https://oauth2.googleapis.com/token",
         *           "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
         *         },
         *         {
         *           "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
         *           "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
         *           "clientSecret": "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",
         *           "disabled": false,
         *           "emailIdentifiers": "company.com",
         *           "environmentType": "production",
         *           "id": "idp-12345678",
         *           "identityProviderName": "Google",
         *           "loginButtonIconUrl": "https://example.com/icon.png",
         *           "loginButtonText": "Login with Google",
         *           "name": "Google for my company",
         *           "scopes": "openid email profile",
         *           "status": "Ready",
         *           "tokenEndpoint": "https://oauth2.googleapis.com/token",
         *           "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
         *         },
         *         {
         *           "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
         *           "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
         *           "clientSecret": "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",
         *           "disabled": false,
         *           "emailIdentifiers": "company.com",
         *           "environmentType": "production",
         *           "id": "idp-12345678",
         *           "identityProviderName": "Google",
         *           "loginButtonIconUrl": "https://example.com/icon.png",
         *           "loginButtonText": "Login with Google",
         *           "name": "Google for my company",
         *           "scopes": "openid email profile",
         *           "status": "Ready",
         *           "tokenEndpoint": "https://oauth2.googleapis.com/token",
         *           "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
         *         }
         *       ]
         *     } */
        ListIdentityProvidersResult: {
            /**
             * @description The list of Identity Providers
             * @example [
             *       {
             *         "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
             *         "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
             *         "clientSecret": "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",
             *         "disabled": false,
             *         "emailIdentifiers": "company.com",
             *         "environmentType": "production",
             *         "id": "idp-12345678",
             *         "identityProviderName": "Google",
             *         "loginButtonIconUrl": "https://example.com/icon.png",
             *         "loginButtonText": "Login with Google",
             *         "name": "Google for my company",
             *         "scopes": "openid email profile",
             *         "status": "Ready",
             *         "tokenEndpoint": "https://oauth2.googleapis.com/token",
             *         "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
             *       },
             *       {
             *         "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
             *         "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
             *         "clientSecret": "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",
             *         "disabled": false,
             *         "emailIdentifiers": "company.com",
             *         "environmentType": "production",
             *         "id": "idp-12345678",
             *         "identityProviderName": "Google",
             *         "loginButtonIconUrl": "https://example.com/icon.png",
             *         "loginButtonText": "Login with Google",
             *         "name": "Google for my company",
             *         "scopes": "openid email profile",
             *         "status": "Ready",
             *         "tokenEndpoint": "https://oauth2.googleapis.com/token",
             *         "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
             *       },
             *       {
             *         "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
             *         "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
             *         "clientSecret": "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",
             *         "disabled": false,
             *         "emailIdentifiers": "company.com",
             *         "environmentType": "production",
             *         "id": "idp-12345678",
             *         "identityProviderName": "Google",
             *         "loginButtonIconUrl": "https://example.com/icon.png",
             *         "loginButtonText": "Login with Google",
             *         "name": "Google for my company",
             *         "scopes": "openid email profile",
             *         "status": "Ready",
             *         "tokenEndpoint": "https://oauth2.googleapis.com/token",
             *         "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
             *       }
             *     ]
             */
            identityProviders: components["schemas"]["DescribeIdentityProviderResult"][];
        };
        /** @example {
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "iyc"
         *     } */
        ListImageConfigsRequest: {
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example wk5
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "imgc-12345678",
         *         "imgc-87654321"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListImageConfigsResult: {
            /**
             * @description List of image configuration IDs
             * @example [
             *       "imgc-12345678",
             *       "imgc-87654321"
             *     ]
             */
            ids: string[];
            /**
             * @description Token to use to get the next page of results
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "token": "d"
         *     } */
        ListImageRegistryRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example 9qd
             */
            token: string;
        };
        /**
         * @description List of HTTP API v2 Docker Image Registries
         * @example {
         *       "ids": [
         *         "ir-12345678",
         *         "ir-abcdefgh",
         *         "ir-abcd5678"
         *       ],
         *       "nextPageToken": "next-token"
         *     }
         */
        ListImageRegistryResult: {
            /**
             * @description List of Image Registry IDs
             * @example [
             *       "ir-12345678",
             *       "ir-abcdefgh",
             *       "ir-abcd5678"
             *     ]
             */
            ids: string[];
            /**
             * @description Token to use for the next page
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "managed": false,
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "ou"
         *     } */
        ListInfraConfigRequest: {
            /**
             * @description Is infra config managed by omnistrate
             * @example false
             */
            managed?: boolean;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example uy0
             */
            token: string;
        };
        /**
         * @description List of Infra Config IDs
         * @example {
         *       "ids": [
         *         "ic-12345678",
         *         "ic-abcdefgh",
         *         "ic-1234efgh"
         *       ],
         *       "nextPageToken": "next-token"
         *     }
         */
        ListInfraConfigResult: {
            /** @example [
             *       "ic-12345678",
             *       "ic-abcdefgh",
             *       "ic-1234efgh"
             *     ] */
            ids: string[];
            /**
             * @description Token to use for the next page
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Qui et dignissimos explicabo nesciunt repellat.",
         *       "resourceId": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "ak"
         *     } */
        ListInputParametersRequest: {
            /**
             * @description ID of a Product Tier
             * @example Sit consectetur delectus doloribus qui et.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Facilis non quia quaerat eveniet ea sint.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of a resource
             * @example Quam iure unde qui et id mollitia.
             */
            resourceId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example b
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "ip-12345678",
         *         "ip-12345679"
         *       ],
         *       "inputParameters": [
         *         {
         *           "defaultValue": "true",
         *           "dependentResourceId": "r-12345678",
         *           "description": "Sed in dolor.",
         *           "hasOptions": false,
         *           "id": "var-12345678",
         *           "isList": true,
         *           "key": "rgn",
         *           "labeledOptions": {
         *             "large": "t3.xlarge",
         *             "medium": "t3.large",
         *             "small": "t3.medium"
         *           },
         *           "limits": {
         *             "max": "Distinctio rerum.",
         *             "maxLength": "Modi incidunt quibusdam et atque quia.",
         *             "min": "Qui eveniet nihil hic sit sint.",
         *             "minLength": "Iure eligendi."
         *           },
         *           "modifiable": false,
         *           "name": "m0q",
         *           "options": [
         *             "true",
         *             "false"
         *           ],
         *           "regex": "^[a-zA-Z0-9_-]+$",
         *           "required": true,
         *           "resourceId": "r-12345678",
         *           "serviceId": "s-12345678",
         *           "tabIndex": 1,
         *           "type": "Boolean|Float64|String|Resource|Secret|Password"
         *         },
         *         {
         *           "defaultValue": "true",
         *           "dependentResourceId": "r-12345678",
         *           "description": "Sed in dolor.",
         *           "hasOptions": false,
         *           "id": "var-12345678",
         *           "isList": true,
         *           "key": "rgn",
         *           "labeledOptions": {
         *             "large": "t3.xlarge",
         *             "medium": "t3.large",
         *             "small": "t3.medium"
         *           },
         *           "limits": {
         *             "max": "Distinctio rerum.",
         *             "maxLength": "Modi incidunt quibusdam et atque quia.",
         *             "min": "Qui eveniet nihil hic sit sint.",
         *             "minLength": "Iure eligendi."
         *           },
         *           "modifiable": false,
         *           "name": "m0q",
         *           "options": [
         *             "true",
         *             "false"
         *           ],
         *           "regex": "^[a-zA-Z0-9_-]+$",
         *           "required": true,
         *           "resourceId": "r-12345678",
         *           "serviceId": "s-12345678",
         *           "tabIndex": 1,
         *           "type": "Boolean|Float64|String|Resource|Secret|Password"
         *         }
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListInputParametersResult: {
            /**
             * @description List of input parameter IDs
             * @example [
             *       "ip-12345678",
             *       "ip-12345679"
             *     ]
             */
            ids: string[];
            /**
             * @description The input parameters
             * @example [
             *       {
             *         "defaultValue": "true",
             *         "dependentResourceId": "r-12345678",
             *         "description": "Sed in dolor.",
             *         "hasOptions": false,
             *         "id": "var-12345678",
             *         "isList": true,
             *         "key": "rgn",
             *         "labeledOptions": {
             *           "large": "t3.xlarge",
             *           "medium": "t3.large",
             *           "small": "t3.medium"
             *         },
             *         "limits": {
             *           "max": "Distinctio rerum.",
             *           "maxLength": "Modi incidunt quibusdam et atque quia.",
             *           "min": "Qui eveniet nihil hic sit sint.",
             *           "minLength": "Iure eligendi."
             *         },
             *         "modifiable": false,
             *         "name": "m0q",
             *         "options": [
             *           "true",
             *           "false"
             *         ],
             *         "regex": "^[a-zA-Z0-9_-]+$",
             *         "required": true,
             *         "resourceId": "r-12345678",
             *         "serviceId": "s-12345678",
             *         "tabIndex": 1,
             *         "type": "Boolean|Float64|String|Resource|Secret|Password"
             *       },
             *       {
             *         "defaultValue": "true",
             *         "dependentResourceId": "r-12345678",
             *         "description": "Sed in dolor.",
             *         "hasOptions": false,
             *         "id": "var-12345678",
             *         "isList": true,
             *         "key": "rgn",
             *         "labeledOptions": {
             *           "large": "t3.xlarge",
             *           "medium": "t3.large",
             *           "small": "t3.medium"
             *         },
             *         "limits": {
             *           "max": "Distinctio rerum.",
             *           "maxLength": "Modi incidunt quibusdam et atque quia.",
             *           "min": "Qui eveniet nihil hic sit sint.",
             *           "minLength": "Iure eligendi."
             *         },
             *         "modifiable": false,
             *         "name": "m0q",
             *         "options": [
             *           "true",
             *           "false"
             *         ],
             *         "regex": "^[a-zA-Z0-9_-]+$",
             *         "required": true,
             *         "resourceId": "r-12345678",
             *         "serviceId": "s-12345678",
             *         "tabIndex": 1,
             *         "type": "Boolean|Float64|String|Resource|Secret|Password"
             *       },
             *       {
             *         "defaultValue": "true",
             *         "dependentResourceId": "r-12345678",
             *         "description": "Sed in dolor.",
             *         "hasOptions": false,
             *         "id": "var-12345678",
             *         "isList": true,
             *         "key": "rgn",
             *         "labeledOptions": {
             *           "large": "t3.xlarge",
             *           "medium": "t3.large",
             *           "small": "t3.medium"
             *         },
             *         "limits": {
             *           "max": "Distinctio rerum.",
             *           "maxLength": "Modi incidunt quibusdam et atque quia.",
             *           "min": "Qui eveniet nihil hic sit sint.",
             *           "minLength": "Iure eligendi."
             *         },
             *         "modifiable": false,
             *         "name": "m0q",
             *         "options": [
             *           "true",
             *           "false"
             *         ],
             *         "regex": "^[a-zA-Z0-9_-]+$",
             *         "required": true,
             *         "resourceId": "r-12345678",
             *         "serviceId": "s-12345678",
             *         "tabIndex": 1,
             *         "type": "Boolean|Float64|String|Resource|Secret|Password"
             *       },
             *       {
             *         "defaultValue": "true",
             *         "dependentResourceId": "r-12345678",
             *         "description": "Sed in dolor.",
             *         "hasOptions": false,
             *         "id": "var-12345678",
             *         "isList": true,
             *         "key": "rgn",
             *         "labeledOptions": {
             *           "large": "t3.xlarge",
             *           "medium": "t3.large",
             *           "small": "t3.medium"
             *         },
             *         "limits": {
             *           "max": "Distinctio rerum.",
             *           "maxLength": "Modi incidunt quibusdam et atque quia.",
             *           "min": "Qui eveniet nihil hic sit sint.",
             *           "minLength": "Iure eligendi."
             *         },
             *         "modifiable": false,
             *         "name": "m0q",
             *         "options": [
             *           "true",
             *           "false"
             *         ],
             *         "regex": "^[a-zA-Z0-9_-]+$",
             *         "required": true,
             *         "resourceId": "r-12345678",
             *         "serviceId": "s-12345678",
             *         "tabIndex": 1,
             *         "type": "Boolean|Float64|String|Resource|Secret|Password"
             *       }
             *     ]
             */
            inputParameters?: components["schemas"]["DescribeInputParameterResult"][];
            /**
             * @description Token to retrieve the next page of results
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "billingProvider": "STRIPE",
         *       "token": "cp"
         *     } */
        ListInvoicesRequest: {
            /**
             * @description The billing provider type
             * @example STRIPE|BRING_YOUR_OWN
             */
            billingProvider?: string;
            /**
             * @description JWT token used to perform authorization
             * @example xyg
             */
            token: string;
        };
        /** @example {
         *       "invoices": [
         *         {
         *           "currency": "USD",
         *           "dueDate": "2023-10-01T00:00:00Z",
         *           "invoiceDate": "2021-01-01T00:00:00.000Z",
         *           "invoiceId": "in_1234568",
         *           "invoiceNumber": "2021-01-01-1234567890",
         *           "invoicePdf": "https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap",
         *           "invoiceStatus": "Open",
         *           "invoiceUrl": "https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap",
         *           "paymentTerms": "Net 30",
         *           "taxAmount": 10,
         *           "totalAmount": 110,
         *           "totalAmountWithoutTax": 100
         *         },
         *         {
         *           "currency": "USD",
         *           "dueDate": "2023-10-01T00:00:00Z",
         *           "invoiceDate": "2021-01-01T00:00:00.000Z",
         *           "invoiceId": "in_1234568",
         *           "invoiceNumber": "2021-01-01-1234567890",
         *           "invoicePdf": "https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap",
         *           "invoiceStatus": "Open",
         *           "invoiceUrl": "https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap",
         *           "paymentTerms": "Net 30",
         *           "taxAmount": 10,
         *           "totalAmount": 110,
         *           "totalAmountWithoutTax": 100
         *         },
         *         {
         *           "currency": "USD",
         *           "dueDate": "2023-10-01T00:00:00Z",
         *           "invoiceDate": "2021-01-01T00:00:00.000Z",
         *           "invoiceId": "in_1234568",
         *           "invoiceNumber": "2021-01-01-1234567890",
         *           "invoicePdf": "https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap",
         *           "invoiceStatus": "Open",
         *           "invoiceUrl": "https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap",
         *           "paymentTerms": "Net 30",
         *           "taxAmount": 10,
         *           "totalAmount": 110,
         *           "totalAmountWithoutTax": 100
         *         },
         *         {
         *           "currency": "USD",
         *           "dueDate": "2023-10-01T00:00:00Z",
         *           "invoiceDate": "2021-01-01T00:00:00.000Z",
         *           "invoiceId": "in_1234568",
         *           "invoiceNumber": "2021-01-01-1234567890",
         *           "invoicePdf": "https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap",
         *           "invoiceStatus": "Open",
         *           "invoiceUrl": "https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap",
         *           "paymentTerms": "Net 30",
         *           "taxAmount": 10,
         *           "totalAmount": 110,
         *           "totalAmountWithoutTax": 100
         *         }
         *       ]
         *     } */
        ListInvoicesResult: {
            /**
             * @description List of Invoices
             * @example [
             *       {
             *         "currency": "USD",
             *         "dueDate": "2023-10-01T00:00:00Z",
             *         "invoiceDate": "2021-01-01T00:00:00.000Z",
             *         "invoiceId": "in_1234568",
             *         "invoiceNumber": "2021-01-01-1234567890",
             *         "invoicePdf": "https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap",
             *         "invoiceStatus": "Open",
             *         "invoiceUrl": "https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap",
             *         "paymentTerms": "Net 30",
             *         "taxAmount": 10,
             *         "totalAmount": 110,
             *         "totalAmountWithoutTax": 100
             *       },
             *       {
             *         "currency": "USD",
             *         "dueDate": "2023-10-01T00:00:00Z",
             *         "invoiceDate": "2021-01-01T00:00:00.000Z",
             *         "invoiceId": "in_1234568",
             *         "invoiceNumber": "2021-01-01-1234567890",
             *         "invoicePdf": "https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap",
             *         "invoiceStatus": "Open",
             *         "invoiceUrl": "https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap",
             *         "paymentTerms": "Net 30",
             *         "taxAmount": 10,
             *         "totalAmount": 110,
             *         "totalAmountWithoutTax": 100
             *       },
             *       {
             *         "currency": "USD",
             *         "dueDate": "2023-10-01T00:00:00Z",
             *         "invoiceDate": "2021-01-01T00:00:00.000Z",
             *         "invoiceId": "in_1234568",
             *         "invoiceNumber": "2021-01-01-1234567890",
             *         "invoicePdf": "https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap",
             *         "invoiceStatus": "Open",
             *         "invoiceUrl": "https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap",
             *         "paymentTerms": "Net 30",
             *         "taxAmount": 10,
             *         "totalAmount": 110,
             *         "totalAmountWithoutTax": 100
             *       }
             *     ]
             */
            invoices?: components["schemas"]["Invoice"][];
        };
        /** @example {
         *       "family": "COMPUTE_INFRA",
         *       "token": "t8"
         *     } */
        ListLimitRequest: {
            /**
             * @description The limit family
             * @example SERVICE
             */
            family: string;
            /**
             * @description JWT token used to perform authorization
             * @example uu
             */
            token: string;
        };
        /** @example {
         *       "family": "COMPUTE_INFRA"
         *     } */
        ListLimitRequest2: {
            /**
             * @description Limit family
             * @example COMPUTE_INFRA
             */
            family: string;
        };
        /** @example {
         *       "keys": [
         *         "MAX_VIRTUAL_CORES_PER_RESOURCE"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListLimitResult: {
            /**
             * @description List of limit keys
             * @example [
             *       "MAX_VIRTUAL_CORES_PER_RESOURCE"
             *     ]
             */
            keys: string[];
            /**
             * @description Token to use for the next page
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "managed": false,
         *       "serviceId": "s-12345678",
         *       "token": "l"
         *     } */
        ListNetworkConfigsRequest: {
            /**
             * @description Is network config managed by omnistrate
             * @example false
             */
            managed?: boolean;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 5
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "Deserunt dignissimos.",
         *         "Deserunt dignissimos."
         *       ],
         *       "nextPageToken": "token"
         *     } */
        ListNetworkConfigsResult: {
            /**
             * @description The list of network config IDs
             * @example [
             *       "Deserunt dignissimos.",
             *       "Deserunt dignissimos."
             *     ]
             */
            ids: string[];
            /**
             * @description The next token to use for pagination
             * @example token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Expedita doloremque minus.",
         *       "resourceId": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "f"
         *     } */
        ListOutputParametersRequest: {
            /**
             * @description ID of a Product Tier
             * @example Voluptatem veniam praesentium quod.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Et quibusdam vitae sunt quos.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of a resource
             * @example Quibusdam aperiam.
             */
            resourceId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example g23
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "op-12345678"
         *       ],
         *       "nextPageToken": "next-token",
         *       "outputParameters": [
         *         {
         *           "description": "Username of the user created in the target system",
         *           "id": "op-12345678",
         *           "key": "username",
         *           "name": "Username",
         *           "resourceId": "r-12345678",
         *           "serviceId": "s-12345678",
         *           "value": "johndoe",
         *           "valueRef": "$var.username",
         *           "valueType": "Boolean|Float64|String|Secret|Password"
         *         },
         *         {
         *           "description": "Username of the user created in the target system",
         *           "id": "op-12345678",
         *           "key": "username",
         *           "name": "Username",
         *           "resourceId": "r-12345678",
         *           "serviceId": "s-12345678",
         *           "value": "johndoe",
         *           "valueRef": "$var.username",
         *           "valueType": "Boolean|Float64|String|Secret|Password"
         *         },
         *         {
         *           "description": "Username of the user created in the target system",
         *           "id": "op-12345678",
         *           "key": "username",
         *           "name": "Username",
         *           "resourceId": "r-12345678",
         *           "serviceId": "s-12345678",
         *           "value": "johndoe",
         *           "valueRef": "$var.username",
         *           "valueType": "Boolean|Float64|String|Secret|Password"
         *         }
         *       ]
         *     } */
        ListOutputParametersResult: {
            /**
             * @description The IDs of the output parameters
             * @example [
             *       "op-12345678"
             *     ]
             */
            ids: string[];
            /**
             * @description The token to use for the next page of results
             * @example next-token
             */
            nextPageToken?: string;
            /**
             * @description The output parameters
             * @example [
             *       {
             *         "description": "Username of the user created in the target system",
             *         "id": "op-12345678",
             *         "key": "username",
             *         "name": "Username",
             *         "resourceId": "r-12345678",
             *         "serviceId": "s-12345678",
             *         "value": "johndoe",
             *         "valueRef": "$var.username",
             *         "valueType": "Boolean|Float64|String|Secret|Password"
             *       },
             *       {
             *         "description": "Username of the user created in the target system",
             *         "id": "op-12345678",
             *         "key": "username",
             *         "name": "Username",
             *         "resourceId": "r-12345678",
             *         "serviceId": "s-12345678",
             *         "value": "johndoe",
             *         "valueRef": "$var.username",
             *         "valueType": "Boolean|Float64|String|Secret|Password"
             *       }
             *     ]
             */
            outputParameters?: components["schemas"]["DescribeOutputParameterResult"][];
        };
        /** @example {
         *       "serviceId": "s-12345678",
         *       "token": "v7k"
         *     } */
        ListPipelinesRequest: {
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 2r
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "p-12345678",
         *         "p-23456789"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListPipelinesResult: {
            /**
             * @description List of pipeline IDs
             * @example [
             *       "p-12345678",
             *       "p-23456789"
             *     ]
             */
            ids?: string[];
            /**
             * @description Next page token
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "serviceId": "s-12345678",
         *       "serviceModelId": "sm-12345678",
         *       "token": "kw8"
         *     } */
        ListProductTiersRequest: {
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Service Model
             * @example Fuga laudantium.
             */
            serviceModelId: string;
            /**
             * @description JWT token used to perform authorization
             * @example fh
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "Beatae beatae.",
         *         "Beatae beatae.",
         *         "Beatae beatae.",
         *         "Beatae beatae."
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListProductTiersResult: {
            /**
             * @description List of product tier IDs
             * @example [
             *       "Beatae beatae.",
             *       "Beatae beatae."
             *     ]
             */
            ids: string[];
            /**
             * @description Token to use for the next page
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "modelType": "CUSTOMER_HOSTED",
         *       "productTierId": "pt-12345678",
         *       "serviceId": "s-12345678",
         *       "serviceModelId": "sm-12345678",
         *       "token": "a56"
         *     } */
        ListRegionsRequest: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /**
             * @description The model type encapsulating this service
             * @example OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
             */
            modelType?: string;
            /**
             * @description ID of a Product Tier
             * @example Itaque enim cupiditate tempora quisquam voluptatem.
             */
            productTierId?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description ID of a Service Model
             * @example Explicabo dolores.
             */
            serviceModelId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example jhf
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "region-12345678",
         *         "region-87654321"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListRegionsResult: {
            /** @example [
             *       "region-12345678",
             *       "region-87654321"
             *     ] */
            ids: string[];
            /**
             * @description Token to use for the next request
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "ProductTierId": "Beatae beatae.",
         *       "ProductTierVersion": "Doloremque voluptatibus odio vel.",
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "16"
         *     } */
        ListResourceCapabilitiesRequest: {
            /**
             * @description ID of a Product Tier
             * @example Reiciendis iusto quibusdam quia nulla natus qui.
             */
            ProductTierId?: string;
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Voluptatem nihil modi voluptate rerum earum.
             */
            ProductTierVersion?: string;
            /**
             * @description ID of a resource
             * @example Sed impedit et assumenda necessitatibus et.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example r1s
             */
            token: string;
        };
        /** @example {
         *       "capabilities": [
         *         {
         *           "capability": "SERVERLESS",
         *           "configuration": {
         *             "EnableAutoStop": true,
         *             "MinimumNodesInPool": 5,
         *             "PortsMappingProxyConfig": {
         *               "MaxNumberOfClustersPerProxyInstance": 50,
         *               "NumberOfPortsPerCluster": 4
         *             },
         *             "ProxyId": "r-123456",
         *             "ReferenceProxyKey": "resource-proxy",
         *             "TargetPort": 5432
         *           }
         *         },
         *         {
         *           "capability": "SERVERLESS",
         *           "configuration": {
         *             "EnableAutoStop": true,
         *             "MinimumNodesInPool": 5,
         *             "PortsMappingProxyConfig": {
         *               "MaxNumberOfClustersPerProxyInstance": 50,
         *               "NumberOfPortsPerCluster": 4
         *             },
         *             "ProxyId": "r-123456",
         *             "ReferenceProxyKey": "resource-proxy",
         *             "TargetPort": 5432
         *           }
         *         },
         *         {
         *           "capability": "SERVERLESS",
         *           "configuration": {
         *             "EnableAutoStop": true,
         *             "MinimumNodesInPool": 5,
         *             "PortsMappingProxyConfig": {
         *               "MaxNumberOfClustersPerProxyInstance": 50,
         *               "NumberOfPortsPerCluster": 4
         *             },
         *             "ProxyId": "r-123456",
         *             "ReferenceProxyKey": "resource-proxy",
         *             "TargetPort": 5432
         *           }
         *         }
         *       ]
         *     } */
        ListResourceCapabilitiesResponse: {
            /**
             * @description The configurationParameters to enable capabilities for the resource
             * @example [
             *       {
             *         "capability": "SERVERLESS",
             *         "configuration": {
             *           "EnableAutoStop": true,
             *           "MinimumNodesInPool": 5,
             *           "PortsMappingProxyConfig": {
             *             "MaxNumberOfClustersPerProxyInstance": 50,
             *             "NumberOfPortsPerCluster": 4
             *           },
             *           "ProxyId": "r-123456",
             *           "ReferenceProxyKey": "resource-proxy",
             *           "TargetPort": 5432
             *         }
             *       },
             *       {
             *         "capability": "SERVERLESS",
             *         "configuration": {
             *           "EnableAutoStop": true,
             *           "MinimumNodesInPool": 5,
             *           "PortsMappingProxyConfig": {
             *             "MaxNumberOfClustersPerProxyInstance": 50,
             *             "NumberOfPortsPerCluster": 4
             *           },
             *           "ProxyId": "r-123456",
             *           "ReferenceProxyKey": "resource-proxy",
             *           "TargetPort": 5432
             *         }
             *       },
             *       {
             *         "capability": "SERVERLESS",
             *         "configuration": {
             *           "EnableAutoStop": true,
             *           "MinimumNodesInPool": 5,
             *           "PortsMappingProxyConfig": {
             *             "MaxNumberOfClustersPerProxyInstance": 50,
             *             "NumberOfPortsPerCluster": 4
             *           },
             *           "ProxyId": "r-123456",
             *           "ReferenceProxyKey": "resource-proxy",
             *           "TargetPort": 5432
             *         }
             *       },
             *       {
             *         "capability": "SERVERLESS",
             *         "configuration": {
             *           "EnableAutoStop": true,
             *           "MinimumNodesInPool": 5,
             *           "PortsMappingProxyConfig": {
             *             "MaxNumberOfClustersPerProxyInstance": 50,
             *             "NumberOfPortsPerCluster": 4
             *           },
             *           "ProxyId": "r-123456",
             *           "ReferenceProxyKey": "resource-proxy",
             *           "TargetPort": 5432
             *         }
             *       }
             *     ]
             */
            capabilities?: components["schemas"]["ResourceCapability"][];
        };
        /** @example {
         *       "id": "instance-abcd1234",
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "ivi"
         *     } */
        ListResourceInstanceSnapshotsRequest: {
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service key
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Sint esse atque reprehenderit natus illum.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 770
             */
            token: string;
        };
        /** @example {
         *       "snapshots": [
         *         {
         *           "completeTime": "2021-09-01T00:00:00Z",
         *           "createdTime": "2021-09-01T00:00:00Z",
         *           "encrypted": true,
         *           "progress": 100,
         *           "snapshotId": "instance-ss-12345678",
         *           "status": "completed"
         *         }
         *       ]
         *     } */
        ListResourceInstanceSnapshotsResult: {
            /**
             * @description The instance snapshots
             * @example [
             *       {
             *         "completeTime": "2021-09-01T00:00:00Z",
             *         "createdTime": "2021-09-01T00:00:00Z",
             *         "encrypted": true,
             *         "progress": 100,
             *         "snapshotId": "instance-ss-12345678",
             *         "status": "completed"
             *       }
             *     ]
             */
            snapshots?: components["schemas"]["InstanceSnapshot"][];
        };
        /** @example {
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "f0w"
         *     } */
        ListResourceInstancesRequest: {
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service key
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Accusamus et aut voluptatem fugit et.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example g
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "instance-abcd1234",
         *         "instance-abcd1235"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListResourceInstancesResult: {
            /**
             * @description The instance IDs
             * @example [
             *       "instance-abcd1234",
             *       "instance-abcd1235"
             *     ]
             */
            ids: string[];
            /**
             * @description Token to use for the next request
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "ProductTierVersion": "Rerum sint qui exercitationem.",
         *       "managed": false,
         *       "productTierId": "pt-12345678",
         *       "serviceId": "si-12345678",
         *       "token": "7q0"
         *     } */
        ListResourcesRequest: {
            /**
             * @description The product tier version of the infra config to describe. If not specified, the latest version is described.
             * @example Consequuntur et sapiente nemo in.
             */
            ProductTierVersion?: string;
            /**
             * @description Is resource managed by omnistrate
             * @example false
             */
            managed?: boolean;
            /**
             * @description ID of a Product Tier
             * @example Id est nesciunt maxime.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example z6
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "r-12345678",
         *         "r-abcdefgh",
         *         "r-1234abcd"
         *       ],
         *       "nextPageToken": "next-token",
         *       "resources": [
         *         {
         *           "actionHooks": [
         *             {
         *               "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
         *               "scope": "CLUSTER",
         *               "type": "INIT"
         *             }
         *           ],
         *           "additionalSecurityContext": {
         *             "AddCapabilities": [
         *               "CAP_NET_ADMIN",
         *               "CAP_NET_RAW"
         *             ],
         *             "DropCapabilities": [
         *               "CAP_NET_ADMIN",
         *               "CAP_NET_RAW"
         *             ],
         *             "SupplementalGroupIDs": [
         *               1001,
         *               999
         *             ]
         *           },
         *           "backupConfiguration": {
         *             "backupPeriodInHours": 24,
         *             "backupRetentionInDays": 7
         *           },
         *           "blobStorageConfiguration": {
         *             "GCSConfiguration": {},
         *             "S3Configuration": {}
         *           },
         *           "capabilities": [
         *             {
         *               "capability": "SERVERLESS",
         *               "configuration": {
         *                 "EnableAutoStop": true,
         *                 "MinimumNodesInPool": 5,
         *                 "PortsMappingProxyConfig": {
         *                   "MaxNumberOfClustersPerProxyInstance": 50,
         *                   "NumberOfPortsPerCluster": 4
         *                 },
         *                 "ProxyId": "r-123456",
         *                 "ReferenceProxyKey": "resource-proxy",
         *                 "TargetPort": 5432
         *               }
         *             },
         *             {
         *               "capability": "SERVERLESS",
         *               "configuration": {
         *                 "EnableAutoStop": true,
         *                 "MinimumNodesInPool": 5,
         *                 "PortsMappingProxyConfig": {
         *                   "MaxNumberOfClustersPerProxyInstance": 50,
         *                   "NumberOfPortsPerCluster": 4
         *                 },
         *                 "ProxyId": "r-123456",
         *                 "ReferenceProxyKey": "resource-proxy",
         *                 "TargetPort": 5432
         *               }
         *             },
         *             {
         *               "capability": "SERVERLESS",
         *               "configuration": {
         *                 "EnableAutoStop": true,
         *                 "MinimumNodesInPool": 5,
         *                 "PortsMappingProxyConfig": {
         *                   "MaxNumberOfClustersPerProxyInstance": 50,
         *                   "NumberOfPortsPerCluster": 4
         *                 },
         *                 "ProxyId": "r-123456",
         *                 "ReferenceProxyKey": "resource-proxy",
         *                 "TargetPort": 5432
         *               }
         *             }
         *           ],
         *           "customLabels": {
         *             "key": "value"
         *           },
         *           "customSysCTLs": {
         *             "net.ipv4.tcp_syncookies": "1"
         *           },
         *           "customULimits": [
         *             {
         *               "ULimitsName": "NoProc",
         *               "ULimitsType": "Soft",
         *               "ULimitsValue": 1000
         *             },
         *             {
         *               "ULimitsName": "NoFile",
         *               "ULimitsType": "Hard",
         *               "ULimitsValue": 2048
         *             }
         *           ],
         *           "dependencies": [
         *             {
         *               "parameterMap": {
         *                 "clusterId": "writerId",
         *                 "clusterOrg": "userDatabase"
         *               },
         *               "resourceId": "r-12345678"
         *             },
         *             {
         *               "parameterMap": {
         *                 "clusterId": "readerId",
         *                 "clusterOrg": "userDatabase"
         *               },
         *               "resourceId": "r-abcdef12"
         *             }
         *           ],
         *           "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
         *           "environmentVariables": [
         *             {
         *               "name": "MYSQL_ROOT_PASSWORD",
         *               "value": "password"
         *             }
         *           ],
         *           "fileSystemConfiguration": {
         *             "EFSFileSystemConfiguration": {
         *               "PerformanceMode": "generalPurpose|maxIO",
         *               "ProvisionedThroughputInMibps": 125,
         *               "ThroughputMode": "provisioned|bursting|elastic"
         *             }
         *           },
         *           "helmChartConfiguration": {
         *             "chartName": "my-chart",
         *             "chartRepoName": "my-repo",
         *             "chartRepoUrl": "https://my-repo.com",
         *             "chartValues": {
         *               "key1": "value1",
         *               "key2": 3,
         *               "key3": {
         *                 "key4": "value4"
         *               }
         *             },
         *             "chartVersion": "1.0.0",
         *             "endpointConfiguration": {
         *               "admin": {
         *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *                 "networkingType": "PRIVATE",
         *                 "ports": [
         *                   8080,
         *                   8081
         *                 ],
         *                 "primary": false
         *               },
         *               "cluster": {
         *                 "host": "https://my-endpoint.com",
         *                 "networkingType": "PUBLIC",
         *                 "ports": [
         *                   8080,
         *                   8081
         *                 ],
         *                 "primary": true
         *               }
         *             },
         *             "layeredChartValues": [
         *               {
         *                 "values": {
         *                   "global": {
         *                     "image": {
         *                       "tag": "v1.0.0"
         *                     },
         *                     "replicaCount": 1,
         *                     "resources": {
         *                       "requests": {
         *                         "cpu": "100m",
         *                         "memory": "128Mi"
         *                       }
         *                     }
         *                   }
         *                 }
         *               },
         *               {
         *                 "scope": {
         *                   "{{ $sys.cloudProviderName }}": "aws"
         *                 },
         *                 "valuesFile": {
         *                   "gitConfiguration": {
         *                     "accessToken": "ghp_...",
         *                     "commitSHA": "a1b2c3d4e5f6",
         *                     "path": "aws/production.yaml",
         *                     "referenceName": "refs/heads/main",
         *                     "repositoryUrl": "https://github.com/org/helm-values"
         *                   }
         *                 }
         *               }
         *             ],
         *             "namespace": "postgres",
         *             "password": "my-password",
         *             "runtimeConfiguration": {
         *               "disableHooks": true,
         *               "recreate": true,
         *               "resetThenReuseValues": true,
         *               "resetValues": true,
         *               "reuseValues": true,
         *               "skipCRDs": true,
         *               "timeoutNanos": 1000000000,
         *               "upgradeCRDs": true,
         *               "wait": true,
         *               "waitForJobs": true
         *             },
         *             "username": "my-user"
         *           },
         *           "id": "r-12345678",
         *           "imageConfigId": "imgc-12345678",
         *           "infraConfigId": "ic-12345678",
         *           "internal": true,
         *           "isDeprecated": false,
         *           "jobConfig": {
         *             "activeDeadlineSeconds": 300,
         *             "backoffLimit": 5
         *           },
         *           "key": "galera",
         *           "kustomizeConfiguration": {
         *             "endpointConfiguration": {
         *               "admin": {
         *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *                 "networkingType": "PRIVATE",
         *                 "ports": [
         *                   8080,
         *                   8081
         *                 ],
         *                 "primary": false
         *               },
         *               "cluster": {
         *                 "host": "https://my-endpoint.com",
         *                 "networkingType": "PUBLIC",
         *                 "ports": [
         *                   8080,
         *                   8081
         *                 ],
         *                 "primary": true
         *               }
         *             },
         *             "gitConfiguration": {
         *               "accessToken": "my-token",
         *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *               "referenceName": "tags/v1.0.0",
         *               "repositoryUrl": "https://github.com/username/myrepo",
         *               "userName": "my-user"
         *             },
         *             "helmChartDependencies": [
         *               {
         *                 "chartName": "cert-manager",
         *                 "chartVersion": "v1.5.3"
         *               },
         *               {
         *                 "chartName": "nginx-ingress",
         *                 "chartVersion": "v0.48.1"
         *               },
         *               {
         *                 "chartName": "external-dns",
         *                 "chartVersion": "v0.7.0"
         *               },
         *               {
         *                 "chartName": "cnpg-operator",
         *                 "chartVersion": "v0.23.1"
         *               }
         *             ],
         *             "kustomizePath": "/kustomize"
         *           },
         *           "l4LoadBalancerConfiguration": {
         *             "ingressPortConfiguration": [
         *               {
         *                 "associatedResourceIDs": [
         *                   "r-12345678",
         *                   "r-abcdef12"
         *                 ],
         *                 "backendPort": 8080,
         *                 "ingressPort": 1234
         *               },
         *               {
         *                 "associatedResourceIDs": [
         *                   "r-12345678",
         *                   "r-abcdef12"
         *                 ],
         *                 "backendPort": 8081,
         *                 "ingressPort": 5678
         *               },
         *               {
         *                 "associatedResourceIDs": [
         *                   "r-vwxybz12",
         *                   "r-poij122v"
         *                 ],
         *                 "backendPort": 8082,
         *                 "ingressPort": 9012
         *               }
         *             ]
         *           },
         *           "l7LoadBalancerConfiguration": {
         *             "paths": [
         *               {
         *                 "associatedResourceID": "r-12345678",
         *                 "path": "/path",
         *                 "port": 8080
         *               }
         *             ]
         *           },
         *           "name": "Galera",
         *           "onPremTerraformConfigurations": {
         *             "OpenShift": {
         *               "gitConfiguration": {
         *                 "referenceName": "ref",
         *                 "repositoryUrl": "gitUrl"
         *               },
         *               "privateModuleGitAccessTokens": {
         *                 "tokenName": "accessToken"
         *               },
         *               "terraformPath": "/project1/tf"
         *             }
         *           },
         *           "operatorCRDConfiguration": {
         *             "endpointConfiguration": {
         *               "admin": {
         *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *                 "networkingType": "PRIVATE",
         *                 "ports": [
         *                   8080,
         *                   8081
         *                 ],
         *                 "primary": false
         *               },
         *               "cluster": {
         *                 "host": "https://my-endpoint.com",
         *                 "networkingType": "PUBLIC",
         *                 "ports": [
         *                   8080,
         *                   8081
         *                 ],
         *                 "primary": true
         *               }
         *             },
         *             "helmChartDependencies": [
         *               {
         *                 "chartName": "cert-manager",
         *                 "chartVersion": "v1.5.3"
         *               },
         *               {
         *                 "chartName": "nginx-ingress",
         *                 "chartVersion": "v0.48.1"
         *               },
         *               {
         *                 "chartName": "external-dns",
         *                 "chartVersion": "v0.7.0"
         *               },
         *               {
         *                 "chartName": "cnpg-operator",
         *                 "chartVersion": "v0.23.1"
         *               }
         *             ],
         *             "outputParameters": {
         *               "expiresAt": "$out.status.notAfter",
         *               "issuerName": "letsencrypt-prod"
         *             },
         *             "readinessConditions": {
         *               "$out.status.conditions[?(@.type=='Ready')].status": true
         *             },
         *             "supplementalFiles": [
         *               "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
         *               "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
         *             ],
         *             "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
         *           },
         *           "productTierId": "pt-12345678",
         *           "proxyType": "PortsBasedProxy",
         *           "resourceType": "Generic",
         *           "serviceId": "s-12345678",
         *           "terraformConfigurations": {
         *             "aws": {
         *               "gitConfiguration": {
         *                 "referenceName": "ref",
         *                 "repositoryUrl": "gitUrl"
         *               },
         *               "privateModuleGitAccessTokens": {
         *                 "tokenName": "accessToken"
         *               },
         *               "terraformPath": "/project1/tf"
         *             }
         *           }
         *         },
         *         {
         *           "actionHooks": [
         *             {
         *               "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
         *               "scope": "CLUSTER",
         *               "type": "INIT"
         *             }
         *           ],
         *           "additionalSecurityContext": {
         *             "AddCapabilities": [
         *               "CAP_NET_ADMIN",
         *               "CAP_NET_RAW"
         *             ],
         *             "DropCapabilities": [
         *               "CAP_NET_ADMIN",
         *               "CAP_NET_RAW"
         *             ],
         *             "SupplementalGroupIDs": [
         *               1001,
         *               999
         *             ]
         *           },
         *           "backupConfiguration": {
         *             "backupPeriodInHours": 24,
         *             "backupRetentionInDays": 7
         *           },
         *           "blobStorageConfiguration": {
         *             "GCSConfiguration": {},
         *             "S3Configuration": {}
         *           },
         *           "capabilities": [
         *             {
         *               "capability": "SERVERLESS",
         *               "configuration": {
         *                 "EnableAutoStop": true,
         *                 "MinimumNodesInPool": 5,
         *                 "PortsMappingProxyConfig": {
         *                   "MaxNumberOfClustersPerProxyInstance": 50,
         *                   "NumberOfPortsPerCluster": 4
         *                 },
         *                 "ProxyId": "r-123456",
         *                 "ReferenceProxyKey": "resource-proxy",
         *                 "TargetPort": 5432
         *               }
         *             },
         *             {
         *               "capability": "SERVERLESS",
         *               "configuration": {
         *                 "EnableAutoStop": true,
         *                 "MinimumNodesInPool": 5,
         *                 "PortsMappingProxyConfig": {
         *                   "MaxNumberOfClustersPerProxyInstance": 50,
         *                   "NumberOfPortsPerCluster": 4
         *                 },
         *                 "ProxyId": "r-123456",
         *                 "ReferenceProxyKey": "resource-proxy",
         *                 "TargetPort": 5432
         *               }
         *             },
         *             {
         *               "capability": "SERVERLESS",
         *               "configuration": {
         *                 "EnableAutoStop": true,
         *                 "MinimumNodesInPool": 5,
         *                 "PortsMappingProxyConfig": {
         *                   "MaxNumberOfClustersPerProxyInstance": 50,
         *                   "NumberOfPortsPerCluster": 4
         *                 },
         *                 "ProxyId": "r-123456",
         *                 "ReferenceProxyKey": "resource-proxy",
         *                 "TargetPort": 5432
         *               }
         *             }
         *           ],
         *           "customLabels": {
         *             "key": "value"
         *           },
         *           "customSysCTLs": {
         *             "net.ipv4.tcp_syncookies": "1"
         *           },
         *           "customULimits": [
         *             {
         *               "ULimitsName": "NoProc",
         *               "ULimitsType": "Soft",
         *               "ULimitsValue": 1000
         *             },
         *             {
         *               "ULimitsName": "NoFile",
         *               "ULimitsType": "Hard",
         *               "ULimitsValue": 2048
         *             }
         *           ],
         *           "dependencies": [
         *             {
         *               "parameterMap": {
         *                 "clusterId": "writerId",
         *                 "clusterOrg": "userDatabase"
         *               },
         *               "resourceId": "r-12345678"
         *             },
         *             {
         *               "parameterMap": {
         *                 "clusterId": "readerId",
         *                 "clusterOrg": "userDatabase"
         *               },
         *               "resourceId": "r-abcdef12"
         *             }
         *           ],
         *           "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
         *           "environmentVariables": [
         *             {
         *               "name": "MYSQL_ROOT_PASSWORD",
         *               "value": "password"
         *             }
         *           ],
         *           "fileSystemConfiguration": {
         *             "EFSFileSystemConfiguration": {
         *               "PerformanceMode": "generalPurpose|maxIO",
         *               "ProvisionedThroughputInMibps": 125,
         *               "ThroughputMode": "provisioned|bursting|elastic"
         *             }
         *           },
         *           "helmChartConfiguration": {
         *             "chartName": "my-chart",
         *             "chartRepoName": "my-repo",
         *             "chartRepoUrl": "https://my-repo.com",
         *             "chartValues": {
         *               "key1": "value1",
         *               "key2": 3,
         *               "key3": {
         *                 "key4": "value4"
         *               }
         *             },
         *             "chartVersion": "1.0.0",
         *             "endpointConfiguration": {
         *               "admin": {
         *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *                 "networkingType": "PRIVATE",
         *                 "ports": [
         *                   8080,
         *                   8081
         *                 ],
         *                 "primary": false
         *               },
         *               "cluster": {
         *                 "host": "https://my-endpoint.com",
         *                 "networkingType": "PUBLIC",
         *                 "ports": [
         *                   8080,
         *                   8081
         *                 ],
         *                 "primary": true
         *               }
         *             },
         *             "layeredChartValues": [
         *               {
         *                 "values": {
         *                   "global": {
         *                     "image": {
         *                       "tag": "v1.0.0"
         *                     },
         *                     "replicaCount": 1,
         *                     "resources": {
         *                       "requests": {
         *                         "cpu": "100m",
         *                         "memory": "128Mi"
         *                       }
         *                     }
         *                   }
         *                 }
         *               },
         *               {
         *                 "scope": {
         *                   "{{ $sys.cloudProviderName }}": "aws"
         *                 },
         *                 "valuesFile": {
         *                   "gitConfiguration": {
         *                     "accessToken": "ghp_...",
         *                     "commitSHA": "a1b2c3d4e5f6",
         *                     "path": "aws/production.yaml",
         *                     "referenceName": "refs/heads/main",
         *                     "repositoryUrl": "https://github.com/org/helm-values"
         *                   }
         *                 }
         *               }
         *             ],
         *             "namespace": "postgres",
         *             "password": "my-password",
         *             "runtimeConfiguration": {
         *               "disableHooks": true,
         *               "recreate": true,
         *               "resetThenReuseValues": true,
         *               "resetValues": true,
         *               "reuseValues": true,
         *               "skipCRDs": true,
         *               "timeoutNanos": 1000000000,
         *               "upgradeCRDs": true,
         *               "wait": true,
         *               "waitForJobs": true
         *             },
         *             "username": "my-user"
         *           },
         *           "id": "r-12345678",
         *           "imageConfigId": "imgc-12345678",
         *           "infraConfigId": "ic-12345678",
         *           "internal": true,
         *           "isDeprecated": false,
         *           "jobConfig": {
         *             "activeDeadlineSeconds": 300,
         *             "backoffLimit": 5
         *           },
         *           "key": "galera",
         *           "kustomizeConfiguration": {
         *             "endpointConfiguration": {
         *               "admin": {
         *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *                 "networkingType": "PRIVATE",
         *                 "ports": [
         *                   8080,
         *                   8081
         *                 ],
         *                 "primary": false
         *               },
         *               "cluster": {
         *                 "host": "https://my-endpoint.com",
         *                 "networkingType": "PUBLIC",
         *                 "ports": [
         *                   8080,
         *                   8081
         *                 ],
         *                 "primary": true
         *               }
         *             },
         *             "gitConfiguration": {
         *               "accessToken": "my-token",
         *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *               "referenceName": "tags/v1.0.0",
         *               "repositoryUrl": "https://github.com/username/myrepo",
         *               "userName": "my-user"
         *             },
         *             "helmChartDependencies": [
         *               {
         *                 "chartName": "cert-manager",
         *                 "chartVersion": "v1.5.3"
         *               },
         *               {
         *                 "chartName": "nginx-ingress",
         *                 "chartVersion": "v0.48.1"
         *               },
         *               {
         *                 "chartName": "external-dns",
         *                 "chartVersion": "v0.7.0"
         *               },
         *               {
         *                 "chartName": "cnpg-operator",
         *                 "chartVersion": "v0.23.1"
         *               }
         *             ],
         *             "kustomizePath": "/kustomize"
         *           },
         *           "l4LoadBalancerConfiguration": {
         *             "ingressPortConfiguration": [
         *               {
         *                 "associatedResourceIDs": [
         *                   "r-12345678",
         *                   "r-abcdef12"
         *                 ],
         *                 "backendPort": 8080,
         *                 "ingressPort": 1234
         *               },
         *               {
         *                 "associatedResourceIDs": [
         *                   "r-12345678",
         *                   "r-abcdef12"
         *                 ],
         *                 "backendPort": 8081,
         *                 "ingressPort": 5678
         *               },
         *               {
         *                 "associatedResourceIDs": [
         *                   "r-vwxybz12",
         *                   "r-poij122v"
         *                 ],
         *                 "backendPort": 8082,
         *                 "ingressPort": 9012
         *               }
         *             ]
         *           },
         *           "l7LoadBalancerConfiguration": {
         *             "paths": [
         *               {
         *                 "associatedResourceID": "r-12345678",
         *                 "path": "/path",
         *                 "port": 8080
         *               }
         *             ]
         *           },
         *           "name": "Galera",
         *           "onPremTerraformConfigurations": {
         *             "OpenShift": {
         *               "gitConfiguration": {
         *                 "referenceName": "ref",
         *                 "repositoryUrl": "gitUrl"
         *               },
         *               "privateModuleGitAccessTokens": {
         *                 "tokenName": "accessToken"
         *               },
         *               "terraformPath": "/project1/tf"
         *             }
         *           },
         *           "operatorCRDConfiguration": {
         *             "endpointConfiguration": {
         *               "admin": {
         *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *                 "networkingType": "PRIVATE",
         *                 "ports": [
         *                   8080,
         *                   8081
         *                 ],
         *                 "primary": false
         *               },
         *               "cluster": {
         *                 "host": "https://my-endpoint.com",
         *                 "networkingType": "PUBLIC",
         *                 "ports": [
         *                   8080,
         *                   8081
         *                 ],
         *                 "primary": true
         *               }
         *             },
         *             "helmChartDependencies": [
         *               {
         *                 "chartName": "cert-manager",
         *                 "chartVersion": "v1.5.3"
         *               },
         *               {
         *                 "chartName": "nginx-ingress",
         *                 "chartVersion": "v0.48.1"
         *               },
         *               {
         *                 "chartName": "external-dns",
         *                 "chartVersion": "v0.7.0"
         *               },
         *               {
         *                 "chartName": "cnpg-operator",
         *                 "chartVersion": "v0.23.1"
         *               }
         *             ],
         *             "outputParameters": {
         *               "expiresAt": "$out.status.notAfter",
         *               "issuerName": "letsencrypt-prod"
         *             },
         *             "readinessConditions": {
         *               "$out.status.conditions[?(@.type=='Ready')].status": true
         *             },
         *             "supplementalFiles": [
         *               "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
         *               "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
         *             ],
         *             "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
         *           },
         *           "productTierId": "pt-12345678",
         *           "proxyType": "PortsBasedProxy",
         *           "resourceType": "Generic",
         *           "serviceId": "s-12345678",
         *           "terraformConfigurations": {
         *             "aws": {
         *               "gitConfiguration": {
         *                 "referenceName": "ref",
         *                 "repositoryUrl": "gitUrl"
         *               },
         *               "privateModuleGitAccessTokens": {
         *                 "tokenName": "accessToken"
         *               },
         *               "terraformPath": "/project1/tf"
         *             }
         *           }
         *         }
         *       ]
         *     } */
        ListResourcesResult: {
            /**
             * @description List of resource IDs
             * @example [
             *       "r-12345678",
             *       "r-abcdefgh",
             *       "r-1234abcd"
             *     ]
             */
            ids: string[];
            /**
             * @description Token to use for the next page
             * @example next-token
             */
            nextPageToken?: string;
            /**
             * @description List of resources
             * @example [
             *       {
             *         "actionHooks": [
             *           {
             *             "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
             *             "scope": "CLUSTER",
             *             "type": "INIT"
             *           }
             *         ],
             *         "additionalSecurityContext": {
             *           "AddCapabilities": [
             *             "CAP_NET_ADMIN",
             *             "CAP_NET_RAW"
             *           ],
             *           "DropCapabilities": [
             *             "CAP_NET_ADMIN",
             *             "CAP_NET_RAW"
             *           ],
             *           "SupplementalGroupIDs": [
             *             1001,
             *             999
             *           ]
             *         },
             *         "backupConfiguration": {
             *           "backupPeriodInHours": 24,
             *           "backupRetentionInDays": 7
             *         },
             *         "blobStorageConfiguration": {
             *           "GCSConfiguration": {},
             *           "S3Configuration": {}
             *         },
             *         "capabilities": [
             *           {
             *             "capability": "SERVERLESS",
             *             "configuration": {
             *               "EnableAutoStop": true,
             *               "MinimumNodesInPool": 5,
             *               "PortsMappingProxyConfig": {
             *                 "MaxNumberOfClustersPerProxyInstance": 50,
             *                 "NumberOfPortsPerCluster": 4
             *               },
             *               "ProxyId": "r-123456",
             *               "ReferenceProxyKey": "resource-proxy",
             *               "TargetPort": 5432
             *             }
             *           },
             *           {
             *             "capability": "SERVERLESS",
             *             "configuration": {
             *               "EnableAutoStop": true,
             *               "MinimumNodesInPool": 5,
             *               "PortsMappingProxyConfig": {
             *                 "MaxNumberOfClustersPerProxyInstance": 50,
             *                 "NumberOfPortsPerCluster": 4
             *               },
             *               "ProxyId": "r-123456",
             *               "ReferenceProxyKey": "resource-proxy",
             *               "TargetPort": 5432
             *             }
             *           },
             *           {
             *             "capability": "SERVERLESS",
             *             "configuration": {
             *               "EnableAutoStop": true,
             *               "MinimumNodesInPool": 5,
             *               "PortsMappingProxyConfig": {
             *                 "MaxNumberOfClustersPerProxyInstance": 50,
             *                 "NumberOfPortsPerCluster": 4
             *               },
             *               "ProxyId": "r-123456",
             *               "ReferenceProxyKey": "resource-proxy",
             *               "TargetPort": 5432
             *             }
             *           }
             *         ],
             *         "customLabels": {
             *           "key": "value"
             *         },
             *         "customSysCTLs": {
             *           "net.ipv4.tcp_syncookies": "1"
             *         },
             *         "customULimits": [
             *           {
             *             "ULimitsName": "NoProc",
             *             "ULimitsType": "Soft",
             *             "ULimitsValue": 1000
             *           },
             *           {
             *             "ULimitsName": "NoFile",
             *             "ULimitsType": "Hard",
             *             "ULimitsValue": 2048
             *           }
             *         ],
             *         "dependencies": [
             *           {
             *             "parameterMap": {
             *               "clusterId": "writerId",
             *               "clusterOrg": "userDatabase"
             *             },
             *             "resourceId": "r-12345678"
             *           },
             *           {
             *             "parameterMap": {
             *               "clusterId": "readerId",
             *               "clusterOrg": "userDatabase"
             *             },
             *             "resourceId": "r-abcdef12"
             *           }
             *         ],
             *         "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
             *         "environmentVariables": [
             *           {
             *             "name": "MYSQL_ROOT_PASSWORD",
             *             "value": "password"
             *           }
             *         ],
             *         "fileSystemConfiguration": {
             *           "EFSFileSystemConfiguration": {
             *             "PerformanceMode": "generalPurpose|maxIO",
             *             "ProvisionedThroughputInMibps": 125,
             *             "ThroughputMode": "provisioned|bursting|elastic"
             *           }
             *         },
             *         "helmChartConfiguration": {
             *           "chartName": "my-chart",
             *           "chartRepoName": "my-repo",
             *           "chartRepoUrl": "https://my-repo.com",
             *           "chartValues": {
             *             "key1": "value1",
             *             "key2": 3,
             *             "key3": {
             *               "key4": "value4"
             *             }
             *           },
             *           "chartVersion": "1.0.0",
             *           "endpointConfiguration": {
             *             "admin": {
             *               "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
             *               "networkingType": "PRIVATE",
             *               "ports": [
             *                 8080,
             *                 8081
             *               ],
             *               "primary": false
             *             },
             *             "cluster": {
             *               "host": "https://my-endpoint.com",
             *               "networkingType": "PUBLIC",
             *               "ports": [
             *                 8080,
             *                 8081
             *               ],
             *               "primary": true
             *             }
             *           },
             *           "layeredChartValues": [
             *             {
             *               "values": {
             *                 "global": {
             *                   "image": {
             *                     "tag": "v1.0.0"
             *                   },
             *                   "replicaCount": 1,
             *                   "resources": {
             *                     "requests": {
             *                       "cpu": "100m",
             *                       "memory": "128Mi"
             *                     }
             *                   }
             *                 }
             *               }
             *             },
             *             {
             *               "scope": {
             *                 "{{ $sys.cloudProviderName }}": "aws"
             *               },
             *               "valuesFile": {
             *                 "gitConfiguration": {
             *                   "accessToken": "ghp_...",
             *                   "commitSHA": "a1b2c3d4e5f6",
             *                   "path": "aws/production.yaml",
             *                   "referenceName": "refs/heads/main",
             *                   "repositoryUrl": "https://github.com/org/helm-values"
             *                 }
             *               }
             *             }
             *           ],
             *           "namespace": "postgres",
             *           "password": "my-password",
             *           "runtimeConfiguration": {
             *             "disableHooks": true,
             *             "recreate": true,
             *             "resetThenReuseValues": true,
             *             "resetValues": true,
             *             "reuseValues": true,
             *             "skipCRDs": true,
             *             "timeoutNanos": 1000000000,
             *             "upgradeCRDs": true,
             *             "wait": true,
             *             "waitForJobs": true
             *           },
             *           "username": "my-user"
             *         },
             *         "id": "r-12345678",
             *         "imageConfigId": "imgc-12345678",
             *         "infraConfigId": "ic-12345678",
             *         "internal": true,
             *         "isDeprecated": false,
             *         "jobConfig": {
             *           "activeDeadlineSeconds": 300,
             *           "backoffLimit": 5
             *         },
             *         "key": "galera",
             *         "kustomizeConfiguration": {
             *           "endpointConfiguration": {
             *             "admin": {
             *               "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
             *               "networkingType": "PRIVATE",
             *               "ports": [
             *                 8080,
             *                 8081
             *               ],
             *               "primary": false
             *             },
             *             "cluster": {
             *               "host": "https://my-endpoint.com",
             *               "networkingType": "PUBLIC",
             *               "ports": [
             *                 8080,
             *                 8081
             *               ],
             *               "primary": true
             *             }
             *           },
             *           "gitConfiguration": {
             *             "accessToken": "my-token",
             *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *             "referenceName": "tags/v1.0.0",
             *             "repositoryUrl": "https://github.com/username/myrepo",
             *             "userName": "my-user"
             *           },
             *           "helmChartDependencies": [
             *             {
             *               "chartName": "cert-manager",
             *               "chartVersion": "v1.5.3"
             *             },
             *             {
             *               "chartName": "nginx-ingress",
             *               "chartVersion": "v0.48.1"
             *             },
             *             {
             *               "chartName": "external-dns",
             *               "chartVersion": "v0.7.0"
             *             },
             *             {
             *               "chartName": "cnpg-operator",
             *               "chartVersion": "v0.23.1"
             *             }
             *           ],
             *           "kustomizePath": "/kustomize"
             *         },
             *         "l4LoadBalancerConfiguration": {
             *           "ingressPortConfiguration": [
             *             {
             *               "associatedResourceIDs": [
             *                 "r-12345678",
             *                 "r-abcdef12"
             *               ],
             *               "backendPort": 8080,
             *               "ingressPort": 1234
             *             },
             *             {
             *               "associatedResourceIDs": [
             *                 "r-12345678",
             *                 "r-abcdef12"
             *               ],
             *               "backendPort": 8081,
             *               "ingressPort": 5678
             *             },
             *             {
             *               "associatedResourceIDs": [
             *                 "r-vwxybz12",
             *                 "r-poij122v"
             *               ],
             *               "backendPort": 8082,
             *               "ingressPort": 9012
             *             }
             *           ]
             *         },
             *         "l7LoadBalancerConfiguration": {
             *           "paths": [
             *             {
             *               "associatedResourceID": "r-12345678",
             *               "path": "/path",
             *               "port": 8080
             *             }
             *           ]
             *         },
             *         "name": "Galera",
             *         "onPremTerraformConfigurations": {
             *           "OpenShift": {
             *             "gitConfiguration": {
             *               "referenceName": "ref",
             *               "repositoryUrl": "gitUrl"
             *             },
             *             "privateModuleGitAccessTokens": {
             *               "tokenName": "accessToken"
             *             },
             *             "terraformPath": "/project1/tf"
             *           }
             *         },
             *         "operatorCRDConfiguration": {
             *           "endpointConfiguration": {
             *             "admin": {
             *               "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
             *               "networkingType": "PRIVATE",
             *               "ports": [
             *                 8080,
             *                 8081
             *               ],
             *               "primary": false
             *             },
             *             "cluster": {
             *               "host": "https://my-endpoint.com",
             *               "networkingType": "PUBLIC",
             *               "ports": [
             *                 8080,
             *                 8081
             *               ],
             *               "primary": true
             *             }
             *           },
             *           "helmChartDependencies": [
             *             {
             *               "chartName": "cert-manager",
             *               "chartVersion": "v1.5.3"
             *             },
             *             {
             *               "chartName": "nginx-ingress",
             *               "chartVersion": "v0.48.1"
             *             },
             *             {
             *               "chartName": "external-dns",
             *               "chartVersion": "v0.7.0"
             *             },
             *             {
             *               "chartName": "cnpg-operator",
             *               "chartVersion": "v0.23.1"
             *             }
             *           ],
             *           "outputParameters": {
             *             "expiresAt": "$out.status.notAfter",
             *             "issuerName": "letsencrypt-prod"
             *           },
             *           "readinessConditions": {
             *             "$out.status.conditions[?(@.type=='Ready')].status": true
             *           },
             *           "supplementalFiles": [
             *             "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
             *             "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
             *           ],
             *           "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
             *         },
             *         "productTierId": "pt-12345678",
             *         "proxyType": "PortsBasedProxy",
             *         "resourceType": "Generic",
             *         "serviceId": "s-12345678",
             *         "terraformConfigurations": {
             *           "aws": {
             *             "gitConfiguration": {
             *               "referenceName": "ref",
             *               "repositoryUrl": "gitUrl"
             *             },
             *             "privateModuleGitAccessTokens": {
             *               "tokenName": "accessToken"
             *             },
             *             "terraformPath": "/project1/tf"
             *           }
             *         }
             *       },
             *       {
             *         "actionHooks": [
             *           {
             *             "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
             *             "scope": "CLUSTER",
             *             "type": "INIT"
             *           }
             *         ],
             *         "additionalSecurityContext": {
             *           "AddCapabilities": [
             *             "CAP_NET_ADMIN",
             *             "CAP_NET_RAW"
             *           ],
             *           "DropCapabilities": [
             *             "CAP_NET_ADMIN",
             *             "CAP_NET_RAW"
             *           ],
             *           "SupplementalGroupIDs": [
             *             1001,
             *             999
             *           ]
             *         },
             *         "backupConfiguration": {
             *           "backupPeriodInHours": 24,
             *           "backupRetentionInDays": 7
             *         },
             *         "blobStorageConfiguration": {
             *           "GCSConfiguration": {},
             *           "S3Configuration": {}
             *         },
             *         "capabilities": [
             *           {
             *             "capability": "SERVERLESS",
             *             "configuration": {
             *               "EnableAutoStop": true,
             *               "MinimumNodesInPool": 5,
             *               "PortsMappingProxyConfig": {
             *                 "MaxNumberOfClustersPerProxyInstance": 50,
             *                 "NumberOfPortsPerCluster": 4
             *               },
             *               "ProxyId": "r-123456",
             *               "ReferenceProxyKey": "resource-proxy",
             *               "TargetPort": 5432
             *             }
             *           },
             *           {
             *             "capability": "SERVERLESS",
             *             "configuration": {
             *               "EnableAutoStop": true,
             *               "MinimumNodesInPool": 5,
             *               "PortsMappingProxyConfig": {
             *                 "MaxNumberOfClustersPerProxyInstance": 50,
             *                 "NumberOfPortsPerCluster": 4
             *               },
             *               "ProxyId": "r-123456",
             *               "ReferenceProxyKey": "resource-proxy",
             *               "TargetPort": 5432
             *             }
             *           },
             *           {
             *             "capability": "SERVERLESS",
             *             "configuration": {
             *               "EnableAutoStop": true,
             *               "MinimumNodesInPool": 5,
             *               "PortsMappingProxyConfig": {
             *                 "MaxNumberOfClustersPerProxyInstance": 50,
             *                 "NumberOfPortsPerCluster": 4
             *               },
             *               "ProxyId": "r-123456",
             *               "ReferenceProxyKey": "resource-proxy",
             *               "TargetPort": 5432
             *             }
             *           }
             *         ],
             *         "customLabels": {
             *           "key": "value"
             *         },
             *         "customSysCTLs": {
             *           "net.ipv4.tcp_syncookies": "1"
             *         },
             *         "customULimits": [
             *           {
             *             "ULimitsName": "NoProc",
             *             "ULimitsType": "Soft",
             *             "ULimitsValue": 1000
             *           },
             *           {
             *             "ULimitsName": "NoFile",
             *             "ULimitsType": "Hard",
             *             "ULimitsValue": 2048
             *           }
             *         ],
             *         "dependencies": [
             *           {
             *             "parameterMap": {
             *               "clusterId": "writerId",
             *               "clusterOrg": "userDatabase"
             *             },
             *             "resourceId": "r-12345678"
             *           },
             *           {
             *             "parameterMap": {
             *               "clusterId": "readerId",
             *               "clusterOrg": "userDatabase"
             *             },
             *             "resourceId": "r-abcdef12"
             *           }
             *         ],
             *         "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
             *         "environmentVariables": [
             *           {
             *             "name": "MYSQL_ROOT_PASSWORD",
             *             "value": "password"
             *           }
             *         ],
             *         "fileSystemConfiguration": {
             *           "EFSFileSystemConfiguration": {
             *             "PerformanceMode": "generalPurpose|maxIO",
             *             "ProvisionedThroughputInMibps": 125,
             *             "ThroughputMode": "provisioned|bursting|elastic"
             *           }
             *         },
             *         "helmChartConfiguration": {
             *           "chartName": "my-chart",
             *           "chartRepoName": "my-repo",
             *           "chartRepoUrl": "https://my-repo.com",
             *           "chartValues": {
             *             "key1": "value1",
             *             "key2": 3,
             *             "key3": {
             *               "key4": "value4"
             *             }
             *           },
             *           "chartVersion": "1.0.0",
             *           "endpointConfiguration": {
             *             "admin": {
             *               "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
             *               "networkingType": "PRIVATE",
             *               "ports": [
             *                 8080,
             *                 8081
             *               ],
             *               "primary": false
             *             },
             *             "cluster": {
             *               "host": "https://my-endpoint.com",
             *               "networkingType": "PUBLIC",
             *               "ports": [
             *                 8080,
             *                 8081
             *               ],
             *               "primary": true
             *             }
             *           },
             *           "layeredChartValues": [
             *             {
             *               "values": {
             *                 "global": {
             *                   "image": {
             *                     "tag": "v1.0.0"
             *                   },
             *                   "replicaCount": 1,
             *                   "resources": {
             *                     "requests": {
             *                       "cpu": "100m",
             *                       "memory": "128Mi"
             *                     }
             *                   }
             *                 }
             *               }
             *             },
             *             {
             *               "scope": {
             *                 "{{ $sys.cloudProviderName }}": "aws"
             *               },
             *               "valuesFile": {
             *                 "gitConfiguration": {
             *                   "accessToken": "ghp_...",
             *                   "commitSHA": "a1b2c3d4e5f6",
             *                   "path": "aws/production.yaml",
             *                   "referenceName": "refs/heads/main",
             *                   "repositoryUrl": "https://github.com/org/helm-values"
             *                 }
             *               }
             *             }
             *           ],
             *           "namespace": "postgres",
             *           "password": "my-password",
             *           "runtimeConfiguration": {
             *             "disableHooks": true,
             *             "recreate": true,
             *             "resetThenReuseValues": true,
             *             "resetValues": true,
             *             "reuseValues": true,
             *             "skipCRDs": true,
             *             "timeoutNanos": 1000000000,
             *             "upgradeCRDs": true,
             *             "wait": true,
             *             "waitForJobs": true
             *           },
             *           "username": "my-user"
             *         },
             *         "id": "r-12345678",
             *         "imageConfigId": "imgc-12345678",
             *         "infraConfigId": "ic-12345678",
             *         "internal": true,
             *         "isDeprecated": false,
             *         "jobConfig": {
             *           "activeDeadlineSeconds": 300,
             *           "backoffLimit": 5
             *         },
             *         "key": "galera",
             *         "kustomizeConfiguration": {
             *           "endpointConfiguration": {
             *             "admin": {
             *               "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
             *               "networkingType": "PRIVATE",
             *               "ports": [
             *                 8080,
             *                 8081
             *               ],
             *               "primary": false
             *             },
             *             "cluster": {
             *               "host": "https://my-endpoint.com",
             *               "networkingType": "PUBLIC",
             *               "ports": [
             *                 8080,
             *                 8081
             *               ],
             *               "primary": true
             *             }
             *           },
             *           "gitConfiguration": {
             *             "accessToken": "my-token",
             *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *             "referenceName": "tags/v1.0.0",
             *             "repositoryUrl": "https://github.com/username/myrepo",
             *             "userName": "my-user"
             *           },
             *           "helmChartDependencies": [
             *             {
             *               "chartName": "cert-manager",
             *               "chartVersion": "v1.5.3"
             *             },
             *             {
             *               "chartName": "nginx-ingress",
             *               "chartVersion": "v0.48.1"
             *             },
             *             {
             *               "chartName": "external-dns",
             *               "chartVersion": "v0.7.0"
             *             },
             *             {
             *               "chartName": "cnpg-operator",
             *               "chartVersion": "v0.23.1"
             *             }
             *           ],
             *           "kustomizePath": "/kustomize"
             *         },
             *         "l4LoadBalancerConfiguration": {
             *           "ingressPortConfiguration": [
             *             {
             *               "associatedResourceIDs": [
             *                 "r-12345678",
             *                 "r-abcdef12"
             *               ],
             *               "backendPort": 8080,
             *               "ingressPort": 1234
             *             },
             *             {
             *               "associatedResourceIDs": [
             *                 "r-12345678",
             *                 "r-abcdef12"
             *               ],
             *               "backendPort": 8081,
             *               "ingressPort": 5678
             *             },
             *             {
             *               "associatedResourceIDs": [
             *                 "r-vwxybz12",
             *                 "r-poij122v"
             *               ],
             *               "backendPort": 8082,
             *               "ingressPort": 9012
             *             }
             *           ]
             *         },
             *         "l7LoadBalancerConfiguration": {
             *           "paths": [
             *             {
             *               "associatedResourceID": "r-12345678",
             *               "path": "/path",
             *               "port": 8080
             *             }
             *           ]
             *         },
             *         "name": "Galera",
             *         "onPremTerraformConfigurations": {
             *           "OpenShift": {
             *             "gitConfiguration": {
             *               "referenceName": "ref",
             *               "repositoryUrl": "gitUrl"
             *             },
             *             "privateModuleGitAccessTokens": {
             *               "tokenName": "accessToken"
             *             },
             *             "terraformPath": "/project1/tf"
             *           }
             *         },
             *         "operatorCRDConfiguration": {
             *           "endpointConfiguration": {
             *             "admin": {
             *               "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
             *               "networkingType": "PRIVATE",
             *               "ports": [
             *                 8080,
             *                 8081
             *               ],
             *               "primary": false
             *             },
             *             "cluster": {
             *               "host": "https://my-endpoint.com",
             *               "networkingType": "PUBLIC",
             *               "ports": [
             *                 8080,
             *                 8081
             *               ],
             *               "primary": true
             *             }
             *           },
             *           "helmChartDependencies": [
             *             {
             *               "chartName": "cert-manager",
             *               "chartVersion": "v1.5.3"
             *             },
             *             {
             *               "chartName": "nginx-ingress",
             *               "chartVersion": "v0.48.1"
             *             },
             *             {
             *               "chartName": "external-dns",
             *               "chartVersion": "v0.7.0"
             *             },
             *             {
             *               "chartName": "cnpg-operator",
             *               "chartVersion": "v0.23.1"
             *             }
             *           ],
             *           "outputParameters": {
             *             "expiresAt": "$out.status.notAfter",
             *             "issuerName": "letsencrypt-prod"
             *           },
             *           "readinessConditions": {
             *             "$out.status.conditions[?(@.type=='Ready')].status": true
             *           },
             *           "supplementalFiles": [
             *             "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
             *             "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
             *           ],
             *           "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
             *         },
             *         "productTierId": "pt-12345678",
             *         "proxyType": "PortsBasedProxy",
             *         "resourceType": "Generic",
             *         "serviceId": "s-12345678",
             *         "terraformConfigurations": {
             *           "aws": {
             *             "gitConfiguration": {
             *               "referenceName": "ref",
             *               "repositoryUrl": "gitUrl"
             *             },
             *             "privateModuleGitAccessTokens": {
             *               "tokenName": "accessToken"
             *             },
             *             "terraformPath": "/project1/tf"
             *           }
             *         }
             *       }
             *     ]
             */
            resources?: components["schemas"]["DescribeResourceResult"][];
        };
        /** @example {
         *       "token": "d48"
         *     } */
        ListSaaSPortalCustomDomainsRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example 1
             */
            token: string;
        };
        /** @example {
         *       "customDomains": [
         *         {
         *           "clusterEndpoint": "example.com",
         *           "customDomain": "mycustomdomain.com",
         *           "description": "My custom domain description",
         *           "environmentType": "DEV",
         *           "name": "MyCustomDomain",
         *           "status": "READY"
         *         },
         *         {
         *           "clusterEndpoint": "example.com",
         *           "customDomain": "mycustomdomain.com",
         *           "description": "My custom domain description",
         *           "environmentType": "DEV",
         *           "name": "MyCustomDomain",
         *           "status": "READY"
         *         },
         *         {
         *           "clusterEndpoint": "example.com",
         *           "customDomain": "mycustomdomain.com",
         *           "description": "My custom domain description",
         *           "environmentType": "DEV",
         *           "name": "MyCustomDomain",
         *           "status": "READY"
         *         },
         *         {
         *           "clusterEndpoint": "example.com",
         *           "customDomain": "mycustomdomain.com",
         *           "description": "My custom domain description",
         *           "environmentType": "DEV",
         *           "name": "MyCustomDomain",
         *           "status": "READY"
         *         }
         *       ]
         *     } */
        ListSaaSPortalCustomDomainsResult: {
            /**
             * @description The list of custom domains
             * @example [
             *       {
             *         "clusterEndpoint": "example.com",
             *         "customDomain": "mycustomdomain.com",
             *         "description": "My custom domain description",
             *         "environmentType": "DEV",
             *         "name": "MyCustomDomain",
             *         "status": "READY"
             *       },
             *       {
             *         "clusterEndpoint": "example.com",
             *         "customDomain": "mycustomdomain.com",
             *         "description": "My custom domain description",
             *         "environmentType": "DEV",
             *         "name": "MyCustomDomain",
             *         "status": "READY"
             *       }
             *     ]
             */
            customDomains: components["schemas"]["CustomDomain"][];
        };
        /** @example {
         *       "token": "it"
         *     } */
        ListSaaSPortalsRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example d92
             */
            token: string;
        };
        /** @example {
         *       "saasPortals": [
         *         {
         *           "customDomain": "mycustomdomain.com",
         *           "customDomainStatus": "READY",
         *           "detailedNetworkTopology": {
         *             "r-abcd1234": {
         *               "allowedIPRanges": [
         *                 "0.0.0.0/0"
         *               ],
         *               "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *               "clusterPorts": [
         *                 3306
         *               ],
         *               "main": true,
         *               "networkingType": "PUBLIC",
         *               "nodes": [
         *                 {
         *                   "availabilityZone": "us-east-2a",
         *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *                   "healthStatus": "healthy",
         *                   "id": "primary-0",
         *                   "ports": [
         *                     3306
         *                   ],
         *                   "status": "RUNNING"
         *                 }
         *               ],
         *               "privateNetworkCIDR": "10.0.0.2/24",
         *               "privateNetworkID": "n-1234abcd",
         *               "publiclyAccessible": true,
         *               "resourceKey": "saasportal",
         *               "resourceName": "SaaS Portal"
         *             }
         *           },
         *           "disablePasswordLogin": false,
         *           "emailConfig": {
         *             "smtpFromEmail": "example@gmail.com",
         *             "smtpHost": "smtp.gmail.com",
         *             "smtpPassword": "password",
         *             "smtpPort": 587,
         *             "smtpUsername": "username"
         *           },
         *           "endpoint": "https://saas-portal.example.com",
         *           "environmentType": "DEV",
         *           "googleAnalyticsTagID": "G-123456789",
         *           "imageConfig": {
         *             "imageName": "myimage",
         *             "imageRegistry": "ghcr.io",
         *             "imageTag": "latest"
         *           },
         *           "status": "READY"
         *         },
         *         {
         *           "customDomain": "mycustomdomain.com",
         *           "customDomainStatus": "READY",
         *           "detailedNetworkTopology": {
         *             "r-abcd1234": {
         *               "allowedIPRanges": [
         *                 "0.0.0.0/0"
         *               ],
         *               "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *               "clusterPorts": [
         *                 3306
         *               ],
         *               "main": true,
         *               "networkingType": "PUBLIC",
         *               "nodes": [
         *                 {
         *                   "availabilityZone": "us-east-2a",
         *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *                   "healthStatus": "healthy",
         *                   "id": "primary-0",
         *                   "ports": [
         *                     3306
         *                   ],
         *                   "status": "RUNNING"
         *                 }
         *               ],
         *               "privateNetworkCIDR": "10.0.0.2/24",
         *               "privateNetworkID": "n-1234abcd",
         *               "publiclyAccessible": true,
         *               "resourceKey": "saasportal",
         *               "resourceName": "SaaS Portal"
         *             }
         *           },
         *           "disablePasswordLogin": false,
         *           "emailConfig": {
         *             "smtpFromEmail": "example@gmail.com",
         *             "smtpHost": "smtp.gmail.com",
         *             "smtpPassword": "password",
         *             "smtpPort": 587,
         *             "smtpUsername": "username"
         *           },
         *           "endpoint": "https://saas-portal.example.com",
         *           "environmentType": "DEV",
         *           "googleAnalyticsTagID": "G-123456789",
         *           "imageConfig": {
         *             "imageName": "myimage",
         *             "imageRegistry": "ghcr.io",
         *             "imageTag": "latest"
         *           },
         *           "status": "READY"
         *         },
         *         {
         *           "customDomain": "mycustomdomain.com",
         *           "customDomainStatus": "READY",
         *           "detailedNetworkTopology": {
         *             "r-abcd1234": {
         *               "allowedIPRanges": [
         *                 "0.0.0.0/0"
         *               ],
         *               "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *               "clusterPorts": [
         *                 3306
         *               ],
         *               "main": true,
         *               "networkingType": "PUBLIC",
         *               "nodes": [
         *                 {
         *                   "availabilityZone": "us-east-2a",
         *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *                   "healthStatus": "healthy",
         *                   "id": "primary-0",
         *                   "ports": [
         *                     3306
         *                   ],
         *                   "status": "RUNNING"
         *                 }
         *               ],
         *               "privateNetworkCIDR": "10.0.0.2/24",
         *               "privateNetworkID": "n-1234abcd",
         *               "publiclyAccessible": true,
         *               "resourceKey": "saasportal",
         *               "resourceName": "SaaS Portal"
         *             }
         *           },
         *           "disablePasswordLogin": false,
         *           "emailConfig": {
         *             "smtpFromEmail": "example@gmail.com",
         *             "smtpHost": "smtp.gmail.com",
         *             "smtpPassword": "password",
         *             "smtpPort": 587,
         *             "smtpUsername": "username"
         *           },
         *           "endpoint": "https://saas-portal.example.com",
         *           "environmentType": "DEV",
         *           "googleAnalyticsTagID": "G-123456789",
         *           "imageConfig": {
         *             "imageName": "myimage",
         *             "imageRegistry": "ghcr.io",
         *             "imageTag": "latest"
         *           },
         *           "status": "READY"
         *         }
         *       ]
         *     } */
        ListSaaSPortalsResult: {
            /**
             * @description The list of saas portals
             * @example [
             *       {
             *         "customDomain": "mycustomdomain.com",
             *         "customDomainStatus": "READY",
             *         "detailedNetworkTopology": {
             *           "r-abcd1234": {
             *             "allowedIPRanges": [
             *               "0.0.0.0/0"
             *             ],
             *             "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *             "clusterPorts": [
             *               3306
             *             ],
             *             "main": true,
             *             "networkingType": "PUBLIC",
             *             "nodes": [
             *               {
             *                 "availabilityZone": "us-east-2a",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "healthStatus": "healthy",
             *                 "id": "primary-0",
             *                 "ports": [
             *                   3306
             *                 ],
             *                 "status": "RUNNING"
             *               }
             *             ],
             *             "privateNetworkCIDR": "10.0.0.2/24",
             *             "privateNetworkID": "n-1234abcd",
             *             "publiclyAccessible": true,
             *             "resourceKey": "saasportal",
             *             "resourceName": "SaaS Portal"
             *           }
             *         },
             *         "disablePasswordLogin": false,
             *         "emailConfig": {
             *           "smtpFromEmail": "example@gmail.com",
             *           "smtpHost": "smtp.gmail.com",
             *           "smtpPassword": "password",
             *           "smtpPort": 587,
             *           "smtpUsername": "username"
             *         },
             *         "endpoint": "https://saas-portal.example.com",
             *         "environmentType": "DEV",
             *         "googleAnalyticsTagID": "G-123456789",
             *         "imageConfig": {
             *           "imageName": "myimage",
             *           "imageRegistry": "ghcr.io",
             *           "imageTag": "latest"
             *         },
             *         "status": "READY"
             *       },
             *       {
             *         "customDomain": "mycustomdomain.com",
             *         "customDomainStatus": "READY",
             *         "detailedNetworkTopology": {
             *           "r-abcd1234": {
             *             "allowedIPRanges": [
             *               "0.0.0.0/0"
             *             ],
             *             "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *             "clusterPorts": [
             *               3306
             *             ],
             *             "main": true,
             *             "networkingType": "PUBLIC",
             *             "nodes": [
             *               {
             *                 "availabilityZone": "us-east-2a",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "healthStatus": "healthy",
             *                 "id": "primary-0",
             *                 "ports": [
             *                   3306
             *                 ],
             *                 "status": "RUNNING"
             *               }
             *             ],
             *             "privateNetworkCIDR": "10.0.0.2/24",
             *             "privateNetworkID": "n-1234abcd",
             *             "publiclyAccessible": true,
             *             "resourceKey": "saasportal",
             *             "resourceName": "SaaS Portal"
             *           }
             *         },
             *         "disablePasswordLogin": false,
             *         "emailConfig": {
             *           "smtpFromEmail": "example@gmail.com",
             *           "smtpHost": "smtp.gmail.com",
             *           "smtpPassword": "password",
             *           "smtpPort": 587,
             *           "smtpUsername": "username"
             *         },
             *         "endpoint": "https://saas-portal.example.com",
             *         "environmentType": "DEV",
             *         "googleAnalyticsTagID": "G-123456789",
             *         "imageConfig": {
             *           "imageName": "myimage",
             *           "imageRegistry": "ghcr.io",
             *           "imageTag": "latest"
             *         },
             *         "status": "READY"
             *       },
             *       {
             *         "customDomain": "mycustomdomain.com",
             *         "customDomainStatus": "READY",
             *         "detailedNetworkTopology": {
             *           "r-abcd1234": {
             *             "allowedIPRanges": [
             *               "0.0.0.0/0"
             *             ],
             *             "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *             "clusterPorts": [
             *               3306
             *             ],
             *             "main": true,
             *             "networkingType": "PUBLIC",
             *             "nodes": [
             *               {
             *                 "availabilityZone": "us-east-2a",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "healthStatus": "healthy",
             *                 "id": "primary-0",
             *                 "ports": [
             *                   3306
             *                 ],
             *                 "status": "RUNNING"
             *               }
             *             ],
             *             "privateNetworkCIDR": "10.0.0.2/24",
             *             "privateNetworkID": "n-1234abcd",
             *             "publiclyAccessible": true,
             *             "resourceKey": "saasportal",
             *             "resourceName": "SaaS Portal"
             *           }
             *         },
             *         "disablePasswordLogin": false,
             *         "emailConfig": {
             *           "smtpFromEmail": "example@gmail.com",
             *           "smtpHost": "smtp.gmail.com",
             *           "smtpPassword": "password",
             *           "smtpPort": 587,
             *           "smtpUsername": "username"
             *         },
             *         "endpoint": "https://saas-portal.example.com",
             *         "environmentType": "DEV",
             *         "googleAnalyticsTagID": "G-123456789",
             *         "imageConfig": {
             *           "imageName": "myimage",
             *           "imageRegistry": "ghcr.io",
             *           "imageTag": "latest"
             *         },
             *         "status": "READY"
             *       },
             *       {
             *         "customDomain": "mycustomdomain.com",
             *         "customDomainStatus": "READY",
             *         "detailedNetworkTopology": {
             *           "r-abcd1234": {
             *             "allowedIPRanges": [
             *               "0.0.0.0/0"
             *             ],
             *             "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *             "clusterPorts": [
             *               3306
             *             ],
             *             "main": true,
             *             "networkingType": "PUBLIC",
             *             "nodes": [
             *               {
             *                 "availabilityZone": "us-east-2a",
             *                 "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *                 "healthStatus": "healthy",
             *                 "id": "primary-0",
             *                 "ports": [
             *                   3306
             *                 ],
             *                 "status": "RUNNING"
             *               }
             *             ],
             *             "privateNetworkCIDR": "10.0.0.2/24",
             *             "privateNetworkID": "n-1234abcd",
             *             "publiclyAccessible": true,
             *             "resourceKey": "saasportal",
             *             "resourceName": "SaaS Portal"
             *           }
             *         },
             *         "disablePasswordLogin": false,
             *         "emailConfig": {
             *           "smtpFromEmail": "example@gmail.com",
             *           "smtpHost": "smtp.gmail.com",
             *           "smtpPassword": "password",
             *           "smtpPort": 587,
             *           "smtpUsername": "username"
             *         },
             *         "endpoint": "https://saas-portal.example.com",
             *         "environmentType": "DEV",
             *         "googleAnalyticsTagID": "G-123456789",
             *         "imageConfig": {
             *           "imageName": "myimage",
             *           "imageRegistry": "ghcr.io",
             *           "imageTag": "latest"
             *         },
             *         "status": "READY"
             *       }
             *     ]
             */
            saasPortals: components["schemas"]["SaaSPortal"][];
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "token": "i4l"
         *     } */
        ListSecretsRequest: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType: string;
            /**
             * @description JWT token used to perform authorization
             * @example gc
             */
            token: string;
        };
        /** @example {
         *       "secrets": [
         *         {
         *           "environmentType": "DEV",
         *           "name": "my-secret",
         *           "value": "super-secret-value"
         *         },
         *         {
         *           "environmentType": "DEV",
         *           "name": "my-secret",
         *           "value": "super-secret-value"
         *         },
         *         {
         *           "environmentType": "DEV",
         *           "name": "my-secret",
         *           "value": "super-secret-value"
         *         },
         *         {
         *           "environmentType": "DEV",
         *           "name": "my-secret",
         *           "value": "super-secret-value"
         *         }
         *       ]
         *     } */
        ListSecretsResult: {
            /**
             * @description List of secrets in the service environment
             * @example [
             *       {
             *         "environmentType": "DEV",
             *         "name": "my-secret",
             *         "value": "super-secret-value"
             *       },
             *       {
             *         "environmentType": "DEV",
             *         "name": "my-secret",
             *         "value": "super-secret-value"
             *       }
             *     ]
             */
            secrets?: components["schemas"]["Secret"][];
        };
        /** @example {
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "d5y"
         *     } */
        ListServiceAPIsRequest: {
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example mt
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "sa-12345678"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListServiceAPIsResult: {
            /**
             * @description The list of service API IDs
             * @example [
             *       "sa-12345678"
             *     ]
             */
            ids: string[];
            /**
             * @description The next token to use for pagination
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "serviceId": "s-12345678",
         *       "token": "a"
         *     } */
        ListServiceEnvironmentsRequest: {
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 3x
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "se-12345678",
         *         "se-23456789"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListServiceEnvironmentsResult: {
            /**
             * @description The list of service environment IDs
             * @example [
             *       "se-12345678",
             *       "se-23456789"
             *     ]
             */
            ids: string[];
            /**
             * @description The next token to use to retrieve the next page of results
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "serviceApiId": "sa-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "s7r"
         *     } */
        ListServiceModelsRequest: {
            /**
             * @description ID of a Service API
             * @example Quis minus saepe placeat consequatur voluptas.
             */
            serviceApiId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example e7
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "sm-12345678",
         *         "sm-87654321"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListServiceModelsResult: {
            /**
             * @description The service model IDs
             * @example [
             *       "sm-12345678",
             *       "sm-87654321"
             *     ]
             */
            ids: string[];
            /**
             * @description The next token to use when listing service models
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "orgId": "org-12345678",
         *       "token": "v71",
         *       "visibility": "PRIVATE"
         *     } */
        ListServiceOfferingsRequest: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType?: string;
            /**
             * @description ID of an Org
             * @example Ullam amet ullam facilis officia architecto natus.
             */
            orgId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example e1
             */
            token: string;
            /**
             * @description This parameter is used to configure the visibility of the service control-plane APIs
             * @example PUBLIC
             */
            visibility?: string;
        };
        /** @example {
         *       "nextPageToken": "next-token",
         *       "serviceIds": [
         *         "s-12345678",
         *         "s-abcdefgh"
         *       ],
         *       "services": [
         *         {
         *           "createdAt": "2019-01-01T00:00:00Z",
         *           "isDeprecated": false,
         *           "offerings": [
         *             {
         *               "allowCreatesWhenPaymentNotConfigured": true,
         *               "assets": {
         *                 "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
         *                 "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
         *               },
         *               "maxNumberOfInstances": 4,
         *               "productTierName": "Premium",
         *               "productTierURLKey": "premium",
         *               "resourceParameters": [
         *                 {
         *                   "name": "MySQL",
         *                   "urlKey": "mysql"
         *                 },
         *                 {
         *                   "name": "Redis",
         *                   "urlKey": "redis"
         *                 }
         *               ],
         *               "serviceAPIID": "sa-12345678",
         *               "serviceAPIVersion": "v1",
         *               "serviceEnvironmentName": "Production",
         *               "serviceEnvironmentURLKey": "prod",
         *               "serviceEnvironmentVisibility": "PRIVATE",
         *               "serviceModelName": "Bring Your Own Account",
         *               "serviceModelURLKey": "byoa"
         *             },
         *             {
         *               "productTierName": "Basic",
         *               "productTierURLKey": "basic",
         *               "resourceParameters": [
         *                 {
         *                   "name": "MySQL",
         *                   "urlKey": "mysql"
         *                 },
         *                 {
         *                   "name": "Redis",
         *                   "urlKey": "redis"
         *                 }
         *               ],
         *               "serviceAPIID": "sa-abcdefgh",
         *               "serviceAPIVersion": "v1",
         *               "serviceEnvironmentName": "Production",
         *               "serviceEnvironmentURLKey": "prod",
         *               "serviceEnvironmentVisibility": "PUBLIC",
         *               "serviceModelName": "Hosted",
         *               "serviceModelURLKey": "hosted"
         *             }
         *           ],
         *           "serviceDescription": "MySQL is a relational database",
         *           "serviceId": "s-12345678",
         *           "serviceName": "MySQL",
         *           "serviceOrgId": "org-12345678",
         *           "serviceProviderId": "sp-9zrg9W8Are",
         *           "serviceProviderName": "Omnistrate, Inc.",
         *           "serviceURLKey": "mysql"
         *         },
         *         {
         *           "createdAt": "2019-01-01T00:00:00Z",
         *           "isDeprecated": false,
         *           "offerings": [
         *             {
         *               "allowCreatesWhenPaymentNotConfigured": true,
         *               "assets": {
         *                 "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
         *                 "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
         *               },
         *               "maxNumberOfInstances": 4,
         *               "productTierName": "Premium",
         *               "productTierURLKey": "premium",
         *               "resourceParameters": [
         *                 {
         *                   "name": "MySQL",
         *                   "urlKey": "mysql"
         *                 },
         *                 {
         *                   "name": "Redis",
         *                   "urlKey": "redis"
         *                 }
         *               ],
         *               "serviceAPIID": "sa-12345678",
         *               "serviceAPIVersion": "v1",
         *               "serviceEnvironmentName": "Production",
         *               "serviceEnvironmentURLKey": "prod",
         *               "serviceEnvironmentVisibility": "PRIVATE",
         *               "serviceModelName": "Bring Your Own Account",
         *               "serviceModelURLKey": "byoa"
         *             },
         *             {
         *               "productTierName": "Basic",
         *               "productTierURLKey": "basic",
         *               "resourceParameters": [
         *                 {
         *                   "name": "MySQL",
         *                   "urlKey": "mysql"
         *                 },
         *                 {
         *                   "name": "Redis",
         *                   "urlKey": "redis"
         *                 }
         *               ],
         *               "serviceAPIID": "sa-abcdefgh",
         *               "serviceAPIVersion": "v1",
         *               "serviceEnvironmentName": "Production",
         *               "serviceEnvironmentURLKey": "prod",
         *               "serviceEnvironmentVisibility": "PUBLIC",
         *               "serviceModelName": "Hosted",
         *               "serviceModelURLKey": "hosted"
         *             }
         *           ],
         *           "serviceDescription": "MySQL is a relational database",
         *           "serviceId": "s-12345678",
         *           "serviceName": "MySQL",
         *           "serviceOrgId": "org-12345678",
         *           "serviceProviderId": "sp-9zrg9W8Are",
         *           "serviceProviderName": "Omnistrate, Inc.",
         *           "serviceURLKey": "mysql"
         *         },
         *         {
         *           "createdAt": "2019-01-01T00:00:00Z",
         *           "isDeprecated": false,
         *           "offerings": [
         *             {
         *               "allowCreatesWhenPaymentNotConfigured": true,
         *               "assets": {
         *                 "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
         *                 "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
         *               },
         *               "maxNumberOfInstances": 4,
         *               "productTierName": "Premium",
         *               "productTierURLKey": "premium",
         *               "resourceParameters": [
         *                 {
         *                   "name": "MySQL",
         *                   "urlKey": "mysql"
         *                 },
         *                 {
         *                   "name": "Redis",
         *                   "urlKey": "redis"
         *                 }
         *               ],
         *               "serviceAPIID": "sa-12345678",
         *               "serviceAPIVersion": "v1",
         *               "serviceEnvironmentName": "Production",
         *               "serviceEnvironmentURLKey": "prod",
         *               "serviceEnvironmentVisibility": "PRIVATE",
         *               "serviceModelName": "Bring Your Own Account",
         *               "serviceModelURLKey": "byoa"
         *             },
         *             {
         *               "productTierName": "Basic",
         *               "productTierURLKey": "basic",
         *               "resourceParameters": [
         *                 {
         *                   "name": "MySQL",
         *                   "urlKey": "mysql"
         *                 },
         *                 {
         *                   "name": "Redis",
         *                   "urlKey": "redis"
         *                 }
         *               ],
         *               "serviceAPIID": "sa-abcdefgh",
         *               "serviceAPIVersion": "v1",
         *               "serviceEnvironmentName": "Production",
         *               "serviceEnvironmentURLKey": "prod",
         *               "serviceEnvironmentVisibility": "PUBLIC",
         *               "serviceModelName": "Hosted",
         *               "serviceModelURLKey": "hosted"
         *             }
         *           ],
         *           "serviceDescription": "MySQL is a relational database",
         *           "serviceId": "s-12345678",
         *           "serviceName": "MySQL",
         *           "serviceOrgId": "org-12345678",
         *           "serviceProviderId": "sp-9zrg9W8Are",
         *           "serviceProviderName": "Omnistrate, Inc.",
         *           "serviceURLKey": "mysql"
         *         },
         *         {
         *           "createdAt": "2019-01-01T00:00:00Z",
         *           "isDeprecated": false,
         *           "offerings": [
         *             {
         *               "allowCreatesWhenPaymentNotConfigured": true,
         *               "assets": {
         *                 "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
         *                 "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
         *               },
         *               "maxNumberOfInstances": 4,
         *               "productTierName": "Premium",
         *               "productTierURLKey": "premium",
         *               "resourceParameters": [
         *                 {
         *                   "name": "MySQL",
         *                   "urlKey": "mysql"
         *                 },
         *                 {
         *                   "name": "Redis",
         *                   "urlKey": "redis"
         *                 }
         *               ],
         *               "serviceAPIID": "sa-12345678",
         *               "serviceAPIVersion": "v1",
         *               "serviceEnvironmentName": "Production",
         *               "serviceEnvironmentURLKey": "prod",
         *               "serviceEnvironmentVisibility": "PRIVATE",
         *               "serviceModelName": "Bring Your Own Account",
         *               "serviceModelURLKey": "byoa"
         *             },
         *             {
         *               "productTierName": "Basic",
         *               "productTierURLKey": "basic",
         *               "resourceParameters": [
         *                 {
         *                   "name": "MySQL",
         *                   "urlKey": "mysql"
         *                 },
         *                 {
         *                   "name": "Redis",
         *                   "urlKey": "redis"
         *                 }
         *               ],
         *               "serviceAPIID": "sa-abcdefgh",
         *               "serviceAPIVersion": "v1",
         *               "serviceEnvironmentName": "Production",
         *               "serviceEnvironmentURLKey": "prod",
         *               "serviceEnvironmentVisibility": "PUBLIC",
         *               "serviceModelName": "Hosted",
         *               "serviceModelURLKey": "hosted"
         *             }
         *           ],
         *           "serviceDescription": "MySQL is a relational database",
         *           "serviceId": "s-12345678",
         *           "serviceName": "MySQL",
         *           "serviceOrgId": "org-12345678",
         *           "serviceProviderId": "sp-9zrg9W8Are",
         *           "serviceProviderName": "Omnistrate, Inc.",
         *           "serviceURLKey": "mysql"
         *         }
         *       ]
         *     } */
        ListServiceOfferingsResult: {
            /**
             * @description Token to use for the next request
             * @example next-token
             */
            nextPageToken?: string;
            /**
             * @description The service IDs
             * @example [
             *       "s-12345678",
             *       "s-abcdefgh"
             *     ]
             */
            serviceIds: string[];
            /**
             * @description List of services
             * @example [
             *       {
             *         "createdAt": "2019-01-01T00:00:00Z",
             *         "isDeprecated": false,
             *         "offerings": [
             *           {
             *             "allowCreatesWhenPaymentNotConfigured": true,
             *             "assets": {
             *               "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
             *               "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
             *             },
             *             "maxNumberOfInstances": 4,
             *             "productTierName": "Premium",
             *             "productTierURLKey": "premium",
             *             "resourceParameters": [
             *               {
             *                 "name": "MySQL",
             *                 "urlKey": "mysql"
             *               },
             *               {
             *                 "name": "Redis",
             *                 "urlKey": "redis"
             *               }
             *             ],
             *             "serviceAPIID": "sa-12345678",
             *             "serviceAPIVersion": "v1",
             *             "serviceEnvironmentName": "Production",
             *             "serviceEnvironmentURLKey": "prod",
             *             "serviceEnvironmentVisibility": "PRIVATE",
             *             "serviceModelName": "Bring Your Own Account",
             *             "serviceModelURLKey": "byoa"
             *           },
             *           {
             *             "productTierName": "Basic",
             *             "productTierURLKey": "basic",
             *             "resourceParameters": [
             *               {
             *                 "name": "MySQL",
             *                 "urlKey": "mysql"
             *               },
             *               {
             *                 "name": "Redis",
             *                 "urlKey": "redis"
             *               }
             *             ],
             *             "serviceAPIID": "sa-abcdefgh",
             *             "serviceAPIVersion": "v1",
             *             "serviceEnvironmentName": "Production",
             *             "serviceEnvironmentURLKey": "prod",
             *             "serviceEnvironmentVisibility": "PUBLIC",
             *             "serviceModelName": "Hosted",
             *             "serviceModelURLKey": "hosted"
             *           }
             *         ],
             *         "serviceDescription": "MySQL is a relational database",
             *         "serviceId": "s-12345678",
             *         "serviceName": "MySQL",
             *         "serviceOrgId": "org-12345678",
             *         "serviceProviderId": "sp-9zrg9W8Are",
             *         "serviceProviderName": "Omnistrate, Inc.",
             *         "serviceURLKey": "mysql"
             *       },
             *       {
             *         "createdAt": "2019-01-01T00:00:00Z",
             *         "isDeprecated": false,
             *         "offerings": [
             *           {
             *             "allowCreatesWhenPaymentNotConfigured": true,
             *             "assets": {
             *               "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
             *               "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
             *             },
             *             "maxNumberOfInstances": 4,
             *             "productTierName": "Premium",
             *             "productTierURLKey": "premium",
             *             "resourceParameters": [
             *               {
             *                 "name": "MySQL",
             *                 "urlKey": "mysql"
             *               },
             *               {
             *                 "name": "Redis",
             *                 "urlKey": "redis"
             *               }
             *             ],
             *             "serviceAPIID": "sa-12345678",
             *             "serviceAPIVersion": "v1",
             *             "serviceEnvironmentName": "Production",
             *             "serviceEnvironmentURLKey": "prod",
             *             "serviceEnvironmentVisibility": "PRIVATE",
             *             "serviceModelName": "Bring Your Own Account",
             *             "serviceModelURLKey": "byoa"
             *           },
             *           {
             *             "productTierName": "Basic",
             *             "productTierURLKey": "basic",
             *             "resourceParameters": [
             *               {
             *                 "name": "MySQL",
             *                 "urlKey": "mysql"
             *               },
             *               {
             *                 "name": "Redis",
             *                 "urlKey": "redis"
             *               }
             *             ],
             *             "serviceAPIID": "sa-abcdefgh",
             *             "serviceAPIVersion": "v1",
             *             "serviceEnvironmentName": "Production",
             *             "serviceEnvironmentURLKey": "prod",
             *             "serviceEnvironmentVisibility": "PUBLIC",
             *             "serviceModelName": "Hosted",
             *             "serviceModelURLKey": "hosted"
             *           }
             *         ],
             *         "serviceDescription": "MySQL is a relational database",
             *         "serviceId": "s-12345678",
             *         "serviceName": "MySQL",
             *         "serviceOrgId": "org-12345678",
             *         "serviceProviderId": "sp-9zrg9W8Are",
             *         "serviceProviderName": "Omnistrate, Inc.",
             *         "serviceURLKey": "mysql"
             *       }
             *     ]
             */
            services?: components["schemas"]["DescribeServiceOfferingResult"][];
        };
        /** @example {
         *       "nextPageToken": "token",
         *       "pageSize": 10,
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "skipHasPendingChangesCheck": false,
         *       "token": "x5"
         *     } */
        ListServicePlansRequest: {
            /**
             * @description The next token to use for pagination
             * @example token
             */
            nextPageToken?: string;
            /**
             * Format: int64
             * @description The number of resources to return per page
             * @example 10
             */
            pageSize?: number;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description Whether to skip the check for pending changes in the service plans
             * @example false
             */
            skipHasPendingChangesCheck?: boolean;
            /**
             * @description JWT token used to perform authorization
             * @example 336
             */
            token: string;
        };
        /** @example {
         *       "nextPageToken": "next-token",
         *       "servicePlans": [
         *         {
         *           "AutoApproveSubscription": false,
         *           "accountConfigIds": [
         *             "ac-12345678",
         *             "ac-23456789"
         *           ],
         *           "activeAccountConfigIds": {
         *             "aws": "ac-12345678",
         *             "gcp": "ac-23456789"
         *           },
         *           "apiVersion": "v1",
         *           "awsRegions": [
         *             "us-east-2",
         *             "ca-central-1"
         *           ],
         *           "azureRegions": [
         *             "northcentralus"
         *           ],
         *           "deploymentConfigId": "dc-12345678",
         *           "gcpRegions": [
         *             "us-central1"
         *           ],
         *           "hasPendingChanges": true,
         *           "isProductTierDisabled": true,
         *           "latestMajorVersion": "3.0",
         *           "modelType": "CUSTOMER_HOSTED",
         *           "privateRegions": [
         *             "n/a"
         *           ],
         *           "productTierDescription": "A premium product tier",
         *           "productTierDocumentation": "Any documentation",
         *           "productTierFeatures": {
         *             "LOGS": true,
         *             "METRICS": false
         *           },
         *           "productTierId": "pt-12345678",
         *           "productTierKey": "premium",
         *           "productTierName": "Premium",
         *           "productTierPlanDescription": "A premium plan",
         *           "productTierPricing": {
         *             "price1": "value1"
         *           },
         *           "productTierSupport": "Any support",
         *           "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
         *           "serviceApiId": "sa-12345678",
         *           "serviceEnvironmentId": "se-12345678",
         *           "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
         *           "serviceModelFeatures": [
         *             {
         *               "configuration": {
         *                 "status": "ON"
         *               },
         *               "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *             },
         *             {
         *               "configuration": {
         *                 "status": "ON"
         *               },
         *               "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *             }
         *           ],
         *           "serviceModelId": "sm-12345678",
         *           "serviceModelName": "MySQL multi-writer service hosted model",
         *           "tierType": "OMNISTRATE_DEDICATED_TENANCY",
         *           "versionSetStatus": "Preferred|Active|Deprecated|Pending"
         *         },
         *         {
         *           "AutoApproveSubscription": false,
         *           "accountConfigIds": [
         *             "ac-12345678",
         *             "ac-23456789"
         *           ],
         *           "activeAccountConfigIds": {
         *             "aws": "ac-12345678",
         *             "gcp": "ac-23456789"
         *           },
         *           "apiVersion": "v1",
         *           "awsRegions": [
         *             "us-east-2",
         *             "ca-central-1"
         *           ],
         *           "azureRegions": [
         *             "northcentralus"
         *           ],
         *           "deploymentConfigId": "dc-12345678",
         *           "gcpRegions": [
         *             "us-central1"
         *           ],
         *           "hasPendingChanges": true,
         *           "isProductTierDisabled": true,
         *           "latestMajorVersion": "3.0",
         *           "modelType": "CUSTOMER_HOSTED",
         *           "privateRegions": [
         *             "n/a"
         *           ],
         *           "productTierDescription": "A premium product tier",
         *           "productTierDocumentation": "Any documentation",
         *           "productTierFeatures": {
         *             "LOGS": true,
         *             "METRICS": false
         *           },
         *           "productTierId": "pt-12345678",
         *           "productTierKey": "premium",
         *           "productTierName": "Premium",
         *           "productTierPlanDescription": "A premium plan",
         *           "productTierPricing": {
         *             "price1": "value1"
         *           },
         *           "productTierSupport": "Any support",
         *           "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
         *           "serviceApiId": "sa-12345678",
         *           "serviceEnvironmentId": "se-12345678",
         *           "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
         *           "serviceModelFeatures": [
         *             {
         *               "configuration": {
         *                 "status": "ON"
         *               },
         *               "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *             },
         *             {
         *               "configuration": {
         *                 "status": "ON"
         *               },
         *               "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *             }
         *           ],
         *           "serviceModelId": "sm-12345678",
         *           "serviceModelName": "MySQL multi-writer service hosted model",
         *           "tierType": "OMNISTRATE_DEDICATED_TENANCY",
         *           "versionSetStatus": "Preferred|Active|Deprecated|Pending"
         *         },
         *         {
         *           "AutoApproveSubscription": false,
         *           "accountConfigIds": [
         *             "ac-12345678",
         *             "ac-23456789"
         *           ],
         *           "activeAccountConfigIds": {
         *             "aws": "ac-12345678",
         *             "gcp": "ac-23456789"
         *           },
         *           "apiVersion": "v1",
         *           "awsRegions": [
         *             "us-east-2",
         *             "ca-central-1"
         *           ],
         *           "azureRegions": [
         *             "northcentralus"
         *           ],
         *           "deploymentConfigId": "dc-12345678",
         *           "gcpRegions": [
         *             "us-central1"
         *           ],
         *           "hasPendingChanges": true,
         *           "isProductTierDisabled": true,
         *           "latestMajorVersion": "3.0",
         *           "modelType": "CUSTOMER_HOSTED",
         *           "privateRegions": [
         *             "n/a"
         *           ],
         *           "productTierDescription": "A premium product tier",
         *           "productTierDocumentation": "Any documentation",
         *           "productTierFeatures": {
         *             "LOGS": true,
         *             "METRICS": false
         *           },
         *           "productTierId": "pt-12345678",
         *           "productTierKey": "premium",
         *           "productTierName": "Premium",
         *           "productTierPlanDescription": "A premium plan",
         *           "productTierPricing": {
         *             "price1": "value1"
         *           },
         *           "productTierSupport": "Any support",
         *           "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
         *           "serviceApiId": "sa-12345678",
         *           "serviceEnvironmentId": "se-12345678",
         *           "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
         *           "serviceModelFeatures": [
         *             {
         *               "configuration": {
         *                 "status": "ON"
         *               },
         *               "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *             },
         *             {
         *               "configuration": {
         *                 "status": "ON"
         *               },
         *               "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *             }
         *           ],
         *           "serviceModelId": "sm-12345678",
         *           "serviceModelName": "MySQL multi-writer service hosted model",
         *           "tierType": "OMNISTRATE_DEDICATED_TENANCY",
         *           "versionSetStatus": "Preferred|Active|Deprecated|Pending"
         *         },
         *         {
         *           "AutoApproveSubscription": false,
         *           "accountConfigIds": [
         *             "ac-12345678",
         *             "ac-23456789"
         *           ],
         *           "activeAccountConfigIds": {
         *             "aws": "ac-12345678",
         *             "gcp": "ac-23456789"
         *           },
         *           "apiVersion": "v1",
         *           "awsRegions": [
         *             "us-east-2",
         *             "ca-central-1"
         *           ],
         *           "azureRegions": [
         *             "northcentralus"
         *           ],
         *           "deploymentConfigId": "dc-12345678",
         *           "gcpRegions": [
         *             "us-central1"
         *           ],
         *           "hasPendingChanges": true,
         *           "isProductTierDisabled": true,
         *           "latestMajorVersion": "3.0",
         *           "modelType": "CUSTOMER_HOSTED",
         *           "privateRegions": [
         *             "n/a"
         *           ],
         *           "productTierDescription": "A premium product tier",
         *           "productTierDocumentation": "Any documentation",
         *           "productTierFeatures": {
         *             "LOGS": true,
         *             "METRICS": false
         *           },
         *           "productTierId": "pt-12345678",
         *           "productTierKey": "premium",
         *           "productTierName": "Premium",
         *           "productTierPlanDescription": "A premium plan",
         *           "productTierPricing": {
         *             "price1": "value1"
         *           },
         *           "productTierSupport": "Any support",
         *           "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
         *           "serviceApiId": "sa-12345678",
         *           "serviceEnvironmentId": "se-12345678",
         *           "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
         *           "serviceModelFeatures": [
         *             {
         *               "configuration": {
         *                 "status": "ON"
         *               },
         *               "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *             },
         *             {
         *               "configuration": {
         *                 "status": "ON"
         *               },
         *               "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *             }
         *           ],
         *           "serviceModelId": "sm-12345678",
         *           "serviceModelName": "MySQL multi-writer service hosted model",
         *           "tierType": "OMNISTRATE_DEDICATED_TENANCY",
         *           "versionSetStatus": "Preferred|Active|Deprecated|Pending"
         *         }
         *       ]
         *     } */
        ListServicePlansResult: {
            /**
             * @description Token to use for the next page
             * @example next-token
             */
            nextPageToken?: string;
            /**
             * @description List of service plans
             * @example [
             *       {
             *         "AutoApproveSubscription": false,
             *         "accountConfigIds": [
             *           "ac-12345678",
             *           "ac-23456789"
             *         ],
             *         "activeAccountConfigIds": {
             *           "aws": "ac-12345678",
             *           "gcp": "ac-23456789"
             *         },
             *         "apiVersion": "v1",
             *         "awsRegions": [
             *           "us-east-2",
             *           "ca-central-1"
             *         ],
             *         "azureRegions": [
             *           "northcentralus"
             *         ],
             *         "deploymentConfigId": "dc-12345678",
             *         "gcpRegions": [
             *           "us-central1"
             *         ],
             *         "hasPendingChanges": true,
             *         "isProductTierDisabled": true,
             *         "latestMajorVersion": "3.0",
             *         "modelType": "CUSTOMER_HOSTED",
             *         "privateRegions": [
             *           "n/a"
             *         ],
             *         "productTierDescription": "A premium product tier",
             *         "productTierDocumentation": "Any documentation",
             *         "productTierFeatures": {
             *           "LOGS": true,
             *           "METRICS": false
             *         },
             *         "productTierId": "pt-12345678",
             *         "productTierKey": "premium",
             *         "productTierName": "Premium",
             *         "productTierPlanDescription": "A premium plan",
             *         "productTierPricing": {
             *           "price1": "value1"
             *         },
             *         "productTierSupport": "Any support",
             *         "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
             *         "serviceApiId": "sa-12345678",
             *         "serviceEnvironmentId": "se-12345678",
             *         "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
             *         "serviceModelFeatures": [
             *           {
             *             "configuration": {
             *               "status": "ON"
             *             },
             *             "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *           },
             *           {
             *             "configuration": {
             *               "status": "ON"
             *             },
             *             "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *           }
             *         ],
             *         "serviceModelId": "sm-12345678",
             *         "serviceModelName": "MySQL multi-writer service hosted model",
             *         "tierType": "OMNISTRATE_DEDICATED_TENANCY",
             *         "versionSetStatus": "Preferred|Active|Deprecated|Pending"
             *       },
             *       {
             *         "AutoApproveSubscription": false,
             *         "accountConfigIds": [
             *           "ac-12345678",
             *           "ac-23456789"
             *         ],
             *         "activeAccountConfigIds": {
             *           "aws": "ac-12345678",
             *           "gcp": "ac-23456789"
             *         },
             *         "apiVersion": "v1",
             *         "awsRegions": [
             *           "us-east-2",
             *           "ca-central-1"
             *         ],
             *         "azureRegions": [
             *           "northcentralus"
             *         ],
             *         "deploymentConfigId": "dc-12345678",
             *         "gcpRegions": [
             *           "us-central1"
             *         ],
             *         "hasPendingChanges": true,
             *         "isProductTierDisabled": true,
             *         "latestMajorVersion": "3.0",
             *         "modelType": "CUSTOMER_HOSTED",
             *         "privateRegions": [
             *           "n/a"
             *         ],
             *         "productTierDescription": "A premium product tier",
             *         "productTierDocumentation": "Any documentation",
             *         "productTierFeatures": {
             *           "LOGS": true,
             *           "METRICS": false
             *         },
             *         "productTierId": "pt-12345678",
             *         "productTierKey": "premium",
             *         "productTierName": "Premium",
             *         "productTierPlanDescription": "A premium plan",
             *         "productTierPricing": {
             *           "price1": "value1"
             *         },
             *         "productTierSupport": "Any support",
             *         "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
             *         "serviceApiId": "sa-12345678",
             *         "serviceEnvironmentId": "se-12345678",
             *         "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
             *         "serviceModelFeatures": [
             *           {
             *             "configuration": {
             *               "status": "ON"
             *             },
             *             "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *           },
             *           {
             *             "configuration": {
             *               "status": "ON"
             *             },
             *             "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *           }
             *         ],
             *         "serviceModelId": "sm-12345678",
             *         "serviceModelName": "MySQL multi-writer service hosted model",
             *         "tierType": "OMNISTRATE_DEDICATED_TENANCY",
             *         "versionSetStatus": "Preferred|Active|Deprecated|Pending"
             *       },
             *       {
             *         "AutoApproveSubscription": false,
             *         "accountConfigIds": [
             *           "ac-12345678",
             *           "ac-23456789"
             *         ],
             *         "activeAccountConfigIds": {
             *           "aws": "ac-12345678",
             *           "gcp": "ac-23456789"
             *         },
             *         "apiVersion": "v1",
             *         "awsRegions": [
             *           "us-east-2",
             *           "ca-central-1"
             *         ],
             *         "azureRegions": [
             *           "northcentralus"
             *         ],
             *         "deploymentConfigId": "dc-12345678",
             *         "gcpRegions": [
             *           "us-central1"
             *         ],
             *         "hasPendingChanges": true,
             *         "isProductTierDisabled": true,
             *         "latestMajorVersion": "3.0",
             *         "modelType": "CUSTOMER_HOSTED",
             *         "privateRegions": [
             *           "n/a"
             *         ],
             *         "productTierDescription": "A premium product tier",
             *         "productTierDocumentation": "Any documentation",
             *         "productTierFeatures": {
             *           "LOGS": true,
             *           "METRICS": false
             *         },
             *         "productTierId": "pt-12345678",
             *         "productTierKey": "premium",
             *         "productTierName": "Premium",
             *         "productTierPlanDescription": "A premium plan",
             *         "productTierPricing": {
             *           "price1": "value1"
             *         },
             *         "productTierSupport": "Any support",
             *         "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
             *         "serviceApiId": "sa-12345678",
             *         "serviceEnvironmentId": "se-12345678",
             *         "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
             *         "serviceModelFeatures": [
             *           {
             *             "configuration": {
             *               "status": "ON"
             *             },
             *             "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *           },
             *           {
             *             "configuration": {
             *               "status": "ON"
             *             },
             *             "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *           }
             *         ],
             *         "serviceModelId": "sm-12345678",
             *         "serviceModelName": "MySQL multi-writer service hosted model",
             *         "tierType": "OMNISTRATE_DEDICATED_TENANCY",
             *         "versionSetStatus": "Preferred|Active|Deprecated|Pending"
             *       },
             *       {
             *         "AutoApproveSubscription": false,
             *         "accountConfigIds": [
             *           "ac-12345678",
             *           "ac-23456789"
             *         ],
             *         "activeAccountConfigIds": {
             *           "aws": "ac-12345678",
             *           "gcp": "ac-23456789"
             *         },
             *         "apiVersion": "v1",
             *         "awsRegions": [
             *           "us-east-2",
             *           "ca-central-1"
             *         ],
             *         "azureRegions": [
             *           "northcentralus"
             *         ],
             *         "deploymentConfigId": "dc-12345678",
             *         "gcpRegions": [
             *           "us-central1"
             *         ],
             *         "hasPendingChanges": true,
             *         "isProductTierDisabled": true,
             *         "latestMajorVersion": "3.0",
             *         "modelType": "CUSTOMER_HOSTED",
             *         "privateRegions": [
             *           "n/a"
             *         ],
             *         "productTierDescription": "A premium product tier",
             *         "productTierDocumentation": "Any documentation",
             *         "productTierFeatures": {
             *           "LOGS": true,
             *           "METRICS": false
             *         },
             *         "productTierId": "pt-12345678",
             *         "productTierKey": "premium",
             *         "productTierName": "Premium",
             *         "productTierPlanDescription": "A premium plan",
             *         "productTierPricing": {
             *           "price1": "value1"
             *         },
             *         "productTierSupport": "Any support",
             *         "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
             *         "serviceApiId": "sa-12345678",
             *         "serviceEnvironmentId": "se-12345678",
             *         "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
             *         "serviceModelFeatures": [
             *           {
             *             "configuration": {
             *               "status": "ON"
             *             },
             *             "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *           },
             *           {
             *             "configuration": {
             *               "status": "ON"
             *             },
             *             "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *           }
             *         ],
             *         "serviceModelId": "sm-12345678",
             *         "serviceModelName": "MySQL multi-writer service hosted model",
             *         "tierType": "OMNISTRATE_DEDICATED_TENANCY",
             *         "versionSetStatus": "Preferred|Active|Deprecated|Pending"
             *       }
             *     ]
             */
            servicePlans: components["schemas"]["GetServicePlanResult"][];
        };
        /** @example {
         *       "endDate": "2024-01-01T10:00:00Z",
         *       "environmentType": "PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL",
         *       "eventTypes": [
         *         "UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription",
         *         "UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription",
         *         "UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription"
         *       ],
         *       "instanceID": "instance-12345678",
         *       "nextPageToken": "token",
         *       "pageSize": 10,
         *       "productTierID": "Beatae beatae.",
         *       "serviceEnvironmentID": "se-123456",
         *       "serviceID": "s-123456",
         *       "startDate": "2023-01-01T10:00:00Z",
         *       "token": "ov"
         *     } */
        ListServiceProviderEvents: {
            /**
             * Format: date-time
             * @description End time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
             * @example 2024-01-01T10:00:00Z
             */
            endDate?: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType?: string;
            /**
             * @description The event types to filter by
             * @example [
             *       "UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription",
             *       "UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription",
             *       "UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription"
             *     ]
             */
            eventTypes?: string[];
            /**
             * @description ID of a Resource Instance
             * @example instance-12345678
             */
            instanceID?: string;
            /**
             * @description The next token to use for pagination
             * @example token
             */
            nextPageToken?: string;
            /**
             * Format: int64
             * @description The number of resources to return per page
             * @example 10
             */
            pageSize?: number;
            /**
             * @description ID of a Product Tier
             * @example Optio quam sint.
             */
            productTierID?: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentID?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceID?: string;
            /**
             * Format: date-time
             * @description Start time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
             * @example 2023-01-01T10:00:00Z
             */
            startDate?: string;
            /**
             * @description JWT token used to perform authorization
             * @example h
             */
            token: string;
        };
        /** @example {
         *       "events": [
         *         {
         *           "alertType": "Alarm",
         *           "eventCategory": "InstanceEvent",
         *           "eventID": "e-123456",
         *           "eventPayload": {
         *             "Et beatae.": "Assumenda sed.",
         *             "Exercitationem magnam et.": "Labore maxime necessitatibus voluptate sint.",
         *             "Velit ut sunt eligendi qui omnis.": "Doloribus aspernatur eaque numquam unde consequuntur."
         *           },
         *           "eventType": "UnhealthyInstance",
         *           "expiryTime": "2023-01-10T00:00:00Z",
         *           "instanceID": "instance-12345678",
         *           "planVersion": "v1.0",
         *           "priority": "Critical",
         *           "resourceName": "Resource-123",
         *           "scope": "ServiceProvider",
         *           "serviceEnvironmentID": "se-123456",
         *           "serviceID": "s-123456",
         *           "serviceName": "Service-123",
         *           "servicePlanName": "Basic Plan",
         *           "time": "2023-01-10T00:00:00Z"
         *         },
         *         {
         *           "alertType": "Alarm",
         *           "eventCategory": "InstanceEvent",
         *           "eventID": "e-123456",
         *           "eventPayload": {
         *             "Et beatae.": "Assumenda sed.",
         *             "Exercitationem magnam et.": "Labore maxime necessitatibus voluptate sint.",
         *             "Velit ut sunt eligendi qui omnis.": "Doloribus aspernatur eaque numquam unde consequuntur."
         *           },
         *           "eventType": "UnhealthyInstance",
         *           "expiryTime": "2023-01-10T00:00:00Z",
         *           "instanceID": "instance-12345678",
         *           "planVersion": "v1.0",
         *           "priority": "Critical",
         *           "resourceName": "Resource-123",
         *           "scope": "ServiceProvider",
         *           "serviceEnvironmentID": "se-123456",
         *           "serviceID": "s-123456",
         *           "serviceName": "Service-123",
         *           "servicePlanName": "Basic Plan",
         *           "time": "2023-01-10T00:00:00Z"
         *         },
         *         {
         *           "alertType": "Alarm",
         *           "eventCategory": "InstanceEvent",
         *           "eventID": "e-123456",
         *           "eventPayload": {
         *             "Et beatae.": "Assumenda sed.",
         *             "Exercitationem magnam et.": "Labore maxime necessitatibus voluptate sint.",
         *             "Velit ut sunt eligendi qui omnis.": "Doloribus aspernatur eaque numquam unde consequuntur."
         *           },
         *           "eventType": "UnhealthyInstance",
         *           "expiryTime": "2023-01-10T00:00:00Z",
         *           "instanceID": "instance-12345678",
         *           "planVersion": "v1.0",
         *           "priority": "Critical",
         *           "resourceName": "Resource-123",
         *           "scope": "ServiceProvider",
         *           "serviceEnvironmentID": "se-123456",
         *           "serviceID": "s-123456",
         *           "serviceName": "Service-123",
         *           "servicePlanName": "Basic Plan",
         *           "time": "2023-01-10T00:00:00Z"
         *         }
         *       ],
         *       "eventsSummary": {
         *         "eventsSummary": {
         *           "FailedDeployment": 1,
         *           "UnhealthyInstance": 2
         *         }
         *       },
         *       "nextPageToken": "token"
         *     } */
        ListServiceProviderEventsResult: {
            /**
             * @description List of events
             * @example [
             *       {
             *         "alertType": "Alarm",
             *         "eventCategory": "InstanceEvent",
             *         "eventID": "e-123456",
             *         "eventPayload": {
             *           "Et beatae.": "Assumenda sed.",
             *           "Exercitationem magnam et.": "Labore maxime necessitatibus voluptate sint.",
             *           "Velit ut sunt eligendi qui omnis.": "Doloribus aspernatur eaque numquam unde consequuntur."
             *         },
             *         "eventType": "UnhealthyInstance",
             *         "expiryTime": "2023-01-10T00:00:00Z",
             *         "instanceID": "instance-12345678",
             *         "planVersion": "v1.0",
             *         "priority": "Critical",
             *         "resourceName": "Resource-123",
             *         "scope": "ServiceProvider",
             *         "serviceEnvironmentID": "se-123456",
             *         "serviceID": "s-123456",
             *         "serviceName": "Service-123",
             *         "servicePlanName": "Basic Plan",
             *         "time": "2023-01-10T00:00:00Z"
             *       },
             *       {
             *         "alertType": "Alarm",
             *         "eventCategory": "InstanceEvent",
             *         "eventID": "e-123456",
             *         "eventPayload": {
             *           "Et beatae.": "Assumenda sed.",
             *           "Exercitationem magnam et.": "Labore maxime necessitatibus voluptate sint.",
             *           "Velit ut sunt eligendi qui omnis.": "Doloribus aspernatur eaque numquam unde consequuntur."
             *         },
             *         "eventType": "UnhealthyInstance",
             *         "expiryTime": "2023-01-10T00:00:00Z",
             *         "instanceID": "instance-12345678",
             *         "planVersion": "v1.0",
             *         "priority": "Critical",
             *         "resourceName": "Resource-123",
             *         "scope": "ServiceProvider",
             *         "serviceEnvironmentID": "se-123456",
             *         "serviceID": "s-123456",
             *         "serviceName": "Service-123",
             *         "servicePlanName": "Basic Plan",
             *         "time": "2023-01-10T00:00:00Z"
             *       },
             *       {
             *         "alertType": "Alarm",
             *         "eventCategory": "InstanceEvent",
             *         "eventID": "e-123456",
             *         "eventPayload": {
             *           "Et beatae.": "Assumenda sed.",
             *           "Exercitationem magnam et.": "Labore maxime necessitatibus voluptate sint.",
             *           "Velit ut sunt eligendi qui omnis.": "Doloribus aspernatur eaque numquam unde consequuntur."
             *         },
             *         "eventType": "UnhealthyInstance",
             *         "expiryTime": "2023-01-10T00:00:00Z",
             *         "instanceID": "instance-12345678",
             *         "planVersion": "v1.0",
             *         "priority": "Critical",
             *         "resourceName": "Resource-123",
             *         "scope": "ServiceProvider",
             *         "serviceEnvironmentID": "se-123456",
             *         "serviceID": "s-123456",
             *         "serviceName": "Service-123",
             *         "servicePlanName": "Basic Plan",
             *         "time": "2023-01-10T00:00:00Z"
             *       },
             *       {
             *         "alertType": "Alarm",
             *         "eventCategory": "InstanceEvent",
             *         "eventID": "e-123456",
             *         "eventPayload": {
             *           "Et beatae.": "Assumenda sed.",
             *           "Exercitationem magnam et.": "Labore maxime necessitatibus voluptate sint.",
             *           "Velit ut sunt eligendi qui omnis.": "Doloribus aspernatur eaque numquam unde consequuntur."
             *         },
             *         "eventType": "UnhealthyInstance",
             *         "expiryTime": "2023-01-10T00:00:00Z",
             *         "instanceID": "instance-12345678",
             *         "planVersion": "v1.0",
             *         "priority": "Critical",
             *         "resourceName": "Resource-123",
             *         "scope": "ServiceProvider",
             *         "serviceEnvironmentID": "se-123456",
             *         "serviceID": "s-123456",
             *         "serviceName": "Service-123",
             *         "servicePlanName": "Basic Plan",
             *         "time": "2023-01-10T00:00:00Z"
             *       }
             *     ]
             */
            events: components["schemas"]["ServiceProviderEvent"][];
            eventsSummary: components["schemas"]["ServiceProviderEventSummary"];
            /**
             * @description The next token to use for pagination
             * @example token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "ids": [
         *         "s-12345678",
         *         "s-abcdefgh",
         *         "s-1234efgh"
         *       ],
         *       "nextPageToken": "next-token",
         *       "services": [
         *         {
         *           "createdAt": "2019-01-01T00:00:00Z",
         *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *           "id": "s-12345678",
         *           "key": "mysql",
         *           "name": "MySQL multi-writer service",
         *           "roleType": "admin",
         *           "serviceEnvironments": [
         *             {
         *               "id": "se-12345678",
         *               "name": "dev",
         *               "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *               "saasPortalStatus": "READY",
         *               "saasPortalUrl": "https://saas-portal.example.com",
         *               "servicePlans": [
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 },
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 }
         *               ],
         *               "sourceEnvironmentID": "se-12345678",
         *               "sourceEnvironmentName": "dev",
         *               "type": "DEV",
         *               "visibility": "private"
         *             },
         *             {
         *               "id": "se-12345678",
         *               "name": "dev",
         *               "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *               "saasPortalStatus": "READY",
         *               "saasPortalUrl": "https://saas-portal.example.com",
         *               "servicePlans": [
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 },
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 }
         *               ],
         *               "sourceEnvironmentID": "se-12345678",
         *               "sourceEnvironmentName": "dev",
         *               "type": "DEV",
         *               "visibility": "private"
         *             },
         *             {
         *               "id": "se-12345678",
         *               "name": "dev",
         *               "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *               "saasPortalStatus": "READY",
         *               "saasPortalUrl": "https://saas-portal.example.com",
         *               "servicePlans": [
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 },
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 }
         *               ],
         *               "sourceEnvironmentID": "se-12345678",
         *               "sourceEnvironmentName": "dev",
         *               "type": "DEV",
         *               "visibility": "private"
         *             },
         *             {
         *               "id": "se-12345678",
         *               "name": "dev",
         *               "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *               "saasPortalStatus": "READY",
         *               "saasPortalUrl": "https://saas-portal.example.com",
         *               "servicePlans": [
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 },
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 }
         *               ],
         *               "sourceEnvironmentID": "se-12345678",
         *               "sourceEnvironmentName": "dev",
         *               "type": "DEV",
         *               "visibility": "private"
         *             }
         *           ],
         *           "serviceLogoURL": "Deleniti et enim autem sunt.",
         *           "serviceProviderID": "sp-12345678",
         *           "serviceProviderName": "Omnistrate, Inc."
         *         },
         *         {
         *           "createdAt": "2019-01-01T00:00:00Z",
         *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *           "id": "s-12345678",
         *           "key": "mysql",
         *           "name": "MySQL multi-writer service",
         *           "roleType": "admin",
         *           "serviceEnvironments": [
         *             {
         *               "id": "se-12345678",
         *               "name": "dev",
         *               "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *               "saasPortalStatus": "READY",
         *               "saasPortalUrl": "https://saas-portal.example.com",
         *               "servicePlans": [
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 },
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 }
         *               ],
         *               "sourceEnvironmentID": "se-12345678",
         *               "sourceEnvironmentName": "dev",
         *               "type": "DEV",
         *               "visibility": "private"
         *             },
         *             {
         *               "id": "se-12345678",
         *               "name": "dev",
         *               "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *               "saasPortalStatus": "READY",
         *               "saasPortalUrl": "https://saas-portal.example.com",
         *               "servicePlans": [
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 },
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 }
         *               ],
         *               "sourceEnvironmentID": "se-12345678",
         *               "sourceEnvironmentName": "dev",
         *               "type": "DEV",
         *               "visibility": "private"
         *             },
         *             {
         *               "id": "se-12345678",
         *               "name": "dev",
         *               "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *               "saasPortalStatus": "READY",
         *               "saasPortalUrl": "https://saas-portal.example.com",
         *               "servicePlans": [
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 },
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 }
         *               ],
         *               "sourceEnvironmentID": "se-12345678",
         *               "sourceEnvironmentName": "dev",
         *               "type": "DEV",
         *               "visibility": "private"
         *             },
         *             {
         *               "id": "se-12345678",
         *               "name": "dev",
         *               "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *               "saasPortalStatus": "READY",
         *               "saasPortalUrl": "https://saas-portal.example.com",
         *               "servicePlans": [
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 },
         *                 {
         *                   "description": "A Basic product tier",
         *                   "modelType": "CUSTOMER_HOSTED",
         *                   "name": "Basic",
         *                   "productTierID": "pt-12345678",
         *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *                 }
         *               ],
         *               "sourceEnvironmentID": "se-12345678",
         *               "sourceEnvironmentName": "dev",
         *               "type": "DEV",
         *               "visibility": "private"
         *             }
         *           ],
         *           "serviceLogoURL": "Deleniti et enim autem sunt.",
         *           "serviceProviderID": "sp-12345678",
         *           "serviceProviderName": "Omnistrate, Inc."
         *         }
         *       ]
         *     } */
        ListServiceResult: {
            /**
             * @description List of service IDs
             * @example [
             *       "s-12345678",
             *       "s-abcdefgh",
             *       "s-1234efgh"
             *     ]
             */
            ids: string[];
            /**
             * @description Token to retrieve the next page of results
             * @example next-token
             */
            nextPageToken?: string;
            /**
             * @description List of services
             * @example [
             *       {
             *         "createdAt": "2019-01-01T00:00:00Z",
             *         "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *         "id": "s-12345678",
             *         "key": "mysql",
             *         "name": "MySQL multi-writer service",
             *         "roleType": "admin",
             *         "serviceEnvironments": [
             *           {
             *             "id": "se-12345678",
             *             "name": "dev",
             *             "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *             "saasPortalStatus": "READY",
             *             "saasPortalUrl": "https://saas-portal.example.com",
             *             "servicePlans": [
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               },
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               }
             *             ],
             *             "sourceEnvironmentID": "se-12345678",
             *             "sourceEnvironmentName": "dev",
             *             "type": "DEV",
             *             "visibility": "private"
             *           },
             *           {
             *             "id": "se-12345678",
             *             "name": "dev",
             *             "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *             "saasPortalStatus": "READY",
             *             "saasPortalUrl": "https://saas-portal.example.com",
             *             "servicePlans": [
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               },
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               }
             *             ],
             *             "sourceEnvironmentID": "se-12345678",
             *             "sourceEnvironmentName": "dev",
             *             "type": "DEV",
             *             "visibility": "private"
             *           },
             *           {
             *             "id": "se-12345678",
             *             "name": "dev",
             *             "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *             "saasPortalStatus": "READY",
             *             "saasPortalUrl": "https://saas-portal.example.com",
             *             "servicePlans": [
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               },
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               }
             *             ],
             *             "sourceEnvironmentID": "se-12345678",
             *             "sourceEnvironmentName": "dev",
             *             "type": "DEV",
             *             "visibility": "private"
             *           },
             *           {
             *             "id": "se-12345678",
             *             "name": "dev",
             *             "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *             "saasPortalStatus": "READY",
             *             "saasPortalUrl": "https://saas-portal.example.com",
             *             "servicePlans": [
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               },
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               }
             *             ],
             *             "sourceEnvironmentID": "se-12345678",
             *             "sourceEnvironmentName": "dev",
             *             "type": "DEV",
             *             "visibility": "private"
             *           }
             *         ],
             *         "serviceLogoURL": "Deleniti et enim autem sunt.",
             *         "serviceProviderID": "sp-12345678",
             *         "serviceProviderName": "Omnistrate, Inc."
             *       },
             *       {
             *         "createdAt": "2019-01-01T00:00:00Z",
             *         "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *         "id": "s-12345678",
             *         "key": "mysql",
             *         "name": "MySQL multi-writer service",
             *         "roleType": "admin",
             *         "serviceEnvironments": [
             *           {
             *             "id": "se-12345678",
             *             "name": "dev",
             *             "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *             "saasPortalStatus": "READY",
             *             "saasPortalUrl": "https://saas-portal.example.com",
             *             "servicePlans": [
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               },
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               }
             *             ],
             *             "sourceEnvironmentID": "se-12345678",
             *             "sourceEnvironmentName": "dev",
             *             "type": "DEV",
             *             "visibility": "private"
             *           },
             *           {
             *             "id": "se-12345678",
             *             "name": "dev",
             *             "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *             "saasPortalStatus": "READY",
             *             "saasPortalUrl": "https://saas-portal.example.com",
             *             "servicePlans": [
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               },
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               }
             *             ],
             *             "sourceEnvironmentID": "se-12345678",
             *             "sourceEnvironmentName": "dev",
             *             "type": "DEV",
             *             "visibility": "private"
             *           },
             *           {
             *             "id": "se-12345678",
             *             "name": "dev",
             *             "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *             "saasPortalStatus": "READY",
             *             "saasPortalUrl": "https://saas-portal.example.com",
             *             "servicePlans": [
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               },
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               }
             *             ],
             *             "sourceEnvironmentID": "se-12345678",
             *             "sourceEnvironmentName": "dev",
             *             "type": "DEV",
             *             "visibility": "private"
             *           },
             *           {
             *             "id": "se-12345678",
             *             "name": "dev",
             *             "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *             "saasPortalStatus": "READY",
             *             "saasPortalUrl": "https://saas-portal.example.com",
             *             "servicePlans": [
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               },
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               }
             *             ],
             *             "sourceEnvironmentID": "se-12345678",
             *             "sourceEnvironmentName": "dev",
             *             "type": "DEV",
             *             "visibility": "private"
             *           }
             *         ],
             *         "serviceLogoURL": "Deleniti et enim autem sunt.",
             *         "serviceProviderID": "sp-12345678",
             *         "serviceProviderName": "Omnistrate, Inc."
             *       },
             *       {
             *         "createdAt": "2019-01-01T00:00:00Z",
             *         "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *         "id": "s-12345678",
             *         "key": "mysql",
             *         "name": "MySQL multi-writer service",
             *         "roleType": "admin",
             *         "serviceEnvironments": [
             *           {
             *             "id": "se-12345678",
             *             "name": "dev",
             *             "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *             "saasPortalStatus": "READY",
             *             "saasPortalUrl": "https://saas-portal.example.com",
             *             "servicePlans": [
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               },
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               }
             *             ],
             *             "sourceEnvironmentID": "se-12345678",
             *             "sourceEnvironmentName": "dev",
             *             "type": "DEV",
             *             "visibility": "private"
             *           },
             *           {
             *             "id": "se-12345678",
             *             "name": "dev",
             *             "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *             "saasPortalStatus": "READY",
             *             "saasPortalUrl": "https://saas-portal.example.com",
             *             "servicePlans": [
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               },
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               }
             *             ],
             *             "sourceEnvironmentID": "se-12345678",
             *             "sourceEnvironmentName": "dev",
             *             "type": "DEV",
             *             "visibility": "private"
             *           },
             *           {
             *             "id": "se-12345678",
             *             "name": "dev",
             *             "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *             "saasPortalStatus": "READY",
             *             "saasPortalUrl": "https://saas-portal.example.com",
             *             "servicePlans": [
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               },
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               }
             *             ],
             *             "sourceEnvironmentID": "se-12345678",
             *             "sourceEnvironmentName": "dev",
             *             "type": "DEV",
             *             "visibility": "private"
             *           },
             *           {
             *             "id": "se-12345678",
             *             "name": "dev",
             *             "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
             *             "saasPortalStatus": "READY",
             *             "saasPortalUrl": "https://saas-portal.example.com",
             *             "servicePlans": [
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               },
             *               {
             *                 "description": "A Basic product tier",
             *                 "modelType": "CUSTOMER_HOSTED",
             *                 "name": "Basic",
             *                 "productTierID": "pt-12345678",
             *                 "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *               }
             *             ],
             *             "sourceEnvironmentID": "se-12345678",
             *             "sourceEnvironmentName": "dev",
             *             "type": "DEV",
             *             "visibility": "private"
             *           }
             *         ],
             *         "serviceLogoURL": "Deleniti et enim autem sunt.",
             *         "serviceProviderID": "sp-12345678",
             *         "serviceProviderName": "Omnistrate, Inc."
             *       }
             *     ]
             */
            services?: components["schemas"]["DescribeServiceResult"][];
        };
        /** @example {
         *       "token": "54"
         *     } */
        ListServicesOrchestrationsRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example 1
             */
            token: string;
        };
        /**
         * @description List of service orchestrations
         * @example [
         *       {
         *         "ServicesTopology": [
         *           {
         *             "dependsOnDeployment": [
         *               "instanceDeploymentAlias1",
         *               "instanceDeploymentAlias2"
         *             ],
         *             "failedReason": "Invalid inputs",
         *             "instanceDeploymentAlias": "instanceDeploymentAlias",
         *             "instanceId": "i-12345678",
         *             "serviceId": "s-12345678",
         *             "status": "PENDING",
         *             "statusMessage": "Creating deployment",
         *             "subscriptionId": "Enim blanditiis."
         *           },
         *           {
         *             "dependsOnDeployment": [
         *               "instanceDeploymentAlias1",
         *               "instanceDeploymentAlias2"
         *             ],
         *             "failedReason": "Invalid inputs",
         *             "instanceDeploymentAlias": "instanceDeploymentAlias",
         *             "instanceId": "i-12345678",
         *             "serviceId": "s-12345678",
         *             "status": "PENDING",
         *             "statusMessage": "Creating deployment",
         *             "subscriptionId": "Enim blanditiis."
         *           },
         *           {
         *             "dependsOnDeployment": [
         *               "instanceDeploymentAlias1",
         *               "instanceDeploymentAlias2"
         *             ],
         *             "failedReason": "Invalid inputs",
         *             "instanceDeploymentAlias": "instanceDeploymentAlias",
         *             "instanceId": "i-12345678",
         *             "serviceId": "s-12345678",
         *             "status": "PENDING",
         *             "statusMessage": "Creating deployment",
         *             "subscriptionId": "Enim blanditiis."
         *           },
         *           {
         *             "dependsOnDeployment": [
         *               "instanceDeploymentAlias1",
         *               "instanceDeploymentAlias2"
         *             ],
         *             "failedReason": "Invalid inputs",
         *             "instanceDeploymentAlias": "instanceDeploymentAlias",
         *             "instanceId": "i-12345678",
         *             "serviceId": "s-12345678",
         *             "status": "PENDING",
         *             "statusMessage": "Creating deployment",
         *             "subscriptionId": "Enim blanditiis."
         *           }
         *         ],
         *         "createdAt": "2021-01-01T00:00:00Z",
         *         "id": "so-12345678",
         *         "orchestrationFailedReason": "Invalid DSL",
         *         "resultParams": {
         *           "param1": "value1",
         *           "param2": "value2"
         *         },
         *         "status": "PENDING",
         *         "updatedAt": "2021-01-01T00:00:00Z"
         *       },
         *       {
         *         "ServicesTopology": [
         *           {
         *             "dependsOnDeployment": [
         *               "instanceDeploymentAlias1",
         *               "instanceDeploymentAlias2"
         *             ],
         *             "failedReason": "Invalid inputs",
         *             "instanceDeploymentAlias": "instanceDeploymentAlias",
         *             "instanceId": "i-12345678",
         *             "serviceId": "s-12345678",
         *             "status": "PENDING",
         *             "statusMessage": "Creating deployment",
         *             "subscriptionId": "Enim blanditiis."
         *           },
         *           {
         *             "dependsOnDeployment": [
         *               "instanceDeploymentAlias1",
         *               "instanceDeploymentAlias2"
         *             ],
         *             "failedReason": "Invalid inputs",
         *             "instanceDeploymentAlias": "instanceDeploymentAlias",
         *             "instanceId": "i-12345678",
         *             "serviceId": "s-12345678",
         *             "status": "PENDING",
         *             "statusMessage": "Creating deployment",
         *             "subscriptionId": "Enim blanditiis."
         *           },
         *           {
         *             "dependsOnDeployment": [
         *               "instanceDeploymentAlias1",
         *               "instanceDeploymentAlias2"
         *             ],
         *             "failedReason": "Invalid inputs",
         *             "instanceDeploymentAlias": "instanceDeploymentAlias",
         *             "instanceId": "i-12345678",
         *             "serviceId": "s-12345678",
         *             "status": "PENDING",
         *             "statusMessage": "Creating deployment",
         *             "subscriptionId": "Enim blanditiis."
         *           },
         *           {
         *             "dependsOnDeployment": [
         *               "instanceDeploymentAlias1",
         *               "instanceDeploymentAlias2"
         *             ],
         *             "failedReason": "Invalid inputs",
         *             "instanceDeploymentAlias": "instanceDeploymentAlias",
         *             "instanceId": "i-12345678",
         *             "serviceId": "s-12345678",
         *             "status": "PENDING",
         *             "statusMessage": "Creating deployment",
         *             "subscriptionId": "Enim blanditiis."
         *           }
         *         ],
         *         "createdAt": "2021-01-01T00:00:00Z",
         *         "id": "so-12345678",
         *         "orchestrationFailedReason": "Invalid DSL",
         *         "resultParams": {
         *           "param1": "value1",
         *           "param2": "value2"
         *         },
         *         "status": "PENDING",
         *         "updatedAt": "2021-01-01T00:00:00Z"
         *       }
         *     ]
         */
        ListServicesOrchestrationsResult: components["schemas"]["DescribeServicesOrchestrationResult"][];
        /** @example {
         *       "managed": false,
         *       "serviceId": "s-12345678",
         *       "token": "7"
         *     } */
        ListStorageConfigsRequest: {
            /**
             * @description Is storage config managed by omnistrate
             * @example false
             */
            managed?: boolean;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example s
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "sc-12345678"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListStorageConfigsResult: {
            /**
             * @description List of storage config IDs
             * @example [
             *       "sc-12345678"
             *     ]
             */
            ids: string[];
            /**
             * @description Token to use to get the next page of results
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "managed": false,
         *       "serviceId": "s-12345678",
         *       "token": "gh"
         *     } */
        ListStorageVolumeConfigsRequest: {
            /**
             * @description Is storage volume config managed by omnistrate
             * @example false
             */
            managed?: boolean;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example cki
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "svc-12345678"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListStorageVolumeConfigsResult: {
            /**
             * @description The storage volume config ids to list
             * @example [
             *       "svc-12345678"
             *     ]
             */
            ids: string[];
            /**
             * @description The next token to use for pagination
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "status": "PENDING",
         *       "token": "yo"
         *     } */
        ListSubscriptionRequestsRequest: {
            /**
             * @description The status of the subscription request
             * @example PENDING|APPROVED|DENIED|CANCELLED
             */
            status?: string;
            /**
             * @description JWT token used to perform authorization
             * @example u
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "subr-12345678",
         *         "subr-abcdefgh",
         *         "subr-1234efgh"
         *       ],
         *       "nextPageToken": "next-token",
         *       "subscriptionRequests": [
         *         {
         *           "createdAt": "2019-01-01T00:00:00Z",
         *           "id": "subr-12345678",
         *           "productTierId": "pt-12345678",
         *           "productTierName": "Omnistrate Multi Tenancy",
         *           "rootUserEmail": "abc@gmail.com",
         *           "rootUserId": "org-12345678",
         *           "rootUserName": "John Doe",
         *           "serviceId": "s-12345678",
         *           "serviceLogoURL": "Praesentium eum non quia.",
         *           "serviceName": "MySQL multi-writer service",
         *           "status": "PENDING",
         *           "updatedAt": "2019-01-01T00:00:00Z",
         *           "updatedByUserId": "user-12345678",
         *           "updatedByUserName": "John Doe"
         *         },
         *         {
         *           "createdAt": "2019-01-01T00:00:00Z",
         *           "id": "subr-12345678",
         *           "productTierId": "pt-12345678",
         *           "productTierName": "Omnistrate Multi Tenancy",
         *           "rootUserEmail": "abc@gmail.com",
         *           "rootUserId": "org-12345678",
         *           "rootUserName": "John Doe",
         *           "serviceId": "s-12345678",
         *           "serviceLogoURL": "Praesentium eum non quia.",
         *           "serviceName": "MySQL multi-writer service",
         *           "status": "PENDING",
         *           "updatedAt": "2019-01-01T00:00:00Z",
         *           "updatedByUserId": "user-12345678",
         *           "updatedByUserName": "John Doe"
         *         }
         *       ]
         *     } */
        ListSubscriptionRequestsResult: {
            /**
             * @description List of subscription request IDs
             * @example [
             *       "subr-12345678",
             *       "subr-abcdefgh",
             *       "subr-1234efgh"
             *     ]
             */
            ids: string[];
            /**
             * @description The next token to use when listing subscription requests
             * @example next-token
             */
            nextPageToken?: string;
            /**
             * @description List of subscription requests
             * @example [
             *       {
             *         "createdAt": "2019-01-01T00:00:00Z",
             *         "id": "subr-12345678",
             *         "productTierId": "pt-12345678",
             *         "productTierName": "Omnistrate Multi Tenancy",
             *         "rootUserEmail": "abc@gmail.com",
             *         "rootUserId": "org-12345678",
             *         "rootUserName": "John Doe",
             *         "serviceId": "s-12345678",
             *         "serviceLogoURL": "Praesentium eum non quia.",
             *         "serviceName": "MySQL multi-writer service",
             *         "status": "PENDING",
             *         "updatedAt": "2019-01-01T00:00:00Z",
             *         "updatedByUserId": "user-12345678",
             *         "updatedByUserName": "John Doe"
             *       },
             *       {
             *         "createdAt": "2019-01-01T00:00:00Z",
             *         "id": "subr-12345678",
             *         "productTierId": "pt-12345678",
             *         "productTierName": "Omnistrate Multi Tenancy",
             *         "rootUserEmail": "abc@gmail.com",
             *         "rootUserId": "org-12345678",
             *         "rootUserName": "John Doe",
             *         "serviceId": "s-12345678",
             *         "serviceLogoURL": "Praesentium eum non quia.",
             *         "serviceName": "MySQL multi-writer service",
             *         "status": "PENDING",
             *         "updatedAt": "2019-01-01T00:00:00Z",
             *         "updatedByUserId": "user-12345678",
             *         "updatedByUserName": "John Doe"
             *       }
             *     ]
             */
            subscriptionRequests?: components["schemas"]["DescribeSubscriptionRequestResult"][];
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "serviceId": "service-12345678",
         *       "token": "yn"
         *     } */
        ListSubscriptionsRequest: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example uw
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "sub-12345678",
         *         "sub-abcdefgh",
         *         "sub-1234efgh"
         *       ],
         *       "nextPageToken": "next-token",
         *       "subscriptions": [
         *         {
         *           "accountConfigIdentityId": "org-12345678",
         *           "allowCreatesWhenPaymentNotConfigured": true,
         *           "cloudProviderNames": [
         *             "aws",
         *             "gcp"
         *           ],
         *           "createdAt": "2019-01-01T00:00:00Z",
         *           "defaultSubscription": true,
         *           "id": "sub-12345678",
         *           "maxNumberOfInstances": 10,
         *           "paymentMethodConfigured": true,
         *           "productTierId": "pt-12345678",
         *           "productTierName": "Omnistrate Multi Tenancy",
         *           "roleType": "root",
         *           "rootUserId": "user-12345678",
         *           "serviceId": "s-12345678",
         *           "serviceLogoURL": "Aut ea quia consequuntur et sunt itaque.",
         *           "serviceName": "MySQL multi-writer service",
         *           "serviceOrgId": "org-12345678",
         *           "serviceOrgName": "Omnistrate",
         *           "status": "ACTIVE",
         *           "subscriptionOwnerName": "John Doe"
         *         },
         *         {
         *           "accountConfigIdentityId": "org-12345678",
         *           "allowCreatesWhenPaymentNotConfigured": true,
         *           "cloudProviderNames": [
         *             "aws",
         *             "gcp"
         *           ],
         *           "createdAt": "2019-01-01T00:00:00Z",
         *           "defaultSubscription": true,
         *           "id": "sub-12345678",
         *           "maxNumberOfInstances": 10,
         *           "paymentMethodConfigured": true,
         *           "productTierId": "pt-12345678",
         *           "productTierName": "Omnistrate Multi Tenancy",
         *           "roleType": "root",
         *           "rootUserId": "user-12345678",
         *           "serviceId": "s-12345678",
         *           "serviceLogoURL": "Aut ea quia consequuntur et sunt itaque.",
         *           "serviceName": "MySQL multi-writer service",
         *           "serviceOrgId": "org-12345678",
         *           "serviceOrgName": "Omnistrate",
         *           "status": "ACTIVE",
         *           "subscriptionOwnerName": "John Doe"
         *         },
         *         {
         *           "accountConfigIdentityId": "org-12345678",
         *           "allowCreatesWhenPaymentNotConfigured": true,
         *           "cloudProviderNames": [
         *             "aws",
         *             "gcp"
         *           ],
         *           "createdAt": "2019-01-01T00:00:00Z",
         *           "defaultSubscription": true,
         *           "id": "sub-12345678",
         *           "maxNumberOfInstances": 10,
         *           "paymentMethodConfigured": true,
         *           "productTierId": "pt-12345678",
         *           "productTierName": "Omnistrate Multi Tenancy",
         *           "roleType": "root",
         *           "rootUserId": "user-12345678",
         *           "serviceId": "s-12345678",
         *           "serviceLogoURL": "Aut ea quia consequuntur et sunt itaque.",
         *           "serviceName": "MySQL multi-writer service",
         *           "serviceOrgId": "org-12345678",
         *           "serviceOrgName": "Omnistrate",
         *           "status": "ACTIVE",
         *           "subscriptionOwnerName": "John Doe"
         *         },
         *         {
         *           "accountConfigIdentityId": "org-12345678",
         *           "allowCreatesWhenPaymentNotConfigured": true,
         *           "cloudProviderNames": [
         *             "aws",
         *             "gcp"
         *           ],
         *           "createdAt": "2019-01-01T00:00:00Z",
         *           "defaultSubscription": true,
         *           "id": "sub-12345678",
         *           "maxNumberOfInstances": 10,
         *           "paymentMethodConfigured": true,
         *           "productTierId": "pt-12345678",
         *           "productTierName": "Omnistrate Multi Tenancy",
         *           "roleType": "root",
         *           "rootUserId": "user-12345678",
         *           "serviceId": "s-12345678",
         *           "serviceLogoURL": "Aut ea quia consequuntur et sunt itaque.",
         *           "serviceName": "MySQL multi-writer service",
         *           "serviceOrgId": "org-12345678",
         *           "serviceOrgName": "Omnistrate",
         *           "status": "ACTIVE",
         *           "subscriptionOwnerName": "John Doe"
         *         }
         *       ]
         *     } */
        ListSubscriptionsResult: {
            /**
             * @description List of subscription IDs
             * @example [
             *       "sub-12345678",
             *       "sub-abcdefgh",
             *       "sub-1234efgh"
             *     ]
             */
            ids: string[];
            /**
             * @description The next token to use when listing subscriptions
             * @example next-token
             */
            nextPageToken?: string;
            /**
             * @description List of subscriptions
             * @example [
             *       {
             *         "accountConfigIdentityId": "org-12345678",
             *         "allowCreatesWhenPaymentNotConfigured": true,
             *         "cloudProviderNames": [
             *           "aws",
             *           "gcp"
             *         ],
             *         "createdAt": "2019-01-01T00:00:00Z",
             *         "defaultSubscription": true,
             *         "id": "sub-12345678",
             *         "maxNumberOfInstances": 10,
             *         "paymentMethodConfigured": true,
             *         "productTierId": "pt-12345678",
             *         "productTierName": "Omnistrate Multi Tenancy",
             *         "roleType": "root",
             *         "rootUserId": "user-12345678",
             *         "serviceId": "s-12345678",
             *         "serviceLogoURL": "Aut ea quia consequuntur et sunt itaque.",
             *         "serviceName": "MySQL multi-writer service",
             *         "serviceOrgId": "org-12345678",
             *         "serviceOrgName": "Omnistrate",
             *         "status": "ACTIVE",
             *         "subscriptionOwnerName": "John Doe"
             *       },
             *       {
             *         "accountConfigIdentityId": "org-12345678",
             *         "allowCreatesWhenPaymentNotConfigured": true,
             *         "cloudProviderNames": [
             *           "aws",
             *           "gcp"
             *         ],
             *         "createdAt": "2019-01-01T00:00:00Z",
             *         "defaultSubscription": true,
             *         "id": "sub-12345678",
             *         "maxNumberOfInstances": 10,
             *         "paymentMethodConfigured": true,
             *         "productTierId": "pt-12345678",
             *         "productTierName": "Omnistrate Multi Tenancy",
             *         "roleType": "root",
             *         "rootUserId": "user-12345678",
             *         "serviceId": "s-12345678",
             *         "serviceLogoURL": "Aut ea quia consequuntur et sunt itaque.",
             *         "serviceName": "MySQL multi-writer service",
             *         "serviceOrgId": "org-12345678",
             *         "serviceOrgName": "Omnistrate",
             *         "status": "ACTIVE",
             *         "subscriptionOwnerName": "John Doe"
             *       },
             *       {
             *         "accountConfigIdentityId": "org-12345678",
             *         "allowCreatesWhenPaymentNotConfigured": true,
             *         "cloudProviderNames": [
             *           "aws",
             *           "gcp"
             *         ],
             *         "createdAt": "2019-01-01T00:00:00Z",
             *         "defaultSubscription": true,
             *         "id": "sub-12345678",
             *         "maxNumberOfInstances": 10,
             *         "paymentMethodConfigured": true,
             *         "productTierId": "pt-12345678",
             *         "productTierName": "Omnistrate Multi Tenancy",
             *         "roleType": "root",
             *         "rootUserId": "user-12345678",
             *         "serviceId": "s-12345678",
             *         "serviceLogoURL": "Aut ea quia consequuntur et sunt itaque.",
             *         "serviceName": "MySQL multi-writer service",
             *         "serviceOrgId": "org-12345678",
             *         "serviceOrgName": "Omnistrate",
             *         "status": "ACTIVE",
             *         "subscriptionOwnerName": "John Doe"
             *       }
             *     ]
             */
            subscriptions?: components["schemas"]["DescribeSubscriptionResult"][];
        };
        /** @example {
         *       "latestIncrementalVersionForMajorVersion": "3.0",
         *       "latestMajorVersionOnly": true,
         *       "nextPageToken": "token",
         *       "pageSize": 10,
         *       "productTierId": "Beatae beatae.",
         *       "serviceId": "s-12345678",
         *       "token": "44j"
         *     } */
        ListTierVersionSetsRequest: {
            /**
             * @description Returns the latest incremental version for the given major version. The parameter needs to be specified in isolation
             * @example 3.0
             */
            latestIncrementalVersionForMajorVersion?: string;
            /**
             * @description Indicates whether to return only the latest version set. The parameter needs to be specified in isolation.
             * @example true
             */
            latestMajorVersionOnly?: boolean;
            /**
             * @description The next token to use for pagination
             * @example token
             */
            nextPageToken?: string;
            /**
             * Format: int64
             * @description The number of resources to return per page
             * @example 10
             */
            pageSize?: number;
            /**
             * @description ID of a Product Tier
             * @example Excepturi reiciendis ab.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example bqc
             */
            token: string;
        };
        /** @example {
         *       "nextPageToken": "next-token",
         *       "tierVersionSets": [
         *         {
         *           "autoApproveSubscription": false,
         *           "baseVersion": "3.0",
         *           "createdAt": "2020-01-01T00:00:00Z",
         *           "createdBy": "John Doe",
         *           "description": "Labore facilis officia placeat autem optio porro.",
         *           "enabledFeatures": [
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             }
         *           ],
         *           "features": {
         *             "LOGS": true,
         *             "METRICS": false
         *           },
         *           "instanceCount": 12,
         *           "latestUpgradePathId": "upgrade-12345678",
         *           "name": "Regular version set",
         *           "parentVersion": "2.0",
         *           "productTierId": "Beatae beatae.",
         *           "releasedAt": "2020-01-01T00:00:00Z",
         *           "releasedBy": "John Doe",
         *           "resources": [
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             }
         *           ],
         *           "serviceId": "s-12345678",
         *           "serviceModelId": "Deserunt ab est sequi rem ab in.",
         *           "status": "Preferred|Active|Deprecated|Pending",
         *           "type": "Major|Incremental|UserDefined",
         *           "updatedAt": "2020-01-01T00:00:00Z",
         *           "version": "3.0"
         *         },
         *         {
         *           "autoApproveSubscription": false,
         *           "baseVersion": "3.0",
         *           "createdAt": "2020-01-01T00:00:00Z",
         *           "createdBy": "John Doe",
         *           "description": "Labore facilis officia placeat autem optio porro.",
         *           "enabledFeatures": [
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             },
         *             {
         *               "configuration": {
         *                 "provider": "native"
         *               },
         *               "feature": "LOGS",
         *               "scope": "INTERNAL"
         *             }
         *           ],
         *           "features": {
         *             "LOGS": true,
         *             "METRICS": false
         *           },
         *           "instanceCount": 12,
         *           "latestUpgradePathId": "upgrade-12345678",
         *           "name": "Regular version set",
         *           "parentVersion": "2.0",
         *           "productTierId": "Beatae beatae.",
         *           "releasedAt": "2020-01-01T00:00:00Z",
         *           "releasedBy": "John Doe",
         *           "resources": [
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             },
         *             {
         *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *               "id": "r-12345678",
         *               "imageConfigId": "imgc-12345678",
         *               "infraConfigId": "ic-12345678",
         *               "isExternal": true,
         *               "managedResourceType": "PortsBasedProxy",
         *               "name": "MySQL multi-writer service",
         *               "urlKey": "myResource"
         *             }
         *           ],
         *           "serviceId": "s-12345678",
         *           "serviceModelId": "Deserunt ab est sequi rem ab in.",
         *           "status": "Preferred|Active|Deprecated|Pending",
         *           "type": "Major|Incremental|UserDefined",
         *           "updatedAt": "2020-01-01T00:00:00Z",
         *           "version": "3.0"
         *         }
         *       ]
         *     } */
        ListTierVersionSetsResult: {
            /**
             * @description Token to use for the next request
             * @example next-token
             */
            nextPageToken?: string;
            /**
             * @description List of product-tier version sets.
             * @example [
             *       {
             *         "autoApproveSubscription": false,
             *         "baseVersion": "3.0",
             *         "createdAt": "2020-01-01T00:00:00Z",
             *         "createdBy": "John Doe",
             *         "description": "Labore facilis officia placeat autem optio porro.",
             *         "enabledFeatures": [
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           }
             *         ],
             *         "features": {
             *           "LOGS": true,
             *           "METRICS": false
             *         },
             *         "instanceCount": 12,
             *         "latestUpgradePathId": "upgrade-12345678",
             *         "name": "Regular version set",
             *         "parentVersion": "2.0",
             *         "productTierId": "Beatae beatae.",
             *         "releasedAt": "2020-01-01T00:00:00Z",
             *         "releasedBy": "John Doe",
             *         "resources": [
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           }
             *         ],
             *         "serviceId": "s-12345678",
             *         "serviceModelId": "Deserunt ab est sequi rem ab in.",
             *         "status": "Preferred|Active|Deprecated|Pending",
             *         "type": "Major|Incremental|UserDefined",
             *         "updatedAt": "2020-01-01T00:00:00Z",
             *         "version": "3.0"
             *       },
             *       {
             *         "autoApproveSubscription": false,
             *         "baseVersion": "3.0",
             *         "createdAt": "2020-01-01T00:00:00Z",
             *         "createdBy": "John Doe",
             *         "description": "Labore facilis officia placeat autem optio porro.",
             *         "enabledFeatures": [
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           }
             *         ],
             *         "features": {
             *           "LOGS": true,
             *           "METRICS": false
             *         },
             *         "instanceCount": 12,
             *         "latestUpgradePathId": "upgrade-12345678",
             *         "name": "Regular version set",
             *         "parentVersion": "2.0",
             *         "productTierId": "Beatae beatae.",
             *         "releasedAt": "2020-01-01T00:00:00Z",
             *         "releasedBy": "John Doe",
             *         "resources": [
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           }
             *         ],
             *         "serviceId": "s-12345678",
             *         "serviceModelId": "Deserunt ab est sequi rem ab in.",
             *         "status": "Preferred|Active|Deprecated|Pending",
             *         "type": "Major|Incremental|UserDefined",
             *         "updatedAt": "2020-01-01T00:00:00Z",
             *         "version": "3.0"
             *       },
             *       {
             *         "autoApproveSubscription": false,
             *         "baseVersion": "3.0",
             *         "createdAt": "2020-01-01T00:00:00Z",
             *         "createdBy": "John Doe",
             *         "description": "Labore facilis officia placeat autem optio porro.",
             *         "enabledFeatures": [
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           },
             *           {
             *             "configuration": {
             *               "provider": "native"
             *             },
             *             "feature": "LOGS",
             *             "scope": "INTERNAL"
             *           }
             *         ],
             *         "features": {
             *           "LOGS": true,
             *           "METRICS": false
             *         },
             *         "instanceCount": 12,
             *         "latestUpgradePathId": "upgrade-12345678",
             *         "name": "Regular version set",
             *         "parentVersion": "2.0",
             *         "productTierId": "Beatae beatae.",
             *         "releasedAt": "2020-01-01T00:00:00Z",
             *         "releasedBy": "John Doe",
             *         "resources": [
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           },
             *           {
             *             "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *             "id": "r-12345678",
             *             "imageConfigId": "imgc-12345678",
             *             "infraConfigId": "ic-12345678",
             *             "isExternal": true,
             *             "managedResourceType": "PortsBasedProxy",
             *             "name": "MySQL multi-writer service",
             *             "urlKey": "myResource"
             *           }
             *         ],
             *         "serviceId": "s-12345678",
             *         "serviceModelId": "Deserunt ab est sequi rem ab in.",
             *         "status": "Preferred|Active|Deprecated|Pending",
             *         "type": "Major|Incremental|UserDefined",
             *         "updatedAt": "2020-01-01T00:00:00Z",
             *         "version": "3.0"
             *       }
             *     ]
             */
            tierVersionSets: components["schemas"]["TierVersionSet"][];
        };
        /** @example {
         *       "serviceEnvironmentId": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "f8i"
         *     } */
        ListUpgradePathRequest: {
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentId?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example ent
             */
            token: string;
        };
        /** @example {
         *       "ids": [
         *         "up-12345678",
         *         "up-87654321"
         *       ],
         *       "nextPageToken": "next-token"
         *     } */
        ListUpgradePathResult: {
            /**
             * @description List of upgrade path IDs
             * @example [
             *       "up-12345678",
             *       "up-87654321"
             *     ]
             */
            ids?: string[];
            /**
             * @description Token to use to get the next page of results
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "cloudProvider": "aws",
         *       "region": "us-west-2",
         *       "serviceId": "s-12345678",
         *       "serviceModelId": "sm-12345678",
         *       "token": "w"
         *     } */
        ListVUnitsRequest: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProvider: string;
            /**
             * @description Region code specific to the cloud-provider
             * @example us-west-2
             */
            region: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Service Model
             * @example Maiores quo.
             */
            serviceModelId: string;
            /**
             * @description JWT token used to perform authorization
             * @example va
             */
            token: string;
        };
        /** @example {
         *       "cloudProvider": "aws",
         *       "region": "us-west-2"
         *     } */
        ListVUnitsRequest2: {
            /**
             * @description The infra / cloud provider name
             * @example aws
             */
            cloudProvider: string;
            /**
             * @description Region code specific to the cloud-provider
             * @example us-west-2
             */
            region: string;
        };
        /** @example {
         *       "ids": {
         *         "aws": [
         *           "vu-12345678",
         *           "vu-abcdefgh"
         *         ],
         *         "gcp": [
         *           "vu-1234efgh"
         *         ]
         *       },
         *       "nextPageToken": "next-token"
         *     } */
        ListVUnitsResult: {
            /**
             * @description List of VUnit IDs per Cloud provider
             * @example {
             *       "aws": [
             *         "vu-12345678",
             *         "vu-abcdefgh"
             *       ],
             *       "gcp": [
             *         "vu-1234efgh"
             *       ]
             *     }
             */
            ids?: {
                [key: string]: unknown;
            };
            /**
             * @description Next page token
             * @example next-token
             */
            nextPageToken?: string;
        };
        /** @example {
         *       "associatedKubernetesServiceName": "my-service",
         *       "associatedResourceID": "r-12345678",
         *       "path": "/path",
         *       "port": 8080
         *     } */
        LoadBalancerPathConfiguration: {
            /**
             * @description Override the default target Kubernetes service name with this value
             * @example my-service
             */
            associatedKubernetesServiceName?: string;
            /**
             * @description ID of a resource
             * @example Soluta placeat dolores.
             */
            associatedResourceID: string;
            /**
             * @description The REST API path backed by the load balancer
             * @example /path
             */
            path: string;
            /**
             * Format: int64
             * @description The port to forward traffic to
             * @example 8080
             */
            port: number;
        };
        /** @example {
         *       "authorizationCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
         *       "companyDescription": "We sell xyz database software",
         *       "companyUrl": "https://www.mywebsite.com",
         *       "deviceCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
         *       "identityProviderName": "Google",
         *       "invitedEmail": "abc@gmail.com",
         *       "legalCompanyName": "mywebsite",
         *       "redirectUri": "https://www.example/redirect"
         *     } */
        LoginWithIdentityProviderRequest: {
            /**
             * @description The authorization code from the Identity Provider
             * @example 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
             */
            authorizationCode?: string;
            /** @example We sell xyz database software */
            companyDescription?: string;
            /** @example https://www.mywebsite.com */
            companyUrl?: string;
            /**
             * @description The device code from the Identity Provider
             * @example 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
             */
            deviceCode?: string;
            /**
             * @description The name of the identity provider
             * @example Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
             */
            identityProviderName: string;
            /**
             * Format: email
             * @description Email address that the user was invited with
             * @example abc@gmail.com
             */
            invitedEmail?: string;
            /** @example mywebsite */
            legalCompanyName?: string;
            /**
             * @description The redirect URI used to get the authorization code
             * @example https://www.example/redirect
             */
            redirectUri?: string;
        };
        /** @example {
         *       "jwtToken": ""
         *     } */
        LoginWithIdentityProviderResult: {
            /**
             * @description The jwt token
             * @example
             */
            jwtToken: string;
        };
        /** @example {
         *       "token": "bo"
         *     } */
        LogoutRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example xnb
             */
            token: string;
        };
        /** @example {
         *       "DeploymentCellConfigurations": {
         *         "PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL": {
         *           "DeploymentCellConfigurationPerCloudProvider": {
         *             "aws|azure|gcp|all": {
         *               "Amenities": [
         *                 {
         *                   "Description": "Ensures high availability across multiple zones.",
         *                   "IsManaged": true,
         *                   "Name": "Prometheus",
         *                   "Properties": {
         *                     "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                     "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                     "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *                   },
         *                   "Type": "HelmChart"
         *                 },
         *                 {
         *                   "Description": "Ensures high availability across multiple zones.",
         *                   "IsManaged": true,
         *                   "Name": "Prometheus",
         *                   "Properties": {
         *                     "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                     "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                     "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *                   },
         *                   "Type": "HelmChart"
         *                 },
         *                 {
         *                   "Description": "Ensures high availability across multiple zones.",
         *                   "IsManaged": true,
         *                   "Name": "Prometheus",
         *                   "Properties": {
         *                     "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                     "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                     "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *                   },
         *                   "Type": "HelmChart"
         *                 },
         *                 {
         *                   "Description": "Ensures high availability across multiple zones.",
         *                   "IsManaged": true,
         *                   "Name": "Prometheus",
         *                   "Properties": {
         *                     "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
         *                     "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
         *                     "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
         *                   },
         *                   "Type": "HelmChart"
         *                 }
         *               ]
         *             }
         *           }
         *         }
         *       },
         *       "token": "y2e"
         *     } */
        ModifyServiceProviderOrganizationRequest: {
            /**
             * @description The default deployment cell configurations for the organization per environment.
             * @example {
             *       "PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL": {
             *         "DeploymentCellConfigurationPerCloudProvider": {
             *           "aws|azure|gcp|all": {
             *             "Amenities": [
             *               {
             *                 "Description": "Ensures high availability across multiple zones.",
             *                 "IsManaged": true,
             *                 "Name": "Prometheus",
             *                 "Properties": {
             *                   "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *                   "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *                   "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *                 },
             *                 "Type": "HelmChart"
             *               },
             *               {
             *                 "Description": "Ensures high availability across multiple zones.",
             *                 "IsManaged": true,
             *                 "Name": "Prometheus",
             *                 "Properties": {
             *                   "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *                   "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *                   "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *                 },
             *                 "Type": "HelmChart"
             *               },
             *               {
             *                 "Description": "Ensures high availability across multiple zones.",
             *                 "IsManaged": true,
             *                 "Name": "Prometheus",
             *                 "Properties": {
             *                   "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *                   "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *                   "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *                 },
             *                 "Type": "HelmChart"
             *               },
             *               {
             *                 "Description": "Ensures high availability across multiple zones.",
             *                 "IsManaged": true,
             *                 "Name": "Prometheus",
             *                 "Properties": {
             *                   "Consectetur pariatur.": "Natus alias nostrum fuga quisquam et.",
             *                   "Harum sed molestiae consequatur ut in enim.": "A id molestias aut.",
             *                   "Vitae fugiat.": "Suscipit modi dolor soluta velit illum quo."
             *                 },
             *                 "Type": "HelmChart"
             *               }
             *             ]
             *           }
             *         }
             *       }
             *     }
             */
            DeploymentCellConfigurations?: {
                [key: string]: unknown;
            };
            /**
             * @description JWT token used to perform authorization
             * @example vg
             */
            token: string;
        };
        /** @example {
         *       "DeploymentCellConfigurations": {
         *         "Odio perferendis et suscipit et ut.": {
         *           "DeploymentCellConfigurationPerCloudProvider": {
         *             "Voluptas natus dolor non aut.": {
         *               "Amenities": [
         *                 {
         *                   "Description": "Ensures high availability across multiple zones.",
         *                   "IsManaged": true,
         *                   "Name": "Prometheus",
         *                   "Properties": {
         *                     "Dolores voluptatibus temporibus.": "Minus consequatur eos libero animi.",
         *                     "Sed et nobis voluptas sequi officiis facilis.": "Nulla voluptatibus voluptatem explicabo ut.",
         *                     "Sequi magnam porro.": "Qui earum odio quibusdam a adipisci id."
         *                   },
         *                   "Type": "HelmChart"
         *                 },
         *                 {
         *                   "Description": "Ensures high availability across multiple zones.",
         *                   "IsManaged": true,
         *                   "Name": "Prometheus",
         *                   "Properties": {
         *                     "Dolores voluptatibus temporibus.": "Minus consequatur eos libero animi.",
         *                     "Sed et nobis voluptas sequi officiis facilis.": "Nulla voluptatibus voluptatem explicabo ut.",
         *                     "Sequi magnam porro.": "Qui earum odio quibusdam a adipisci id."
         *                   },
         *                   "Type": "HelmChart"
         *                 }
         *               ]
         *             }
         *           }
         *         },
         *         "Recusandae nihil a molestias.": {
         *           "DeploymentCellConfigurationPerCloudProvider": {
         *             "Voluptas natus dolor non aut.": {
         *               "Amenities": [
         *                 {
         *                   "Description": "Ensures high availability across multiple zones.",
         *                   "IsManaged": true,
         *                   "Name": "Prometheus",
         *                   "Properties": {
         *                     "Dolores voluptatibus temporibus.": "Minus consequatur eos libero animi.",
         *                     "Sed et nobis voluptas sequi officiis facilis.": "Nulla voluptatibus voluptatem explicabo ut.",
         *                     "Sequi magnam porro.": "Qui earum odio quibusdam a adipisci id."
         *                   },
         *                   "Type": "HelmChart"
         *                 },
         *                 {
         *                   "Description": "Ensures high availability across multiple zones.",
         *                   "IsManaged": true,
         *                   "Name": "Prometheus",
         *                   "Properties": {
         *                     "Dolores voluptatibus temporibus.": "Minus consequatur eos libero animi.",
         *                     "Sed et nobis voluptas sequi officiis facilis.": "Nulla voluptatibus voluptatem explicabo ut.",
         *                     "Sequi magnam porro.": "Qui earum odio quibusdam a adipisci id."
         *                   },
         *                   "Type": "HelmChart"
         *                 }
         *               ]
         *             }
         *           }
         *         }
         *       }
         *     } */
        ModifyServiceProviderOrganizationRequest2: {
            /**
             * @description The default deployment cell configurations for the organization per environment.
             * @example {
             *       "Dolores ea ad ipsam.": {
             *         "DeploymentCellConfigurationPerCloudProvider": {
             *           "Voluptas natus dolor non aut.": {
             *             "Amenities": [
             *               {
             *                 "Description": "Ensures high availability across multiple zones.",
             *                 "IsManaged": true,
             *                 "Name": "Prometheus",
             *                 "Properties": {
             *                   "Dolores voluptatibus temporibus.": "Minus consequatur eos libero animi.",
             *                   "Sed et nobis voluptas sequi officiis facilis.": "Nulla voluptatibus voluptatem explicabo ut.",
             *                   "Sequi magnam porro.": "Qui earum odio quibusdam a adipisci id."
             *                 },
             *                 "Type": "HelmChart"
             *               },
             *               {
             *                 "Description": "Ensures high availability across multiple zones.",
             *                 "IsManaged": true,
             *                 "Name": "Prometheus",
             *                 "Properties": {
             *                   "Dolores voluptatibus temporibus.": "Minus consequatur eos libero animi.",
             *                   "Sed et nobis voluptas sequi officiis facilis.": "Nulla voluptatibus voluptatem explicabo ut.",
             *                   "Sequi magnam porro.": "Qui earum odio quibusdam a adipisci id."
             *                 },
             *                 "Type": "HelmChart"
             *               }
             *             ]
             *           }
             *         }
             *       },
             *       "Temporibus ut.": {
             *         "DeploymentCellConfigurationPerCloudProvider": {
             *           "Voluptas natus dolor non aut.": {
             *             "Amenities": [
             *               {
             *                 "Description": "Ensures high availability across multiple zones.",
             *                 "IsManaged": true,
             *                 "Name": "Prometheus",
             *                 "Properties": {
             *                   "Dolores voluptatibus temporibus.": "Minus consequatur eos libero animi.",
             *                   "Sed et nobis voluptas sequi officiis facilis.": "Nulla voluptatibus voluptatem explicabo ut.",
             *                   "Sequi magnam porro.": "Qui earum odio quibusdam a adipisci id."
             *                 },
             *                 "Type": "HelmChart"
             *               },
             *               {
             *                 "Description": "Ensures high availability across multiple zones.",
             *                 "IsManaged": true,
             *                 "Name": "Prometheus",
             *                 "Properties": {
             *                   "Dolores voluptatibus temporibus.": "Minus consequatur eos libero animi.",
             *                   "Sed et nobis voluptas sequi officiis facilis.": "Nulla voluptatibus voluptatem explicabo ut.",
             *                   "Sequi magnam porro.": "Qui earum odio quibusdam a adipisci id."
             *                 },
             *                 "Type": "HelmChart"
             *               }
             *             ]
             *           }
             *         }
             *       }
             *     }
             */
            DeploymentCellConfigurations?: {
                [key: string]: components["schemas"]["DeploymentCellConfigurations"];
            };
        };
        /** @example {
         *       "id": "so-12345678",
         *       "orchestrationModifyDSL": "Non atque blanditiis placeat et et.",
         *       "token": "5d"
         *     } */
        ModifyServicesOrchestrationRequest: {
            /**
             * @description ID of a Services Orchestration
             * @example Consequatur quod possimus.
             */
            id: string;
            /**
             * @description base64 encoded content of services orchestration modify DSL
             * @example Quis velit delectus sunt voluptatem.
             */
            orchestrationModifyDSL: string;
            /**
             * @description JWT token used to perform authorization
             * @example z2
             */
            token: string;
        };
        /** @example {
         *       "orchestrationModifyDSL": "Aut quis rerum reiciendis."
         *     } */
        ModifyServicesOrchestrationRequest2: {
            /**
             * @description base64 encoded content of services orchestration modify DSL
             * @example Eum maxime magni occaecati inventore et voluptatem.
             */
            orchestrationModifyDSL: string;
        };
        /** @example {
         *       "isPrivateLinkEnabled": true
         *     } */
        NetworkFeaturesConfiguration: {
            /**
             * @description Indicates if PrivateLink is enabled for the network
             * @example true
             */
            isPrivateLinkEnabled?: boolean;
        };
        /** @example {
         *       "availabilityZone": "us-east-2a",
         *       "connectivityStatus": "HEALTHY",
         *       "diskHealth": "HEALTHY",
         *       "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *       "integrationsHealth": {
         *         "CustomerObservabilityHealth": "HEALTHY",
         *         "InternalObservabilityHealth": "HEALTHY"
         *       },
         *       "loadStatus": "LOAD_NORMAL",
         *       "nodeHealth": "HEALTHY",
         *       "nodeName": "postgres-0",
         *       "ports": [
         *         80,
         *         443
         *       ],
         *       "processHealth": "HEALTHY",
         *       "processLiveness": "HEALTHY",
         *       "status": "HEALTHY"
         *     } */
        NodeHealthSummary: {
            /**
             * @description The availability zone of the node
             * @example us-east-2a
             */
            availabilityZone?: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            connectivityStatus?: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            diskHealth?: string;
            /**
             * @description The endpoint of the node
             * @example primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
             */
            endpoint?: string;
            integrationsHealth?: components["schemas"]["IntegrationsHealth"];
            /**
             * @description The load status of a pod
             * @example LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
             */
            loadStatus?: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            nodeHealth?: string;
            /**
             * @description The name of the node
             * @example postgres-0
             */
            nodeName?: string;
            /**
             * @description The ports that this node exposes
             * @example [
             *       80,
             *       443
             *     ]
             */
            ports?: number[];
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            processHealth?: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            processLiveness?: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            status?: string;
        };
        /** @example {
         *       "availabilityZone": "us-east-2a",
         *       "detailedHealth": {
         *         "ConnectivityStatus": "UNHEALTHY",
         *         "DiskHealth": "UNKNOWN",
         *         "LoadStatus": "LOAD_NORMAL",
         *         "NodeHealth": "HEALTHY",
         *         "ProcessHealth": "HEALTHY",
         *         "ProcessLiveness": "HEALTHY"
         *       },
         *       "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *       "healthStatus": "HEALTHY",
         *       "id": "primary-0",
         *       "kubernetesDashboardEndpoint": {
         *         "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
         *         "deploymentCellID": "hc-12345678"
         *       },
         *       "ports": [
         *         80,
         *         443
         *       ],
         *       "status": "RUNNING",
         *       "storageSize": 10,
         *       "vmInfo": {
         *         "architecture": "amd64",
         *         "azCode": "us-east-1a",
         *         "azID": "use1-az1",
         *         "externalIP": "3.44.113.6",
         *         "instanceType": "t2.small",
         *         "internalIP": "192.168.1.4",
         *         "k8sNodeName": "my-k8s-node",
         *         "kernelVersion": "5.10.228",
         *         "kubeletVersion": "1.31.3",
         *         "os": "linux",
         *         "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
         *       }
         *     } */
        NodeNetworkTopologyResult: {
            /**
             * @description The availability zone of the node
             * @example us-east-2a
             */
            availabilityZone?: string;
            detailedHealth?: components["schemas"]["DetailedNodeHealthResult"];
            /**
             * @description The endpoint of the node
             * @example primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
             */
            endpoint?: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            healthStatus?: string;
            /**
             * @description The ID of the node
             * @example primary-0
             */
            id?: string;
            kubernetesDashboardEndpoint?: components["schemas"]["KubernetesDashboardEndpoint"];
            /**
             * @description The ports that this node exposes
             * @example [
             *       80,
             *       443
             *     ]
             */
            ports?: number[];
            /**
             * @description The status of an operation
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
             */
            status?: string;
            /**
             * Format: int64
             * @description The storage size of the node in GiB
             * @example 10
             */
            storageSize?: number;
            vmInfo?: components["schemas"]["NodeVMInfoResult"];
        };
        /** @example {
         *       "architecture": "amd64",
         *       "azCode": "us-east-1a",
         *       "azID": "use1-az1",
         *       "externalIP": "3.44.53.111",
         *       "instanceType": "t2.small",
         *       "internalIP": "192.168.1.4",
         *       "k8sNodeName": "my-k8s-node",
         *       "kernelVersion": "5.10.228",
         *       "kubeletVersion": "1.31.3",
         *       "os": "linux",
         *       "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
         *     } */
        NodeVMInfoResult: {
            /**
             * @description The architecture of the VM
             * @example amd64
             */
            architecture: string;
            /**
             * @description The availability zone code of the VM
             * @example us-east-1a
             */
            azCode: string;
            /**
             * @description The availability zone ID of the VM
             * @example use1-az1
             */
            azID?: string;
            /**
             * @description The external IP of the VM
             * @example 3.44.53.111
             */
            externalIP?: string;
            /**
             * @description The instance type of the VM
             * @example t2.small
             */
            instanceType: string;
            /**
             * @description The internal IP of the VM
             * @example 192.168.1.4
             */
            internalIP: string;
            /**
             * @description The k8s node name of the VM
             * @example my-k8s-node
             */
            k8sNodeName: string;
            /**
             * @description The kernel version of the VM
             * @example 5.10.228
             */
            kernelVersion?: string;
            /**
             * @description The kubelet version of the VM
             * @example 1.31.3
             */
            kubeletVersion: string;
            /**
             * @description The operating system of the VM
             * @example linux
             */
            os: string;
            /**
             * @description The provider ID of the VM
             * @example aws:///ap-south-1b/i-06h696g4a643ahf01
             */
            providerID: string;
        };
        /** @example {
         *       "code": "12-999",
         *       "message": "Required field `x` was not provided in the request",
         *       "name": "missing_field"
         *     } */
        OmnistrateError: {
            /**
             * @description Application-specific error code
             * @example 12-999
             */
            code: string;
            /**
             * @description More context on the error that occurred
             * @example Required field `x` was not provided in the request
             */
            message: string;
            /**
             * @description Name of the error
             * @example missing_field
             */
            name: string;
        };
        /** @example {
         *       "status": "RUNNING"
         *     } */
        OmnistrateServiceHealthResult: {
            /**
             * @description The status of an operation
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
             */
            status: string;
        };
        /** @example {
         *       "apiVersion": "1.0",
         *       "buildCommitSHA": "1234567890abcdef1234567890abcdef12345678",
         *       "buildTimestamp": "2020-01-01T00:00:00Z"
         *     } */
        OmnistrateServiceVersionResult: {
            /**
             * @description Version of the Entity to operate on
             * @example 1.0
             */
            apiVersion: string;
            /**
             * @description The commit hash of the build
             * @example 1234567890abcdef1234567890abcdef12345678
             */
            buildCommitSHA: string;
            /**
             * @description The timestamp of the build
             * @example 2020-01-01T00:00:00Z
             */
            buildTimestamp: string;
        };
        /**
         * @description The Terraform configurations for an OnPrem platform
         * @example {
         *       "OpenShift": {
         *         "gitConfiguration": {
         *           "referenceName": "ref",
         *           "repositoryUrl": "gitUrl"
         *         },
         *         "privateModuleGitAccessTokens": {
         *           "tokenName": "accessToken"
         *         },
         *         "terraformPath": "/project1/tf"
         *       }
         *     }
         */
        OnPremTerraformConfigurations: {
            [key: string]: unknown;
        };
        /** @example {
         *       "endpointConfiguration": {
         *         "admin": {
         *           "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *           "networkingType": "PRIVATE",
         *           "ports": [
         *             8080,
         *             8081
         *           ],
         *           "primary": false
         *         },
         *         "cluster": {
         *           "host": "https://my-endpoint.com",
         *           "networkingType": "PUBLIC",
         *           "ports": [
         *             8080,
         *             8081
         *           ],
         *           "primary": true
         *         }
         *       },
         *       "helmChartDependencies": [
         *         {
         *           "chartName": "cert-manager",
         *           "chartVersion": "v1.5.3"
         *         },
         *         {
         *           "chartName": "nginx-ingress",
         *           "chartVersion": "v0.48.1"
         *         },
         *         {
         *           "chartName": "external-dns",
         *           "chartVersion": "v0.7.0"
         *         },
         *         {
         *           "chartName": "cnpg-operator",
         *           "chartVersion": "v0.23.1"
         *         }
         *       ],
         *       "outputParameters": {
         *         "expiresAt": "$out.status.notAfter",
         *         "issuerName": "letsencrypt-prod"
         *       },
         *       "readinessConditions": {
         *         "$out.status.conditions[?(@.type=='Ready')].status": true
         *       },
         *       "supplementalFiles": [
         *         "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
         *         "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
         *       ],
         *       "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
         *     } */
        OperatorCRDConfiguration: {
            /**
             * @description The endpoints from the Operator CRD Deployment to expose to the customer
             * @example {
             *       "admin": {
             *         "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
             *         "networkingType": "PRIVATE",
             *         "ports": [
             *           8080,
             *           8081
             *         ],
             *         "primary": false
             *       },
             *       "cluster": {
             *         "host": "https://my-endpoint.com",
             *         "networkingType": "PUBLIC",
             *         "ports": [
             *           8080,
             *           8081
             *         ],
             *         "primary": true
             *       }
             *     }
             */
            endpointConfiguration?: {
                [key: string]: components["schemas"]["Endpoint"];
            };
            /**
             * @description The helm chart dependencies for the CRD (including charts necessary to manage the operator) - Optional
             * @example [
             *       {
             *         "chartName": "cert-manager",
             *         "chartVersion": "v1.5.3"
             *       },
             *       {
             *         "chartName": "nginx-ingress",
             *         "chartVersion": "v0.48.1"
             *       },
             *       {
             *         "chartName": "external-dns",
             *         "chartVersion": "v0.7.0"
             *       },
             *       {
             *         "chartName": "cnpg-operator",
             *         "chartVersion": "v0.23.1"
             *       }
             *     ]
             */
            helmChartDependencies?: components["schemas"]["OperatorHelmChartDependency"][];
            /**
             * @description The output parameters to export to the user from the CRD
             * @example {
             *       "expiresAt": "$out.status.notAfter",
             *       "issuerName": "letsencrypt-prod"
             *     }
             */
            outputParameters?: {
                [key: string]: string;
            };
            /**
             * @description The readiness conditions to check for the CRD
             * @example {
             *       "$out.status.conditions[?(@.type=='Ready')].status": true
             *     }
             */
            readinessConditions?: {
                [key: string]: unknown;
            };
            /**
             * @description The supplemental files to apply with the CRD
             * @example [
             *       "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
             *       "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
             *     ]
             */
            supplementalFiles?: string[];
            /**
             * @description The template of the CRD to apply on every deployment
             * @example apiVersion: cert-manager.io/v1
             *     kind: ClusterIssuer
             *     metadata:
             *       name: letsencrypt-prod
             *     spec:
             *       acme:
             *         server: https://acme-v02.api.letsencrypt.org/directory
             *         email: test@example.com
             *         privateKeySecretRef:
             *           name: letsencrypt-prod
             *         solvers:
             *         - http01:
             *             ingress:
             *               class: nginx
             */
            template: string;
        };
        /** @example {
         *       "chartName": "cert-manager",
         *       "chartRepoName": "my-repo",
         *       "chartRepoUrl": "https://my-repo.com",
         *       "chartValues": {
         *         "key1": "value1",
         *         "key2": 3,
         *         "key3": {
         *           "key4": "value4"
         *         }
         *       },
         *       "chartVersion": "v1.5.3",
         *       "layeredChartValues": [
         *         {
         *           "name": "my-layer",
         *           "scope": {
         *             "{{ $sys.cloudProviderName }}": "aws"
         *           },
         *           "values": {
         *             "global": {
         *               "affinity": {
         *                 "nodeAffinity": {
         *                   "requiredDuringSchedulingIgnoredDuringExecution": {
         *                     "nodeSelectorTerms": [
         *                       {
         *                         "matchExpressions": [
         *                           {
         *                             "key": "omnistrate.com/managed-by",
         *                             "operator": "In",
         *                             "values": [
         *                               "omnistrate"
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     ]
         *                   }
         *                 }
         *               }
         *             }
         *           },
         *           "valuesFile": {
         *             "gitConfiguration": {
         *               "accessToken": "my-token",
         *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *               "referenceName": "tags/v1.0.0",
         *               "repositoryUrl": "https://github.com/username/myrepo",
         *               "userName": "my-user"
         *             },
         *             "path": "helm/values/production.yaml"
         *           }
         *         },
         *         {
         *           "name": "my-layer",
         *           "scope": {
         *             "{{ $sys.cloudProviderName }}": "aws"
         *           },
         *           "values": {
         *             "global": {
         *               "affinity": {
         *                 "nodeAffinity": {
         *                   "requiredDuringSchedulingIgnoredDuringExecution": {
         *                     "nodeSelectorTerms": [
         *                       {
         *                         "matchExpressions": [
         *                           {
         *                             "key": "omnistrate.com/managed-by",
         *                             "operator": "In",
         *                             "values": [
         *                               "omnistrate"
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     ]
         *                   }
         *                 }
         *               }
         *             }
         *           },
         *           "valuesFile": {
         *             "gitConfiguration": {
         *               "accessToken": "my-token",
         *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *               "referenceName": "tags/v1.0.0",
         *               "repositoryUrl": "https://github.com/username/myrepo",
         *               "userName": "my-user"
         *             },
         *             "path": "helm/values/production.yaml"
         *           }
         *         },
         *         {
         *           "name": "my-layer",
         *           "scope": {
         *             "{{ $sys.cloudProviderName }}": "aws"
         *           },
         *           "values": {
         *             "global": {
         *               "affinity": {
         *                 "nodeAffinity": {
         *                   "requiredDuringSchedulingIgnoredDuringExecution": {
         *                     "nodeSelectorTerms": [
         *                       {
         *                         "matchExpressions": [
         *                           {
         *                             "key": "omnistrate.com/managed-by",
         *                             "operator": "In",
         *                             "values": [
         *                               "omnistrate"
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     ]
         *                   }
         *                 }
         *               }
         *             }
         *           },
         *           "valuesFile": {
         *             "gitConfiguration": {
         *               "accessToken": "my-token",
         *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *               "referenceName": "tags/v1.0.0",
         *               "repositoryUrl": "https://github.com/username/myrepo",
         *               "userName": "my-user"
         *             },
         *             "path": "helm/values/production.yaml"
         *           }
         *         },
         *         {
         *           "name": "my-layer",
         *           "scope": {
         *             "{{ $sys.cloudProviderName }}": "aws"
         *           },
         *           "values": {
         *             "global": {
         *               "affinity": {
         *                 "nodeAffinity": {
         *                   "requiredDuringSchedulingIgnoredDuringExecution": {
         *                     "nodeSelectorTerms": [
         *                       {
         *                         "matchExpressions": [
         *                           {
         *                             "key": "omnistrate.com/managed-by",
         *                             "operator": "In",
         *                             "values": [
         *                               "omnistrate"
         *                             ]
         *                           }
         *                         ]
         *                       }
         *                     ]
         *                   }
         *                 }
         *               }
         *             }
         *           },
         *           "valuesFile": {
         *             "gitConfiguration": {
         *               "accessToken": "my-token",
         *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *               "referenceName": "tags/v1.0.0",
         *               "repositoryUrl": "https://github.com/username/myrepo",
         *               "userName": "my-user"
         *             },
         *             "path": "helm/values/production.yaml"
         *           }
         *         }
         *       ],
         *       "password": "my-password",
         *       "username": "my-user"
         *     } */
        OperatorHelmChartDependency: {
            /**
             * @description The name of the helm chart
             * @example cert-manager
             */
            chartName: string;
            /**
             * @description The repository name of the Helm chart
             * @example my-repo
             */
            chartRepoName?: string;
            /**
             * @description The repository URL of the Helm chart
             * @example https://my-repo.com
             */
            chartRepoUrl?: string;
            /**
             * @description The values of the Helm chart (mutually exclusive with layeredChartValues)
             * @example {
             *       "key1": "value1",
             *       "key2": 3,
             *       "key3": {
             *         "key4": "value4"
             *       }
             *     }
             */
            chartValues?: {
                [key: string]: unknown;
            };
            /**
             * @description The version of the helm chart
             * @example v1.5.3
             */
            chartVersion: string;
            /**
             * @description Layered chart values configuration with conditional scoping (mutually exclusive with chartValues). Values are processed in order - later entries override earlier ones for the same keys.
             * @example [
             *       {
             *         "name": "my-layer",
             *         "scope": {
             *           "{{ $sys.cloudProviderName }}": "aws"
             *         },
             *         "values": {
             *           "global": {
             *             "affinity": {
             *               "nodeAffinity": {
             *                 "requiredDuringSchedulingIgnoredDuringExecution": {
             *                   "nodeSelectorTerms": [
             *                     {
             *                       "matchExpressions": [
             *                         {
             *                           "key": "omnistrate.com/managed-by",
             *                           "operator": "In",
             *                           "values": [
             *                             "omnistrate"
             *                           ]
             *                         }
             *                       ]
             *                     }
             *                   ]
             *                 }
             *               }
             *             }
             *           }
             *         },
             *         "valuesFile": {
             *           "gitConfiguration": {
             *             "accessToken": "my-token",
             *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *             "referenceName": "tags/v1.0.0",
             *             "repositoryUrl": "https://github.com/username/myrepo",
             *             "userName": "my-user"
             *           },
             *           "path": "helm/values/production.yaml"
             *         }
             *       },
             *       {
             *         "name": "my-layer",
             *         "scope": {
             *           "{{ $sys.cloudProviderName }}": "aws"
             *         },
             *         "values": {
             *           "global": {
             *             "affinity": {
             *               "nodeAffinity": {
             *                 "requiredDuringSchedulingIgnoredDuringExecution": {
             *                   "nodeSelectorTerms": [
             *                     {
             *                       "matchExpressions": [
             *                         {
             *                           "key": "omnistrate.com/managed-by",
             *                           "operator": "In",
             *                           "values": [
             *                             "omnistrate"
             *                           ]
             *                         }
             *                       ]
             *                     }
             *                   ]
             *                 }
             *               }
             *             }
             *           }
             *         },
             *         "valuesFile": {
             *           "gitConfiguration": {
             *             "accessToken": "my-token",
             *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *             "referenceName": "tags/v1.0.0",
             *             "repositoryUrl": "https://github.com/username/myrepo",
             *             "userName": "my-user"
             *           },
             *           "path": "helm/values/production.yaml"
             *         }
             *       }
             *     ]
             */
            layeredChartValues?: components["schemas"]["ChartValuesRef"][];
            /**
             * @description The password to authenticate with the registry
             * @example my-password
             */
            password?: string;
            /**
             * @description The username to authenticate with the registry
             * @example my-user
             */
            username?: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "invitedAt": "2023-01-10T00:00:00Z",
         *       "name": "John Dae",
         *       "roleType": "reader",
         *       "userId": "user-abcd1234"
         *     } */
        OrgUsers: {
            /**
             * @description The email of the user
             * @example abc@gmail.com
             */
            email: string;
            /**
             * @description The time when the user was invited
             * @example 2023-01-10T00:00:00Z
             */
            invitedAt: string;
            /**
             * @description The name of the user
             * @example John Dae
             */
            name: string;
            /**
             * @description Type of the role
             * @example root|editor|reader|service_editor|service_reader|admin|service_operator
             */
            roleType: string;
            /**
             * @description The User ID
             * @example user-abcd1234
             */
            userId: string;
        };
        /** @example {
         *       "custom": false,
         *       "description": "The name of the server",
         *       "displayName": "Server Name",
         *       "isList": false,
         *       "key": "serverName",
         *       "type": "Boolean|Float64|String|JSON|Resource"
         *     } */
        OutputParameterEntity: {
            /**
             * @description Whether the parameter is custom
             * @example false
             */
            custom: boolean;
            /**
             * @description The parameter description
             * @example The name of the server
             */
            description: string;
            /**
             * @description The parameter display name
             * @example Server Name
             */
            displayName: string;
            /**
             * @description Whether the parameter is a list
             * @example false
             */
            isList: boolean;
            /**
             * @description The parameter key
             * @example serverName
             */
            key: string;
            /**
             * @description The parameter type
             * @example Boolean|Float64|String|JSON|Resource
             */
            type: string;
        };
        /**
         * @description The readiness of the cloud provider configuration
         * @example {
         *       "resourceA": "missing terraform configuration",
         *       "resourceB": "missing cloudformation configuration"
         *     }
         */
        PerCloudProviderConfigReadiness: {
            [key: string]: string;
        };
        /** @example {
         *       "awsPrivateLinkConfigurations": [
         *         {
         *           "port": 80,
         *           "targetGroupName": "my-target-group"
         *         },
         *         {
         *           "port": 80,
         *           "targetGroupName": "my-target-group"
         *         }
         *       ]
         *     } */
        PrivateLinkConfiguration: {
            awsPrivateLinkConfigurations?: components["schemas"]["AWSPrivateLinkConfigurations"];
        };
        /**
         * @description The private networking configuration for the network config
         * @example {
         *       "privateLinkConfiguration": {
         *         "awsPrivateLinkConfigurations": [
         *           {
         *             "port": 80,
         *             "targetGroupName": "my-target-group"
         *           },
         *           {
         *             "port": 80,
         *             "targetGroupName": "my-target-group"
         *           }
         *         ]
         *       }
         *     }
         */
        PrivateNetworkingConfiguration: {
            privateLinkConfiguration?: components["schemas"]["PrivateLinkConfiguration"];
        };
        /** @example {
         *       "configuration": {
         *         "provider": "native"
         *       },
         *       "feature": "LOGS",
         *       "scope": "INTERNAL"
         *     } */
        ProductTierFeatureDetail: {
            /**
             * @description The configuration parameters of the product tier feature
             * @example {
             *       "provider": "native"
             *     }
             */
            configuration?: {
                [key: string]: unknown;
            };
            /**
             * @description ProductTierFeatureType is to enable / disable features per product tier
             * @example LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
             */
            feature?: string;
            /**
             * @description ProductTierFeatureScope defines scope of the feature within product tier
             * @example INTERNAL|CUSTOMER
             */
            scope?: string;
        };
        /** @example {
         *       "id": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "xa5"
         *     } */
        PromoteServiceEnvironmentRequest: {
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example c
             */
            token: string;
        };
        /** @example {
         *       "id": "se-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "s6"
         *     } */
        PromoteServiceEnvironmentStatusRequest: {
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 9hy
             */
            token: string;
        };
        /** @example [
         *       {
         *         "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *         "targetEnvironmentID": "se-12345678"
         *       },
         *       {
         *         "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *         "targetEnvironmentID": "se-12345678"
         *       }
         *     ] */
        PromoteServiceEnvironmentStatusResult: components["schemas"]["EnvironmentPromotionStatus"][];
        /** @example {
         *       "productTierId": "Beatae beatae.",
         *       "serviceId": "s-12345678",
         *       "token": "w",
         *       "version": "3.0"
         *     } */
        PromoteTierVersionSetRequest: {
            /**
             * @description ID of a Product Tier
             * @example Reiciendis beatae quidem nisi minus blanditiis.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example uq
             */
            token: string;
            /**
             * @description The version number for the specific version set.
             * @example 3.0
             */
            version: string;
        };
        /** @example {
         *       "openPorts": [
         *         "30000",
         *         "30001"
         *       ],
         *       "proxyEndpoint": "https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud"
         *     } */
        ProxyEndpoint: {
            /** @example [
             *       "30000",
             *       "30001"
             *     ] */
            openPorts?: string[];
            /** @example https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud */
            proxyEndpoint?: string;
        };
        /**
         * @description The public networking configuration for the network config
         * @example {
         *       "enableClusterLoadBalancer": true,
         *       "enableNodeLoadBalancer": true
         *     }
         */
        PublicNetworkingConfiguration: {
            /**
             * @description Enable a single load balancer for all replicas
             * @example true
             */
            enableClusterLoadBalancer?: boolean;
            /**
             * @description Create an external node load balancer per node rather than exposing the node ip directly
             * @example true
             */
            enableNodeLoadBalancer?: boolean;
        };
        /**
         * @description The status of the recent deployment failure
         * @example {
         *       "failedAt": "2021-09-01T00:00:00Z",
         *       "failureReason": "Failed to connect to the database"
         *     }
         */
        RecentDeploymentFailureStatus: {
            /**
             * @description The time at which the deployment failed
             * @example 2021-09-01T00:00:00Z
             */
            failedAt?: string;
            /**
             * @description The reason for the deployment failure
             * @example Failed to connect to the database
             */
            failureReason?: string;
        };
        /** @example {
         *       "id": "user-abcd1234"
         *     } */
        RegenerateTokenRequest: {
            /** @example user-abcd1234 */
            id: string;
        };
        /** @example {
         *       "deployingInstances": 3749113544522799600,
         *       "deploymentCellHealthSummary": {
         *         "Delectus minima excepturi qui recusandae ut.": {
         *           "deployingInstances": 3221727856085581300,
         *           "healthyInstances": 8553049085281164000,
         *           "hostClusterID": "hc-12345678",
         *           "message": "Cell is healthy",
         *           "status": "Healthy",
         *           "totalInstances": 2534220480800404500,
         *           "unhealthyInstances": 8903719001626506000,
         *           "unknownInstances": 5664733281950047000
         *         }
         *       },
         *       "healthyInstances": 70076353122481970,
         *       "message": "Region is healthy",
         *       "region": "us-east-1",
         *       "status": "Healthy",
         *       "totalInstances": 5431850341719676000,
         *       "unhealthyInstances": 7397152575598577000,
         *       "unknownInstances": 5200653868818919000
         *     } */
        RegionalHealthSummary: {
            /**
             * Format: int64
             * @description The number of instances currently deploying
             * @example 8232053228853622000
             */
            deployingInstances: number;
            /**
             * @description The summary of health by deployment cell
             * @example {
             *       "Delectus minima excepturi qui recusandae ut.": {
             *         "deployingInstances": 3221727856085581300,
             *         "healthyInstances": 8553049085281164000,
             *         "hostClusterID": "hc-12345678",
             *         "message": "Cell is healthy",
             *         "status": "Healthy",
             *         "totalInstances": 2534220480800404500,
             *         "unhealthyInstances": 8903719001626506000,
             *         "unknownInstances": 5664733281950047000
             *       }
             *     }
             */
            deploymentCellHealthSummary: {
                [key: string]: unknown;
            };
            /**
             * Format: int64
             * @description The number of healthy instances in the region
             * @example 1859538013420423400
             */
            healthyInstances: number;
            /**
             * @description The status message
             * @example Region is healthy
             */
            message: string;
            /**
             * @description The region
             * @example us-east-1
             */
            region: string;
            /**
             * @description The status of the region
             * @example Healthy
             */
            status: string;
            /**
             * Format: int64
             * @description The total number of instances in the region
             * @example 7635618187684439000
             */
            totalInstances: number;
            /**
             * Format: int64
             * @description The number of unhealthy instances in the region
             * @example 5504714527893716000
             */
            unhealthyInstances: number;
            /**
             * Format: int64
             * @description The number of instances with unknown status
             * @example 2128907321560406500
             */
            unknownInstances?: number;
        };
        /** @example {
         *       "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
         *       "customCommand": [
         *         "/bin/sh",
         *         "-c"
         *       ],
         *       "customImage": "my-custom-image:latest",
         *       "id": "r-12345678",
         *       "scope": "CLUSTER",
         *       "serviceId": "s-12345678",
         *       "token": "2",
         *       "type": "ADD"
         *     } */
        RegisterActionHookRequest: {
            /**
             * @description The Base64 encoded command template to execute
             * @example ZWNobyAiaGVsbG8gd29ybGQi
             */
            commandTemplate: string;
            /**
             * @description The custom command to execute the hook with
             * @example [
             *       "/bin/sh",
             *       "-c"
             *     ]
             */
            customCommand?: string[];
            /**
             * @description The custom image to execute the hook
             * @example my-custom-image:latest
             */
            customImage?: string;
            /**
             * @description ID of a resource
             * @example Consequatur autem.
             */
            id: string;
            /**
             * @description The scope of the hook
             * @example CLUSTER|NODE
             */
            scope: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example cys
             */
            token: string;
            /**
             * @description The type of hook to execute
             * @example INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
             */
            type: string;
        };
        /** @example {
         *       "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
         *       "customCommand": [
         *         "/bin/sh",
         *         "-c"
         *       ],
         *       "customImage": "my-custom-image:latest",
         *       "scope": "CLUSTER",
         *       "type": "ADD"
         *     } */
        RegisterActionHookRequest2: {
            /**
             * @description The Base64 encoded command template to execute
             * @example ZWNobyAiaGVsbG8gd29ybGQi
             */
            commandTemplate: string;
            /**
             * @description The custom command to execute the hook with
             * @example [
             *       "/bin/sh",
             *       "-c"
             *     ]
             */
            customCommand?: string[];
            /**
             * @description The custom image to execute the hook
             * @example my-custom-image:latest
             */
            customImage?: string;
            /**
             * @description The scope of the hook
             * @example CLUSTER
             */
            scope: string;
            /**
             * @description The type of hook to execute
             * @example ADD
             */
            type: string;
        };
        /** @example {
         *       "id": "r-12345678",
         *       "metricEndpoint": "http://localhost:9187/metrics",
         *       "serviceId": "s-12345678",
         *       "token": "z"
         *     } */
        RegisterResourceMetricsConfigRequest: {
            /**
             * @description ID of a resource
             * @example Recusandae qui recusandae.
             */
            id: string;
            /**
             * @description The local host endpoint to supply prometheus metric
             * @example http://localhost:9187/metrics
             */
            metricEndpoint: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example b
             */
            token: string;
        };
        /** @example {
         *       "metricEndpoint": "http://localhost:9187/metrics"
         *     } */
        RegisterResourceMetricsConfigRequest2: {
            /**
             * @description The local host endpoint to supply prometheus metric
             * @example http://localhost:9187/metrics
             */
            metricEndpoint: string;
        };
        /**
         * @description Release a new image configuration
         * @example {
         *       "id": "imgc-12345678",
         *       "productTierId": "pt-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "59h"
         *     }
         */
        ReleaseImageConfigRequest: {
            /**
             * @description ID of an Image Config
             * @example Tempora accusantium aut aliquid consequatur dolores.
             */
            id: string;
            /**
             * @description ID of a Product Tier
             * @example Quia qui.
             */
            productTierId?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 6
             */
            token: string;
        };
        /** @example {
         *       "productTierId": "pt-12345678"
         *     } */
        ReleaseImageConfigRequest2: {
            /**
             * @description The product tier ID
             * @example pt-12345678
             */
            productTierId?: string;
        };
        /** @example {
         *       "id": "ic-12345678",
         *       "productTierId": "pt-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "h0"
         *     } */
        ReleaseInfraConfigRequest: {
            /**
             * @description ID of an Infra Config
             * @example Necessitatibus quae esse nobis expedita sit.
             */
            id: string;
            /**
             * @description ID of a Product Tier
             * @example Sed sit exercitationem impedit aut.
             */
            productTierId?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 6mr
             */
            token: string;
        };
        /** @example {
         *       "productTierId": "pt-12345678"
         *     } */
        ReleaseInfraConfigRequest2: {
            /**
             * @description The product tier ID
             * @example pt-12345678
             */
            productTierId?: string;
        };
        /** @example {
         *       "dryRun": false,
         *       "id": "sa-12345678",
         *       "isPreferred": true,
         *       "productTierId": "pt-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "x9",
         *       "versionSetName": "v1",
         *       "versionSetType": "Major|Incremental|UserDefined"
         *     } */
        ReleaseServiceAPIRequest: {
            /**
             * @description When true, performs a dry run of the release operation without making any actual changes to the current pending changes and the service API.
             * @default false
             * @example false
             */
            dryRun: boolean;
            /**
             * @description ID of a Service API
             * @example Magnam cum quos.
             */
            id: string;
            /**
             * @description Indicates whether this version set is preferred.
             * @default false
             * @example true
             */
            isPreferred: boolean;
            /**
             * @description ID of a Product Tier
             * @example Possimus vel voluptas consequuntur officia aliquam.
             */
            productTierId?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example zv
             */
            token: string;
            /**
             * @description The name of the version set to release
             * @example v1
             */
            versionSetName?: string;
            /**
             * @description The version-set type of the product-tier.
             * @example Major|Incremental|UserDefined
             */
            versionSetType?: string;
        };
        /** @example {
         *       "dryRun": false,
         *       "isPreferred": true,
         *       "productTierId": "pt-12345678",
         *       "versionSetName": "v1",
         *       "versionSetType": "Major|Incremental|UserDefined"
         *     } */
        ReleaseServiceAPIRequest2: {
            /**
             * @description When true, performs a dry run of the release operation without making any actual changes to the current pending changes and the service API.
             * @default false
             * @example false
             */
            dryRun: boolean;
            /**
             * @description Indicates whether this version set is preferred.
             * @default false
             * @example true
             */
            isPreferred: boolean;
            /**
             * @description The product tier ID
             * @example pt-12345678
             */
            productTierId?: string;
            /**
             * @description The name of the version set to release
             * @example v1
             */
            versionSetName?: string;
            /**
             * @description The version-set type of the product-tier.
             * @example Major|Incremental|UserDefined
             */
            versionSetType?: string;
        };
        /** @example {
         *       "id": "sm-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "d"
         *     } */
        ReleaseServiceModelRequest: {
            /**
             * @description ID of a Service Model
             * @example Ex consectetur molestias fugiat sed reiciendis consequatur.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 9
             */
            token: string;
        };
        /** @example {
         *       "status": "READY"
         *     } */
        ReleaseServiceModelResult: {
            /**
             * @description The release status of the service model
             * @example DEPLOYING|READY|PENDING|FAILED|NOT_CONFIGURED
             */
            status: string;
        };
        /** @example {
         *       "isPreferred": true,
         *       "name": "Major version set",
         *       "productTierId": "Beatae beatae.",
         *       "serviceId": "s-12345678",
         *       "token": "6",
         *       "version": "3.0"
         *     } */
        ReleaseTierVersionSetRequest: {
            /**
             * @description Indicates whether this version set is preferred.
             * @example true
             */
            isPreferred?: boolean;
            /**
             * @description The name of the product-tier version set.
             * @example Major version set
             */
            name?: string;
            /**
             * @description ID of a Product Tier
             * @example Officiis saepe rem sit rerum dolore dolorem.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example c
             */
            token: string;
            /**
             * @description The version number for the specific version set.
             * @example 3.0
             */
            version: string;
        };
        /** @example {
         *       "isPreferred": true,
         *       "name": "Major version set"
         *     } */
        ReleaseTierVersionSetRequest2: {
            /**
             * @description Indicates whether this version set is preferred.
             * @example true
             */
            isPreferred?: boolean;
            /**
             * @description The name of the product-tier version set.
             * @example Major version set
             */
            name?: string;
        };
        /** @example {
         *       "accountConfigId": "ac-12345678",
         *       "id": "sm-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "tk"
         *     } */
        RemoveAccountConfigFromServiceModelRequest: {
            /**
             * @description ID of an Account Config
             * @example Natus rerum cumque qui et.
             */
            accountConfigId: string;
            /**
             * @description ID of a Service Model
             * @example Voluptate possimus veritatis commodi quas.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example np
             */
            token: string;
        };
        /** @example {
         *       "accountConfigId": "ac-12345678"
         *     } */
        RemoveAccountConfigFromServiceModelRequest2: {
            /**
             * @description The infrastructure account configuration ID
             * @example ac-12345678
             */
            accountConfigId: string;
        };
        /** @example {
         *       "capacityToBeRemoved": 3,
         *       "id": "instance-abcd1234",
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "em"
         *     } */
        RemoveCapacityFromResourceInstanceRequest: {
            /**
             * Format: int64
             * @description Number of replicas to be removed
             * @example 3
             */
            capacityToBeRemoved: number;
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Cupiditate qui quaerat nostrum dolorem quo dicta.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example a1w
             */
            token: string;
        };
        /** @example {
         *       "capacityToBeRemoved": 3
         *     } */
        RemoveCapacityFromResourceInstanceRequest2: {
            /**
             * Format: int64
             * @description Number of replicas to be removed
             * @example 3
             */
            capacityToBeRemoved: number;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "id": "cc-12345678",
         *       "instanceType": "t3.micro",
         *       "serviceId": "s-12345678",
         *       "token": "k8"
         *     } */
        RemoveComputeInstanceTypeRequest: {
            /**
             * @description Name of the Infra Provider
             * @example aws|azure|gcp|all
             */
            cloudProviderName: string;
            /**
             * @description ID of a Compute Config
             * @example Vel fugiat eveniet possimus quaerat harum.
             */
            id: string;
            /**
             * @description The instance type for this compute instance type config
             * @example t3.micro
             */
            instanceType: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example b
             */
            token: string;
        };
        /** @example {
         *       "cloudProviderName": "aws",
         *       "instanceType": "t3.micro"
         *     } */
        RemoveComputeInstanceTypeRequest2: {
            /**
             * @description The cloud provider for this compute instance type config
             * @example aws
             */
            cloudProviderName: string;
            /**
             * @description The instance type for this compute instance type config
             * @example t3.micro
             */
            instanceType: string;
        };
        /** @example {
         *       "id": "instance-abcd1234",
         *       "productTierKey": "premium",
         *       "resourceKey": "http-service",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "ib7"
         *     } */
        RemoveCustomDNSToResourceInstanceRequest: {
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example http-service
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Itaque eveniet.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example ih7
             */
            token: string;
        };
        /** @example {
         *       "fileId": "file-12345678",
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "6"
         *     } */
        RemoveFileRequest: {
            /**
             * @description ID of a File
             * @example Architecto consequuntur voluptatibus recusandae rerum qui.
             */
            fileId: string;
            /**
             * @description ID of a resource
             * @example Ab quisquam omnis distinctio ex maxime quibusdam.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example ib
             */
            token: string;
        };
        /** @example {
         *       "id": "r-12345678",
         *       "resourceDependencyId": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "i"
         *     } */
        RemoveResourceDependencyRequest: {
            /**
             * @description ID of a resource
             * @example Sed neque.
             */
            id: string;
            /**
             * @description ID of a resource
             * @example Accusamus expedita maiores eos vel nobis dolores.
             */
            resourceDependencyId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example sr
             */
            token: string;
        };
        /** @example {
         *       "id": "sc-12345678",
         *       "mountPath": "/data",
         *       "serviceId": "s-12345678",
         *       "storageVolumeConfigId": "svc-12345678",
         *       "token": "k"
         *     } */
        RemoveStorageVolumeConfigRequest: {
            /**
             * @description ID of a Storage Config
             * @example Consequatur quis aliquid quia sunt.
             */
            id: string;
            /**
             * @description The specific mount path to remove. If not specified, all mount paths for the storage volume config will be removed
             * @example /data
             */
            mountPath?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Storage Volume Config
             * @example Quos quia.
             */
            storageVolumeConfigId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 3
             */
            token: string;
        };
        /** @example {
         *       "mountPath": "/data"
         *     } */
        RemoveStorageVolumeConfigRequest2: {
            /**
             * @description The specific mount path to remove. If not specified, all mount paths for the storage volume config will be removed
             * @example /data
             */
            mountPath?: string;
        };
        /** @example {
         *       "environmentType": "production",
         *       "loginHint": "user@domain.com",
         *       "redirectUrl": "https://example.com/redirect",
         *       "token": "6"
         *     } */
        RenderIdentityProvidersRequest: {
            /**
             * @description The type of environment to filter Identity Providers by
             * @example production
             */
            environmentType?: string;
            /**
             * @description The login hint to use for the Identity Provider
             * @example user@domain.com
             */
            loginHint?: string;
            /**
             * @description The URL to redirect to after login
             * @example https://example.com/redirect
             */
            redirectUrl?: string;
            /**
             * @description JWT token used to perform authorization
             * @example aw
             */
            token: string;
        };
        /** @example {
         *       "identityProviders": [
         *         {
         *           "emailIdentifiers": "company.com",
         *           "id": "idp-12345678",
         *           "identityProviderName": "Google",
         *           "loginButtonIconUrl": "https://example.com/icon.png",
         *           "loginButtonText": "Login with Google",
         *           "name": "Google for my company",
         *           "renderedAuthorizationEndpoint": "https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid email profile&state=idpName-guid",
         *           "state": "state"
         *         },
         *         {
         *           "emailIdentifiers": "company.com",
         *           "id": "idp-12345678",
         *           "identityProviderName": "Google",
         *           "loginButtonIconUrl": "https://example.com/icon.png",
         *           "loginButtonText": "Login with Google",
         *           "name": "Google for my company",
         *           "renderedAuthorizationEndpoint": "https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid email profile&state=idpName-guid",
         *           "state": "state"
         *         },
         *         {
         *           "emailIdentifiers": "company.com",
         *           "id": "idp-12345678",
         *           "identityProviderName": "Google",
         *           "loginButtonIconUrl": "https://example.com/icon.png",
         *           "loginButtonText": "Login with Google",
         *           "name": "Google for my company",
         *           "renderedAuthorizationEndpoint": "https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid email profile&state=idpName-guid",
         *           "state": "state"
         *         },
         *         {
         *           "emailIdentifiers": "company.com",
         *           "id": "idp-12345678",
         *           "identityProviderName": "Google",
         *           "loginButtonIconUrl": "https://example.com/icon.png",
         *           "loginButtonText": "Login with Google",
         *           "name": "Google for my company",
         *           "renderedAuthorizationEndpoint": "https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid email profile&state=idpName-guid",
         *           "state": "state"
         *         }
         *       ]
         *     } */
        RenderIdentityProvidersResult: {
            /**
             * @description The list of Identity Providers
             * @example [
             *       {
             *         "emailIdentifiers": "company.com",
             *         "id": "idp-12345678",
             *         "identityProviderName": "Google",
             *         "loginButtonIconUrl": "https://example.com/icon.png",
             *         "loginButtonText": "Login with Google",
             *         "name": "Google for my company",
             *         "renderedAuthorizationEndpoint": "https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid email profile&state=idpName-guid",
             *         "state": "state"
             *       },
             *       {
             *         "emailIdentifiers": "company.com",
             *         "id": "idp-12345678",
             *         "identityProviderName": "Google",
             *         "loginButtonIconUrl": "https://example.com/icon.png",
             *         "loginButtonText": "Login with Google",
             *         "name": "Google for my company",
             *         "renderedAuthorizationEndpoint": "https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid email profile&state=idpName-guid",
             *         "state": "state"
             *       },
             *       {
             *         "emailIdentifiers": "company.com",
             *         "id": "idp-12345678",
             *         "identityProviderName": "Google",
             *         "loginButtonIconUrl": "https://example.com/icon.png",
             *         "loginButtonText": "Login with Google",
             *         "name": "Google for my company",
             *         "renderedAuthorizationEndpoint": "https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid email profile&state=idpName-guid",
             *         "state": "state"
             *       },
             *       {
             *         "emailIdentifiers": "company.com",
             *         "id": "idp-12345678",
             *         "identityProviderName": "Google",
             *         "loginButtonIconUrl": "https://example.com/icon.png",
             *         "loginButtonText": "Login with Google",
             *         "name": "Google for my company",
             *         "renderedAuthorizationEndpoint": "https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid email profile&state=idpName-guid",
             *         "state": "state"
             *       }
             *     ]
             */
            identityProviders?: components["schemas"]["RenderedIdentityProviderResult"][];
        };
        /** @example {
         *       "emailIdentifiers": "company.com",
         *       "id": "idp-12345678",
         *       "identityProviderName": "Google",
         *       "loginButtonIconUrl": "https://example.com/icon.png",
         *       "loginButtonText": "Login with Google",
         *       "name": "Google for my company",
         *       "renderedAuthorizationEndpoint": "https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid email profile&state=idpName-guid",
         *       "state": "state"
         *     } */
        RenderedIdentityProviderResult: {
            /**
             * @description The email identifiers to use to filter the Identity Provider available for login
             * @example company.com
             */
            emailIdentifiers: string;
            /**
             * @description ID of an Identity Provider
             * @example Perspiciatis maiores.
             */
            id: string;
            /**
             * @description The name of the identity provider
             * @example Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
             */
            identityProviderName: string;
            /**
             * @description The URL of the icon to use for the login button
             * @example https://example.com/icon.png
             */
            loginButtonIconUrl: string;
            /**
             * @description The text to use for the login button
             * @example Login with Google
             */
            loginButtonText: string;
            /**
             * @description The name of the Identity Provider
             * @example Google for my company
             */
            name: string;
            /**
             * @description The rendered authorization endpoint of the Identity Provider
             * @example https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid email profile&state=idpName-guid
             */
            renderedAuthorizationEndpoint: string;
            /**
             * @description The state parameter used to prevent CSRF attacks
             * @example state
             */
            state?: string;
        };
        /** @example {
         *       "id": "s-12345678",
         *       "token": "mwq"
         *     } */
        ReportHealthRequest: {
            /**
             * @description ID of a Service
             * @example s-123456
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example v
             */
            token: string;
        };
        /** @example {
         *       "health": "UP",
         *       "id": "s-12345678",
         *       "report": {
         *         "se-12345678": {
         *           "sm-12345678": {
         *             "vu-11111111": "UNKNOWN",
         *             "vu-12345678": "UP",
         *             "vu-87654321": "DOWN"
         *           }
         *         }
         *       }
         *     } */
        ReportHealthResult: {
            /**
             * @description Service Health Status
             * @example UP|DOWN|UNKNOWN
             */
            health?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            id?: string;
            /**
             * @description The health of each environment under this service
             * @example {
             *       "se-12345678": {
             *         "sm-12345678": {
             *           "vu-11111111": "UNKNOWN",
             *           "vu-12345678": "UP",
             *           "vu-87654321": "DOWN"
             *         }
             *       }
             *     }
             */
            report?: {
                [key: string]: unknown;
            };
        };
        /** @example {
         *       "email": "abc@gmail.com"
         *     } */
        ResetPasswordRequest: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
        };
        /**
         * @description The capability of a resource
         * @example {
         *       "capability": "SERVERLESS",
         *       "configuration": {
         *         "EnableAutoStop": true,
         *         "MinimumNodesInPool": 5,
         *         "PortsMappingProxyConfig": {
         *           "MaxNumberOfClustersPerProxyInstance": 50,
         *           "NumberOfPortsPerCluster": 4
         *         },
         *         "ProxyId": "r-123456",
         *         "ReferenceProxyKey": "resource-proxy",
         *         "TargetPort": 5432
         *       }
         *     }
         */
        ResourceCapability: {
            /**
             * @description The type of capability of a resource
             * @example SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
             */
            capability: string;
            /**
             * @description The configuration parameters of a capability of a resource
             * @example {
             *       "EnableAutoStop": true,
             *       "MinimumNodesInPool": 5,
             *       "PortsMappingProxyConfig": {
             *         "MaxNumberOfClustersPerProxyInstance": 50,
             *         "NumberOfPortsPerCluster": 4
             *       },
             *       "ProxyId": "r-123456",
             *       "ReferenceProxyKey": "resource-proxy",
             *       "TargetPort": 5432
             *     }
             */
            configuration: {
                [key: string]: unknown;
            };
        };
        /**
         * @description Resource dependency relation specification
         * @example {
         *       "parameterMap": {
         *         "Eos atque a illum tempore.": "Sit dicta aperiam minus facilis.",
         *         "Incidunt sed necessitatibus nobis est maiores.": "Numquam et.",
         *         "Quod iste nisi.": "Occaecati harum atque vel minima."
         *       },
         *       "resourceId": "Dolores sit aut repellendus eveniet recusandae fugit."
         *     }
         */
        ResourceDependency: {
            /**
             * @description A map of the source parameter to the resource dependency parameter
             * @example {
             *       "Earum et.": "Libero recusandae vitae consequatur suscipit.",
             *       "Error et ad.": "Mollitia non saepe illum exercitationem.",
             *       "Et quibusdam.": "Iste sapiente blanditiis possimus velit."
             *     }
             */
            parameterMap?: {
                [key: string]: string;
            };
            /**
             * @description ID of a resource
             * @example Sed ut maiores.
             */
            resourceId: string;
        };
        /** @example {
         *       "isAutoscalingEnabled": true,
         *       "isBackupEnabled": true,
         *       "isDeprecated": false,
         *       "name": "My Resource",
         *       "resourceId": "r-12345678",
         *       "resourceType": "Kustomize",
         *       "urlKey": "myResource"
         *     } */
        ResourceEntity: {
            /**
             * @description Whether the resource has autoscaling enabled
             * @example true
             */
            isAutoscalingEnabled?: boolean;
            /**
             * @description Whether the resource has backup enabled
             * @example true
             */
            isBackupEnabled: boolean;
            /**
             * @description Whether the service offering is deprecated
             * @default false
             * @example false
             */
            isDeprecated: boolean;
            /**
             * @description The resource name
             * @example My Resource
             */
            name: string;
            /**
             * @description ID of a resource
             * @example Nesciunt voluptatem facilis hic ipsa.
             */
            resourceId: string;
            /**
             * @description The resource type
             * @example Kustomize
             */
            resourceType?: string;
            /**
             * @description The resource URL key
             * @example myResource
             */
            urlKey: string;
        };
        /** @example {
         *       "nodesHealth": {
         *         "Dolores corrupti molestias eos.": {
         *           "availabilityZone": "us-east-2a",
         *           "connectivityStatus": "HEALTHY",
         *           "diskHealth": "HEALTHY",
         *           "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *           "integrationsHealth": {
         *             "CustomerObservabilityHealth": "HEALTHY",
         *             "InternalObservabilityHealth": "HEALTHY"
         *           },
         *           "loadStatus": "LOAD_NORMAL",
         *           "nodeHealth": "HEALTHY",
         *           "nodeName": "postgres-0",
         *           "ports": [
         *             80,
         *             443
         *           ],
         *           "processHealth": "HEALTHY",
         *           "processLiveness": "HEALTHY",
         *           "status": "HEALTHY"
         *         },
         *         "Neque facere corrupti dolore quod labore porro.": {
         *           "availabilityZone": "us-east-2a",
         *           "connectivityStatus": "HEALTHY",
         *           "diskHealth": "HEALTHY",
         *           "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *           "integrationsHealth": {
         *             "CustomerObservabilityHealth": "HEALTHY",
         *             "InternalObservabilityHealth": "HEALTHY"
         *           },
         *           "loadStatus": "LOAD_NORMAL",
         *           "nodeHealth": "HEALTHY",
         *           "nodeName": "postgres-0",
         *           "ports": [
         *             80,
         *             443
         *           ],
         *           "processHealth": "HEALTHY",
         *           "processLiveness": "HEALTHY",
         *           "status": "HEALTHY"
         *         },
         *         "Vitae deserunt et magnam rem sed.": {
         *           "availabilityZone": "us-east-2a",
         *           "connectivityStatus": "HEALTHY",
         *           "diskHealth": "HEALTHY",
         *           "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *           "integrationsHealth": {
         *             "CustomerObservabilityHealth": "HEALTHY",
         *             "InternalObservabilityHealth": "HEALTHY"
         *           },
         *           "loadStatus": "LOAD_NORMAL",
         *           "nodeHealth": "HEALTHY",
         *           "nodeName": "postgres-0",
         *           "ports": [
         *             80,
         *             443
         *           ],
         *           "processHealth": "HEALTHY",
         *           "processLiveness": "HEALTHY",
         *           "status": "HEALTHY"
         *         }
         *       },
         *       "resourceID": "resource-12345678",
         *       "resourceKey": "primary",
         *       "resourceType": "Kustomize",
         *       "status": "HEALTHY"
         *     } */
        ResourceHealthSummary: {
            /**
             * @description The health summary of the nodes by node name
             * @example {
             *       "Consequatur reprehenderit cum culpa nisi aut.": {
             *         "availabilityZone": "us-east-2a",
             *         "connectivityStatus": "HEALTHY",
             *         "diskHealth": "HEALTHY",
             *         "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *         "integrationsHealth": {
             *           "CustomerObservabilityHealth": "HEALTHY",
             *           "InternalObservabilityHealth": "HEALTHY"
             *         },
             *         "loadStatus": "LOAD_NORMAL",
             *         "nodeHealth": "HEALTHY",
             *         "nodeName": "postgres-0",
             *         "ports": [
             *           80,
             *           443
             *         ],
             *         "processHealth": "HEALTHY",
             *         "processLiveness": "HEALTHY",
             *         "status": "HEALTHY"
             *       },
             *       "Quisquam mollitia distinctio consequatur.": {
             *         "availabilityZone": "us-east-2a",
             *         "connectivityStatus": "HEALTHY",
             *         "diskHealth": "HEALTHY",
             *         "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *         "integrationsHealth": {
             *           "CustomerObservabilityHealth": "HEALTHY",
             *           "InternalObservabilityHealth": "HEALTHY"
             *         },
             *         "loadStatus": "LOAD_NORMAL",
             *         "nodeHealth": "HEALTHY",
             *         "nodeName": "postgres-0",
             *         "ports": [
             *           80,
             *           443
             *         ],
             *         "processHealth": "HEALTHY",
             *         "processLiveness": "HEALTHY",
             *         "status": "HEALTHY"
             *       }
             *     }
             */
            nodesHealth?: {
                [key: string]: components["schemas"]["NodeHealthSummary"];
            };
            /**
             * @description ID of a resource
             * @example Rerum hic ullam nam ut.
             */
            resourceID?: string;
            /**
             * @description The key of the resource
             * @example primary
             */
            resourceKey?: string;
            /**
             * @description The type of the resource
             * @example Kustomize
             */
            resourceType?: string;
            /**
             * @description The heath status of a resource
             * @example HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
             */
            status?: string;
        };
        /** @example {
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "tc"
         *     } */
        ResourceInstanceProvisionerSetupKitRequest: {
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Quis tempora quis illum accusantium vel molestiae.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 6v
             */
            token: string;
        };
        /**
         * @description Pending actions or maintenance tasks for the resource instance, with action type as key and reference key as value.
         * @example {
         *       "backups": [
         *         {
         *           "backup_id": "bk-12345678"
         *         }
         *       ],
         *       "upgrade_paths": [
         *         {
         *           "upgrade_path_id": "up-9876543",
         *           "upgrade_path_instance_status": "PENDING",
         *           "upgrade_path_scheduled_at": "2023-01-01T10:00:00Z",
         *           "upgrade_path_status": "IN_PROGRESS"
         *         },
         *         {
         *           "upgrade_path_id": "up-12345548",
         *           "upgrade_path_instance_status": "PENDING",
         *           "upgrade_path_released_at": "2023-01-01T09:00:00Z",
         *           "upgrade_path_scheduled_at": "2023-01-01T10:00:00Z",
         *           "upgrade_path_status": "SCHEDULED"
         *         }
         *       ]
         *     }
         */
        ResourceMaintenanceTasks: {
            [key: string]: unknown;
        };
        /** @example {
         *       "additionalEndpoints": {
         *         "admin": {
         *           "endpoint": "https://admin.instance-abcdefgh.region.aws.omnistrate.cloud",
         *           "healthStatus": "HEALTHY",
         *           "networkingType": "PRIVATE",
         *           "openPorts": [
         *             30000
         *           ],
         *           "primary": false
         *         },
         *         "cluster": {
         *           "endpoint": "https://cluster.instance-abcdefgh.region.aws.omnistrate.cloud",
         *           "healthStatus": "HEALTHY",
         *           "networkingType": "PUBLIC",
         *           "openPorts": [
         *             443
         *           ],
         *           "primary": true
         *         }
         *       },
         *       "allowedIPRanges": [
         *         "0.0.0.0/0"
         *       ],
         *       "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *       "clusterPorts": [
         *         443
         *       ],
         *       "customDNSEndpoint": {
         *         "dnsHost": "my-custom-dns.com",
         *         "name": "DNS to access the dashboard",
         *         "status": "READY"
         *       },
         *       "hasCompute": true,
         *       "isJob": false,
         *       "jobMetrics": [
         *         {
         *           "additionalData": {
         *             "exitCode": 0,
         *             "status": "Succeeded"
         *           },
         *           "endTime": "2023-01-01T10:05:00Z",
         *           "metricType": "cpu_core_seconds",
         *           "startTime": "2023-01-01T10:00:00Z",
         *           "value": 120.5
         *         },
         *         {
         *           "additionalData": {
         *             "peakMemoryUsage": "512MB"
         *           },
         *           "endTime": "2023-01-01T10:05:00Z",
         *           "metricType": "memory_mb_seconds",
         *           "startTime": "2023-01-01T10:00:00Z",
         *           "value": 2560
         *         }
         *       ],
         *       "main": true,
         *       "networkingType": "PUBLIC",
         *       "nodes": [
         *         {
         *           "availabilityZone": "us-east-2a",
         *           "detailedHealth": {
         *             "ConnectivityStatus": "UNHEALTHY",
         *             "DiskHealth": "UNKNOWN",
         *             "LoadStatus": "LOAD_NORMAL",
         *             "NodeHealth": "HEALTHY",
         *             "ProcessHealth": "HEALTHY",
         *             "ProcessLiveness": "HEALTHY"
         *           },
         *           "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *           "healthStatus": "HEALTHY",
         *           "id": "primary-0",
         *           "kubernetesDashboardEndpoint": {
         *             "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
         *             "deploymentCellID": "hc-12345678"
         *           },
         *           "ports": [
         *             80,
         *             443
         *           ],
         *           "status": "RUNNING",
         *           "storageSize": 10,
         *           "vmInfo": {
         *             "architecture": "amd64",
         *             "azCode": "us-east-1a",
         *             "azID": "use1-az1",
         *             "externalIP": "3.44.113.6",
         *             "instanceType": "t2.small",
         *             "internalIP": "192.168.1.4",
         *             "k8sNodeName": "my-k8s-node",
         *             "kernelVersion": "5.10.228",
         *             "kubeletVersion": "1.31.3",
         *             "os": "linux",
         *             "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
         *           }
         *         },
         *         {
         *           "availabilityZone": "us-east-2a",
         *           "detailedHealth": {
         *             "ConnectivityStatus": "UNHEALTHY",
         *             "DiskHealth": "UNKNOWN",
         *             "LoadStatus": "LOAD_NORMAL",
         *             "NodeHealth": "HEALTHY",
         *             "ProcessHealth": "HEALTHY",
         *             "ProcessLiveness": "HEALTHY"
         *           },
         *           "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *           "healthStatus": "HEALTHY",
         *           "id": "primary-0",
         *           "kubernetesDashboardEndpoint": {
         *             "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
         *             "deploymentCellID": "hc-12345678"
         *           },
         *           "ports": [
         *             80,
         *             443
         *           ],
         *           "status": "RUNNING",
         *           "storageSize": 10,
         *           "vmInfo": {
         *             "architecture": "amd64",
         *             "azCode": "us-east-1a",
         *             "azID": "use1-az1",
         *             "externalIP": "3.44.113.6",
         *             "instanceType": "t2.small",
         *             "internalIP": "192.168.1.4",
         *             "k8sNodeName": "my-k8s-node",
         *             "kernelVersion": "5.10.228",
         *             "kubeletVersion": "1.31.3",
         *             "os": "linux",
         *             "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
         *           }
         *         },
         *         {
         *           "availabilityZone": "us-east-2a",
         *           "detailedHealth": {
         *             "ConnectivityStatus": "UNHEALTHY",
         *             "DiskHealth": "UNKNOWN",
         *             "LoadStatus": "LOAD_NORMAL",
         *             "NodeHealth": "HEALTHY",
         *             "ProcessHealth": "HEALTHY",
         *             "ProcessLiveness": "HEALTHY"
         *           },
         *           "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *           "healthStatus": "HEALTHY",
         *           "id": "primary-0",
         *           "kubernetesDashboardEndpoint": {
         *             "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
         *             "deploymentCellID": "hc-12345678"
         *           },
         *           "ports": [
         *             80,
         *             443
         *           ],
         *           "status": "RUNNING",
         *           "storageSize": 10,
         *           "vmInfo": {
         *             "architecture": "amd64",
         *             "azCode": "us-east-1a",
         *             "azID": "use1-az1",
         *             "externalIP": "3.44.113.6",
         *             "instanceType": "t2.small",
         *             "internalIP": "192.168.1.4",
         *             "k8sNodeName": "my-k8s-node",
         *             "kernelVersion": "5.10.228",
         *             "kubeletVersion": "1.31.3",
         *             "os": "linux",
         *             "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
         *           }
         *         }
         *       ],
         *       "privateNetworkCIDR": "10.0.0.2/24",
         *       "privateNetworkID": "n-1234abcd",
         *       "proxyEndpoint": {
         *         "openPorts": [
         *           "30000",
         *           "30001"
         *         ],
         *         "proxyEndpoint": "https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud"
         *       },
         *       "publiclyAccessible": true,
         *       "recentDeploymentFailure": {
         *         "failedAt": "2021-09-01T00:00:00Z",
         *         "failureReason": "Failed to connect to the database"
         *       },
         *       "resourceInstanceMetadata": {
         *         "KustomizeGeneratedTemplates": "template"
         *       },
         *       "resourceKey": "primary",
         *       "resourceName": "Primary MySQL DB Node",
         *       "resourceType": "Kustomize"
         *     } */
        ResourceNetworkTopologyResult: {
            /**
             * @description The additional endpoints for this resource
             * @example {
             *       "admin": {
             *         "endpoint": "https://admin.instance-abcdefgh.region.aws.omnistrate.cloud",
             *         "healthStatus": "HEALTHY",
             *         "networkingType": "PRIVATE",
             *         "openPorts": [
             *           30000
             *         ],
             *         "primary": false
             *       },
             *       "cluster": {
             *         "endpoint": "https://cluster.instance-abcdefgh.region.aws.omnistrate.cloud",
             *         "healthStatus": "HEALTHY",
             *         "networkingType": "PUBLIC",
             *         "openPorts": [
             *           443
             *         ],
             *         "primary": true
             *       }
             *     }
             */
            additionalEndpoints?: {
                [key: string]: components["schemas"]["ClusterEndpoint"];
            };
            /**
             * @description The allowed IP ranges for this resource
             * @example [
             *       "0.0.0.0/0"
             *     ]
             */
            allowedIPRanges: string[];
            /**
             * @description The primary cluster endpoint that load-balances across replicas of this resource
             * @example primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
             */
            clusterEndpoint: string;
            /**
             * @description The ports that the whole cluster exposes
             * @example [
             *       443
             *     ]
             */
            clusterPorts?: number[];
            customDNSEndpoint?: components["schemas"]["CustomDNSEndpoint"];
            /**
             * @description Whether this resource has associated compute
             * @example true
             */
            hasCompute: boolean;
            /**
             * @description Whether this resource is a job
             * @default false
             * @example false
             */
            isJob: boolean;
            /**
             * @description The job metrics for this resource (if it's a job)
             * @example [
             *       {
             *         "additionalData": {
             *           "exitCode": 0,
             *           "status": "Succeeded"
             *         },
             *         "endTime": "2023-01-01T10:05:00Z",
             *         "metricType": "cpu_core_seconds",
             *         "startTime": "2023-01-01T10:00:00Z",
             *         "value": 120.5
             *       },
             *       {
             *         "additionalData": {
             *           "peakMemoryUsage": "512MB"
             *         },
             *         "endTime": "2023-01-01T10:05:00Z",
             *         "metricType": "memory_mb_seconds",
             *         "startTime": "2023-01-01T10:00:00Z",
             *         "value": 2560
             *       }
             *     ]
             */
            jobMetrics?: components["schemas"]["JobMetric"][];
            /**
             * @description Whether this is the main resource
             * @example true
             */
            main: boolean;
            /**
             * @description The networking type for this resource
             * @example PUBLIC
             */
            networkingType: string;
            /**
             * @description The nodes that this resource is deployed on
             * @example [
             *       {
             *         "availabilityZone": "us-east-2a",
             *         "detailedHealth": {
             *           "ConnectivityStatus": "UNHEALTHY",
             *           "DiskHealth": "UNKNOWN",
             *           "LoadStatus": "LOAD_NORMAL",
             *           "NodeHealth": "HEALTHY",
             *           "ProcessHealth": "HEALTHY",
             *           "ProcessLiveness": "HEALTHY"
             *         },
             *         "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *         "healthStatus": "HEALTHY",
             *         "id": "primary-0",
             *         "kubernetesDashboardEndpoint": {
             *           "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
             *           "deploymentCellID": "hc-12345678"
             *         },
             *         "ports": [
             *           80,
             *           443
             *         ],
             *         "status": "RUNNING",
             *         "storageSize": 10,
             *         "vmInfo": {
             *           "architecture": "amd64",
             *           "azCode": "us-east-1a",
             *           "azID": "use1-az1",
             *           "externalIP": "3.44.113.6",
             *           "instanceType": "t2.small",
             *           "internalIP": "192.168.1.4",
             *           "k8sNodeName": "my-k8s-node",
             *           "kernelVersion": "5.10.228",
             *           "kubeletVersion": "1.31.3",
             *           "os": "linux",
             *           "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
             *         }
             *       },
             *       {
             *         "availabilityZone": "us-east-2a",
             *         "detailedHealth": {
             *           "ConnectivityStatus": "UNHEALTHY",
             *           "DiskHealth": "UNKNOWN",
             *           "LoadStatus": "LOAD_NORMAL",
             *           "NodeHealth": "HEALTHY",
             *           "ProcessHealth": "HEALTHY",
             *           "ProcessLiveness": "HEALTHY"
             *         },
             *         "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *         "healthStatus": "HEALTHY",
             *         "id": "primary-0",
             *         "kubernetesDashboardEndpoint": {
             *           "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
             *           "deploymentCellID": "hc-12345678"
             *         },
             *         "ports": [
             *           80,
             *           443
             *         ],
             *         "status": "RUNNING",
             *         "storageSize": 10,
             *         "vmInfo": {
             *           "architecture": "amd64",
             *           "azCode": "us-east-1a",
             *           "azID": "use1-az1",
             *           "externalIP": "3.44.113.6",
             *           "instanceType": "t2.small",
             *           "internalIP": "192.168.1.4",
             *           "k8sNodeName": "my-k8s-node",
             *           "kernelVersion": "5.10.228",
             *           "kubeletVersion": "1.31.3",
             *           "os": "linux",
             *           "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
             *         }
             *       },
             *       {
             *         "availabilityZone": "us-east-2a",
             *         "detailedHealth": {
             *           "ConnectivityStatus": "UNHEALTHY",
             *           "DiskHealth": "UNKNOWN",
             *           "LoadStatus": "LOAD_NORMAL",
             *           "NodeHealth": "HEALTHY",
             *           "ProcessHealth": "HEALTHY",
             *           "ProcessLiveness": "HEALTHY"
             *         },
             *         "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *         "healthStatus": "HEALTHY",
             *         "id": "primary-0",
             *         "kubernetesDashboardEndpoint": {
             *           "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
             *           "deploymentCellID": "hc-12345678"
             *         },
             *         "ports": [
             *           80,
             *           443
             *         ],
             *         "status": "RUNNING",
             *         "storageSize": 10,
             *         "vmInfo": {
             *           "architecture": "amd64",
             *           "azCode": "us-east-1a",
             *           "azID": "use1-az1",
             *           "externalIP": "3.44.113.6",
             *           "instanceType": "t2.small",
             *           "internalIP": "192.168.1.4",
             *           "k8sNodeName": "my-k8s-node",
             *           "kernelVersion": "5.10.228",
             *           "kubeletVersion": "1.31.3",
             *           "os": "linux",
             *           "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
             *         }
             *       }
             *     ]
             */
            nodes?: components["schemas"]["NodeNetworkTopologyResult"][];
            /**
             * @description The private network CIDR for this resource
             * @example 10.0.0.2/24
             */
            privateNetworkCIDR?: string;
            /**
             * @description ID of a Network
             * @example Numquam laudantium et praesentium.
             */
            privateNetworkID?: string;
            proxyEndpoint?: components["schemas"]["ProxyEndpoint"];
            /**
             * @description Whether this resource is publicly accessible
             * @example true
             */
            publiclyAccessible: boolean;
            recentDeploymentFailure?: components["schemas"]["RecentDeploymentFailureStatus"];
            /**
             * @description The resource instance metadata
             * @example {
             *       "KustomizeGeneratedTemplates": "template"
             *     }
             */
            resourceInstanceMetadata?: unknown;
            /**
             * @description The key of the resource
             * @example primary
             */
            resourceKey: string;
            /**
             * @description The name of the resource
             * @example Primary MySQL DB Node
             */
            resourceName: string;
            /**
             * @description The type of the resource
             * @example Kustomize
             */
            resourceType?: string;
        };
        /**
         * @description Resource requirements
         * @example {
         *       "limits": {
         *         "cpu": "1",
         *         "memory": "500Mi"
         *       },
         *       "requests": {
         *         "cpu": "0.5",
         *         "memory": "200Mi"
         *       }
         *     }
         */
        ResourceSpec: {
            /**
             * @description The maximum amount of CPU and memory that the container can use
             * @example {
             *       "cpu": "1",
             *       "memory": "500Mi"
             *     }
             */
            limits?: {
                /**
                 * @description The maximum amount of CPU that the container can use
                 * @example 1
                 */
                cpu?: string;
                /**
                 * @description The maximum amount of memory that the container can use
                 * @example 500Mi
                 */
                memory?: string;
            };
            /**
             * @description The amount of CPU and memory that Kubernetes will guarantee for the container
             * @example {
             *       "cpu": "0.5",
             *       "memory": "200Mi"
             *     }
             */
            requests?: {
                /**
                 * @description The amount of CPU that Kubernetes will guarantee for the container
                 * @example 0.5
                 */
                cpu?: string;
                /**
                 * @description The amount of memory that Kubernetes will guarantee for the container
                 * @example 200Mi
                 */
                memory?: string;
            };
        };
        /** @example {
         *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *       "id": "r-12345678",
         *       "imageConfigId": "imgc-12345678",
         *       "infraConfigId": "ic-12345678",
         *       "isExternal": true,
         *       "managedResourceType": "PortsBasedProxy",
         *       "name": "MySQL multi-writer service",
         *       "urlKey": "myResource"
         *     } */
        ResourceSummary: {
            /**
             * @description A brief description of the resource
             * @example A MySQL SaaS specializing in multi-writer clusters for high availability
             */
            description: string;
            /**
             * @description ID of a resource
             * @example Veniam enim dolorem.
             */
            id: string;
            /**
             * @description ID of an Image Config
             * @example Consectetur non quos suscipit sint.
             */
            imageConfigId?: string;
            /**
             * @description ID of an Infra Config
             * @example Rerum harum voluptates molestiae quidem.
             */
            infraConfigId?: string;
            /**
             * @description Whether the resource is external
             * @example true
             */
            isExternal: boolean;
            /**
             * @description The managed resource type of instance
             * @example PortsBasedProxy
             */
            managedResourceType?: string;
            /**
             * @description The name of the resource
             * @example MySQL multi-writer service
             */
            name: string;
            /**
             * @description The URL key of the resource
             * @example myResource
             */
            urlKey?: string;
        };
        /** @example {
         *       "id": "instance-abcd1234",
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "7p"
         *     } */
        RestartResourceInstanceRequest: {
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Exercitationem excepturi asperiores.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example x
             */
            token: string;
        };
        /** @example {
         *       "network_type": "PUBLIC|INTERNAL",
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "snapshotId": "instance-ss-abcd1234",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "39"
         *     } */
        RestoreResourceInstanceFromSnapshotRequest: {
            /**
             * @description The network type
             * @example PUBLIC|INTERNAL
             */
            network_type?: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Suscipit qui est distinctio illo nemo tempore.
             */
            serviceProviderId: string;
            /**
             * @description ID of a Resource Instance Snapshot
             * @example Optio quasi qui iusto eos commodi eveniet.
             */
            snapshotId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example kqq
             */
            token: string;
        };
        /** @example {
         *       "network_type": "PUBLIC|INTERNAL"
         *     } */
        RestoreResourceInstanceFromSnapshotRequest2: {
            /**
             * @description The network type
             * @example PUBLIC|INTERNAL
             */
            network_type?: string;
        };
        /** @example {
         *       "id": "instance-abcd1234",
         *       "network_type": "PUBLIC|INTERNAL",
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "targetRestoreTime": "2021-09-01T00:00:00Z",
         *       "token": "h"
         *     } */
        RestoreResourceInstanceRequest: {
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The network type
             * @example PUBLIC|INTERNAL
             */
            network_type?: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Aut sapiente soluta distinctio.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description The target restore time
             * @example 2021-09-01T00:00:00Z
             */
            targetRestoreTime: string;
            /**
             * @description JWT token used to perform authorization
             * @example z
             */
            token: string;
        };
        /** @example {
         *       "network_type": "PUBLIC|INTERNAL",
         *       "targetRestoreTime": "2021-09-01T00:00:00Z"
         *     } */
        RestoreResourceInstanceRequest2: {
            /**
             * @description The network type
             * @example PUBLIC|INTERNAL
             */
            network_type?: string;
            /**
             * @description The target restore time
             * @example 2021-09-01T00:00:00Z
             */
            targetRestoreTime: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "roleType": "reader",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "key"
         *     } */
        RevokeConsumptionUserRoleRequest: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /**
             * @description Type of the role
             * @example root|editor|reader|service_editor|service_reader|admin|service_operator
             */
            roleType: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId: string;
            /**
             * @description JWT token used to perform authorization
             * @example wo2
             */
            token: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "roleType": "reader"
         *     } */
        RevokeConsumptionUserRoleRequest2: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /** @example reader */
            roleType: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "roleType": "reader",
         *       "token": "qmf"
         *     } */
        RevokeUserRoleRequest: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /**
             * @description Type of the role
             * @example root|editor|reader|service_editor|service_reader|admin|service_operator
             */
            roleType: string;
            /**
             * @description JWT token used to perform authorization
             * @example 2t
             */
            token: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "roleType": "reader"
         *     } */
        RevokeUserRoleRequest2: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /** @example reader */
            roleType: string;
        };
        /**
         * @description Rollout the image configuration to all existing entities using this image configuration
         * @example {
         *       "id": "imgc-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "wb2"
         *     }
         */
        RolloutFleetImageConfigRequest: {
            /**
             * @description ID of an Image Config
             * @example Facilis at et consectetur animi.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example x0
             */
            token: string;
        };
        /** @example {
         *       "id": "imgc-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "q"
         *     } */
        RolloutFleetImageStatusRequest: {
            /**
             * @description ID of an Image Config
             * @example At ut.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example x
             */
            token: string;
        };
        /** @example {
         *       "status": "IN_PROGRESS"
         *     } */
        RolloutFleetImageStatusResult: {
            /**
             * @description UpgradeStatus is the status of an upgrade path
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING
             */
            status: string;
        };
        /** @example {
         *       "id": "ic-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "jc"
         *     } */
        RolloutFleetInfraRequest: {
            /**
             * @description ID of an Infra Config
             * @example Incidunt voluptas accusantium quaerat officia a.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example f
             */
            token: string;
        };
        /** @example {
         *       "id": "ic-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "i"
         *     } */
        RolloutFleetInfraStatusRequest: {
            /**
             * @description ID of an Infra Config
             * @example Facere sit alias exercitationem totam.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 0k7
             */
            token: string;
        };
        /** @example {
         *       "status": "IN_PROGRESS"
         *     } */
        RolloutFleetInfraStatusResult: {
            /**
             * @description UpgradeStatus is the status of an upgrade path
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING
             */
            status: string;
        };
        /** @example {
         *       "awsAccountID": "123456789012"
         *     } */
        Route53Configuration: {
            /**
             * @description The AWS account hosting the the hosted zone for the domain
             * @example 123456789012
             */
            awsAccountID: string;
        };
        /** @example {
         *       "awsAccountID": "123456789012",
         *       "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
         *     } */
        Route53ConfigurationDescription: {
            /**
             * @description The AWS account hosting the the hosted zone for the domain
             * @example 123456789012
             */
            awsAccountID: string;
            /**
             * @description The URL to the CloudFormation template
             * @example https://s3.amazonaws.com/my-bucket/my-template.json
             */
            awsCloudFormationTemplateURL: string;
        };
        /** @example {} */
        S3Configuration: Record<string, never>;
        /** @example {
         *       "customDomain": "mycustomdomain.com",
         *       "customDomainStatus": "READY",
         *       "detailedNetworkTopology": {
         *         "r-abcd1234": {
         *           "allowedIPRanges": [
         *             "0.0.0.0/0"
         *           ],
         *           "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *           "clusterPorts": [
         *             3306
         *           ],
         *           "main": true,
         *           "networkingType": "PUBLIC",
         *           "nodes": [
         *             {
         *               "availabilityZone": "us-east-2a",
         *               "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
         *               "healthStatus": "healthy",
         *               "id": "primary-0",
         *               "ports": [
         *                 3306
         *               ],
         *               "status": "RUNNING"
         *             }
         *           ],
         *           "privateNetworkCIDR": "10.0.0.2/24",
         *           "privateNetworkID": "n-1234abcd",
         *           "publiclyAccessible": true,
         *           "resourceKey": "saasportal",
         *           "resourceName": "SaaS Portal"
         *         }
         *       },
         *       "disablePasswordLogin": false,
         *       "emailConfig": {
         *         "smtpFromEmail": "example@gmail.com",
         *         "smtpHost": "smtp.gmail.com",
         *         "smtpPassword": "password",
         *         "smtpPort": 587,
         *         "smtpUsername": "username"
         *       },
         *       "endpoint": "https://saas-portal.example.com",
         *       "environmentType": "DEV",
         *       "googleAnalyticsTagID": "G-123456789",
         *       "imageConfig": {
         *         "imageName": "myimage",
         *         "imageRegistry": "ghcr.io",
         *         "imageTag": "latest"
         *       },
         *       "status": "READY"
         *     } */
        SaaSPortal: {
            /**
             * @description The custom domain of the SaaS portal
             * @example mycustomdomain.com
             */
            customDomain?: string;
            /**
             * @description The status of an operation
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
             */
            customDomainStatus?: string;
            /**
             * @description The detailed network topology of the SaaS portal
             * @example {
             *       "r-abcd1234": {
             *         "allowedIPRanges": [
             *           "0.0.0.0/0"
             *         ],
             *         "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *         "clusterPorts": [
             *           3306
             *         ],
             *         "main": true,
             *         "networkingType": "PUBLIC",
             *         "nodes": [
             *           {
             *             "availabilityZone": "us-east-2a",
             *             "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
             *             "healthStatus": "healthy",
             *             "id": "primary-0",
             *             "ports": [
             *               3306
             *             ],
             *             "status": "RUNNING"
             *           }
             *         ],
             *         "privateNetworkCIDR": "10.0.0.2/24",
             *         "privateNetworkID": "n-1234abcd",
             *         "publiclyAccessible": true,
             *         "resourceKey": "saasportal",
             *         "resourceName": "SaaS Portal"
             *       }
             *     }
             */
            detailedNetworkTopology?: {
                [key: string]: unknown;
            };
            /**
             * @description Whether to disable password login for the SaaS portal
             * @example false
             */
            disablePasswordLogin?: boolean;
            emailConfig?: components["schemas"]["SaaSPortalEmailConfig"];
            /**
             * @description The endpoint of the SaaS portal for this environment type
             * @example https://saas-portal.example.com
             */
            endpoint?: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType: string;
            /**
             * @description The Google Analytics tag ID for the SaaS portal
             * @example G-123456789
             */
            googleAnalyticsTagID?: string;
            imageConfig?: components["schemas"]["SaaSPortalImageConfig"];
            /**
             * @description The status of an operation
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
             */
            status: string;
        };
        /** @example {
         *       "smtpFromEmail": "example@gmail.com",
         *       "smtpHost": "smtp.gmail.com",
         *       "smtpPassword": "password",
         *       "smtpPort": 587,
         *       "smtpUsername": "username"
         *     } */
        SaaSPortalEmailConfig: {
            /**
             * @description The SMTP from email
             * @example example@gmail.com
             */
            smtpFromEmail: string;
            /**
             * @description The SMTP host
             * @example smtp.gmail.com
             */
            smtpHost: string;
            /**
             * @description The SMTP password
             * @example password
             */
            smtpPassword: string;
            /**
             * Format: int64
             * @description The SMTP port
             * @example 587
             */
            smtpPort?: number;
            /**
             * @description The SMTP username
             * @example username
             */
            smtpUsername: string;
        };
        /** @example {
         *       "imageName": "myimage",
         *       "imageRegistry": "ghcr.io",
         *       "imageTag": "latest"
         *     } */
        SaaSPortalImageConfig: {
            /**
             * @description The image name for the SaaS portal
             * @example myimage
             */
            imageName: string;
            /**
             * @description The image registry for the SaaS portal
             * @example ghcr.io
             */
            imageRegistry: string;
            /**
             * @description The image tag for the SaaS portal
             * @example latest
             */
            imageTag: string;
        };
        /** @example {
         *       "helmPackage": {
         *         "chartName": "my-chart",
         *         "chartRepoName": "my-repo",
         *         "chartRepoUrl": "https://my-repo.com",
         *         "chartValues": {
         *           "key1": "value1",
         *           "key2": 3,
         *           "key3": {
         *             "key4": "value4"
         *           }
         *         },
         *         "chartVersion": "1.0.0",
         *         "layeredChartValues": [
         *           {
         *             "name": "my-layer",
         *             "scope": {
         *               "{{ $sys.cloudProviderName }}": "aws"
         *             },
         *             "values": {
         *               "global": {
         *                 "affinity": {
         *                   "nodeAffinity": {
         *                     "requiredDuringSchedulingIgnoredDuringExecution": {
         *                       "nodeSelectorTerms": [
         *                         {
         *                           "matchExpressions": [
         *                             {
         *                               "key": "omnistrate.com/managed-by",
         *                               "operator": "In",
         *                               "values": [
         *                                 "omnistrate"
         *                               ]
         *                             }
         *                           ]
         *                         }
         *                       ]
         *                     }
         *                   }
         *                 }
         *               }
         *             },
         *             "valuesFile": {
         *               "gitConfiguration": {
         *                 "accessToken": "my-token",
         *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *                 "referenceName": "tags/v1.0.0",
         *                 "repositoryUrl": "https://github.com/username/myrepo",
         *                 "userName": "my-user"
         *               },
         *               "path": "helm/values/production.yaml"
         *             }
         *           },
         *           {
         *             "name": "my-layer",
         *             "scope": {
         *               "{{ $sys.cloudProviderName }}": "aws"
         *             },
         *             "values": {
         *               "global": {
         *                 "affinity": {
         *                   "nodeAffinity": {
         *                     "requiredDuringSchedulingIgnoredDuringExecution": {
         *                       "nodeSelectorTerms": [
         *                         {
         *                           "matchExpressions": [
         *                             {
         *                               "key": "omnistrate.com/managed-by",
         *                               "operator": "In",
         *                               "values": [
         *                                 "omnistrate"
         *                               ]
         *                             }
         *                           ]
         *                         }
         *                       ]
         *                     }
         *                   }
         *                 }
         *               }
         *             },
         *             "valuesFile": {
         *               "gitConfiguration": {
         *                 "accessToken": "my-token",
         *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *                 "referenceName": "tags/v1.0.0",
         *                 "repositoryUrl": "https://github.com/username/myrepo",
         *                 "userName": "my-user"
         *               },
         *               "path": "helm/values/production.yaml"
         *             }
         *           }
         *         ],
         *         "namespace": "default",
         *         "password": "my-password",
         *         "username": "my-user"
         *       },
         *       "token": "dt"
         *     } */
        SaveHelmPackageRequest: {
            helmPackage: components["schemas"]["HelmPackage"];
            /**
             * @description JWT token used to perform authorization
             * @example y
             */
            token: string;
        };
        /** @example {
         *       "helmPackage": {
         *         "chartName": "my-chart",
         *         "chartRepoName": "my-repo",
         *         "chartRepoUrl": "https://my-repo.com",
         *         "chartValues": {
         *           "key1": "value1",
         *           "key2": 3,
         *           "key3": {
         *             "key4": "value4"
         *           }
         *         },
         *         "chartVersion": "1.0.0",
         *         "layeredChartValues": [
         *           {
         *             "name": "my-layer",
         *             "scope": {
         *               "{{ $sys.cloudProviderName }}": "aws"
         *             },
         *             "values": {
         *               "global": {
         *                 "affinity": {
         *                   "nodeAffinity": {
         *                     "requiredDuringSchedulingIgnoredDuringExecution": {
         *                       "nodeSelectorTerms": [
         *                         {
         *                           "matchExpressions": [
         *                             {
         *                               "key": "omnistrate.com/managed-by",
         *                               "operator": "In",
         *                               "values": [
         *                                 "omnistrate"
         *                               ]
         *                             }
         *                           ]
         *                         }
         *                       ]
         *                     }
         *                   }
         *                 }
         *               }
         *             },
         *             "valuesFile": {
         *               "gitConfiguration": {
         *                 "accessToken": "my-token",
         *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *                 "referenceName": "tags/v1.0.0",
         *                 "repositoryUrl": "https://github.com/username/myrepo",
         *                 "userName": "my-user"
         *               },
         *               "path": "helm/values/production.yaml"
         *             }
         *           },
         *           {
         *             "name": "my-layer",
         *             "scope": {
         *               "{{ $sys.cloudProviderName }}": "aws"
         *             },
         *             "values": {
         *               "global": {
         *                 "affinity": {
         *                   "nodeAffinity": {
         *                     "requiredDuringSchedulingIgnoredDuringExecution": {
         *                       "nodeSelectorTerms": [
         *                         {
         *                           "matchExpressions": [
         *                             {
         *                               "key": "omnistrate.com/managed-by",
         *                               "operator": "In",
         *                               "values": [
         *                                 "omnistrate"
         *                               ]
         *                             }
         *                           ]
         *                         }
         *                       ]
         *                     }
         *                   }
         *                 }
         *               }
         *             },
         *             "valuesFile": {
         *               "gitConfiguration": {
         *                 "accessToken": "my-token",
         *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *                 "referenceName": "tags/v1.0.0",
         *                 "repositoryUrl": "https://github.com/username/myrepo",
         *                 "userName": "my-user"
         *               },
         *               "path": "helm/values/production.yaml"
         *             }
         *           }
         *         ],
         *         "namespace": "default",
         *         "password": "my-password",
         *         "username": "my-user"
         *       }
         *     } */
        SaveHelmPackageRequest2: {
            helmPackage: components["schemas"]["HelmPackage"];
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "name": "my-secret",
         *       "value": "super-secret-value"
         *     } */
        Secret: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType: string;
            /**
             * @description Name of the secret
             * @example my-secret
             */
            name: string;
            /**
             * @description The value of the secret
             * @example super-secret-value
             */
            value: string;
        };
        /** @example {
         *       "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
         *       "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
         *     } */
        ServiceAssets: {
            /**
             * @description The URL for CloudFormation onboarding
             * @example https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
             */
            cloudFormationURL?: string;
            /**
             * @description The URL for CloudFormation onboarding without LoadBalancer policy
             * @example https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
             */
            cloudFormationURLNoLB?: string;
        };
        /** @example {
         *       "dependsOnDeployment": [
         *         "instanceDeploymentAlias1",
         *         "instanceDeploymentAlias2"
         *       ],
         *       "failedReason": "Invalid inputs",
         *       "instanceDeploymentAlias": "instanceDeploymentAlias",
         *       "instanceId": "i-12345678",
         *       "serviceId": "s-12345678",
         *       "status": "PENDING",
         *       "statusMessage": "Creating deployment",
         *       "subscriptionId": "Enim blanditiis."
         *     } */
        ServiceDeploymentDetails: {
            /**
             * @description The deployment keys that this deployment depends on
             * @example [
             *       "instanceDeploymentAlias1",
             *       "instanceDeploymentAlias2"
             *     ]
             */
            dependsOnDeployment?: string[];
            /**
             * @description The reason why the deployment failed
             * @example Invalid inputs
             */
            failedReason?: string;
            /**
             * @description The instance deployment alias
             * @example instanceDeploymentAlias
             */
            instanceDeploymentAlias: string;
            /**
             * @description ID of a Resource Instance
             * @example instance-12345678
             */
            instanceId?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description The status of the service deployment
             * @example PENDING
             */
            status?: string;
            /**
             * @description The status message of the service deployment
             * @example Creating deployment
             */
            statusMessage?: string;
            /**
             * @description ID of a Subscription
             * @example Recusandae ut voluptas architecto.
             */
            subscriptionId: string;
        };
        /** @example {
         *       "id": "se-12345678",
         *       "name": "dev",
         *       "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
         *       "saasPortalStatus": "READY",
         *       "saasPortalUrl": "https://saas-portal.example.com",
         *       "servicePlans": [
         *         {
         *           "description": "A Basic product tier",
         *           "modelType": "CUSTOMER_HOSTED",
         *           "name": "Basic",
         *           "productTierID": "pt-12345678",
         *           "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *         },
         *         {
         *           "description": "A Basic product tier",
         *           "modelType": "CUSTOMER_HOSTED",
         *           "name": "Basic",
         *           "productTierID": "pt-12345678",
         *           "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *         }
         *       ],
         *       "sourceEnvironmentID": "se-12345678",
         *       "sourceEnvironmentName": "dev",
         *       "type": "DEV",
         *       "visibility": "private"
         *     } */
        ServiceEnvironment: {
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            id: string;
            /**
             * @description Name of the Service Environment
             * @example dev
             */
            name: string;
            /**
             * @description The status of the promotion
             * @example IN_SYNC|OUT_OF_SYNC|UNKNOWN
             */
            promoteStatus?: string;
            /**
             * @description The status of an operation
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
             */
            saasPortalStatus?: string;
            /**
             * @description The URL of the SaaS portal for this environment type
             * @example https://saas-portal.example.com
             */
            saasPortalUrl?: string;
            /**
             * @description List of service plans
             * @example [
             *       {
             *         "description": "A Basic product tier",
             *         "modelType": "CUSTOMER_HOSTED",
             *         "name": "Basic",
             *         "productTierID": "pt-12345678",
             *         "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *       },
             *       {
             *         "description": "A Basic product tier",
             *         "modelType": "CUSTOMER_HOSTED",
             *         "name": "Basic",
             *         "productTierID": "pt-12345678",
             *         "tierType": "OMNISTRATE_DEDICATED_TENANCY"
             *       }
             *     ]
             */
            servicePlans: components["schemas"]["ServicePlan"][];
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            sourceEnvironmentID?: string;
            /**
             * @description The source environment name
             * @example dev
             */
            sourceEnvironmentName?: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            type?: string;
            /**
             * @description This parameter is used to configure the visibility of the service control-plane APIs
             * @example PUBLIC
             */
            visibility: string;
        };
        /** @example {
         *       "serviceEnvironmentID": "se-123456",
         *       "serviceID": "s-123456",
         *       "token": "pl"
         *     } */
        ServiceHealthRequest: {
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentID: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceID: string;
            /**
             * @description JWT token used to perform authorization
             * @example frv
             */
            token: string;
        };
        /** @example {
         *       "cloudProviderHealthSummary": {
         *         "aws|azure|gcp|all": {
         *           "cloudProvider": "aws",
         *           "deployingInstances": 1500090838910830300,
         *           "healthyInstances": 1205336912136189700,
         *           "message": "Cloud provider is healthy",
         *           "regionalHealthSummary": {
         *             "Quo fuga blanditiis.": {
         *               "deployingInstances": 2910586122641776000,
         *               "deploymentCellHealthSummary": {
         *                 "Delectus minima excepturi qui recusandae ut.": {
         *                   "deployingInstances": 3221727856085581300,
         *                   "healthyInstances": 8553049085281164000,
         *                   "hostClusterID": "hc-12345678",
         *                   "message": "Cell is healthy",
         *                   "status": "Healthy",
         *                   "totalInstances": 2534220480800404500,
         *                   "unhealthyInstances": 8903719001626506000,
         *                   "unknownInstances": 5664733281950047000
         *                 }
         *               },
         *               "healthyInstances": 715164784027732700,
         *               "message": "Region is healthy",
         *               "region": "us-east-1",
         *               "status": "Healthy",
         *               "totalInstances": 6050070458651640000,
         *               "unhealthyInstances": 4759831795457442000,
         *               "unknownInstances": 272080554073928100
         *             }
         *           },
         *           "status": "Healthy",
         *           "totalInstances": 6830362208859304000,
         *           "unhealthyInstances": 1357092155201035500,
         *           "unknownInstances": 3906920354509483000
         *         }
         *       },
         *       "healthyInstances": 8106556365384254000,
         *       "message": "Service is healthy",
         *       "serviceEnvironmentID": "se-123456",
         *       "serviceID": "s-123456",
         *       "status": "Healthy",
         *       "totalInstances": 6328666741496522000,
         *       "unhealthyInstances": 3432383057093563000,
         *       "unknownInstances": 5394363153326846000
         *     } */
        ServiceHealthSummary: {
            /**
             * @description The summary of health by cloud provider
             * @example {
             *       "aws|azure|gcp|all": {
             *         "cloudProvider": "aws",
             *         "deployingInstances": 1500090838910830300,
             *         "healthyInstances": 1205336912136189700,
             *         "message": "Cloud provider is healthy",
             *         "regionalHealthSummary": {
             *           "Quo fuga blanditiis.": {
             *             "deployingInstances": 2910586122641776000,
             *             "deploymentCellHealthSummary": {
             *               "Delectus minima excepturi qui recusandae ut.": {
             *                 "deployingInstances": 3221727856085581300,
             *                 "healthyInstances": 8553049085281164000,
             *                 "hostClusterID": "hc-12345678",
             *                 "message": "Cell is healthy",
             *                 "status": "Healthy",
             *                 "totalInstances": 2534220480800404500,
             *                 "unhealthyInstances": 8903719001626506000,
             *                 "unknownInstances": 5664733281950047000
             *               }
             *             },
             *             "healthyInstances": 715164784027732700,
             *             "message": "Region is healthy",
             *             "region": "us-east-1",
             *             "status": "Healthy",
             *             "totalInstances": 6050070458651640000,
             *             "unhealthyInstances": 4759831795457442000,
             *             "unknownInstances": 272080554073928100
             *           }
             *         },
             *         "status": "Healthy",
             *         "totalInstances": 6830362208859304000,
             *         "unhealthyInstances": 1357092155201035500,
             *         "unknownInstances": 3906920354509483000
             *       }
             *     }
             */
            cloudProviderHealthSummary: {
                [key: string]: unknown;
            };
            /**
             * Format: int64
             * @description The number of healthy instances in the region
             * @example 5195842699543495000
             */
            healthyInstances: number;
            /**
             * @description The status message
             * @example Service is healthy
             */
            message: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentID: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceID: string;
            /**
             * @description The status of the service
             * @example Healthy
             */
            status: string;
            /**
             * Format: int64
             * @description The total number of instances in the region
             * @example 3513144045633194000
             */
            totalInstances: number;
            /**
             * Format: int64
             * @description The number of unhealthy instances in the region
             * @example 3301043020468544500
             */
            unhealthyInstances: number;
            /**
             * Format: int64
             * @description The number of instances with unknown status
             * @example 7642192270472400000
             */
            unknownInstances?: number;
        };
        /**
         * @description The configuration parameters of the service model feature
         * @example {
         *       "status": "ON"
         *     }
         */
        ServiceModelFeatureConfiguration: {
            [key: string]: unknown;
        };
        /** @example {
         *       "configuration": {
         *         "status": "ON"
         *       },
         *       "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *     } */
        ServiceModelFeatureDetail: {
            configuration: components["schemas"]["ServiceModelFeatureConfiguration"];
            /**
             * @description Name of the service model feature
             * @example CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
             */
            feature: string;
        };
        /** @example {
         *       "AutoApproveSubscription": false,
         *       "allowCreatesWhenPaymentNotConfigured": true,
         *       "assets": {
         *         "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
         *         "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
         *       },
         *       "awsRegions": [
         *         "us-east-2",
         *         "ca-central-1"
         *       ],
         *       "azureRegions": [
         *         "northcentralus"
         *       ],
         *       "cloudProviders": [
         *         "AWS",
         *         "GCP",
         *         "Azure"
         *       ],
         *       "gcpRegions": [
         *         "us-central1"
         *       ],
         *       "maxNumberOfInstances": 5,
         *       "privateRegions": [
         *         "n/a"
         *       ],
         *       "productTierDescription": "A premium product tier",
         *       "productTierDocumentation": "Any documentation",
         *       "productTierFeatures": [
         *         {
         *           "configuration": {
         *             "provider": "native"
         *           },
         *           "feature": "LOGS",
         *           "scope": "INTERNAL"
         *         },
         *         {
         *           "configuration": {
         *             "provider": "native"
         *           },
         *           "feature": "LOGS",
         *           "scope": "INTERNAL"
         *         }
         *       ],
         *       "productTierID": "pt-12345678",
         *       "productTierName": "Premium",
         *       "productTierPlanDescription": "A premium plan",
         *       "productTierPricing": {
         *         "price1": "value1"
         *       },
         *       "productTierSupport": "Any support",
         *       "productTierType": "OMNISTRATE_DEDICATED_TENANCY",
         *       "productTierURLKey": "premium",
         *       "productTierVersion": "1.0.0",
         *       "resourceParameters": [
         *         {
         *           "name": "MySQL",
         *           "resourceId": "r-12345678",
         *           "urlKey": "mysql"
         *         },
         *         {
         *           "name": "Redis",
         *           "resourceId": "r-abcdefgh",
         *           "urlKey": "redis"
         *         }
         *       ],
         *       "serviceAPIID": "sa-12345678",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentID": "se-12345678",
         *       "serviceEnvironmentName": "Development",
         *       "serviceEnvironmentType": "DEV",
         *       "serviceEnvironmentURLKey": "dev",
         *       "serviceEnvironmentVisibility": "PRIVATE",
         *       "serviceLogoURL": "Iste suscipit enim ullam et tempore.",
         *       "serviceModelFeatures": [
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         },
         *         {
         *           "configuration": {
         *             "status": "ON"
         *           },
         *           "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
         *         }
         *       ],
         *       "serviceModelID": "sm-12345678",
         *       "serviceModelName": "Hosted",
         *       "serviceModelStatus": "Ready",
         *       "serviceModelType": "CUSTOMER_HOSTED, OMNISTRATE_HOSTED, BYOA",
         *       "serviceModelURLKey": "hosted",
         *       "supportsPublicNetwork": false
         *     } */
        ServiceOffering: {
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            AutoApproveSubscription: boolean;
            /**
             * @description Allow creates when payment not configured
             * @example true
             */
            allowCreatesWhenPaymentNotConfigured?: boolean;
            assets?: components["schemas"]["ServiceAssets"];
            /**
             * @description The AWS regions that this service offering is available on
             * @example [
             *       "us-east-2",
             *       "ca-central-1"
             *     ]
             */
            awsRegions?: string[];
            /**
             * @description The Azure regions that this service offering is available on
             * @example [
             *       "northcentralus"
             *     ]
             */
            azureRegions?: string[];
            /**
             * @description List of supported cloud providers for this product tier.
             * @example [
             *       "AWS",
             *       "GCP",
             *       "Azure"
             *     ]
             */
            cloudProviders?: string[];
            /**
             * @description The GCP regions that this service offering is available on
             * @example [
             *       "us-central1"
             *     ]
             */
            gcpRegions?: string[];
            /**
             * Format: int64
             * @description Maximum number of instances
             * @example 5
             */
            maxNumberOfInstances?: number;
            /**
             * @description The Private regions that this service offering is available on
             * @example [
             *       "n/a"
             *     ]
             */
            privateRegions?: string[];
            /**
             * @description A brief description of the product tier
             * @example A premium product tier
             */
            productTierDescription?: string;
            /**
             * @description Documentation
             * @example Any documentation
             */
            productTierDocumentation: string;
            /**
             * @description Enabled product tier features
             * @example [
             *       {
             *         "configuration": {
             *           "provider": "native"
             *         },
             *         "feature": "LOGS",
             *         "scope": "INTERNAL"
             *       },
             *       {
             *         "configuration": {
             *           "provider": "native"
             *         },
             *         "feature": "LOGS",
             *         "scope": "INTERNAL"
             *       }
             *     ]
             */
            productTierFeatures?: components["schemas"]["ProductTierFeatureDetail"][];
            /**
             * @description ID of a Product Tier
             * @example Quo magnam illo.
             */
            productTierID: string;
            /**
             * @description The product tier name
             * @example Premium
             */
            productTierName: string;
            /**
             * @description A brief description for the end user of the product tier
             * @example A premium plan
             */
            productTierPlanDescription?: string;
            /**
             * @description Pricing
             * @example {
             *       "price1": "value1"
             *     }
             */
            productTierPricing: unknown;
            /**
             * @description Support
             * @example Any support
             */
            productTierSupport: string;
            /**
             * @description ProductTierType is the type of tier for a product
             * @example OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
             */
            productTierType: string;
            /**
             * @description The product tier URL key
             * @example premium
             */
            productTierURLKey: string;
            /**
             * @description The product tier version
             * @example 1.0.0
             */
            productTierVersion: string;
            /**
             * @description The resource parameters
             * @example [
             *       {
             *         "name": "MySQL",
             *         "resourceId": "r-12345678",
             *         "urlKey": "mysql"
             *       },
             *       {
             *         "name": "Redis",
             *         "resourceId": "r-abcdefgh",
             *         "urlKey": "redis"
             *       }
             *     ]
             */
            resourceParameters: components["schemas"]["ResourceEntity"][];
            /**
             * @description ID of a Service API
             * @example Saepe maiores animi occaecati.
             */
            serviceAPIID: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentID: string;
            /**
             * @description The service environment name
             * @example Development
             */
            serviceEnvironmentName: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            serviceEnvironmentType: string;
            /**
             * @description The service environment URL key
             * @example dev
             */
            serviceEnvironmentURLKey: string;
            /**
             * @description This parameter is used to configure the visibility of the service control-plane APIs
             * @example PUBLIC
             */
            serviceEnvironmentVisibility: string;
            /**
             * @description The logo for the service
             * @example Provident nisi rerum cumque non ullam.
             */
            serviceLogoURL: string;
            /**
             * @description Enabled service model features
             * @example [
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       },
             *       {
             *         "configuration": {
             *           "status": "ON"
             *         },
             *         "feature": "CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY"
             *       }
             *     ]
             */
            serviceModelFeatures?: components["schemas"]["ServiceModelFeatureDetail"][];
            /**
             * @description ID of a Service Model
             * @example Aliquid et.
             */
            serviceModelID: string;
            /**
             * @description The service model name
             * @example Hosted
             */
            serviceModelName: string;
            /**
             * @description The service model status
             * @example Ready
             */
            serviceModelStatus: string;
            /**
             * @description The model type encapsulating this service
             * @example OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
             */
            serviceModelType: string;
            /**
             * @description The service model URL key
             * @example hosted
             */
            serviceModelURLKey: string;
            /**
             * @description Indicates whether any of the resources in the product tier support public network
             * @example false
             */
            supportsPublicNetwork?: boolean;
        };
        /** @example {
         *       "description": "A Basic product tier",
         *       "modelType": "CUSTOMER_HOSTED",
         *       "name": "Basic",
         *       "productTierID": "pt-12345678",
         *       "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *     } */
        ServicePlan: {
            /**
             * @description Description of the Product Tier
             * @example A Basic product tier
             */
            description: string;
            /**
             * @description The model type encapsulating this service
             * @example OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
             */
            modelType: string;
            /**
             * @description Name of the Product Tier
             * @example Basic
             */
            name: string;
            /**
             * @description ID of a Product Tier
             * @example Officiis eligendi ea non hic amet voluptatem.
             */
            productTierID: string;
            /**
             * @description ProductTierType is the type of tier for a product
             * @example OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
             */
            tierType: string;
        };
        /** @example {
         *       "alertType": "Alarm",
         *       "eventCategory": "InstanceEvent",
         *       "eventID": "e-123456",
         *       "eventPayload": {
         *         "Dicta aut non iure rerum consequatur.": "Sapiente vel suscipit nihil similique.",
         *         "Molestias recusandae recusandae quia.": "Inventore aut.",
         *         "Sapiente laboriosam consectetur.": "Voluptatem quia dolorem et laboriosam ducimus."
         *       },
         *       "eventType": "UnhealthyInstance",
         *       "expiryTime": "2023-01-10T00:00:00Z",
         *       "instanceID": "instance-12345678",
         *       "planVersion": "v1.0",
         *       "priority": "Critical",
         *       "resourceName": "Resource-123",
         *       "scope": "ServiceProvider",
         *       "serviceEnvironmentID": "se-123456",
         *       "serviceID": "s-123456",
         *       "serviceName": "Service-123",
         *       "servicePlanName": "Basic Plan",
         *       "time": "2023-01-10T00:00:00Z"
         *     } */
        ServiceProviderEvent: {
            /**
             * @description The type of the alert
             * @example Alarm|Notification
             */
            alertType: string;
            /**
             * @description The category of the service provider specific event
             * @example InstanceEvent|ServiceEvent|UserEvent|IdentityProviderEvent
             */
            eventCategory: string;
            /**
             * @description ID of a Event
             * @example Ut harum odit sit aut quasi.
             */
            eventID: string;
            /**
             * @description The event payload for a service provider
             * @example {
             *       "Et et dolore quae eos.": "Nam atque voluptatem odio quis.",
             *       "Natus animi rem laboriosam veritatis harum.": "Corporis sint perferendis est omnis eaque.",
             *       "Sunt magni modi.": "Sunt et sint in expedita omnis."
             *     }
             */
            eventPayload: {
                [key: string]: unknown;
            };
            /**
             * @description The type of the service provider specific event
             * @example UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
             */
            eventType: string;
            /**
             * @description The expiry time of the event
             * @example 2023-01-10T00:00:00Z
             */
            expiryTime: string;
            /**
             * @description ID of a Resource Instance
             * @example instance-12345678
             */
            instanceID?: string;
            /**
             * @description The version of the plan
             * @example v1.0
             */
            planVersion?: string;
            /**
             * @description The priority of the event
             * @example Critical|High|Medium|Low
             */
            priority: string;
            /**
             * @description The name of the resource
             * @example Resource-123
             */
            resourceName?: string;
            /**
             * @description The scope of the event
             * @example ServiceProvider|EndCustomer
             */
            scope: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            serviceEnvironmentID?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceID?: string;
            /**
             * @description The name of the service
             * @example Service-123
             */
            serviceName?: string;
            /**
             * @description The name of the service plan
             * @example Basic Plan
             */
            servicePlanName?: string;
            /**
             * @description The event time
             * @example 2023-01-10T00:00:00Z
             */
            time: string;
        };
        /** @example {
         *       "eventsSummary": {
         *         "FailedDeployment": 1,
         *         "UnhealthyInstance": 2
         *       }
         *     } */
        ServiceProviderEventSummary: {
            /**
             * @description The number of outstanding events by type
             * @example {
             *       "FailedDeployment": 1,
             *       "UnhealthyInstance": 2
             *     }
             */
            eventsSummary?: {
                [key: string]: unknown;
            };
        };
        /** @example {
         *       "accountConfigId": "ac-12345678",
         *       "id": "sm-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "3x1"
         *     } */
        SetActiveAccountConfigRequest: {
            /**
             * @description ID of an Account Config
             * @example Ut rerum esse.
             */
            accountConfigId: string;
            /**
             * @description ID of a Service Model
             * @example Sunt alias alias.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example s72
             */
            token: string;
        };
        /** @example {
         *       "environmentVariables": [
         *         {
         *           "key": "MYSQL_ROOT_PASSWORD",
         *           "value": "password"
         *         }
         *       ],
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "ag2"
         *     } */
        SetEnvironmentVariablesRequest: {
            /**
             * @description The environment variables that this resource requires
             * @example [
             *       {
             *         "key": "MYSQL_ROOT_PASSWORD",
             *         "value": "password"
             *       }
             *     ]
             */
            environmentVariables?: components["schemas"]["EnvironmentVariable"][];
            /**
             * @description ID of a resource
             * @example Eveniet est est officia.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 7gm
             */
            token: string;
        };
        /** @example {
         *       "environmentVariables": [
         *         {
         *           "key": "MYSQL_ROOT_PASSWORD",
         *           "value": "password"
         *         }
         *       ]
         *     } */
        SetEnvironmentVariablesRequest2: {
            /**
             * @description The environment variables that this resource requires
             * @example [
             *       {
             *         "key": "MYSQL_ROOT_PASSWORD",
             *         "value": "password"
             *       }
             *     ]
             */
            environmentVariables?: components["schemas"]["EnvironmentVariable"][];
        };
        /** @example {
         *       "environmentType": "DEV",
         *       "name": "my-secret",
         *       "token": "b8",
         *       "value": "super-secret-value"
         *     } */
        SetSecretRequest: {
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType: string;
            /**
             * @description Name of the secret
             * @example my-secret
             */
            name: string;
            /**
             * @description JWT token used to perform authorization
             * @example bp7
             */
            token: string;
            /**
             * @description The value of the secret
             * @example super-secret-value
             */
            value: string;
        };
        /** @example {
         *       "value": "super-secret-value"
         *     } */
        SetSecretRequest2: {
            /**
             * @description The value of the secret
             * @example super-secret-value
             */
            value: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "hashedPassword": "deprecated",
         *       "password": "password"
         *     } */
        SigninRequest: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /** @example deprecated */
            hashedPassword?: string;
            /** @example password */
            password?: string;
        };
        /** @example {
         *       "jwtToken": ""
         *     } */
        SigninResult: {
            /**
             * @description The jwt token
             * @example
             */
            jwtToken: string;
        };
        /** @example {
         *       "companyDescription": "We sell xyz database software",
         *       "companyUrl": "https://www.mywebsite.com",
         *       "email": "abc@gmail.com",
         *       "legalCompanyName": "mywebsite",
         *       "name": "John Doe",
         *       "password": "password"
         *     } */
        SignupRequest: {
            /** @example We sell xyz database software */
            companyDescription?: string;
            /** @example https://www.mywebsite.com */
            companyUrl?: string;
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /**
             * @default
             * @example mywebsite
             */
            legalCompanyName: string;
            /** @example John Doe */
            name: string;
            /** @example password */
            password: string;
        };
        /** @example {
         *       "id": "instance-abcd1234",
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "o8"
         *     } */
        StartResourceInstanceRequest: {
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Debitis ea rerum architecto veritatis hic.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example e
             */
            token: string;
        };
        /** @example {
         *       "id": "instance-abcd1234",
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "rts"
         *     } */
        StopResourceInstanceRequest: {
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example A vel.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example xv
             */
            token: string;
        };
        /** @example {
         *       "token": "1"
         *     } */
        StripeAuthorizeURLRequest: {
            /**
             * @description JWT token used to perform authorization
             * @example m
             */
            token: string;
        };
        /** @example {
         *       "authorizeURL": "https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_12345678&scope=read_write&state=12345678"
         *     } */
        StripeAuthorizeURLResult: {
            /**
             * @description URL to authorize Stripe Connect
             * @example https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_12345678&scope=read_write&state=12345678
             */
            authorizeURL?: string;
        };
        /** @example {
         *       "certificateBase64": "Est rerum eius.",
         *       "expirationDate": "2024-01-01T10:00:00Z",
         *       "licenseBase64": "Eius ex et."
         *     } */
        SubscriptionLicense: {
            /**
             * @description Public certificate used to sign the license in Base 64 format
             * @default
             * @example Reprehenderit quaerat iure quae dolorum.
             */
            certificateBase64: string;
            /**
             * @description Current expiration of the license in RFC 3339 format. The license will be renewed periodically before this date while the subscription is active.
             * @example 2024-01-01T10:00:00Z
             */
            expirationDate?: string;
            /**
             * @description License file in Base 64 format
             * @default
             * @example Ut ea aperiam ea reiciendis perferendis.
             */
            licenseBase64: string;
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "name": "John Dae",
         *       "roleType": "reader",
         *       "subscriptionId": "sub-abcd1234",
         *       "userId": "user-abcd1234"
         *     } */
        SubscriptionUsers: {
            /**
             * @description The email of the user
             * @example abc@gmail.com
             */
            email: string;
            /**
             * @description The name of the user
             * @example John Dae
             */
            name: string;
            /**
             * @description Type of the role
             * @example root|editor|reader|service_editor|service_reader|admin|service_operator
             */
            roleType: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId: string;
            /**
             * @description The User ID
             * @example user-abcd1234
             */
            userId: string;
        };
        /**
         * @description Taint configuration for compute nodes
         * @example {
         *       "effect": "NoSchedule",
         *       "key": "key",
         *       "value": "value"
         *     }
         */
        TaintConfiguration: {
            /**
             * @description The effect of the taint
             * @example NoSchedule
             */
            effect: string;
            /**
             * @description The key of the taint
             * @example key
             */
            key: string;
            /**
             * @description The value of the taint
             * @example value
             */
            value: string;
        };
        /** @example {
         *       "gitConfiguration": {
         *         "accessToken": "my-token",
         *         "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *         "referenceName": "tags/v1.0.0",
         *         "repositoryUrl": "https://github.com/username/myrepo",
         *         "userName": "my-user"
         *       },
         *       "privateModuleGitAccessTokens": {
         *         "tokenName": "accessToken"
         *       },
         *       "requiredOutputKeys": [
         *         "output1"
         *       ],
         *       "requiredOutputs": [
         *         {
         *           "exported": true,
         *           "key": "output1"
         *         }
         *       ],
         *       "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
         *       "terraformPath": "/project1/tf"
         *     } */
        TerraformConfiguration: {
            gitConfiguration?: components["schemas"]["GitConfiguration"];
            /**
             * @description The git access tokens for private modules
             * @example {
             *       "tokenName": "accessToken"
             *     }
             */
            privateModuleGitAccessTokens?: {
                [key: string]: string;
            };
            /**
             * @description The required output keys to export
             * @example [
             *       "output1"
             *     ]
             */
            requiredOutputKeys?: string[];
            /**
             * @description The required output keys to export
             * @example [
             *       {
             *         "exported": true,
             *         "key": "output1"
             *       }
             *     ]
             */
            requiredOutputs?: components["schemas"]["TerraformOutput"][];
            /**
             * @description The identity to use for terraform execution
             * @example arn:aws:iam::123456789012:role/role-name
             */
            terraformExecutionIdentity?: string;
            /**
             * @description The path to the terraform files directory
             * @example /project1/tf
             */
            terraformPath: string;
        };
        /**
         * @description The Terraform configurations for cloud providers
         * @example {
         *       "aws": {
         *         "gitConfiguration": {
         *           "referenceName": "ref",
         *           "repositoryUrl": "gitUrl"
         *         },
         *         "privateModuleGitAccessTokens": {
         *           "tokenName": "accessToken"
         *         },
         *         "terraformPath": "/project1/tf"
         *       }
         *     }
         */
        TerraformConfigurations: {
            [key: string]: unknown;
        };
        /** @example {
         *       "exported": true,
         *       "key": "output1"
         *     } */
        TerraformOutput: {
            /**
             * @description Whether the output is exported
             * @example true
             */
            exported: boolean;
            /**
             * @description The key of the output
             * @example output1
             */
            key: string;
        };
        /** @example {
         *       "autoApproveSubscription": false,
         *       "baseVersion": "3.0",
         *       "createdAt": "2020-01-01T00:00:00Z",
         *       "createdBy": "John Doe",
         *       "description": "Sed asperiores dolorum et distinctio.",
         *       "enabledFeatures": [
         *         {
         *           "configuration": {
         *             "provider": "native"
         *           },
         *           "feature": "LOGS",
         *           "scope": "INTERNAL"
         *         },
         *         {
         *           "configuration": {
         *             "provider": "native"
         *           },
         *           "feature": "LOGS",
         *           "scope": "INTERNAL"
         *         },
         *         {
         *           "configuration": {
         *             "provider": "native"
         *           },
         *           "feature": "LOGS",
         *           "scope": "INTERNAL"
         *         },
         *         {
         *           "configuration": {
         *             "provider": "native"
         *           },
         *           "feature": "LOGS",
         *           "scope": "INTERNAL"
         *         }
         *       ],
         *       "features": {
         *         "LOGS": true,
         *         "METRICS": false
         *       },
         *       "instanceCount": 12,
         *       "latestUpgradePathId": "upgrade-12345678",
         *       "name": "Regular version set",
         *       "parentVersion": "2.0",
         *       "productTierId": "Beatae beatae.",
         *       "releasedAt": "2020-01-01T00:00:00Z",
         *       "releasedBy": "John Doe",
         *       "resources": [
         *         {
         *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *           "id": "r-12345678",
         *           "imageConfigId": "imgc-12345678",
         *           "infraConfigId": "ic-12345678",
         *           "isExternal": true,
         *           "managedResourceType": "PortsBasedProxy",
         *           "name": "MySQL multi-writer service",
         *           "urlKey": "myResource"
         *         },
         *         {
         *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *           "id": "r-12345678",
         *           "imageConfigId": "imgc-12345678",
         *           "infraConfigId": "ic-12345678",
         *           "isExternal": true,
         *           "managedResourceType": "PortsBasedProxy",
         *           "name": "MySQL multi-writer service",
         *           "urlKey": "myResource"
         *         },
         *         {
         *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *           "id": "r-12345678",
         *           "imageConfigId": "imgc-12345678",
         *           "infraConfigId": "ic-12345678",
         *           "isExternal": true,
         *           "managedResourceType": "PortsBasedProxy",
         *           "name": "MySQL multi-writer service",
         *           "urlKey": "myResource"
         *         },
         *         {
         *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *           "id": "r-12345678",
         *           "imageConfigId": "imgc-12345678",
         *           "infraConfigId": "ic-12345678",
         *           "isExternal": true,
         *           "managedResourceType": "PortsBasedProxy",
         *           "name": "MySQL multi-writer service",
         *           "urlKey": "myResource"
         *         }
         *       ],
         *       "serviceId": "s-12345678",
         *       "serviceModelId": "Deserunt ab est sequi rem ab in.",
         *       "status": "Preferred|Active|Deprecated|Pending",
         *       "type": "Major|Incremental|UserDefined",
         *       "updatedAt": "2020-01-01T00:00:00Z",
         *       "version": "3.0"
         *     } */
        TierVersionSet: {
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description The base version of the version set.
             * @example 3.0
             */
            baseVersion: string;
            /**
             * @description The timestamp when the version set was created.
             * @example 2020-01-01T00:00:00Z
             */
            createdAt: string;
            /**
             * @description The name of the user who created the version set.
             * @example John Doe
             */
            createdBy?: string;
            /**
             * @description A brief description of the product-tier version set.
             * @example Recusandae quis qui qui sunt sed in.
             */
            description?: string;
            /**
             * @description The features that are enabled for this product tier, including scope details and configuration
             * @example [
             *       {
             *         "configuration": {
             *           "provider": "native"
             *         },
             *         "feature": "LOGS",
             *         "scope": "INTERNAL"
             *       },
             *       {
             *         "configuration": {
             *           "provider": "native"
             *         },
             *         "feature": "LOGS",
             *         "scope": "INTERNAL"
             *       }
             *     ]
             */
            enabledFeatures: components["schemas"]["ProductTierFeatureDetail"][];
            /**
             * @description The features that are enabled / disabled for this product tier
             * @example {
             *       "LOGS": true,
             *       "METRICS": false
             *     }
             */
            features: {
                [key: string]: unknown;
            };
            /**
             * Format: int64
             * @description The number of instances that are currently running this version set.
             * @example 12
             */
            instanceCount?: number;
            /**
             * @description ID of an Upgrade Path
             * @example Nihil sunt maiores facere.
             */
            latestUpgradePathId?: string;
            /**
             * @description The name of the product-tier version set.
             * @example Regular version set
             */
            name?: string;
            /**
             * @description The parent version of this release.
             * @example 2.0
             */
            parentVersion?: string;
            /**
             * @description ID of a Product Tier
             * @example Omnis omnis non unde et dolorum omnis.
             */
            productTierId: string;
            /**
             * @description The timestamp when the version set was released.
             * @example 2020-01-01T00:00:00Z
             */
            releasedAt: string;
            /**
             * @description The name of the user who released the version set.
             * @example John Doe
             */
            releasedBy?: string;
            /**
             * @description List of resources that are part of this version set.
             * @example [
             *       {
             *         "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *         "id": "r-12345678",
             *         "imageConfigId": "imgc-12345678",
             *         "infraConfigId": "ic-12345678",
             *         "isExternal": true,
             *         "managedResourceType": "PortsBasedProxy",
             *         "name": "MySQL multi-writer service",
             *         "urlKey": "myResource"
             *       },
             *       {
             *         "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *         "id": "r-12345678",
             *         "imageConfigId": "imgc-12345678",
             *         "infraConfigId": "ic-12345678",
             *         "isExternal": true,
             *         "managedResourceType": "PortsBasedProxy",
             *         "name": "MySQL multi-writer service",
             *         "urlKey": "myResource"
             *       },
             *       {
             *         "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
             *         "id": "r-12345678",
             *         "imageConfigId": "imgc-12345678",
             *         "infraConfigId": "ic-12345678",
             *         "isExternal": true,
             *         "managedResourceType": "PortsBasedProxy",
             *         "name": "MySQL multi-writer service",
             *         "urlKey": "myResource"
             *       }
             *     ]
             */
            resources?: components["schemas"]["ResourceSummary"][];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Service Model
             * @example Repellendus aut ipsa laudantium fugiat reprehenderit.
             */
            serviceModelId: string;
            /**
             * @description The tier version set status.
             * @example Preferred|Active|Deprecated|Pending
             */
            status: string;
            /**
             * @description The version-set type of the product-tier.
             * @example Major|Incremental|UserDefined
             */
            type: string;
            /**
             * @description The timestamp when the version set was updated.
             * @example 2020-01-01T00:00:00Z
             */
            updatedAt: string;
            /**
             * @description The version number for the specific version set.
             * @example 3.0
             */
            version: string;
        };
        /** @example {
         *       "environmentVariables": [
         *         {
         *           "key": "MYSQL_ROOT_PASSWORD",
         *           "value": "password"
         *         }
         *       ],
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "au"
         *     } */
        UnsetEnvironmentVariablesRequest: {
            /**
             * @description The environment variables that this resource is no longer dependent on
             * @example [
             *       {
             *         "key": "MYSQL_ROOT_PASSWORD",
             *         "value": "password"
             *       }
             *     ]
             */
            environmentVariables?: components["schemas"]["EnvironmentVariable"][];
            /**
             * @description ID of a resource
             * @example Maxime optio facere explicabo aut odio.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example h
             */
            token: string;
        };
        /** @example {
         *       "environmentVariables": [
         *         {
         *           "key": "MYSQL_ROOT_PASSWORD",
         *           "value": "password"
         *         }
         *       ]
         *     } */
        UnsetEnvironmentVariablesRequest2: {
            /**
             * @description The environment variables that this resource is no longer dependent on
             * @example [
             *       {
             *         "key": "MYSQL_ROOT_PASSWORD",
             *         "value": "password"
             *       }
             *     ]
             */
            environmentVariables?: components["schemas"]["EnvironmentVariable"][];
        };
        /** @example {
         *       "id": "instance-abcd1234",
         *       "serviceId": "service-1234",
         *       "setConnection": true,
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "mqf"
         *     } */
        UpdateAccountConfigResourceInstanceRequest: {
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The service ID
             * @example service-1234
             */
            serviceId: string;
            /**
             * @description set account config instance connection
             * @example true
             */
            setConnection?: boolean;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId: string;
            /**
             * @description JWT token used to perform authorization
             * @example a11
             */
            token: string;
        };
        /** @example {
         *       "serviceId": "service-1234",
         *       "setConnection": true,
         *       "subscriptionId": "sub-abcd1234"
         *     } */
        UpdateAccountConfigResourceInstanceRequest2: {
            /**
             * @description The service ID
             * @example service-1234
             */
            serviceId: string;
            /**
             * @description set account config instance connection
             * @example true
             */
            setConnection?: boolean;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId: string;
        };
        /** @example {
         *       "autoscalingPolicy": {
         *         "maxReplicas": 4,
         *         "minReplicas": 1
         *       },
         *       "cpuArchitecture": "X86_64|ARM64",
         *       "description": "my compute config description",
         *       "id": "cc-12345678",
         *       "name": "my compute config",
         *       "replicaCount": "3",
         *       "resources": {
         *         "limits": {
         *           "cpu": "1",
         *           "memory": "500Mi"
         *         },
         *         "requests": {
         *           "cpu": "0.5",
         *           "memory": "200Mi"
         *         }
         *       },
         *       "rootVolumeSizeGi": 10,
         *       "serviceId": "s-12345678",
         *       "token": "zm",
         *       "warmPoolConfiguration": {
         *         "minimumNodesInPool": 1
         *       }
         *     } */
        UpdateComputeConfigRequest: {
            autoscalingPolicy?: components["schemas"]["AutoscalingPolicy"];
            /**
             * @description Processor architecture
             * @example X86_64|ARM64
             */
            cpuArchitecture?: string;
            /**
             * @description Description of the compute config
             * @example my compute config description
             */
            description?: string;
            /**
             * @description ID of a Compute Config
             * @example Quo similique ratione explicabo architecto beatae.
             */
            id: string;
            /**
             * @description Name of the compute config
             * @example my compute config
             */
            name?: string;
            /**
             * @description Number of replicas to provision for this logical pool of nodes per instance of the resource
             * @example 3
             */
            replicaCount?: string;
            resources?: components["schemas"]["ResourceSpec"];
            /**
             * Format: int64
             * @description Size of the root volume in Gi
             * @example 10
             */
            rootVolumeSizeGi?: number;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example u5
             */
            token: string;
            warmPoolConfiguration?: components["schemas"]["WarmPoolConfiguration"];
        };
        /** @example {
         *       "autoscalingPolicy": {
         *         "maxReplicas": 4,
         *         "minReplicas": 1
         *       },
         *       "cpuArchitecture": "X86_64|ARM64",
         *       "description": "my compute config description",
         *       "name": "my compute config",
         *       "replicaCount": "3",
         *       "resources": {
         *         "limits": {
         *           "cpu": "1",
         *           "memory": "500Mi"
         *         },
         *         "requests": {
         *           "cpu": "0.5",
         *           "memory": "200Mi"
         *         }
         *       },
         *       "rootVolumeSizeGi": 10,
         *       "warmPoolConfiguration": {
         *         "minimumNodesInPool": 1
         *       }
         *     } */
        UpdateComputeConfigRequest2: {
            autoscalingPolicy?: components["schemas"]["AutoscalingPolicy"];
            /**
             * @description Processor architecture
             * @example X86_64|ARM64
             */
            cpuArchitecture?: string;
            /**
             * @description Description of the compute config
             * @example my compute config description
             */
            description?: string;
            /**
             * @description Name of the compute config
             * @example my compute config
             */
            name?: string;
            /**
             * @description Number of replicas to provision for this logical pool of nodes per instance of the resource
             * @example 3
             */
            replicaCount?: string;
            resources?: components["schemas"]["ResourceSpec"];
            /**
             * Format: int64
             * @description Size of the root volume in Gi
             * @example 10
             */
            rootVolumeSizeGi?: number;
            warmPoolConfiguration?: components["schemas"]["WarmPoolConfiguration"];
        };
        /** @example {
         *       "id": "n-12345678",
         *       "name": "Dev us-east-1",
         *       "token": "861"
         *     } */
        UpdateCustomNetworkRequest: {
            /**
             * @description ID of a custom network
             * @example Suscipit aut enim minima dolorem rerum quos.
             */
            id: string;
            /**
             * @description User friendly network name to help distinguish networks with same CIDRs
             * @example Dev us-east-1
             */
            name?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 68p
             */
            token: string;
        };
        /** @example {
         *       "name": "Dev us-east-1"
         *     } */
        UpdateCustomNetworkRequest2: {
            /**
             * @description User friendly network name to help distinguish networks with same CIDRs
             * @example Dev us-east-1
             */
            name?: string;
        };
        /** @example {
         *       "description": "A production deployment config",
         *       "id": "dc-12345678",
         *       "infraRollConfiguration": {
         *         "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
         *         "maximumNumberOfResourceInstancesPerBatch": 1,
         *         "maximumUnavailableReplicas": 1
         *       },
         *       "name": "Production",
         *       "rolloutPriorityList": [
         *         "region-12345678",
         *         "region-abcd1234",
         *         "region-3c3c3c3c"
         *       ],
         *       "token": "4w2"
         *     } */
        UpdateDeploymentConfigRequest: {
            /**
             * @description A brief description of the deployment config
             * @example A production deployment config
             */
            description?: string;
            /**
             * @description ID of a Deployment Config
             * @example Tempore enim aut culpa magnam voluptas.
             */
            id: string;
            infraRollConfiguration?: components["schemas"]["InfraRollConfiguration"];
            /**
             * @description Name of the deployment config
             * @example Production
             */
            name?: string;
            /** @example [
             *       "region-12345678",
             *       "region-abcd1234",
             *       "region-3c3c3c3c"
             *     ] */
            rolloutPriorityList?: string[];
            /**
             * @description JWT token used to perform authorization
             * @example dx
             */
            token: string;
        };
        /** @example {
         *       "description": "A production deployment config",
         *       "infraRollConfiguration": {
         *         "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
         *         "maximumNumberOfResourceInstancesPerBatch": 1,
         *         "maximumUnavailableReplicas": 1
         *       },
         *       "name": "Production",
         *       "rolloutPriorityList": [
         *         "region-12345678",
         *         "region-abcd1234",
         *         "region-3c3c3c3c"
         *       ]
         *     } */
        UpdateDeploymentConfigRequest2: {
            /**
             * @description A brief description of the deployment config
             * @example A production deployment config
             */
            description?: string;
            infraRollConfiguration?: components["schemas"]["InfraRollConfiguration"];
            /**
             * @description Name of the deployment config
             * @example Production
             */
            name?: string;
            /** @example [
             *       "region-12345678",
             *       "region-abcd1234",
             *       "region-3c3c3c3c"
             *     ] */
            rolloutPriorityList?: string[];
        };
        /** @example {
         *       "content_type": "multipart/form-data; boundary=boundary",
         *       "fileId": "f-12345678",
         *       "id": "r-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "5l5"
         *     } */
        UpdateFileContentRequest: {
            /**
             * @description Content-Type header, must define value for multipart boundary.
             * @default multipart/form-data; boundary=boundary
             * @example multipart/form-data; boundary=boundary
             */
            content_type: string;
            /**
             * @description ID of a File
             * @example Occaecati et rerum qui quo aut.
             */
            fileId: string;
            /**
             * @description ID of a resource
             * @example Nam ex non quisquam ipsum asperiores qui.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example dn
             */
            token: string;
        };
        /** @example {
         *       "description": "A file to store the configuration for the resource",
         *       "fileId": "f-12345678",
         *       "id": "r-12345678",
         *       "mountPath": "/etc/config",
         *       "name": "file.txt",
         *       "serviceId": "s-12345678",
         *       "token": "614"
         *     } */
        UpdateFileMetadataRequest: {
            /**
             * @description The description of the file
             * @example A file to store the configuration for the resource
             */
            description?: string;
            /**
             * @description ID of a File
             * @example Et dolore delectus id.
             */
            fileId: string;
            /**
             * @description ID of a resource
             * @example Corrupti reprehenderit consectetur et molestiae molestias.
             */
            id: string;
            /**
             * @description The mount path of the file
             * @example /etc/config
             */
            mountPath?: string;
            /**
             * @description The name of the file
             * @example file.txt
             */
            name?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example b1z
             */
            token: string;
        };
        /** @example {
         *       "description": "A file to store the configuration for the resource",
         *       "mountPath": "/etc/config",
         *       "name": "file.txt"
         *     } */
        UpdateFileMetadataRequest2: {
            /**
             * @description The description of the file
             * @example A file to store the configuration for the resource
             */
            description?: string;
            /**
             * @description The mount path of the file
             * @example /etc/config
             */
            mountPath?: string;
            /**
             * @description The name of the file
             * @example file.txt
             */
            name?: string;
        };
        /** @example {
         *       "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
         *       "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
         *       "clientSecret": "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",
         *       "disabled": false,
         *       "emailIdentifiers": "company.com",
         *       "environmentType": "production",
         *       "id": "idp-12345678",
         *       "loginButtonIconUrl": "https://example.com/icon.png",
         *       "loginButtonText": "Login with Google",
         *       "name": "Google for my company",
         *       "scopes": "openid email profile",
         *       "token": "886",
         *       "tokenEndpoint": "https://oauth2.googleapis.com/token",
         *       "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
         *     } */
        UpdateIdentityProviderRequest: {
            /**
             * @description The authorization endpoint of the Identity Provider
             * @example https://accounts.google.com/o/oauth2/auth
             */
            authorizationEndpoint?: string;
            /**
             * @description The Client ID of the Identity Provider
             * @example 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
             */
            clientId?: string;
            /**
             * @description The Client Secret of the Identity Provider
             * @example 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
             */
            clientSecret?: string;
            /**
             * @description Whether the Identity Provider is disabled
             * @example false
             */
            disabled?: boolean;
            /**
             * @description The email identifiers to use for the Identity Provider
             * @example company.com
             */
            emailIdentifiers?: string;
            /**
             * @description The type of environment for the Identity Provider
             * @example production
             */
            environmentType?: string;
            /**
             * @description ID of an Identity Provider
             * @example Accusamus ipsum quis.
             */
            id: string;
            /**
             * @description The URL of the icon to use for the login button
             * @example https://example.com/icon.png
             */
            loginButtonIconUrl?: string;
            /**
             * @description The text to use for the login button
             * @example Login with Google
             */
            loginButtonText?: string;
            /**
             * @description The name of the Identity Provider
             * @example Google for my company
             */
            name?: string;
            /**
             * @description The scopes to request from the Identity Provider
             * @example openid email profile
             */
            scopes?: string;
            /**
             * @description JWT token used to perform authorization
             * @example wkm
             */
            token: string;
            /**
             * @description The token endpoint of the Identity Provider
             * @example https://oauth2.googleapis.com/token
             */
            tokenEndpoint?: string;
            /**
             * @description The user info endpoint of the Identity Provider
             * @example https://www.googleapis.com/oauth2/v3/userinfo
             */
            userInfoEndpoint?: string;
        };
        /** @example {
         *       "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
         *       "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
         *       "clientSecret": "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",
         *       "disabled": false,
         *       "emailIdentifiers": "company.com",
         *       "environmentType": "production",
         *       "loginButtonIconUrl": "https://example.com/icon.png",
         *       "loginButtonText": "Login with Google",
         *       "name": "Google for my company",
         *       "scopes": "openid email profile",
         *       "tokenEndpoint": "https://oauth2.googleapis.com/token",
         *       "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
         *     } */
        UpdateIdentityProviderRequest2: {
            /**
             * @description The authorization endpoint of the Identity Provider
             * @example https://accounts.google.com/o/oauth2/auth
             */
            authorizationEndpoint?: string;
            /**
             * @description The Client ID of the Identity Provider
             * @example 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
             */
            clientId?: string;
            /**
             * @description The Client Secret of the Identity Provider
             * @example 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
             */
            clientSecret?: string;
            /**
             * @description Whether the Identity Provider is disabled
             * @example false
             */
            disabled?: boolean;
            /**
             * @description The email identifiers to use for the Identity Provider
             * @example company.com
             */
            emailIdentifiers?: string;
            /**
             * @description The type of environment for the Identity Provider
             * @example production
             */
            environmentType?: string;
            /**
             * @description The URL of the icon to use for the login button
             * @example https://example.com/icon.png
             */
            loginButtonIconUrl?: string;
            /**
             * @description The text to use for the login button
             * @example Login with Google
             */
            loginButtonText?: string;
            /**
             * @description The name of the Identity Provider
             * @example Google for my company
             */
            name?: string;
            /**
             * @description The scopes to request from the Identity Provider
             * @example openid email profile
             */
            scopes?: string;
            /**
             * @description The token endpoint of the Identity Provider
             * @example https://oauth2.googleapis.com/token
             */
            tokenEndpoint?: string;
            /**
             * @description The user info endpoint of the Identity Provider
             * @example https://www.googleapis.com/oauth2/v3/userinfo
             */
            userInfoEndpoint?: string;
        };
        /**
         * @description Update the image configuration for an existing entity
         * @example {
         *       "customImageCommandsAndArgs": {
         *         "args": [
         *           "-d",
         *           "mysql"
         *         ],
         *         "commands": [
         *           "echo",
         *           "Hello, World!"
         *         ]
         *       },
         *       "description": "An image configuration for my new entity",
         *       "id": "imgc-12345678",
         *       "imageName": "mysql",
         *       "imageRegistryId": "ir-12345678",
         *       "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
         *       "imageTag": "v1",
         *       "serviceId": "s-12345678",
         *       "token": "mm"
         *     }
         */
        UpdateImageConfigRequest: {
            customImageCommandsAndArgs?: components["schemas"]["CustomImageCommandsAndArgs"];
            /**
             * @description A brief description of the image configuration
             * @example An image configuration for my new entity
             */
            description?: string;
            /**
             * @description ID of an Image Config
             * @example Quo quis corrupti quae quae quis est.
             */
            id: string;
            /**
             * @description Name of the container image
             * @example mysql
             */
            imageName?: string;
            /**
             * @description ID of an Image Registry
             * @example Quia eum dignissimos natus.
             */
            imageRegistryId?: string;
            /**
             * @description PEM-encoded Public key part of the key used to sign the container image
             * @example -----BEGIN PUBLIC KEY-----
             *     MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
             *     7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
             *     -----END PUBLIC KEY-----
             *
             */
            imageSignaturePublicKeyPEM?: string;
            /**
             * @description Tag representing the software image version that is currently preferred
             * @example v1
             */
            imageTag?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 7v
             */
            token: string;
        };
        /** @example {
         *       "customImageCommandsAndArgs": {
         *         "args": [
         *           "-d",
         *           "mysql"
         *         ],
         *         "commands": [
         *           "echo",
         *           "Hello, World!"
         *         ]
         *       },
         *       "description": "An image configuration for my new entity",
         *       "imageName": "mysql",
         *       "imageRegistryId": "ir-12345678",
         *       "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
         *       "imageTag": "v1"
         *     } */
        UpdateImageConfigRequest2: {
            customImageCommandsAndArgs?: components["schemas"]["CustomImageCommandsAndArgs"];
            /**
             * @description A brief description of the image configuration
             * @example An image configuration for my new entity
             */
            description?: string;
            /**
             * @description Name of the container image
             * @example mysql
             */
            imageName?: string;
            /**
             * @description The image registry ID to use for the infra
             * @example ir-12345678
             */
            imageRegistryId?: string;
            /**
             * @description PEM-encoded Public key part of the key used to sign the container image
             * @example -----BEGIN PUBLIC KEY-----
             *     MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
             *     7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
             *     -----END PUBLIC KEY-----
             *
             */
            imageSignaturePublicKeyPEM?: string;
            /**
             * @description Tag representing the software image version that is currently preferred
             * @example v1
             */
            imageTag?: string;
        };
        /**
         * @description Update an HTTP API v2 Docker Image Registry
         * @example {
         *       "description": "DockerHub is a public Docker Image Registry",
         *       "host": "docker.io",
         *       "id": "ir-12345678",
         *       "name": "DockerHub",
         *       "password": "mypassword",
         *       "token": "heq",
         *       "username": "myusername"
         *     }
         */
        UpdateImageRegistryRequest: {
            /**
             * @description A brief description of the Image Registry
             * @example DockerHub is a public Docker Image Registry
             */
            description?: string;
            /**
             * @description The Image Registry host
             * @example docker.io
             */
            host?: string;
            /**
             * @description ID of an Image Registry
             * @example Enim excepturi blanditiis non.
             */
            id: string;
            /**
             * @description Name of the Image Registry
             * @example DockerHub
             */
            name?: string;
            /**
             * @description The password to use when authenticating to the Image Registry
             * @example mypassword
             */
            password?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 0di
             */
            token: string;
            /**
             * @description The username to use when authenticating to the Image Registry
             * @example myusername
             */
            username?: string;
        };
        /** @example {
         *       "description": "DockerHub is a public Docker Image Registry",
         *       "host": "docker.io",
         *       "name": "DockerHub",
         *       "password": "mypassword",
         *       "username": "myusername"
         *     } */
        UpdateImageRegistryRequest2: {
            /**
             * @description A brief description of the Image Registry
             * @example DockerHub is a public Docker Image Registry
             */
            description?: string;
            /**
             * @description The Image Registry host
             * @example docker.io
             */
            host?: string;
            /**
             * @description Name of the Image Registry
             * @example DockerHub
             */
            name?: string;
            /**
             * @description The password to use when authenticating to the Image Registry
             * @example mypassword
             */
            password?: string;
            /**
             * @description The username to use when authenticating to the Image Registry
             * @example myusername
             */
            username?: string;
        };
        /**
         * @description Update the infra required to host a resource
         * @example {
         *       "computeConfigId": "cc-12345678",
         *       "customTag": {
         *         "key": "customKey",
         *         "value": "customValue"
         *       },
         *       "description": "Infra config used for the base tier MySQL service",
         *       "id": "ic-12345678",
         *       "name": "MySQL Writer Infra Config",
         *       "networkConfigId": "nc-12345678",
         *       "serviceId": "s-12345678",
         *       "storageConfigId": "sc-12345678",
         *       "token": "645"
         *     }
         */
        UpdateInfraConfigRequest: {
            /**
             * @description ID of a Compute Config
             * @example Facilis debitis temporibus.
             */
            computeConfigId?: string;
            customTag?: components["schemas"]["CustomTag"];
            /**
             * @description The description for the infra config
             * @example Infra config used for the base tier MySQL service
             */
            description?: string;
            /**
             * @description ID of an Infra Config
             * @example Aut omnis.
             */
            id: string;
            /**
             * @description The name of the infra config
             * @example MySQL Writer Infra Config
             */
            name?: string;
            /**
             * @description ID of a Network Config
             * @example Voluptatibus et aut.
             */
            networkConfigId?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description ID of a Storage Config
             * @example Reiciendis quas delectus earum.
             */
            storageConfigId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 14
             */
            token: string;
        };
        /** @example {
         *       "computeConfigId": "cc-12345678",
         *       "customTag": {
         *         "key": "customKey",
         *         "value": "customValue"
         *       },
         *       "description": "Infra config used for the base tier MySQL service",
         *       "name": "MySQL Writer Infra Config",
         *       "networkConfigId": "nc-12345678",
         *       "storageConfigId": "sc-12345678"
         *     } */
        UpdateInfraConfigRequest2: {
            /**
             * @description The compute config ID
             * @example cc-12345678
             */
            computeConfigId?: string;
            customTag?: components["schemas"]["CustomTag"];
            /**
             * @description The description for the infra config
             * @example Infra config used for the base tier MySQL service
             */
            description?: string;
            /**
             * @description The name of the infra config
             * @example MySQL Writer Infra Config
             */
            name?: string;
            /**
             * @description The network config ID
             * @example nc-12345678
             */
            networkConfigId?: string;
            /**
             * @description The storage config ID per compute node
             * @example sc-12345678
             */
            storageConfigId?: string;
        };
        /** @example {
         *       "defaultValue": "[\"1\", \"2.8\", \"3\"]",
         *       "description": "Amet nihil pariatur culpa.",
         *       "hasOptions": false,
         *       "id": "var-12345678",
         *       "labeledOptions": {
         *         "large": "t3.xlarge",
         *         "medium": "t3.large",
         *         "small": "t3.medium"
         *       },
         *       "limits": {
         *         "max": "Distinctio rerum.",
         *         "maxLength": "Modi incidunt quibusdam et atque quia.",
         *         "min": "Qui eveniet nihil hic sit sint.",
         *         "minLength": "Iure eligendi."
         *       },
         *       "modifiable": false,
         *       "name": "2c",
         *       "options": [
         *         "[\"1\", \"2.8\", \"3\"]",
         *         "[\"3.4\", \"4.5\"]"
         *       ],
         *       "regex": "^[0-9]+$",
         *       "required": true,
         *       "serviceId": "s-12345678",
         *       "tabIndex": 1,
         *       "token": "b3z"
         *     } */
        UpdateInputParameterRequest: {
            /**
             * @description Default value to use for an optional input parameter represented as a string
             * @example ["1", "2.8", "3"]
             */
            defaultValue?: string;
            /**
             * @description A brief description of the input parameter
             * @example Unde consequatur quia voluptatem atque qui consectetur.
             */
            description?: string;
            /**
             * @description Marks the input parameter to be selectable from a list of values
             * @example false
             */
            hasOptions?: boolean;
            /**
             * @description ID of an Input Parameter
             * @example Sed autem voluptas.
             */
            id: string;
            /**
             * @description A map for labeled options. The key is the label and the value is the option. When the option is selected, the label will be displayed to the end customer. Specify either options or labeledOptions when defining the input parameter.
             * @example {
             *       "large": "t3.xlarge",
             *       "medium": "t3.large",
             *       "small": "t3.medium"
             *     }
             */
            labeledOptions?: {
                [key: string]: string;
            };
            limits?: components["schemas"]["Limits"];
            /**
             * @description Marks the input parameter as immutable
             * @example true
             */
            modifiable?: boolean;
            /**
             * @description External name for the input parameter
             * @example gz
             */
            name?: string;
            /**
             * @description A list of options to restrict the value of the input parameter to (represented as a string)
             * @example [
             *       "[\"1\", \"2.8\", \"3\"]",
             *       "[\"3.4\", \"4.5\"]"
             *     ]
             */
            options?: string[];
            /**
             * @description Regular expression pattern for validating the input parameter value
             * @example ^[0-9]+$
             */
            regex?: string;
            /**
             * @description Enforces the input parameter as a required parameter
             * @example true
             */
            required?: boolean;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * Format: int64
             * @description Index for parameter ordering in the SaaS portal
             * @default 0
             * @example 1
             */
            tabIndex: number;
            /**
             * @description JWT token used to perform authorization
             * @example ws
             */
            token: string;
        };
        /** @example {
         *       "defaultValue": "[\"1\", \"2.8\", \"3\"]",
         *       "description": "Delectus animi minima aut.",
         *       "hasOptions": false,
         *       "labeledOptions": {
         *         "large": "t3.xlarge",
         *         "medium": "t3.large",
         *         "small": "t3.medium"
         *       },
         *       "limits": {
         *         "max": "Magnam dolor enim et occaecati aperiam.",
         *         "maxLength": "Hic natus est tempore.",
         *         "min": "Architecto enim voluptatibus.",
         *         "minLength": "Distinctio error perferendis."
         *       },
         *       "modifiable": false,
         *       "name": "e",
         *       "options": [
         *         "[\"1\", \"2.8\", \"3\"]",
         *         "[\"3.4\", \"4.5\"]"
         *       ],
         *       "regex": "^[0-9]+$",
         *       "required": true,
         *       "tabIndex": 1
         *     } */
        UpdateInputParameterRequest2: {
            /**
             * @description Default value to use for an optional input parameter represented as a string
             * @example ["1", "2.8", "3"]
             */
            defaultValue?: string;
            /**
             * @description A brief description of the input parameter
             * @example Eaque praesentium vel minus accusamus pariatur nihil.
             */
            description?: string;
            /**
             * @description Marks the input parameter to be selectable from a list of values
             * @example true
             */
            hasOptions?: boolean;
            /**
             * @description A map for labeled options. The key is the label and the value is the option. When the option is selected, the label will be displayed to the end customer. Specify either options or labeledOptions when defining the input parameter.
             * @example {
             *       "large": "t3.xlarge",
             *       "medium": "t3.large",
             *       "small": "t3.medium"
             *     }
             */
            labeledOptions?: {
                [key: string]: string;
            };
            limits?: components["schemas"]["Limits"];
            /**
             * @description Marks the input parameter as immutable
             * @example false
             */
            modifiable?: boolean;
            /**
             * @description External name for the input parameter
             * @example g6z
             */
            name?: string;
            /**
             * @description A list of options to restrict the value of the input parameter to (represented as a string)
             * @example [
             *       "[\"1\", \"2.8\", \"3\"]",
             *       "[\"3.4\", \"4.5\"]"
             *     ]
             */
            options?: string[];
            /**
             * @description Regular expression pattern for validating the input parameter value
             * @example ^[0-9]+$
             */
            regex?: string;
            /**
             * @description Enforces the input parameter as a required parameter
             * @example true
             */
            required?: boolean;
            /**
             * Format: int64
             * @description Index for parameter ordering in the SaaS portal
             * @default 0
             * @example 1
             */
            tabIndex: number;
        };
        /** @example {
         *       "id": "svc-12345678",
         *       "instanceStorageIops": "7500",
         *       "instanceStorageThroughputMiBps": "128",
         *       "instanceStorageType": "AWS::EBS_GP2",
         *       "serviceId": "s-12345678",
         *       "token": "yu"
         *     } */
        UpdateInstanceStorageVolumeConfigRequest: {
            /**
             * @description ID of a Storage Volume Config
             * @example Perferendis occaecati expedita.
             */
            id: string;
            /**
             * @description The IOPS provisioned for the configured instance storage type
             * @example 7500
             */
            instanceStorageIops?: string;
            /**
             * @description The throughput (in MiBps) provisioned for the configured instance storage type
             * @example 128
             */
            instanceStorageThroughputMiBps?: string;
            /**
             * @description The type of the storage for a compute instance
             * @example AWS::EBS_GP2
             */
            instanceStorageType?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 8u
             */
            token: string;
        };
        /** @example {
         *       "instanceStorageIops": "7500",
         *       "instanceStorageThroughputMiBps": "128",
         *       "instanceStorageType": "AWS::EBS_GP2"
         *     } */
        UpdateInstanceStorageVolumeConfigRequest2: {
            /**
             * @description The IOPS provisioned for the configured instance storage type
             * @example 7500
             */
            instanceStorageIops?: string;
            /**
             * @description The throughput (in MiBps) provisioned for the configured instance storage type
             * @example 128
             */
            instanceStorageThroughputMiBps?: string;
            /**
             * @description The type of the storage for a compute instance
             * @example AWS::EBS_GP2
             */
            instanceStorageType?: string;
        };
        /** @example {
         *       "description": "A premium limit",
         *       "family": "COMPUTE_INFRA",
         *       "key": "MAX_VIRTUAL_CORES_PER_RESOURCE",
         *       "name": "Premium Tier",
         *       "token": "689",
         *       "value": 4
         *     } */
        UpdateLimitRequest: {
            /**
             * @description A brief description of the limit
             * @example A premium limit
             */
            description?: string;
            /**
             * @description The limit family
             * @example SERVICE
             */
            family: string;
            /**
             * @description Unique key to identify the limit
             * @example MAX_VIRTUAL_CORES_PER_RESOURCE
             */
            key: string;
            /**
             * @description Name of the limit
             * @example Premium Tier
             */
            name?: string;
            /**
             * @description JWT token used to perform authorization
             * @example uxf
             */
            token: string;
            /**
             * Format: int64
             * @description Value of the limit being enforced
             * @example 4
             */
            value: number;
        };
        /** @example {
         *       "description": "A premium limit",
         *       "name": "Premium Tier",
         *       "value": 4
         *     } */
        UpdateLimitRequest2: {
            /**
             * @description A brief description of the limit
             * @example A premium limit
             */
            description?: string;
            /**
             * @description Name of the limit
             * @example Premium Tier
             */
            name?: string;
            /**
             * Format: int64
             * @description Value of the limit being enforced
             * @example 4
             */
            value: number;
        };
        /** @example {
         *       "description": "A multi-zone HA network config",
         *       "endpointPerReplica": true,
         *       "id": "nc-12345678",
         *       "internal": true,
         *       "name": "Multi-zone",
         *       "openPorts": [
         *         1299,
         *         3306
         *       ],
         *       "privateNetworkingConfiguration": {
         *         "privateLinkConfiguration": {
         *           "awsPrivateLinkConfigurations": [
         *             {
         *               "port": 80,
         *               "targetGroupName": "my-target-group"
         *             },
         *             {
         *               "port": 80,
         *               "targetGroupName": "my-target-group"
         *             }
         *           ]
         *         }
         *       },
         *       "publicNetworkingConfiguration": {
         *         "enableClusterLoadBalancer": true,
         *         "enableNodeLoadBalancer": true
         *       },
         *       "serviceId": "s-12345678",
         *       "stableEgressIP": true,
         *       "tlsTerminationPort": 443,
         *       "token": "pq",
         *       "zoneConfiguration": "SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE"
         *     } */
        UpdateNetworkConfigRequest: {
            /**
             * @description A brief description of the network config
             * @example A multi-zone HA network config
             */
            description?: string;
            /**
             * @description Generates a DNS endpoint per-replica for this network config
             * @example true
             */
            endpointPerReplica?: boolean;
            /**
             * @description ID of a Network Config
             * @example Id iste sint libero quia sint accusamus.
             */
            id: string;
            /**
             * @description Restrict access to this network config to the internal network
             * @example true
             */
            internal?: boolean;
            /**
             * @description Name of the network config
             * @example Multi-zone
             */
            name?: string;
            /**
             * @description Ports to map to the generated DNS endpoint
             * @example [
             *       1299,
             *       3306
             *     ]
             */
            openPorts?: number[];
            privateNetworkingConfiguration?: components["schemas"]["PrivateNetworkingConfiguration"];
            publicNetworkingConfiguration?: components["schemas"]["PublicNetworkingConfiguration"];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description Create an external node load balancer per node rather than expose the node ip directly
             * @example true
             */
            stableEgressIP?: boolean;
            /**
             * Format: int64
             * @description The port that hosts the reverse proxy for TLS termination
             * @example 443
             */
            tlsTerminationPort?: number;
            /**
             * @description JWT token used to perform authorization
             * @example 6id
             */
            token: string;
            /**
             * @description The preferred type of zonal availability for this resource and the specific zone(s) to deploy in
             * @example SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
             */
            zoneConfiguration?: string;
        };
        /** @example {
         *       "description": "A multi-zone HA network config",
         *       "endpointPerReplica": true,
         *       "internal": true,
         *       "name": "Multi-zone",
         *       "openPorts": [
         *         1299,
         *         3306
         *       ],
         *       "privateNetworkingConfiguration": {
         *         "privateLinkConfiguration": {
         *           "awsPrivateLinkConfigurations": [
         *             {
         *               "port": 80,
         *               "targetGroupName": "my-target-group"
         *             },
         *             {
         *               "port": 80,
         *               "targetGroupName": "my-target-group"
         *             }
         *           ]
         *         }
         *       },
         *       "publicNetworkingConfiguration": {
         *         "enableClusterLoadBalancer": true,
         *         "enableNodeLoadBalancer": true
         *       },
         *       "stableEgressIP": true,
         *       "tlsTerminationPort": 443,
         *       "zoneConfiguration": "Voluptate atque."
         *     } */
        UpdateNetworkConfigRequest2: {
            /**
             * @description A brief description of the network config
             * @example A multi-zone HA network config
             */
            description?: string;
            /**
             * @description Generates a DNS endpoint per-replica for this network config
             * @example true
             */
            endpointPerReplica?: boolean;
            /**
             * @description Restrict access to this network config to the internal network
             * @example true
             */
            internal?: boolean;
            /**
             * @description Name of the network config
             * @example Multi-zone
             */
            name?: string;
            /**
             * @description Ports to map to the generated DNS endpoint
             * @example [
             *       1299,
             *       3306
             *     ]
             */
            openPorts?: number[];
            privateNetworkingConfiguration?: components["schemas"]["PrivateNetworkingConfiguration"];
            publicNetworkingConfiguration?: components["schemas"]["PublicNetworkingConfiguration"];
            /**
             * @description Create an external node load balancer per node rather than expose the node ip directly
             * @example true
             */
            stableEgressIP?: boolean;
            /**
             * Format: int64
             * @description The port that hosts the reverse proxy for TLS termination
             * @example 443
             */
            tlsTerminationPort?: number;
            /**
             * @description The preferred type of zonal availability for this resource and the specific zone(s) to deploy in
             * @example Et qui quasi.
             */
            zoneConfiguration?: string;
        };
        /** @example {
         *       "description": "Username of the user created in the target system",
         *       "id": "op-12345678",
         *       "name": "Username",
         *       "serviceId": "s-12345678",
         *       "token": "k4f",
         *       "value": "johndoe",
         *       "valueRef": "$var.username",
         *       "valueType": "Boolean|Float64|String|Secret|Password"
         *     } */
        UpdateOutputParameterRequest: {
            /**
             * @description Description of the output variable being exported
             * @example Username of the user created in the target system
             */
            description?: string;
            /**
             * @description ID of an Output Parameter
             * @example Praesentium totam est reiciendis rem.
             */
            id: string;
            /**
             * @description External name of the output variable being exported
             * @example Username
             */
            name?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 3
             */
            token: string;
            /**
             * @description Value of the output variable being exported
             * @example johndoe
             */
            value?: string;
            /**
             * @description Reference to an input variable that will be used to set the value of the output variable being exported
             * @example $var.username
             */
            valueRef?: string;
            /**
             * @description Type of the variable encoding the value
             * @example Boolean|Float64|String|Secret|Password
             */
            valueType?: string;
        };
        /** @example {
         *       "description": "Username of the user created in the target system",
         *       "name": "Username",
         *       "value": "johndoe",
         *       "valueRef": "$var.username",
         *       "valueType": "Ex labore eligendi voluptatibus."
         *     } */
        UpdateOutputParameterRequest2: {
            /**
             * @description Description of the output variable being exported
             * @example Username of the user created in the target system
             */
            description?: string;
            /**
             * @description External name of the output variable being exported
             * @example Username
             */
            name?: string;
            /**
             * @description Value of the output variable being exported
             * @example johndoe
             */
            value?: string;
            /**
             * @description Reference to an input variable that will be used to set the value of the output variable being exported
             * @example $var.username
             */
            valueRef?: string;
            /** @example Magni debitis aut omnis. */
            valueType?: string;
        };
        /** @example {
         *       "currentPassword": "currentPassword",
         *       "currentPasswordHash": "currentPasswordHash",
         *       "password": "password",
         *       "token": "4b1"
         *     } */
        UpdatePasswordRequest: {
            /** @example currentPassword */
            currentPassword?: string;
            /** @example currentPasswordHash */
            currentPasswordHash?: string;
            /** @example password */
            password: string;
            /**
             * @description JWT token used to perform authorization
             * @example gug
             */
            token: string;
        };
        /** @example {
         *       "currentPassword": "currentPassword",
         *       "currentPasswordHash": "currentPasswordHash",
         *       "password": "password"
         *     } */
        UpdatePasswordRequest2: {
            /** @example currentPassword */
            currentPassword?: string;
            /** @example currentPasswordHash */
            currentPasswordHash?: string;
            /** @example password */
            password: string;
        };
        /** @example {
         *       "description": "MySQL SaaS promotion pipeline",
         *       "id": "p-12345678",
         *       "name": "my-pipeline",
         *       "serviceEnvironmentSequence": [
         *         "se-12345678",
         *         "se-23456789"
         *       ],
         *       "serviceId": "s-12345678",
         *       "token": "oop"
         *     } */
        UpdatePipelineRequest: {
            /**
             * @description Description of the pipeline
             * @example MySQL SaaS promotion pipeline
             */
            description?: string;
            /**
             * @description ID of a Pipeline
             * @example Asperiores nam saepe iste commodi dolorem.
             */
            id?: string;
            /**
             * @description Name of the pipeline
             * @example my-pipeline
             */
            name?: string;
            /**
             * @description Sequence of service environments to be deployed in the pipeline
             * @example [
             *       "se-12345678",
             *       "se-23456789"
             *     ]
             */
            serviceEnvironmentSequence?: string[];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example vwn
             */
            token: string;
        };
        /** @example {
         *       "allowCreatesWhenPaymentNotConfigured": true,
         *       "autoApproveSubscription": false,
         *       "awsRegions": [
         *         "us-east-2",
         *         "ca-central-1"
         *       ],
         *       "azureRegions": [
         *         "northcentralus"
         *       ],
         *       "billingProductID": "abc123",
         *       "billingProviders": [
         *         "STRIPE",
         *         "BRING_YOUR_OWN"
         *       ],
         *       "defaultBillingProvider": "STRIPE",
         *       "description": "A premium product tier",
         *       "documentation": "Any documentation",
         *       "exportUsageMetering": true,
         *       "exportUsageMeteringConfig": {
         *         "GCS": {
         *           "GCSBucketName": "my_billing_bucket_name"
         *         },
         *         "S3": {
         *           "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
         *           "S3BucketRegion": "us-east-1"
         *         }
         *       },
         *       "gcpRegions": [
         *         "us-central1"
         *       ],
         *       "id": "pt-12345678",
         *       "isDisabled": false,
         *       "maxNumberOfInstances": 5,
         *       "name": "Premium",
         *       "planDescription": "A premium plan",
         *       "pricePerUnit": {
         *         "CPU core hours": {
         *           "amount": 0.001,
         *           "currency": "USD"
         *         },
         *         "Memory GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         },
         *         "Storage GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         }
         *       },
         *       "pricing": {
         *         "price1": "value1"
         *       },
         *       "privateRegions": [
         *         "n/a"
         *       ],
         *       "serviceId": "s-12345678",
         *       "support": "Any support",
         *       "tierType": "OMNISTRATE_DEDICATED_TENANCY",
         *       "token": "7cs"
         *     } */
        UpdateProductTierRequest: {
            /**
             * @description Allow creates when payment not configured
             * @example true
             */
            allowCreatesWhenPaymentNotConfigured?: boolean;
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description The AWS regions that this product tier is available on
             * @example [
             *       "us-east-2",
             *       "ca-central-1"
             *     ]
             */
            awsRegions?: string[];
            /**
             * @description The Azure regions that this product tier is available on
             * @example [
             *       "northcentralus"
             *     ]
             */
            azureRegions?: string[];
            /**
             * @description Optional billing product ID for tax purposes
             * @example abc123
             */
            billingProductID?: string;
            /**
             * @description List of billing providers to be used for the product tier
             * @example [
             *       "STRIPE",
             *       "BRING_YOUR_OWN"
             *     ]
             */
            billingProviders?: string[];
            /**
             * @description The billing provider type
             * @example STRIPE|BRING_YOUR_OWN
             */
            defaultBillingProvider?: string;
            /**
             * @description A brief description of the product tier
             * @example A premium product tier
             */
            description?: string;
            /**
             * @description Documentation
             * @example Any documentation
             */
            documentation?: string;
            /**
             * @description Export usage metering data
             * @example true
             */
            exportUsageMetering?: boolean;
            /**
             * @description Export usage metering data configuration
             * @example {
             *       "GCS": {
             *         "GCSBucketName": "my_billing_bucket_name"
             *       },
             *       "S3": {
             *         "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
             *         "S3BucketRegion": "us-east-1"
             *       }
             *     }
             */
            exportUsageMeteringConfig?: {
                [key: string]: unknown;
            };
            /**
             * @description The GCP regions that this product tier is available on
             * @example [
             *       "us-central1"
             *     ]
             */
            gcpRegions?: string[];
            /**
             * @description ID of a Product Tier
             * @example Aut optio sint.
             */
            id: string;
            /**
             * @description Update the product tier's state as enabled/disabled. Enabling the product tier will let end-customers subscribe and use the service plan.
             * @example false
             */
            isDisabled?: boolean;
            /**
             * Format: int64
             * @description Maximum number of instances. Set to -1 for unlimited.
             * @example 5
             */
            maxNumberOfInstances?: number;
            /**
             * @description Name of the product tier
             * @example Premium
             */
            name?: string;
            /**
             * @description A brief description for the end user of the product tier
             * @example A premium plan
             */
            planDescription?: string;
            /**
             * @description Price per unit.
             * @example {
             *       "CPU core hours": {
             *         "amount": 0.001,
             *         "currency": "USD"
             *       },
             *       "Memory GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       },
             *       "Storage GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       }
             *     }
             */
            pricePerUnit?: {
                [key: string]: unknown;
            };
            /**
             * @description Pricing
             * @example {
             *       "price1": "value1"
             *     }
             */
            pricing?: unknown;
            /**
             * @description The private regions that this product tier is available on
             * @example [
             *       "n/a"
             *     ]
             */
            privateRegions?: string[];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description Support
             * @example Any support
             */
            support?: string;
            /**
             * @description ProductTierType is the type of tier for a product
             * @example OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
             */
            tierType?: string;
            /**
             * @description JWT token used to perform authorization
             * @example pg1
             */
            token: string;
        };
        /** @example {
         *       "allowCreatesWhenPaymentNotConfigured": true,
         *       "autoApproveSubscription": false,
         *       "awsRegions": [
         *         "us-east-2",
         *         "ca-central-1"
         *       ],
         *       "azureRegions": [
         *         "northcentralus"
         *       ],
         *       "billingProductID": "abc123",
         *       "billingProviders": [
         *         "STRIPE",
         *         "BRING_YOUR_OWN"
         *       ],
         *       "defaultBillingProvider": "STRIPE",
         *       "description": "A premium product tier",
         *       "documentation": "Any documentation",
         *       "exportUsageMetering": true,
         *       "exportUsageMeteringConfig": {
         *         "GCS": {
         *           "GCSBucketName": "my_billing_bucket_name"
         *         },
         *         "S3": {
         *           "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
         *           "S3BucketRegion": "us-east-1"
         *         }
         *       },
         *       "gcpRegions": [
         *         "us-central1"
         *       ],
         *       "isDisabled": false,
         *       "maxNumberOfInstances": 5,
         *       "name": "Premium",
         *       "planDescription": "A premium plan",
         *       "pricePerUnit": {
         *         "CPU core hours": {
         *           "amount": 0.001,
         *           "currency": "USD"
         *         },
         *         "Memory GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         },
         *         "Storage GiB hours": {
         *           "amount": 0.0001,
         *           "currency": "USD"
         *         }
         *       },
         *       "pricing": {
         *         "price1": "value1"
         *       },
         *       "privateRegions": [
         *         "n/a"
         *       ],
         *       "support": "Any support",
         *       "tierType": "OMNISTRATE_DEDICATED_TENANCY"
         *     } */
        UpdateProductTierRequest2: {
            /**
             * @description Allow creates when payment not configured
             * @example true
             */
            allowCreatesWhenPaymentNotConfigured?: boolean;
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description The AWS regions that this product tier is available on
             * @example [
             *       "us-east-2",
             *       "ca-central-1"
             *     ]
             */
            awsRegions?: string[];
            /**
             * @description The Azure regions that this product tier is available on
             * @example [
             *       "northcentralus"
             *     ]
             */
            azureRegions?: string[];
            /**
             * @description Optional billing product ID for tax purposes
             * @example abc123
             */
            billingProductID?: string;
            /**
             * @description List of billing providers to be used for the product tier
             * @example [
             *       "STRIPE",
             *       "BRING_YOUR_OWN"
             *     ]
             */
            billingProviders?: string[];
            /**
             * @description The default billing provider to be used for the product tier
             * @example STRIPE
             */
            defaultBillingProvider?: string;
            /**
             * @description A brief description of the product tier
             * @example A premium product tier
             */
            description?: string;
            /**
             * @description Documentation
             * @example Any documentation
             */
            documentation?: string;
            /**
             * @description Export usage metering data
             * @example true
             */
            exportUsageMetering?: boolean;
            /**
             * @description Export usage metering data configuration
             * @example {
             *       "GCS": {
             *         "GCSBucketName": "my_billing_bucket_name"
             *       },
             *       "S3": {
             *         "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
             *         "S3BucketRegion": "us-east-1"
             *       }
             *     }
             */
            exportUsageMeteringConfig?: {
                [key: string]: unknown;
            };
            /**
             * @description The GCP regions that this product tier is available on
             * @example [
             *       "us-central1"
             *     ]
             */
            gcpRegions?: string[];
            /**
             * @description Update the product tier's state as enabled/disabled. Enabling the product tier will let end-customers subscribe and use the service plan.
             * @example false
             */
            isDisabled?: boolean;
            /**
             * Format: int64
             * @description Maximum number of instances. Set to -1 for unlimited.
             * @example 5
             */
            maxNumberOfInstances?: number;
            /**
             * @description Name of the product tier
             * @example Premium
             */
            name?: string;
            /**
             * @description A brief description for the end user of the product tier
             * @example A premium plan
             */
            planDescription?: string;
            /**
             * @description Price per unit.
             * @example {
             *       "CPU core hours": {
             *         "amount": 0.001,
             *         "currency": "USD"
             *       },
             *       "Memory GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       },
             *       "Storage GiB hours": {
             *         "amount": 0.0001,
             *         "currency": "USD"
             *       }
             *     }
             */
            pricePerUnit?: {
                [key: string]: unknown;
            };
            /**
             * @description Pricing
             * @example {
             *       "price1": "value1"
             *     }
             */
            pricing?: unknown;
            /**
             * @description The private regions that this product tier is available on
             * @example [
             *       "n/a"
             *     ]
             */
            privateRegions?: string[];
            /**
             * @description Support
             * @example Any support
             */
            support?: string;
            /**
             * @description Tier type
             * @example OMNISTRATE_DEDICATED_TENANCY
             */
            tierType?: string;
        };
        /** @example {
         *       "id": "instance-abcd1234",
         *       "network_type": "PUBLIC|INTERNAL",
         *       "productTierKey": "premium",
         *       "requestParams": {
         *         "param1": "value1",
         *         "param2": "value2"
         *       },
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "token": "nx"
         *     } */
        UpdateResourceInstanceRequest: {
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The network type
             * @example PUBLIC|INTERNAL
             */
            network_type?: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The request parameters
             * @example {
             *       "param1": "value1",
             *       "param2": "value2"
             *     }
             */
            requestParams?: unknown;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Sit corrupti et voluptatem dolores dolor.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example ga3
             */
            token: string;
        };
        /** @example {
         *       "network_type": "PUBLIC|INTERNAL",
         *       "requestParams": {
         *         "param1": "value1",
         *         "param2": "value2"
         *       }
         *     } */
        UpdateResourceInstanceRequest2: {
            /**
             * @description The network type
             * @example PUBLIC|INTERNAL
             */
            network_type?: string;
            /**
             * @description The request parameters
             * @example {
             *       "param1": "value1",
             *       "param2": "value2"
             *     }
             */
            requestParams?: unknown;
        };
        /** @example {
         *       "additionalSecurityContext": {
         *         "AddCapabilities": [
         *           "CAP_NET_ADMIN",
         *           "CAP_NET_RAW"
         *         ],
         *         "DropCapabilities": [
         *           "CAP_NET_ADMIN",
         *           "CAP_NET_RAW"
         *         ],
         *         "SupplementalGroupIDs": [
         *           1001,
         *           999
         *         ]
         *       },
         *       "backupConfiguration": {
         *         "backupPeriodInHours": 24,
         *         "backupRetentionInDays": 7
         *       },
         *       "customLabels": {
         *         "key": "value"
         *       },
         *       "customSysCTLs": {
         *         "net.ipv4.tcp_syncookies": "1"
         *       },
         *       "customULimits": [
         *         {
         *           "ULimitsName": "NoProc",
         *           "ULimitsType": "Soft",
         *           "ULimitsValue": 1000
         *         },
         *         {
         *           "ULimitsName": "NoFile",
         *           "ULimitsType": "Hard",
         *           "ULimitsValue": 2048
         *         }
         *       ],
         *       "dependencies": [
         *         {
         *           "parameterMap": {
         *             "clusterId": "writerId",
         *             "clusterOrg": "userDatabase"
         *           },
         *           "resourceId": "r-12345678"
         *         },
         *         {
         *           "parameterMap": {
         *             "clusterId": "readerId",
         *             "clusterOrg": "userDatabase"
         *           },
         *           "resourceId": "r-abcdef12"
         *         }
         *       ],
         *       "description": "A resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
         *       "environmentVariables": [
         *         {
         *           "key": "MYSQL_ROOT_PASSWORD",
         *           "value": "password"
         *         }
         *       ],
         *       "helmChartConfiguration": {
         *         "chartName": "my-chart",
         *         "chartRepoName": "my-repo",
         *         "chartRepoUrl": "https://my-repo.com",
         *         "chartValues": {
         *           "key1": "value1",
         *           "key2": 3,
         *           "key3": {
         *             "key4": "value4"
         *           }
         *         },
         *         "chartVersion": "1.0.0",
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "layeredChartValues": [
         *           {
         *             "values": {
         *               "global": {
         *                 "image": {
         *                   "tag": "v1.0.0"
         *                 },
         *                 "replicaCount": 1,
         *                 "resources": {
         *                   "requests": {
         *                     "cpu": "100m",
         *                     "memory": "128Mi"
         *                   }
         *                 }
         *               }
         *             }
         *           },
         *           {
         *             "scope": {
         *               "{{ $sys.cloudProviderName }}": "aws"
         *             },
         *             "valuesFile": {
         *               "gitConfiguration": {
         *                 "accessToken": "ghp_...",
         *                 "commitSHA": "a1b2c3d4e5f6",
         *                 "path": "aws/production.yaml",
         *                 "referenceName": "refs/heads/main",
         *                 "repositoryUrl": "https://github.com/org/helm-values"
         *               }
         *             }
         *           }
         *         ],
         *         "namespace": "postgres",
         *         "password": "my-password",
         *         "runtimeConfiguration": {
         *           "disableHooks": true,
         *           "recreate": true,
         *           "resetThenReuseValues": true,
         *           "resetValues": true,
         *           "reuseValues": true,
         *           "skipCRDs": true,
         *           "timeoutNanos": 1000000000,
         *           "upgradeCRDs": true,
         *           "wait": true,
         *           "waitForJobs": true
         *         },
         *         "username": "my-user"
         *       },
         *       "id": "r-12345678",
         *       "imageConfigId": "imgc-12345678",
         *       "infraConfigId": "ic-12345678",
         *       "jobConfig": {
         *         "activeDeadlineSeconds": 300,
         *         "backoffLimit": 5
         *       },
         *       "kustomizeConfiguration": {
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "gitConfiguration": {
         *           "accessToken": "my-token",
         *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *           "referenceName": "tags/v1.0.0",
         *           "repositoryUrl": "https://github.com/username/myrepo",
         *           "userName": "my-user"
         *         },
         *         "helmChartDependencies": [
         *           {
         *             "chartName": "cert-manager",
         *             "chartVersion": "v1.5.3"
         *           },
         *           {
         *             "chartName": "nginx-ingress",
         *             "chartVersion": "v0.48.1"
         *           },
         *           {
         *             "chartName": "external-dns",
         *             "chartVersion": "v0.7.0"
         *           },
         *           {
         *             "chartName": "cnpg-operator",
         *             "chartVersion": "v0.23.1"
         *           }
         *         ],
         *         "kustomizePath": "/kustomize"
         *       },
         *       "l4LoadBalancerConfiguration": {
         *         "ingressPortConfiguration": [
         *           {
         *             "associatedResourceIDs": [
         *               "r-12345678",
         *               "r-abcdef12"
         *             ],
         *             "backendPort": 8080,
         *             "ingressPort": 1234
         *           },
         *           {
         *             "associatedResourceIDs": [
         *               "r-12345678",
         *               "r-abcdef12"
         *             ],
         *             "backendPort": 8081,
         *             "ingressPort": 5678
         *           },
         *           {
         *             "associatedResourceIDs": [
         *               "r-vwxybz12",
         *               "r-poij122v"
         *             ],
         *             "backendPort": 8082,
         *             "ingressPort": 9012
         *           }
         *         ]
         *       },
         *       "l7LoadBalancerConfiguration": {
         *         "paths": [
         *           {
         *             "associatedResourceID": "r-12345678",
         *             "path": "/path",
         *             "port": 8080
         *           }
         *         ]
         *       },
         *       "name": "Galera",
         *       "onPremTerraformConfigurations": {
         *         "OpenShift": {
         *           "gitConfiguration": {
         *             "referenceName": "ref",
         *             "repositoryUrl": "gitUrl"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "terraformPath": "/project1/tf"
         *         }
         *       },
         *       "operatorCRDConfiguration": {
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "helmChartDependencies": [
         *           {
         *             "chartName": "cert-manager",
         *             "chartVersion": "v1.5.3"
         *           },
         *           {
         *             "chartName": "nginx-ingress",
         *             "chartVersion": "v0.48.1"
         *           },
         *           {
         *             "chartName": "external-dns",
         *             "chartVersion": "v0.7.0"
         *           },
         *           {
         *             "chartName": "cnpg-operator",
         *             "chartVersion": "v0.23.1"
         *           }
         *         ],
         *         "outputParameters": {
         *           "expiresAt": "$out.status.notAfter",
         *           "issuerName": "letsencrypt-prod"
         *         },
         *         "readinessConditions": {
         *           "$out.status.conditions[?(@.type=='Ready')].status": true
         *         },
         *         "supplementalFiles": [
         *           "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
         *           "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
         *         ],
         *         "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
         *       },
         *       "serviceId": "s-12345678",
         *       "terraformConfigurations": {
         *         "aws": {
         *           "gitConfiguration": {
         *             "referenceName": "ref",
         *             "repositoryUrl": "gitUrl"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "terraformPath": "/project1/tf"
         *         }
         *       },
         *       "token": "i"
         *     } */
        UpdateResourceRequest: {
            additionalSecurityContext?: components["schemas"]["AdditionalSecurityContext"];
            backupConfiguration?: components["schemas"]["BackupConfiguration"];
            /**
             * @description Custom labels for the resource
             * @example {
             *       "key": "value"
             *     }
             */
            customLabels?: {
                [key: string]: string;
            };
            /**
             * @description Custom sysctl settings for the resource
             * @example {
             *       "net.ipv4.tcp_syncookies": "1"
             *     }
             */
            customSysCTLs?: {
                [key: string]: string;
            };
            /**
             * @description Custom ulimits for the resource
             * @example [
             *       {
             *         "ULimitsName": "NoProc",
             *         "ULimitsType": "Soft",
             *         "ULimitsValue": 1000
             *       },
             *       {
             *         "ULimitsName": "NoFile",
             *         "ULimitsType": "Hard",
             *         "ULimitsValue": 2048
             *       }
             *     ]
             */
            customULimits?: components["schemas"]["CustomULimits"][];
            /** @example [
             *       {
             *         "parameterMap": {
             *           "clusterId": "writerId",
             *           "clusterOrg": "userDatabase"
             *         },
             *         "resourceId": "r-12345678"
             *       },
             *       {
             *         "parameterMap": {
             *           "clusterId": "readerId",
             *           "clusterOrg": "userDatabase"
             *         },
             *         "resourceId": "r-abcdef12"
             *       }
             *     ] */
            dependencies?: components["schemas"]["ResourceDependency"][];
            /**
             * @description A brief description of the resource
             * @example A resource to manage a hosted public SaaS offering of a multi-writer MySQL service
             */
            description?: string;
            /**
             * @description The environment variables that this resource requires
             * @example [
             *       {
             *         "key": "MYSQL_ROOT_PASSWORD",
             *         "value": "password"
             *       }
             *     ]
             */
            environmentVariables?: components["schemas"]["EnvironmentVariable"][];
            helmChartConfiguration?: components["schemas"]["HelmChartConfiguration"];
            /**
             * @description ID of a resource
             * @example Quia enim magni modi facere occaecati aut.
             */
            id: string;
            /**
             * @description ID of an Image Config
             * @example Sunt qui ut omnis sunt provident nam.
             */
            imageConfigId?: string;
            /**
             * @description ID of an Infra Config
             * @example Dolor laudantium quis fugit ducimus saepe.
             */
            infraConfigId?: string;
            jobConfig?: components["schemas"]["JobConfig"];
            kustomizeConfiguration?: components["schemas"]["KustomizeConfiguration"];
            l4LoadBalancerConfiguration?: components["schemas"]["L4LoadBalancerConfiguration"];
            l7LoadBalancerConfiguration?: components["schemas"]["L7LoadBalancerConfiguration"];
            /**
             * @description Name of the resource
             * @example Galera
             */
            name?: string;
            onPremTerraformConfigurations?: components["schemas"]["OnPremTerraformConfigurations"];
            operatorCRDConfiguration?: components["schemas"]["OperatorCRDConfiguration"];
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            terraformConfigurations?: components["schemas"]["TerraformConfigurations"];
            /**
             * @description JWT token used to perform authorization
             * @example v
             */
            token: string;
        };
        /** @example {
         *       "additionalSecurityContext": {
         *         "AddCapabilities": [
         *           "CAP_NET_ADMIN",
         *           "CAP_NET_RAW"
         *         ],
         *         "DropCapabilities": [
         *           "CAP_NET_ADMIN",
         *           "CAP_NET_RAW"
         *         ],
         *         "SupplementalGroupIDs": [
         *           1001,
         *           999
         *         ]
         *       },
         *       "backupConfiguration": {
         *         "backupPeriodInHours": 24,
         *         "backupRetentionInDays": 7
         *       },
         *       "customLabels": {
         *         "key": "value"
         *       },
         *       "customSysCTLs": {
         *         "net.ipv4.tcp_syncookies": "1"
         *       },
         *       "customULimits": [
         *         {
         *           "ULimitsName": "NoProc",
         *           "ULimitsType": "Soft",
         *           "ULimitsValue": 1000
         *         },
         *         {
         *           "ULimitsName": "NoFile",
         *           "ULimitsType": "Hard",
         *           "ULimitsValue": 2048
         *         }
         *       ],
         *       "dependencies": [
         *         {
         *           "parameterMap": {
         *             "clusterId": "writerId",
         *             "clusterOrg": "userDatabase"
         *           },
         *           "resourceId": "r-12345678"
         *         },
         *         {
         *           "parameterMap": {
         *             "clusterId": "readerId",
         *             "clusterOrg": "userDatabase"
         *           },
         *           "resourceId": "r-abcdef12"
         *         }
         *       ],
         *       "description": "A resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
         *       "environmentVariables": [
         *         {
         *           "key": "MYSQL_ROOT_PASSWORD",
         *           "value": "password"
         *         }
         *       ],
         *       "helmChartConfiguration": {
         *         "chartName": "my-chart",
         *         "chartRepoName": "my-repo",
         *         "chartRepoUrl": "https://my-repo.com",
         *         "chartValues": {
         *           "key1": "value1",
         *           "key2": 3,
         *           "key3": {
         *             "key4": "value4"
         *           }
         *         },
         *         "chartVersion": "1.0.0",
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "layeredChartValues": [
         *           {
         *             "values": {
         *               "global": {
         *                 "image": {
         *                   "tag": "v1.0.0"
         *                 },
         *                 "replicaCount": 1,
         *                 "resources": {
         *                   "requests": {
         *                     "cpu": "100m",
         *                     "memory": "128Mi"
         *                   }
         *                 }
         *               }
         *             }
         *           },
         *           {
         *             "scope": {
         *               "{{ $sys.cloudProviderName }}": "aws"
         *             },
         *             "valuesFile": {
         *               "gitConfiguration": {
         *                 "accessToken": "ghp_...",
         *                 "commitSHA": "a1b2c3d4e5f6",
         *                 "path": "aws/production.yaml",
         *                 "referenceName": "refs/heads/main",
         *                 "repositoryUrl": "https://github.com/org/helm-values"
         *               }
         *             }
         *           }
         *         ],
         *         "namespace": "postgres",
         *         "password": "my-password",
         *         "runtimeConfiguration": {
         *           "disableHooks": true,
         *           "recreate": true,
         *           "resetThenReuseValues": true,
         *           "resetValues": true,
         *           "reuseValues": true,
         *           "skipCRDs": true,
         *           "timeoutNanos": 1000000000,
         *           "upgradeCRDs": true,
         *           "wait": true,
         *           "waitForJobs": true
         *         },
         *         "username": "my-user"
         *       },
         *       "imageConfigId": "imgc-12345678",
         *       "infraConfigId": "ic-12345678",
         *       "jobConfig": {
         *         "activeDeadlineSeconds": 300,
         *         "backoffLimit": 5
         *       },
         *       "kustomizeConfiguration": {
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "gitConfiguration": {
         *           "accessToken": "my-token",
         *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *           "referenceName": "tags/v1.0.0",
         *           "repositoryUrl": "https://github.com/username/myrepo",
         *           "userName": "my-user"
         *         },
         *         "helmChartDependencies": [
         *           {
         *             "chartName": "cert-manager",
         *             "chartVersion": "v1.5.3"
         *           },
         *           {
         *             "chartName": "nginx-ingress",
         *             "chartVersion": "v0.48.1"
         *           },
         *           {
         *             "chartName": "external-dns",
         *             "chartVersion": "v0.7.0"
         *           },
         *           {
         *             "chartName": "cnpg-operator",
         *             "chartVersion": "v0.23.1"
         *           }
         *         ],
         *         "kustomizePath": "/kustomize"
         *       },
         *       "l4LoadBalancerConfiguration": {
         *         "ingressPortConfiguration": [
         *           {
         *             "associatedResourceIDs": [
         *               "r-12345678",
         *               "r-abcdef12"
         *             ],
         *             "backendPort": 8080,
         *             "ingressPort": 1234
         *           },
         *           {
         *             "associatedResourceIDs": [
         *               "r-12345678",
         *               "r-abcdef12"
         *             ],
         *             "backendPort": 8081,
         *             "ingressPort": 5678
         *           },
         *           {
         *             "associatedResourceIDs": [
         *               "r-vwxybz12",
         *               "r-poij122v"
         *             ],
         *             "backendPort": 8082,
         *             "ingressPort": 9012
         *           }
         *         ]
         *       },
         *       "l7LoadBalancerConfiguration": {
         *         "paths": [
         *           {
         *             "associatedResourceID": "r-12345678",
         *             "path": "/path",
         *             "port": 8080
         *           }
         *         ]
         *       },
         *       "name": "Galera",
         *       "onPremTerraformConfigurations": {
         *         "Provident vitae quo aspernatur architecto molestiae velit.": {
         *           "gitConfiguration": {
         *             "accessToken": "my-token",
         *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *             "referenceName": "tags/v1.0.0",
         *             "repositoryUrl": "https://github.com/username/myrepo",
         *             "userName": "my-user"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "requiredOutputKeys": [
         *             "output1"
         *           ],
         *           "requiredOutputs": [
         *             {
         *               "exported": true,
         *               "key": "output1"
         *             }
         *           ],
         *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
         *           "terraformPath": "/project1/tf"
         *         },
         *         "Suscipit enim aspernatur quod est ut ut.": {
         *           "gitConfiguration": {
         *             "accessToken": "my-token",
         *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *             "referenceName": "tags/v1.0.0",
         *             "repositoryUrl": "https://github.com/username/myrepo",
         *             "userName": "my-user"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "requiredOutputKeys": [
         *             "output1"
         *           ],
         *           "requiredOutputs": [
         *             {
         *               "exported": true,
         *               "key": "output1"
         *             }
         *           ],
         *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
         *           "terraformPath": "/project1/tf"
         *         }
         *       },
         *       "operatorCRDConfiguration": {
         *         "endpointConfiguration": {
         *           "admin": {
         *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
         *             "networkingType": "PRIVATE",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": false
         *           },
         *           "cluster": {
         *             "host": "https://my-endpoint.com",
         *             "networkingType": "PUBLIC",
         *             "ports": [
         *               8080,
         *               8081
         *             ],
         *             "primary": true
         *           }
         *         },
         *         "helmChartDependencies": [
         *           {
         *             "chartName": "cert-manager",
         *             "chartVersion": "v1.5.3"
         *           },
         *           {
         *             "chartName": "nginx-ingress",
         *             "chartVersion": "v0.48.1"
         *           },
         *           {
         *             "chartName": "external-dns",
         *             "chartVersion": "v0.7.0"
         *           },
         *           {
         *             "chartName": "cnpg-operator",
         *             "chartVersion": "v0.23.1"
         *           }
         *         ],
         *         "outputParameters": {
         *           "expiresAt": "$out.status.notAfter",
         *           "issuerName": "letsencrypt-prod"
         *         },
         *         "readinessConditions": {
         *           "$out.status.conditions[?(@.type=='Ready')].status": true
         *         },
         *         "supplementalFiles": [
         *           "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
         *           "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
         *         ],
         *         "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
         *       },
         *       "terraformConfigurations": {
         *         "Explicabo et nihil.": {
         *           "gitConfiguration": {
         *             "accessToken": "my-token",
         *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *             "referenceName": "tags/v1.0.0",
         *             "repositoryUrl": "https://github.com/username/myrepo",
         *             "userName": "my-user"
         *           },
         *           "privateModuleGitAccessTokens": {
         *             "tokenName": "accessToken"
         *           },
         *           "requiredOutputKeys": [
         *             "output1"
         *           ],
         *           "requiredOutputs": [
         *             {
         *               "exported": true,
         *               "key": "output1"
         *             }
         *           ],
         *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
         *           "terraformPath": "/project1/tf"
         *         }
         *       }
         *     } */
        UpdateResourceRequest2: {
            additionalSecurityContext?: components["schemas"]["AdditionalSecurityContext"];
            backupConfiguration?: components["schemas"]["BackupConfiguration"];
            /**
             * @description Custom labels for the resource
             * @example {
             *       "key": "value"
             *     }
             */
            customLabels?: {
                [key: string]: string;
            };
            /**
             * @description Custom sysctl settings for the resource
             * @example {
             *       "net.ipv4.tcp_syncookies": "1"
             *     }
             */
            customSysCTLs?: {
                [key: string]: string;
            };
            /**
             * @description Custom ulimits for the resource
             * @example [
             *       {
             *         "ULimitsName": "NoProc",
             *         "ULimitsType": "Soft",
             *         "ULimitsValue": 1000
             *       },
             *       {
             *         "ULimitsName": "NoFile",
             *         "ULimitsType": "Hard",
             *         "ULimitsValue": 2048
             *       }
             *     ]
             */
            customULimits?: components["schemas"]["CustomULimits"][];
            /** @example [
             *       {
             *         "parameterMap": {
             *           "clusterId": "writerId",
             *           "clusterOrg": "userDatabase"
             *         },
             *         "resourceId": "r-12345678"
             *       },
             *       {
             *         "parameterMap": {
             *           "clusterId": "readerId",
             *           "clusterOrg": "userDatabase"
             *         },
             *         "resourceId": "r-abcdef12"
             *       }
             *     ] */
            dependencies?: components["schemas"]["ResourceDependency"][];
            /**
             * @description A brief description of the resource
             * @example A resource to manage a hosted public SaaS offering of a multi-writer MySQL service
             */
            description?: string;
            /**
             * @description The environment variables that this resource requires
             * @example [
             *       {
             *         "key": "MYSQL_ROOT_PASSWORD",
             *         "value": "password"
             *       }
             *     ]
             */
            environmentVariables?: components["schemas"]["EnvironmentVariable"][];
            helmChartConfiguration?: components["schemas"]["HelmChartConfiguration"];
            /**
             * @description The ID of the image configuration that this resource refers to
             * @example imgc-12345678
             */
            imageConfigId?: string;
            /**
             * @description The ID of the infrastructure configuration that this resource refers to
             * @example ic-12345678
             */
            infraConfigId?: string;
            jobConfig?: components["schemas"]["JobConfig"];
            kustomizeConfiguration?: components["schemas"]["KustomizeConfiguration"];
            l4LoadBalancerConfiguration?: components["schemas"]["L4LoadBalancerConfiguration"];
            l7LoadBalancerConfiguration?: components["schemas"]["L7LoadBalancerConfiguration"];
            /**
             * @description Name of the resource
             * @example Galera
             */
            name?: string;
            /**
             * @description The Terraform configurations for various OnPrem platforms
             * @example {
             *       "Fuga ex magni possimus eos voluptatem laudantium.": {
             *         "gitConfiguration": {
             *           "accessToken": "my-token",
             *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *           "referenceName": "tags/v1.0.0",
             *           "repositoryUrl": "https://github.com/username/myrepo",
             *           "userName": "my-user"
             *         },
             *         "privateModuleGitAccessTokens": {
             *           "tokenName": "accessToken"
             *         },
             *         "requiredOutputKeys": [
             *           "output1"
             *         ],
             *         "requiredOutputs": [
             *           {
             *             "exported": true,
             *             "key": "output1"
             *           }
             *         ],
             *         "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
             *         "terraformPath": "/project1/tf"
             *       },
             *       "Minima repudiandae.": {
             *         "gitConfiguration": {
             *           "accessToken": "my-token",
             *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *           "referenceName": "tags/v1.0.0",
             *           "repositoryUrl": "https://github.com/username/myrepo",
             *           "userName": "my-user"
             *         },
             *         "privateModuleGitAccessTokens": {
             *           "tokenName": "accessToken"
             *         },
             *         "requiredOutputKeys": [
             *           "output1"
             *         ],
             *         "requiredOutputs": [
             *           {
             *             "exported": true,
             *             "key": "output1"
             *           }
             *         ],
             *         "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
             *         "terraformPath": "/project1/tf"
             *       },
             *       "Ut dolorem et.": {
             *         "gitConfiguration": {
             *           "accessToken": "my-token",
             *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *           "referenceName": "tags/v1.0.0",
             *           "repositoryUrl": "https://github.com/username/myrepo",
             *           "userName": "my-user"
             *         },
             *         "privateModuleGitAccessTokens": {
             *           "tokenName": "accessToken"
             *         },
             *         "requiredOutputKeys": [
             *           "output1"
             *         ],
             *         "requiredOutputs": [
             *           {
             *             "exported": true,
             *             "key": "output1"
             *           }
             *         ],
             *         "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
             *         "terraformPath": "/project1/tf"
             *       }
             *     }
             */
            onPremTerraformConfigurations?: {
                [key: string]: components["schemas"]["TerraformConfiguration"];
            };
            operatorCRDConfiguration?: components["schemas"]["OperatorCRDConfiguration"];
            /**
             * @description The Terraform configurations for various cloud providers
             * @example {
             *       "In officiis sit ipsum vel alias necessitatibus.": {
             *         "gitConfiguration": {
             *           "accessToken": "my-token",
             *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *           "referenceName": "tags/v1.0.0",
             *           "repositoryUrl": "https://github.com/username/myrepo",
             *           "userName": "my-user"
             *         },
             *         "privateModuleGitAccessTokens": {
             *           "tokenName": "accessToken"
             *         },
             *         "requiredOutputKeys": [
             *           "output1"
             *         ],
             *         "requiredOutputs": [
             *           {
             *             "exported": true,
             *             "key": "output1"
             *           }
             *         ],
             *         "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
             *         "terraformPath": "/project1/tf"
             *       },
             *       "Quia repellendus eveniet aut.": {
             *         "gitConfiguration": {
             *           "accessToken": "my-token",
             *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
             *           "referenceName": "tags/v1.0.0",
             *           "repositoryUrl": "https://github.com/username/myrepo",
             *           "userName": "my-user"
             *         },
             *         "privateModuleGitAccessTokens": {
             *           "tokenName": "accessToken"
             *         },
             *         "requiredOutputKeys": [
             *           "output1"
             *         ],
             *         "requiredOutputs": [
             *           {
             *             "exported": true,
             *             "key": "output1"
             *           }
             *         ],
             *         "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
             *         "terraformPath": "/project1/tf"
             *       }
             *     }
             */
            terraformConfigurations?: {
                [key: string]: components["schemas"]["TerraformConfiguration"];
            };
        };
        /** @example {
         *       "customDomain": "mycustomdomain.com",
         *       "description": "My custom domain description",
         *       "environmentType": "DEV",
         *       "name": "MyCustomDomain",
         *       "token": "p"
         *     } */
        UpdateSaaSPortalCustomDomainRequest: {
            /**
             * @description The custom domain
             * @example mycustomdomain.com
             */
            customDomain?: string;
            /**
             * @description The custom domain description
             * @example My custom domain description
             */
            description?: string;
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType: string;
            /**
             * @description The custom domain name
             * @example MyCustomDomain
             */
            name?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 0
             */
            token: string;
        };
        /** @example {
         *       "customDomain": "mycustomdomain.com",
         *       "description": "My custom domain description",
         *       "name": "MyCustomDomain"
         *     } */
        UpdateSaaSPortalCustomDomainRequest2: {
            /**
             * @description The custom domain
             * @example mycustomdomain.com
             */
            customDomain?: string;
            /**
             * @description The custom domain description
             * @example My custom domain description
             */
            description?: string;
            /**
             * @description The custom domain name
             * @example MyCustomDomain
             */
            name?: string;
        };
        /** @example {
         *       "customDomain": "mycustomdomain.com",
         *       "disablePasswordLogin": false,
         *       "emailConfig": {
         *         "smtpFromEmail": "example@gmail.com",
         *         "smtpHost": "smtp.gmail.com",
         *         "smtpPassword": "password",
         *         "smtpPort": 587,
         *         "smtpUsername": "username"
         *       },
         *       "environmentType": "DEV",
         *       "googleAnalyticsTagID": "G-123456789",
         *       "imageConfig": {
         *         "imageName": "myimage",
         *         "imageRegistry": "ghcr.io",
         *         "imageTag": "latest"
         *       },
         *       "token": "p"
         *     } */
        UpdateSaaSPortalRequest: {
            /**
             * @description The custom domain for the SaaS portal
             * @example mycustomdomain.com
             */
            customDomain?: string;
            /**
             * @description Whether to disable password login for the SaaS portal
             * @example false
             */
            disablePasswordLogin?: boolean;
            emailConfig?: components["schemas"]["SaaSPortalEmailConfig"];
            /**
             * @description The type of service environment
             * @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
             */
            environmentType: string;
            /**
             * @description The Google Analytics tag ID for the SaaS portal
             * @example G-123456789
             */
            googleAnalyticsTagID?: string;
            imageConfig?: components["schemas"]["SaaSPortalImageConfig"];
            /**
             * @description JWT token used to perform authorization
             * @example 8
             */
            token: string;
        };
        /** @example {
         *       "customDomain": "mycustomdomain.com",
         *       "disablePasswordLogin": false,
         *       "emailConfig": {
         *         "smtpFromEmail": "example@gmail.com",
         *         "smtpHost": "smtp.gmail.com",
         *         "smtpPassword": "password",
         *         "smtpPort": 587,
         *         "smtpUsername": "username"
         *       },
         *       "googleAnalyticsTagID": "G-123456789",
         *       "imageConfig": {
         *         "imageName": "myimage",
         *         "imageRegistry": "ghcr.io",
         *         "imageTag": "latest"
         *       }
         *     } */
        UpdateSaaSPortalRequest2: {
            /**
             * @description The custom domain for the SaaS portal
             * @example mycustomdomain.com
             */
            customDomain?: string;
            /**
             * @description Whether to disable password login for the SaaS portal
             * @example false
             */
            disablePasswordLogin?: boolean;
            emailConfig?: components["schemas"]["SaaSPortalEmailConfig"];
            /**
             * @description The Google Analytics tag ID for the SaaS portal
             * @example G-123456789
             */
            googleAnalyticsTagID?: string;
            imageConfig?: components["schemas"]["SaaSPortalImageConfig"];
        };
        /** @example {
         *       "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
         *       "id": "sa-12345678",
         *       "serviceId": "s-12345678",
         *       "token": "o"
         *     } */
        UpdateServiceAPIRequest: {
            /**
             * @description A brief description of the service API bundle
             * @example A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability
             */
            description?: string;
            /**
             * @description ID of a Service API
             * @example Hic alias consequuntur omnis ab modi.
             */
            id: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example h
             */
            token: string;
        };
        /** @example {
         *       "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability"
         *     } */
        UpdateServiceAPIRequest2: {
            /**
             * @description A brief description of the service API bundle
             * @example A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability
             */
            description?: string;
        };
        /** @example {
         *       "autoApproveSubscription": false,
         *       "deploymentConfigId": "dc-12345678",
         *       "description": "The production environment for the MySQL multi-writer service",
         *       "id": "se-12345678",
         *       "name": "Production",
         *       "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
         *       "serviceId": "s-12345678",
         *       "sourceEnvironmentId": "se-12345678",
         *       "token": "95",
         *       "visibility": "PUBLIC"
         *     } */
        UpdateServiceEnvironmentRequest: {
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description ID of a Deployment Config
             * @example Ullam eum nihil architecto.
             */
            deploymentConfigId?: string;
            /**
             * @description A brief description of the service environment
             * @example The production environment for the MySQL multi-writer service
             */
            description?: string;
            /**
             * @description ID of a Service Environment
             * @example se-123456
             */
            id: string;
            /**
             * @description Name of the Service Environment
             * @example Production
             */
            name?: string;
            /**
             * @description PEM-encoded Public key part of the key used to sign the JWT tokens for the service control plane APIs
             * @example -----BEGIN PUBLIC KEY-----
             *     MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
             *     7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
             *     -----END PUBLIC KEY-----
             *
             */
            serviceAuthPublicKey?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description The ID of the service environment to use for promoting changes to this environment
             * @example se-12345678
             */
            sourceEnvironmentId?: string;
            /**
             * @description JWT token used to perform authorization
             * @example vq4
             */
            token: string;
            /**
             * @description This parameter is used to configure the visibility of the service control-plane APIs
             * @example PUBLIC
             */
            visibility?: string;
        };
        /** @example {
         *       "autoApproveSubscription": false,
         *       "deploymentConfigId": "dc-12345678",
         *       "description": "The production environment for the MySQL multi-writer service",
         *       "name": "Production",
         *       "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
         *       "sourceEnvironmentId": "se-12345678",
         *       "visibility": "Ex id eligendi molestiae."
         *     } */
        UpdateServiceEnvironmentRequest2: {
            /**
             * @description Auto approve subscription or not
             * @example false
             */
            autoApproveSubscription?: boolean;
            /**
             * @description The deployment configuration ID
             * @example dc-12345678
             */
            deploymentConfigId?: string;
            /**
             * @description A brief description of the service environment
             * @example The production environment for the MySQL multi-writer service
             */
            description?: string;
            /**
             * @description Name of the Service Environment
             * @example Production
             */
            name?: string;
            /**
             * @description PEM-encoded Public key part of the key used to sign the JWT tokens for the service control plane APIs
             * @example -----BEGIN PUBLIC KEY-----
             *     MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
             *     7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
             *     -----END PUBLIC KEY-----
             *
             */
            serviceAuthPublicKey?: string;
            /**
             * @description The ID of the service environment to use for promoting changes to this environment
             * @example se-12345678
             */
            sourceEnvironmentId?: string;
            /**
             * @description This parameter is used to configure the visibility of the service control-plane APIs
             * @example Autem explicabo quibusdam illum velit nam.
             */
            visibility?: string;
        };
        /** @example {
         *       "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
         *       "id": "sm-12345678",
         *       "name": "MySQL multi-writer service hosted model",
         *       "serviceId": "s-12345678",
         *       "token": "ct"
         *     } */
        UpdateServiceModelRequest: {
            /**
             * @description A brief description of the service model
             * @example A MySQL Hosted SaaS specializing in multi-writer clusters for high availability
             */
            description?: string;
            /**
             * @description ID of a Service Model
             * @example Aut architecto in laborum velit.
             */
            id: string;
            /**
             * @description Name of the Service Model
             * @example MySQL multi-writer service hosted model
             */
            name?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 8yr
             */
            token: string;
        };
        /** @example {
         *       "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
         *       "name": "MySQL multi-writer service hosted model"
         *     } */
        UpdateServiceModelRequest2: {
            /**
             * @description A brief description of the service model
             * @example A MySQL Hosted SaaS specializing in multi-writer clusters for high availability
             */
            description?: string;
            /**
             * @description Name of the Service Model
             * @example MySQL multi-writer service hosted model
             */
            name?: string;
        };
        /** @example {
         *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *       "id": "s-12345678",
         *       "name": "MySQL multi-writer service",
         *       "serviceLogoURL": "Rerum fuga et.",
         *       "token": "bw"
         *     } */
        UpdateServiceRequest: {
            /**
             * @description A brief description of the service
             * @example A MySQL SaaS specializing in multi-writer clusters for high availability
             */
            description?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            id: string;
            /**
             * @description Name of the Service
             * @example MySQL multi-writer service
             */
            name?: string;
            /**
             * @description The logo for the service
             * @example Voluptatum cumque repellendus.
             */
            serviceLogoURL?: string;
            /**
             * @description JWT token used to perform authorization
             * @example ku
             */
            token: string;
        };
        /** @example {
         *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
         *       "name": "MySQL multi-writer service",
         *       "serviceLogoURL": "Nostrum aut."
         *     } */
        UpdateServiceRequest2: {
            /**
             * @description A brief description of the service
             * @example A MySQL SaaS specializing in multi-writer clusters for high availability
             */
            description?: string;
            /**
             * @description Name of the Service
             * @example MySQL multi-writer service
             */
            name?: string;
            /**
             * @description The logo for the service
             * @example Consequatur est explicabo sit et ut recusandae.
             */
            serviceLogoURL?: string;
        };
        /** @example {
         *       "description": "my-storage-config-description",
         *       "id": "sc-12345678",
         *       "name": "my-storage-config",
         *       "serviceId": "s-12345678",
         *       "token": "jk"
         *     } */
        UpdateStorageConfigRequest: {
            /**
             * @description Description of the storage config
             * @example my-storage-config-description
             */
            description?: string;
            /**
             * @description ID of a Storage Config
             * @example Eos maiores totam quos debitis.
             */
            id: string;
            /**
             * @description Name of the storage config
             * @example my-storage-config
             */
            name?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example ggh
             */
            token: string;
        };
        /** @example {
         *       "description": "my-storage-config-description",
         *       "name": "my-storage-config"
         *     } */
        UpdateStorageConfigRequest2: {
            /**
             * @description Description of the storage config
             * @example my-storage-config-description
             */
            description?: string;
            /**
             * @description Name of the storage config
             * @example my-storage-config
             */
            name?: string;
        };
        /** @example {
         *       "description": "A storage volume set to store the MySQL data directory",
         *       "disableBackup": false,
         *       "id": "svc-12345678",
         *       "name": "MySQL Data Volume",
         *       "serviceId": "s-12345678",
         *       "token": "j"
         *     } */
        UpdateStorageVolumeConfigRequest: {
            /**
             * @description A brief description of the context for the storage volume pool
             * @example A storage volume set to store the MySQL data directory
             */
            description?: string;
            /**
             * @description Disable backup for the storage volume
             * @example false
             */
            disableBackup?: boolean;
            /**
             * @description ID of a Storage Volume Config
             * @example Aut sint ad ut totam quis dolores.
             */
            id: string;
            /**
             * @description Name of the storage volume pool
             * @example MySQL Data Volume
             */
            name?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example d7c
             */
            token: string;
        };
        /** @example {
         *       "description": "A storage volume set to store the MySQL data directory",
         *       "disableBackup": false,
         *       "name": "MySQL Data Volume"
         *     } */
        UpdateStorageVolumeConfigRequest2: {
            /**
             * @description A brief description of the context for the storage volume pool
             * @example A storage volume set to store the MySQL data directory
             */
            description?: string;
            /**
             * @description Disable backup for the storage volume
             * @example false
             */
            disableBackup?: boolean;
            /**
             * @description Name of the storage volume pool
             * @example MySQL Data Volume
             */
            name?: string;
        };
        /** @example {
         *       "id": "svc-12345678",
         *       "instanceStorageSizeGi": "$var.storage_size",
         *       "serviceId": "s-12345678",
         *       "token": "u2w"
         *     } */
        UpdateStorageVolumeSizeConfigRequest: {
            /**
             * @description ID of a Storage Volume Config
             * @example A qui nostrum.
             */
            id: string;
            /**
             * @description The storage size (in Gi) provisioned for the configured instance storage type
             * @example $var.storage_size
             */
            instanceStorageSizeGi: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example f
             */
            token: string;
        };
        /** @example {
         *       "instanceStorageSizeGi": "$var.storage_size"
         *     } */
        UpdateStorageVolumeSizeConfigRequest2: {
            /**
             * @description The storage size (in Gi) provisioned for the configured instance storage type
             * @example $var.storage_size
             */
            instanceStorageSizeGi: string;
        };
        /** @example {
         *       "name": "Updated version set name",
         *       "productTierId": "Beatae beatae.",
         *       "serviceId": "s-12345678",
         *       "token": "c",
         *       "version": "3.0"
         *     } */
        UpdateTierVersionSetRequest: {
            /**
             * @description The name of the product-tier version set.
             * @example Updated version set name
             */
            name: string;
            /**
             * @description ID of a Product Tier
             * @example Dolores adipisci molestiae a facere.
             */
            productTierId: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId: string;
            /**
             * @description JWT token used to perform authorization
             * @example 0a0
             */
            token: string;
            /**
             * @description The version number for the specific version set.
             * @example 3.0
             */
            version: string;
        };
        /** @example {
         *       "name": "Updated version set name"
         *     } */
        UpdateTierVersionSetRequest2: {
            /**
             * @description The name of the product-tier version set.
             * @example Updated version set name
             */
            name: string;
        };
        /** @example {
         *       "description": "An upgrade path migrating clusters from one LTS version to another",
         *       "id": "up-12345678",
         *       "name": "LTS upgrade path",
         *       "serviceId": "s-12345678",
         *       "sourceVersion": "567.0",
         *       "targetVersion": "589.0",
         *       "token": "l"
         *     } */
        UpdateUpgradePathRequest: {
            /**
             * @description A brief description of the upgrade path
             * @example An upgrade path migrating clusters from one LTS version to another
             */
            description?: string;
            /**
             * @description ID of an Upgrade Path
             * @example Nobis sint voluptatum.
             */
            id?: string;
            /**
             * @description Name of the upgrade path
             * @example LTS upgrade path
             */
            name?: string;
            /**
             * @description ID of a Service
             * @example s-123456
             */
            serviceId?: string;
            /**
             * @description Version of the Entity to operate on
             * @example 1.0
             */
            sourceVersion?: string;
            /**
             * @description Version of the Entity to operate on
             * @example 1.0
             */
            targetVersion?: string;
            /**
             * @description JWT token used to perform authorization
             * @example gv
             */
            token: string;
        };
        /** @example {
         *       "address": {
         *         "addressLine1": "1234 Main St",
         *         "addressLine2": "Apt 123",
         *         "addressLine3": "Building 123",
         *         "city": "San Francisco",
         *         "country": "US",
         *         "state": "CA",
         *         "zip": "94123"
         *       },
         *       "id": "user-abcd1234",
         *       "name": "John Dae",
         *       "orgCookiePolicy": "Id et laborum reiciendis.",
         *       "orgDescription": "ACME Inc.",
         *       "orgFavIconURL": "http://brown.com/damion",
         *       "orgLogoURL": "http://mante.org/sabrina.mante",
         *       "orgName": "ACME",
         *       "orgPrivacyPolicy": "Perspiciatis tempora recusandae aliquid nihil.",
         *       "orgSupportEmail": "support@example.com",
         *       "orgTermsOfUse": "Exercitationem debitis nemo corporis est.",
         *       "orgURL": "something.acme",
         *       "token": "pv9"
         *     } */
        UpdateUserRequest: {
            address?: components["schemas"]["Address"];
            /**
             * @description The User ID
             * @example user-abcd1234
             */
            id: string;
            /**
             * @description The name of the user
             * @example John Dae
             */
            name?: string;
            /**
             * @description The cookie policy for the org that this user owns in an HTML format
             * @example Fugit aut et.
             */
            orgCookiePolicy?: string;
            /**
             * @description The description of the org that this user owns
             * @example ACME Inc.
             */
            orgDescription?: string;
            /**
             * Format: uri
             * @description The favicon of the org that this user owns
             * @example http://jenkins.name/lexi.bode
             */
            orgFavIconURL?: string;
            /**
             * Format: uri
             * @description The logo of the org that this user owns
             * @example http://armstrong.biz/colby.glover
             */
            orgLogoURL?: string;
            /**
             * @description The org name that this user owns
             * @example ACME
             */
            orgName?: string;
            /**
             * @description The privacy policy for the org that this user owns in an HTML format
             * @example Impedit debitis impedit in et et cumque.
             */
            orgPrivacyPolicy?: string;
            /**
             * @description The support email of the org that this user owns
             * @example support@example.com
             */
            orgSupportEmail?: string;
            /**
             * @description The terms of use for the org that this user owns in an HTML format
             * @example Unde adipisci veniam eos dolore.
             */
            orgTermsOfUse?: string;
            /**
             * @description The url of the org that this user owns
             * @example something.acme
             */
            orgURL?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 9u
             */
            token: string;
        };
        /** @example {
         *       "address": {
         *         "addressLine1": "1234 Main St",
         *         "addressLine2": "Apt 123",
         *         "addressLine3": "Building 123",
         *         "city": "San Francisco",
         *         "country": "US",
         *         "state": "CA",
         *         "zip": "94123"
         *       },
         *       "name": "John Dae",
         *       "orgCookiePolicy": "Assumenda sunt recusandae.",
         *       "orgDescription": "ACME Inc.",
         *       "orgFavIconURL": "http://hamill.name/talon",
         *       "orgLogoURL": "http://hessel.name/arden",
         *       "orgName": "ACME",
         *       "orgPrivacyPolicy": "Vitae necessitatibus soluta soluta.",
         *       "orgSupportEmail": "support@example.com",
         *       "orgTermsOfUse": "Nulla dolores pariatur quod.",
         *       "orgURL": "something.acme"
         *     } */
        UpdateUserRequest2: {
            address?: components["schemas"]["Address"];
            /**
             * @description The name of the user
             * @example John Dae
             */
            name?: string;
            /**
             * @description The cookie policy for the org that this user owns in an HTML format
             * @example Ipsum placeat.
             */
            orgCookiePolicy?: string;
            /**
             * @description The description of the org that this user owns
             * @example ACME Inc.
             */
            orgDescription?: string;
            /**
             * Format: uri
             * @description The favicon of the org that this user owns
             * @example http://dickinson.net/marcel
             */
            orgFavIconURL?: string;
            /**
             * Format: uri
             * @description The logo of the org that this user owns
             * @example http://halvorsonsatterfield.org/angie
             */
            orgLogoURL?: string;
            /**
             * @description The org name that this user owns
             * @example ACME
             */
            orgName?: string;
            /**
             * @description The privacy policy for the org that this user owns in an HTML format
             * @example Doloremque sint delectus molestiae accusantium.
             */
            orgPrivacyPolicy?: string;
            /**
             * @description The support email of the org that this user owns
             * @example support@example.com
             */
            orgSupportEmail?: string;
            /**
             * @description The terms of use for the org that this user owns in an HTML format
             * @example Dolorem id error aut.
             */
            orgTermsOfUse?: string;
            /**
             * @description The url of the org that this user owns
             * @example something.acme
             */
            orgURL?: string;
        };
        /** @example {
         *       "id": "instance-abcd1234",
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "subscriptionId": "sub-abcd1234",
         *       "targetVersion": "2.0",
         *       "token": "i22"
         *     } */
        UpgradeResourceInstanceVersionRequest: {
            /**
             * @description The instance ID
             * @example instance-abcd1234
             */
            id: string;
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description ID of a Service Provider
             * @example Et quo quia veritatis ut dolor quae.
             */
            serviceProviderId: string;
            /**
             * @description The subscription ID
             * @example sub-abcd1234
             */
            subscriptionId?: string;
            /**
             * @description The version to upgrade to
             * @example 2.0
             */
            targetVersion?: string;
            /**
             * @description JWT token used to perform authorization
             * @example 3
             */
            token: string;
        };
        /** @example {
         *       "productTierKey": "premium",
         *       "resourceKey": "mysql",
         *       "serviceAPIVersion": "v1",
         *       "serviceEnvironmentKey": "dev",
         *       "serviceKey": "service-orchestration",
         *       "serviceModelKey": "hosted",
         *       "serviceProviderId": "omnistrate",
         *       "targetVersion": "2.0"
         *     } */
        UpgradeResourceInstanceVersionRequest2: {
            /**
             * @description The product tier name
             * @example premium
             */
            productTierKey: string;
            /**
             * @description The resource key
             * @example mysql
             */
            resourceKey: string;
            /**
             * @description The service API version
             * @example v1
             */
            serviceAPIVersion: string;
            /**
             * @description The service environment name
             * @example dev
             */
            serviceEnvironmentKey: string;
            /**
             * @description The service name
             * @example service-orchestration
             */
            serviceKey: string;
            /**
             * @description The service model name
             * @example hosted
             */
            serviceModelKey: string;
            /**
             * @description The service provider ID
             * @example omnistrate
             */
            serviceProviderId: string;
            /**
             * @description The version to upgrade to
             * @example 2.0
             */
            targetVersion?: string;
        };
        /** @example {
         *       "dimension": "core/hours",
         *       "endTime": "2021-01-01T00:00:00.000Z",
         *       "startTime": "2021-01-01T00:00:00.000Z",
         *       "total": 0.67
         *     } */
        UsagePerDimension: {
            /**
             * @description Dimension of usage
             * @example core/hours
             */
            dimension?: string;
            /**
             * @description End timestamp of usage
             * @example 2021-01-01T00:00:00.000Z
             */
            endTime?: string;
            /**
             * @description Start timestamp of usage
             * @example 2021-01-01T00:00:00.000Z
             */
            startTime?: string;
            /**
             * Format: double
             * @description Total amount of usage during the period
             * @example 0.67
             */
            total?: number;
        };
        /** @example {
         *       "vunits": {
         *         "vu-11111111": "UNKNOWN",
         *         "vu-12345678": "UP",
         *         "vu-87654321": "DOWN"
         *       }
         *     } */
        VUnitHealthReport: {
            /**
             * @description The health of each vunit under this service environment
             * @example {
             *       "vu-11111111": "UNKNOWN",
             *       "vu-12345678": "UP",
             *       "vu-87654321": "DOWN"
             *     }
             */
            vunits?: {
                [key: string]: unknown;
            };
        };
        /** @example {
         *       "email": "abc@gmail.com",
         *       "token": "fc7b8dea-a50b-4c9a-8864-fc3d845a2be6"
         *     } */
        ValidateTokenRequest: {
            /**
             * Format: email
             * @example abc@gmail.com
             */
            email: string;
            /** @example fc7b8dea-a50b-4c9a-8864-fc3d845a2be6 */
            token: string;
        };
        /** @example {
         *       "gitConfiguration": {
         *         "accessToken": "my-token",
         *         "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
         *         "referenceName": "tags/v1.0.0",
         *         "repositoryUrl": "https://github.com/username/myrepo",
         *         "userName": "my-user"
         *       },
         *       "path": "helm/values/production.yaml"
         *     } */
        ValuesFile: {
            gitConfiguration: components["schemas"]["GitConfiguration"];
            /**
             * @description The relative file path from repository root
             * @example helm/values/production.yaml
             */
            path: string;
        };
        /** @example {
         *       "id": "ac-12345678",
         *       "token": "319"
         *     } */
        VerifyAccountConfigRequest: {
            /**
             * @description ID of an Account Config
             * @example Unde sequi omnis quisquam inventore exercitationem ducimus.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example d
             */
            token: string;
        };
        /** @example {
         *       "id": "cd-12345678",
         *       "token": "u"
         *     } */
        VerifyCustomDomainRequest: {
            /**
             * @description ID of an Custom Domain
             * @example Deserunt soluta incidunt veniam.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example qc
             */
            token: string;
        };
        /** @example {
         *       "id": "idp-12345678",
         *       "token": "r"
         *     } */
        VerifyIdentityProviderRequest: {
            /**
             * @description ID of an Identity Provider
             * @example Earum quasi qui reiciendis praesentium placeat.
             */
            id: string;
            /**
             * @description JWT token used to perform authorization
             * @example n5
             */
            token: string;
        };
        /** @example {
         *       "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
         *       "clientSecret": "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",
         *       "id": "idp-12345678",
         *       "identityProviderName": "Google",
         *       "name": "Google for my company",
         *       "status": "Ready"
         *     } */
        VerifyIdentityProviderResult: {
            /**
             * @description The Client ID of the Identity Provider
             * @example 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
             */
            clientId: string;
            /**
             * @description The Client Secret of the Identity Provider
             * @example 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
             */
            clientSecret?: string;
            /**
             * @description ID of an Identity Provider
             * @example Ipsa aut ex.
             */
            id: string;
            /**
             * @description The name of the identity provider
             * @example Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
             */
            identityProviderName: string;
            /**
             * @description The name of the Identity Provider
             * @example Google for my company
             */
            name?: string;
            /**
             * @description The status of an operation
             * @example FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
             */
            status: string;
        };
        /**
         * @description Warm pool configuration for compute nodes
         * @example {
         *       "minimumNodesInPool": 1,
         *       "minimumPercentageNodesInPool": 5
         *     }
         */
        WarmPoolConfiguration: {
            /**
             * Format: int64
             * @description Minimum number of compute nodes in pool
             * @default 1
             * @example 1
             */
            minimumNodesInPool: number;
            /**
             * Format: int64
             * @description Minimum percentage of compute nodes in pool
             * @default 0
             * @example 5
             */
            minimumPercentageNodesInPool: number;
        };
        /** @example {
         *       "eventTime": "2020-01-01T00:00:00Z",
         *       "message": "Bootstrap failed for reason X"
         *     } */
        WorkflowFailure: {
            /**
             * @description The time of the event
             * @example 2020-01-01T00:00:00Z
             */
            eventTime: string;
            /**
             * @description Details of the event
             * @example Bootstrap failed for reason X
             */
            message: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "account-config-api/CreateAccountConfig": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "awsAccessKey": "Dolorem quia sunt voluptatem.",
                 *       "awsAccountID": "123456789012",
                 *       "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                 *       "awsSecretKey": "Exercitationem consequatur quas.",
                 *       "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                 *       "azureTenantID": "12345678-1234-1234-1234-123456789012",
                 *       "byoaInstanceID": "instance-12345678",
                 *       "cloudProviderId": "infra-12345678",
                 *       "description": "An AWS account hosting multiple dev environments",
                 *       "gcpProjectID": "my-project",
                 *       "gcpProjectNumber": "123456789012",
                 *       "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                 *       "gcpServiceAccountKey": "Quo totam deleniti vel non rem quia.",
                 *       "name": "Dev AWS account"
                 *     } */
                "application/json": components["schemas"]["CreateAccountConfigRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create an account config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "account-config-api/DescribeAccountConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Account Config ID to operate on
                 * @example ac-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "awsAccountID": "123456789012",
                     *       "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                     *       "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                     *       "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                     *       "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *       "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *       "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *       "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *       "byoaInstanceIDs": [
                     *         "instance-12345678",
                     *         "instance-abcdefgh"
                     *       ],
                     *       "cloudProviderId": "infra-12345678",
                     *       "description": "An AWS account hosting multiple dev environments",
                     *       "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *       "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *       "gcpProjectID": "my-project",
                     *       "gcpProjectNumber": "123456789012",
                     *       "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                     *       "id": "ac-12345678",
                     *       "name": "Dev AWS account",
                     *       "status": "READY",
                     *       "statusMessage": "Account is ready"
                     *     } */
                    "application/json": components["schemas"]["DescribeAccountConfigResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe an account config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "account-config-api/DeleteAccountConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Account Config ID to operate on
                 * @example ac-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete an account config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "account-config-api/DescribeAccountConfigByAWSAccountID": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The AWS account ID
                 * @example 123456789012
                 */
                awsAccountID: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "awsAccountID": "123456789012",
                     *       "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                     *       "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml&param_CreateLoadBalancerPolicy=false",
                     *       "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                     *       "byoaInstanceIDs": [
                     *         "instance-12345678",
                     *         "instance-abcdefgh"
                     *       ],
                     *       "cloudProviderId": "infra-12345678",
                     *       "description": "An AWS account hosting multiple dev environments",
                     *       "id": "ac-12345678",
                     *       "name": "Dev AWS account",
                     *       "status": "READY",
                     *       "statusMessage": "Account is ready"
                     *     } */
                    "application/json": components["schemas"]["DescribeAccountConfigByAWSAccountIDResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe an account config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "account-config-api/DescribeAccountConfigByAzureSubscriptionID": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The Azure subscription ID
                 * @example 12345678-1234-1234-1234-123456789012
                 */
                azureSubscriptionID: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *       "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *       "byoaInstanceIDs": [
                     *         "instance-12345678",
                     *         "instance-abcdefgh"
                     *       ],
                     *       "cloudProviderId": "infra-12345678",
                     *       "description": "An AWS account hosting multiple dev environments",
                     *       "id": "ac-12345678",
                     *       "name": "Dev AWS account",
                     *       "status": "READY",
                     *       "statusMessage": "Account is ready"
                     *     } */
                    "application/json": components["schemas"]["DescribeAccountConfigByAzureSubscriptionIDResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe an account config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "account-config-api/ListBYOAConfig": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "cloudProviderName": "aws"
                 *     } */
                "application/json": components["schemas"]["ListBYOAConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "accountConfigs": [
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                     *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                     *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                     *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "byoaInstanceIDs": [
                     *             "instance-12345678",
                     *             "instance-abcdefgh"
                     *           ],
                     *           "cloudProviderId": "infra-12345678",
                     *           "description": "An AWS account hosting multiple dev environments",
                     *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                     *           "id": "ac-12345678",
                     *           "name": "Dev AWS account",
                     *           "status": "READY",
                     *           "statusMessage": "Account is ready"
                     *         },
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                     *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                     *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                     *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "byoaInstanceIDs": [
                     *             "instance-12345678",
                     *             "instance-abcdefgh"
                     *           ],
                     *           "cloudProviderId": "infra-12345678",
                     *           "description": "An AWS account hosting multiple dev environments",
                     *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                     *           "id": "ac-12345678",
                     *           "name": "Dev AWS account",
                     *           "status": "READY",
                     *           "statusMessage": "Account is ready"
                     *         },
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                     *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                     *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                     *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "byoaInstanceIDs": [
                     *             "instance-12345678",
                     *             "instance-abcdefgh"
                     *           ],
                     *           "cloudProviderId": "infra-12345678",
                     *           "description": "An AWS account hosting multiple dev environments",
                     *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                     *           "id": "ac-12345678",
                     *           "name": "Dev AWS account",
                     *           "status": "READY",
                     *           "statusMessage": "Account is ready"
                     *         },
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                     *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                     *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                     *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "byoaInstanceIDs": [
                     *             "instance-12345678",
                     *             "instance-abcdefgh"
                     *           ],
                     *           "cloudProviderId": "infra-12345678",
                     *           "description": "An AWS account hosting multiple dev environments",
                     *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                     *           "id": "ac-12345678",
                     *           "name": "Dev AWS account",
                     *           "status": "READY",
                     *           "statusMessage": "Account is ready"
                     *         }
                     *       ],
                     *       "ids": [
                     *         "ac-12345678",
                     *         "ac-abcdefgh",
                     *         "ac-1234efgh"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListBYOAConfigResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list account configs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "account-config-api/ListAccountConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Cloud Provider name to filter on
                 * @example aws
                 */
                cloudProviderName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "accountConfigs": [
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                     *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                     *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                     *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "byoaInstanceIDs": [
                     *             "instance-12345678",
                     *             "instance-abcdefgh"
                     *           ],
                     *           "cloudProviderId": "infra-12345678",
                     *           "description": "An AWS account hosting multiple dev environments",
                     *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                     *           "id": "ac-12345678",
                     *           "name": "Dev AWS account",
                     *           "status": "READY",
                     *           "statusMessage": "Account is ready"
                     *         },
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                     *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                     *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                     *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "byoaInstanceIDs": [
                     *             "instance-12345678",
                     *             "instance-abcdefgh"
                     *           ],
                     *           "cloudProviderId": "infra-12345678",
                     *           "description": "An AWS account hosting multiple dev environments",
                     *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                     *           "id": "ac-12345678",
                     *           "name": "Dev AWS account",
                     *           "status": "READY",
                     *           "statusMessage": "Account is ready"
                     *         },
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                     *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                     *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                     *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "byoaInstanceIDs": [
                     *             "instance-12345678",
                     *             "instance-abcdefgh"
                     *           ],
                     *           "cloudProviderId": "infra-12345678",
                     *           "description": "An AWS account hosting multiple dev environments",
                     *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                     *           "id": "ac-12345678",
                     *           "name": "Dev AWS account",
                     *           "status": "READY",
                     *           "statusMessage": "Account is ready"
                     *         },
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                     *           "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                     *           "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                     *           "azureBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "byoaInstanceIDs": [
                     *             "instance-12345678",
                     *             "instance-abcdefgh"
                     *           ],
                     *           "cloudProviderId": "infra-12345678",
                     *           "description": "An AWS account hosting multiple dev environments",
                     *           "gcpBootstrapShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpDisconnectShellCommand": "bash -c \"$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)\"",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                     *           "id": "ac-12345678",
                     *           "name": "Dev AWS account",
                     *           "status": "READY",
                     *           "statusMessage": "Account is ready"
                     *         }
                     *       ],
                     *       "ids": [
                     *         "ac-12345678",
                     *         "ac-abcdefgh",
                     *         "ac-1234efgh"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListAccountConfigResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list account configs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "account-config-api/DescribeAccountConfigByGCPProjectID": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The GCP project ID
                 * @example my-project
                 */
                gcpProjectID: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "byoaInstanceIDs": [
                     *         "instance-12345678",
                     *         "instance-abcdefgh"
                     *       ],
                     *       "cloudProviderId": "infra-12345678",
                     *       "description": "An AWS account hosting multiple dev environments",
                     *       "gcpProjectID": "my-project",
                     *       "gcpProjectNumber": "123456789012",
                     *       "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                     *       "id": "ac-12345678",
                     *       "name": "Dev AWS account",
                     *       "status": "READY",
                     *       "statusMessage": "Account is ready"
                     *     } */
                    "application/json": components["schemas"]["DescribeAccountConfigByGCPProjectIDResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe an account config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "account-config-api/AccountConfigIdentityID": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "org-12345678"
                     *     } */
                    "application/json": components["schemas"]["AccountConfigIdentityIDResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get an account config identity id */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "account-config-api/VerifyAccountConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Account Config ID to operate on
                 * @example ac-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list account configs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "availability-zone-api/DescribeAvailabilityZone": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @example az-12345678 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "cloudProviderName": "aws",
                     *       "code": "us-east-1a",
                     *       "description": "US East (N. Virginia) Availability Zone A",
                     *       "id": "az-12345678",
                     *       "regionCode": "us-east-1"
                     *     } */
                    "application/json": components["schemas"]["DescribeAvailabilityZoneResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe an availability zone */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "availability-zone-api/ListAvailabilityZone": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The cloud provider for this compute instance type config
                 * @example aws
                 */
                cloudProviderName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "az-12345678",
                     *         "az-87654321"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListAvailabilityZonesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list availability zones */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "availability-zone-api/GetAvailabilityZoneByCode": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Cloud-provider native availability zone code
                 * @example us-east-1a
                 */
                code: string;
                /**
                 * @description The cloud provider for this compute instance type config
                 * @example aws
                 */
                cloudProviderName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example Culpa et aut et perspiciatis veritatis. */
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get an availability zone by code */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "availability-zone-api/ListAvailabilityZonesByRegionCode": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @example us-east-1 */
                regionCode: string;
                /**
                 * @description The cloud provider for this compute instance type config
                 * @example aws
                 */
                cloudProviderName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "az-12345678",
                     *         "az-87654321"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListAvailabilityZonesByRegionCodeResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list availability zones by region code */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "signup-api/ChangePassword": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "email": "abc@gmail.com",
                 *       "password": "password",
                 *       "token": "fc7b8dea-a50b-4c9a-8864-fc3d845a2be6"
                 *     } */
                "application/json": components["schemas"]["ChangePasswordRequest"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to change password */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "cloud-provider-api/ListCloudProvider": {
        parameters: {
            query?: {
                /**
                 * @description Service ID. If specified together with serviceModelId,list the cloud provider of the service model. Otherwise list all cloud provider.
                 * @example s-12345678
                 */
                serviceId?: string;
                /**
                 * @description Service model ID. If specified together with serviceId,list the cloud provider of the service model. Otherwise list all cloud provider.
                 * @example sm-12345678
                 */
                serviceModelId?: string;
                /**
                 * @description Product tier ID. If specified together with serviceId,list the cloud provider of the product tier. Otherwise list all cloud provider.
                 * @example pt-12345678
                 */
                productTierId?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "infra-12345678",
                     *         "infra-87654321"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListCloudProvidersResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list cloud providers */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "cloud-provider-api/DescribeCloudProvider": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description ID of the CloudProvider
                 * @example infra-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "description": "Amazon Web Services",
                     *       "id": "infra-12345678",
                     *       "name": "aws"
                     *     } */
                    "application/json": components["schemas"]["DescribeCloudProviderResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe an cloud provider */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "cloud-provider-api/GetCloudProviderByName": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Name of the CloudProvider
                 * @example aws
                 */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example Voluptatem et molestias id qui. */
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get an cloud provider by name */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "compose-gen-api/CheckIfContainerImageAccessible": {
        parameters: {
            query: {
                /**
                 * @description Registry where the image is stored
                 * @example docker.io
                 */
                imageRegistry: string;
                /**
                 * @description Username to access the image registry
                 * @example username
                 */
                username?: string;
                /**
                 * @description Password to access the image registry
                 * @example password
                 */
                password?: string;
                /**
                 * @description Name of the image along with the tag. Include the repository name if the image is not from the official repository
                 * @example library/mysql:5.7
                 */
                image: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errorMsg": "Deserunt optio optio soluta harum.",
                     *       "imageAccessible": false
                     *     } */
                    "application/json": components["schemas"]["CheckIfContainerImageAccessibleResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to build a service from compose spec */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "compose-gen-api/GenerateComposeSpecFromContainerImage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "environmentVariables": [
                 *         {
                 *           "key": "MYSQL_ROOT_PASSWORD",
                 *           "value": "password"
                 *         }
                 *       ],
                 *       "image": "library/mysql:5.7",
                 *       "imageRegistry": "docker.io",
                 *       "password": "password",
                 *       "username": "username"
                 *     } */
                "application/json": components["schemas"]["GenerateComposeSpecFromContainerImageRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "fileContent": "Sequi recusandae nostrum reprehenderit corporis fuga dolores."
                     *     } */
                    "application/json": components["schemas"]["GenerateComposeSpecFromContainerImageResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to build a service from compose spec */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "contactus-api/Contactus": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "company": "ABC",
                 *       "email": "abc@gmail.com",
                 *       "message": "this is a test",
                 *       "name": "John Doe"
                 *     } */
                "application/json": components["schemas"]["ContactusRequest"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to contactus */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "custom-domain-api/ListCustomDomain": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "CustomDomains": [
                     *         {
                     *           "customDomain": "mydomain.dev",
                     *           "description": "Description of the domain",
                     *           "id": "cd-12345678",
                     *           "name": "Dev domain",
                     *           "route53Configuration": {
                     *             "awsAccountID": "123456789012",
                     *             "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
                     *           },
                     *           "status": "READY",
                     *           "statusMessage": "Account is ready"
                     *         },
                     *         {
                     *           "customDomain": "mydomain.dev",
                     *           "description": "Description of the domain",
                     *           "id": "cd-12345678",
                     *           "name": "Dev domain",
                     *           "route53Configuration": {
                     *             "awsAccountID": "123456789012",
                     *             "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
                     *           },
                     *           "status": "READY",
                     *           "statusMessage": "Account is ready"
                     *         },
                     *         {
                     *           "customDomain": "mydomain.dev",
                     *           "description": "Description of the domain",
                     *           "id": "cd-12345678",
                     *           "name": "Dev domain",
                     *           "route53Configuration": {
                     *             "awsAccountID": "123456789012",
                     *             "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
                     *           },
                     *           "status": "READY",
                     *           "statusMessage": "Account is ready"
                     *         }
                     *       ],
                     *       "ids": [
                     *         "cd-12345678",
                     *         "cd-abcdefgh",
                     *         "cd-1234efgh"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListCustomDomainResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list Custom Domains */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "custom-domain-api/CreateCustomDomain": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "customDomain": "mydomain.dev",
                 *       "description": "Description of the domain",
                 *       "name": "Dev domain",
                 *       "route53Configuration": {
                 *         "awsAccountID": "123456789012"
                 *       }
                 *     } */
                "application/json": components["schemas"]["CreateCustomDomainRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create an Custom Domain */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "custom-domain-api/DescribeCustomDomain": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description custom domain ID to operate on
                 * @example cd-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "customDomain": "mydomain.dev",
                     *       "description": "Description of the domain",
                     *       "id": "cd-12345678",
                     *       "name": "Dev domain",
                     *       "route53Configuration": {
                     *         "awsAccountID": "123456789012",
                     *         "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
                     *       },
                     *       "status": "READY",
                     *       "statusMessage": "Account is ready"
                     *     } */
                    "application/json": components["schemas"]["DescribeCustomDomainResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe an Custom Domain */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "custom-domain-api/DeleteCustomDomain": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description custom domain ID to operate on
                 * @example cd-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete an Custom Domain */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "custom-domain-api/CustomDomainIdentityID": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "org-12345678"
                     *     } */
                    "application/json": components["schemas"]["CustomDomainIdentityIDResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get an Custom Domain identity id */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "custom-domain-api/VerifyCustomDomain": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description custom domain ID to operate on
                 * @example cd-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list Custom Domains */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/CustomerDeleteUser": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/CustomerInviteUser": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "email": "abc@example.com"
                 *     } */
                "application/json": components["schemas"]["CustomerInviteUserRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to invite user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/CustomerLoginWithIdentityProvider": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "authorizationCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
                 *       "companyDescription": "We sell xyz database software",
                 *       "companyUrl": "https://www.mywebsite.com",
                 *       "environmentType": "DEV",
                 *       "identityProviderName": "Google",
                 *       "invitedEmail": "abc@gmail.com",
                 *       "legalCompanyName": "mywebsite",
                 *       "redirectUri": "https://www.example/redirect",
                 *       "state": "state"
                 *     } */
                "application/json": components["schemas"]["CustomerLoginWithIdentityProviderRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "jwtToken": ""
                     *     } */
                    "application/json": components["schemas"]["CustomerLoginWithIdentityProviderResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to signin */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/CustomerResetPassword": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "email": "abc@example.com"
                 *     } */
                "application/json": components["schemas"]["CustomerResetPasswordRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to signin */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/CustomerSignin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "email": "abc@gmail.com",
                 *       "environmentType": "DEV",
                 *       "hashedPassword": "deprecated",
                 *       "password": "password"
                 *     } */
                "application/json": components["schemas"]["CustomerSigninRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "jwtToken": ""
                     *     } */
                    "application/json": components["schemas"]["CustomerSigninResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to signin */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/CustomerSignup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "companyDescription": "We sell xyz database software",
                 *       "companyUrl": "https://www.mywebsite.com",
                 *       "email": "abc@gmail.com",
                 *       "legalCompanyName": "mywebsite",
                 *       "name": "John Doe",
                 *       "password": "password"
                 *     } */
                "application/json": components["schemas"]["CustomerSignupRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "demo-api/Demo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "company": "ABC",
                 *       "email": "abc@gmail.com",
                 *       "name": "John Doe",
                 *       "phone": "+1-234567890"
                 *     } */
                "application/json": components["schemas"]["DemoRequest"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to demo */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "deployment-config-api/ListDeploymentConfigs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "dc-12345678"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListDeploymentConfigsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list deployment configs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "deployment-config-api/CreateDeploymentConfig": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A production deployment config",
                 *       "infraRollConfiguration": {
                 *         "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
                 *         "maximumNumberOfResourceInstancesPerBatch": 1,
                 *         "maximumUnavailableReplicas": 1
                 *       },
                 *       "name": "Production",
                 *       "rolloutPriorityList": [
                 *         "region-12345678",
                 *         "region-abcd1234",
                 *         "region-3c3c3c3c"
                 *       ]
                 *     } */
                "application/json": components["schemas"]["CreateDeploymentConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create the deployment config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "deployment-config-api/DescribeDeploymentConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The deployment configuration ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "description": "A production deployment config",
                     *       "id": "dc-12345678",
                     *       "infraRollConfiguration": {
                     *         "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
                     *         "maximumNumberOfResourceInstancesPerBatch": 1,
                     *         "maximumUnavailableReplicas": 1
                     *       },
                     *       "name": "Production",
                     *       "rolloutPriorityList": [
                     *         "region-12345678",
                     *         "region-abcd1234",
                     *         "region-3c3c3c3c"
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["DescribeDeploymentConfigResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe the deployment config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "deployment-config-api/DeleteDeploymentConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The deployment configuration ID
                 * @example dc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete the deployment config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "deployment-config-api/UpdateDeploymentConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The deployment configuration ID
                 * @example dc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A production deployment config",
                 *       "infraRollConfiguration": {
                 *         "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
                 *         "maximumNumberOfResourceInstancesPerBatch": 1,
                 *         "maximumUnavailableReplicas": 1
                 *       },
                 *       "name": "Production",
                 *       "rolloutPriorityList": [
                 *         "region-12345678",
                 *         "region-abcd1234",
                 *         "region-3c3c3c3c"
                 *       ]
                 *     } */
                "application/json": components["schemas"]["UpdateDeploymentConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update the deployment config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "secrets-api/GetSecret": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The environment type for the secret
                 * @example DEV
                 */
                environmentType: string;
                /**
                 * @description Name of the secret
                 * @example my-secret
                 */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "environmentType": "DEV",
                     *       "name": "my-secret",
                     *       "value": "super-secret-value"
                     *     } */
                    "application/json": components["schemas"]["GetSecretResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested secret is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get secret */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "secrets-api/SetSecret": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The environment type for the secret
                 * @example DEV
                 */
                environmentType: string;
                /**
                 * @description Name of the secret
                 * @example my-secret
                 */
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "value": "super-secret-value"
                 *     } */
                "application/json": components["schemas"]["SetSecretRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to set secret */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "secrets-api/DeleteSecret": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The environment type for the secret
                 * @example DEV
                 */
                environmentType: string;
                /**
                 * @description Name of the secret
                 * @example my-secret
                 */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested secret is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete secret */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "secrets-api/ListSecrets": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The environment type for the secret
                 * @example DEV
                 */
                environmentType: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "secrets": [
                     *         {
                     *           "environmentType": "DEV",
                     *           "name": "my-secret",
                     *           "value": "super-secret-value"
                     *         },
                     *         {
                     *           "environmentType": "DEV",
                     *           "name": "my-secret",
                     *           "value": "super-secret-value"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListSecretsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list secrets */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "global-api/registrationServiceHealth": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "status": "RUNNING"
                     *     } */
                    "application/json": components["schemas"]["OmnistrateServiceHealthResult"];
                };
            };
        };
    };
    "helm-package-api/ListHelmPackages": {
        parameters: {
            query?: {
                /**
                 * @description The chart name to filter by
                 * @example my-chart
                 */
                chartName?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "helmPackages": [
                     *         {
                     *           "chartName": "my-chart",
                     *           "chartRepoName": "my-repo",
                     *           "chartRepoUrl": "https://my-repo.com",
                     *           "chartValues": {
                     *             "key1": "value1",
                     *             "key2": 3,
                     *             "key3": {
                     *               "key4": "value4"
                     *             }
                     *           },
                     *           "chartVersion": "1.0.0",
                     *           "layeredChartValues": [
                     *             {
                     *               "name": "my-layer",
                     *               "scope": {
                     *                 "{{ $sys.cloudProviderName }}": "aws"
                     *               },
                     *               "values": {
                     *                 "global": {
                     *                   "affinity": {
                     *                     "nodeAffinity": {
                     *                       "requiredDuringSchedulingIgnoredDuringExecution": {
                     *                         "nodeSelectorTerms": [
                     *                           {
                     *                             "matchExpressions": [
                     *                               {
                     *                                 "key": "omnistrate.com/managed-by",
                     *                                 "operator": "In",
                     *                                 "values": [
                     *                                   "omnistrate"
                     *                                 ]
                     *                               }
                     *                             ]
                     *                           }
                     *                         ]
                     *                       }
                     *                     }
                     *                   }
                     *                 }
                     *               },
                     *               "valuesFile": {
                     *                 "gitConfiguration": {
                     *                   "accessToken": "my-token",
                     *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                   "referenceName": "tags/v1.0.0",
                     *                   "repositoryUrl": "https://github.com/username/myrepo",
                     *                   "userName": "my-user"
                     *                 },
                     *                 "path": "helm/values/production.yaml"
                     *               }
                     *             },
                     *             {
                     *               "name": "my-layer",
                     *               "scope": {
                     *                 "{{ $sys.cloudProviderName }}": "aws"
                     *               },
                     *               "values": {
                     *                 "global": {
                     *                   "affinity": {
                     *                     "nodeAffinity": {
                     *                       "requiredDuringSchedulingIgnoredDuringExecution": {
                     *                         "nodeSelectorTerms": [
                     *                           {
                     *                             "matchExpressions": [
                     *                               {
                     *                                 "key": "omnistrate.com/managed-by",
                     *                                 "operator": "In",
                     *                                 "values": [
                     *                                   "omnistrate"
                     *                                 ]
                     *                               }
                     *                             ]
                     *                           }
                     *                         ]
                     *                       }
                     *                     }
                     *                   }
                     *                 }
                     *               },
                     *               "valuesFile": {
                     *                 "gitConfiguration": {
                     *                   "accessToken": "my-token",
                     *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                   "referenceName": "tags/v1.0.0",
                     *                   "repositoryUrl": "https://github.com/username/myrepo",
                     *                   "userName": "my-user"
                     *                 },
                     *                 "path": "helm/values/production.yaml"
                     *               }
                     *             },
                     *             {
                     *               "name": "my-layer",
                     *               "scope": {
                     *                 "{{ $sys.cloudProviderName }}": "aws"
                     *               },
                     *               "values": {
                     *                 "global": {
                     *                   "affinity": {
                     *                     "nodeAffinity": {
                     *                       "requiredDuringSchedulingIgnoredDuringExecution": {
                     *                         "nodeSelectorTerms": [
                     *                           {
                     *                             "matchExpressions": [
                     *                               {
                     *                                 "key": "omnistrate.com/managed-by",
                     *                                 "operator": "In",
                     *                                 "values": [
                     *                                   "omnistrate"
                     *                                 ]
                     *                               }
                     *                             ]
                     *                           }
                     *                         ]
                     *                       }
                     *                     }
                     *                   }
                     *                 }
                     *               },
                     *               "valuesFile": {
                     *                 "gitConfiguration": {
                     *                   "accessToken": "my-token",
                     *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                   "referenceName": "tags/v1.0.0",
                     *                   "repositoryUrl": "https://github.com/username/myrepo",
                     *                   "userName": "my-user"
                     *                 },
                     *                 "path": "helm/values/production.yaml"
                     *               }
                     *             },
                     *             {
                     *               "name": "my-layer",
                     *               "scope": {
                     *                 "{{ $sys.cloudProviderName }}": "aws"
                     *               },
                     *               "values": {
                     *                 "global": {
                     *                   "affinity": {
                     *                     "nodeAffinity": {
                     *                       "requiredDuringSchedulingIgnoredDuringExecution": {
                     *                         "nodeSelectorTerms": [
                     *                           {
                     *                             "matchExpressions": [
                     *                               {
                     *                                 "key": "omnistrate.com/managed-by",
                     *                                 "operator": "In",
                     *                                 "values": [
                     *                                   "omnistrate"
                     *                                 ]
                     *                               }
                     *                             ]
                     *                           }
                     *                         ]
                     *                       }
                     *                     }
                     *                   }
                     *                 }
                     *               },
                     *               "valuesFile": {
                     *                 "gitConfiguration": {
                     *                   "accessToken": "my-token",
                     *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                   "referenceName": "tags/v1.0.0",
                     *                   "repositoryUrl": "https://github.com/username/myrepo",
                     *                   "userName": "my-user"
                     *                 },
                     *                 "path": "helm/values/production.yaml"
                     *               }
                     *             }
                     *           ],
                     *           "namespace": "default",
                     *           "password": "my-password",
                     *           "username": "my-user"
                     *         },
                     *         {
                     *           "chartName": "my-chart",
                     *           "chartRepoName": "my-repo",
                     *           "chartRepoUrl": "https://my-repo.com",
                     *           "chartValues": {
                     *             "key1": "value1",
                     *             "key2": 3,
                     *             "key3": {
                     *               "key4": "value4"
                     *             }
                     *           },
                     *           "chartVersion": "1.0.0",
                     *           "layeredChartValues": [
                     *             {
                     *               "name": "my-layer",
                     *               "scope": {
                     *                 "{{ $sys.cloudProviderName }}": "aws"
                     *               },
                     *               "values": {
                     *                 "global": {
                     *                   "affinity": {
                     *                     "nodeAffinity": {
                     *                       "requiredDuringSchedulingIgnoredDuringExecution": {
                     *                         "nodeSelectorTerms": [
                     *                           {
                     *                             "matchExpressions": [
                     *                               {
                     *                                 "key": "omnistrate.com/managed-by",
                     *                                 "operator": "In",
                     *                                 "values": [
                     *                                   "omnistrate"
                     *                                 ]
                     *                               }
                     *                             ]
                     *                           }
                     *                         ]
                     *                       }
                     *                     }
                     *                   }
                     *                 }
                     *               },
                     *               "valuesFile": {
                     *                 "gitConfiguration": {
                     *                   "accessToken": "my-token",
                     *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                   "referenceName": "tags/v1.0.0",
                     *                   "repositoryUrl": "https://github.com/username/myrepo",
                     *                   "userName": "my-user"
                     *                 },
                     *                 "path": "helm/values/production.yaml"
                     *               }
                     *             },
                     *             {
                     *               "name": "my-layer",
                     *               "scope": {
                     *                 "{{ $sys.cloudProviderName }}": "aws"
                     *               },
                     *               "values": {
                     *                 "global": {
                     *                   "affinity": {
                     *                     "nodeAffinity": {
                     *                       "requiredDuringSchedulingIgnoredDuringExecution": {
                     *                         "nodeSelectorTerms": [
                     *                           {
                     *                             "matchExpressions": [
                     *                               {
                     *                                 "key": "omnistrate.com/managed-by",
                     *                                 "operator": "In",
                     *                                 "values": [
                     *                                   "omnistrate"
                     *                                 ]
                     *                               }
                     *                             ]
                     *                           }
                     *                         ]
                     *                       }
                     *                     }
                     *                   }
                     *                 }
                     *               },
                     *               "valuesFile": {
                     *                 "gitConfiguration": {
                     *                   "accessToken": "my-token",
                     *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                   "referenceName": "tags/v1.0.0",
                     *                   "repositoryUrl": "https://github.com/username/myrepo",
                     *                   "userName": "my-user"
                     *                 },
                     *                 "path": "helm/values/production.yaml"
                     *               }
                     *             },
                     *             {
                     *               "name": "my-layer",
                     *               "scope": {
                     *                 "{{ $sys.cloudProviderName }}": "aws"
                     *               },
                     *               "values": {
                     *                 "global": {
                     *                   "affinity": {
                     *                     "nodeAffinity": {
                     *                       "requiredDuringSchedulingIgnoredDuringExecution": {
                     *                         "nodeSelectorTerms": [
                     *                           {
                     *                             "matchExpressions": [
                     *                               {
                     *                                 "key": "omnistrate.com/managed-by",
                     *                                 "operator": "In",
                     *                                 "values": [
                     *                                   "omnistrate"
                     *                                 ]
                     *                               }
                     *                             ]
                     *                           }
                     *                         ]
                     *                       }
                     *                     }
                     *                   }
                     *                 }
                     *               },
                     *               "valuesFile": {
                     *                 "gitConfiguration": {
                     *                   "accessToken": "my-token",
                     *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                   "referenceName": "tags/v1.0.0",
                     *                   "repositoryUrl": "https://github.com/username/myrepo",
                     *                   "userName": "my-user"
                     *                 },
                     *                 "path": "helm/values/production.yaml"
                     *               }
                     *             },
                     *             {
                     *               "name": "my-layer",
                     *               "scope": {
                     *                 "{{ $sys.cloudProviderName }}": "aws"
                     *               },
                     *               "values": {
                     *                 "global": {
                     *                   "affinity": {
                     *                     "nodeAffinity": {
                     *                       "requiredDuringSchedulingIgnoredDuringExecution": {
                     *                         "nodeSelectorTerms": [
                     *                           {
                     *                             "matchExpressions": [
                     *                               {
                     *                                 "key": "omnistrate.com/managed-by",
                     *                                 "operator": "In",
                     *                                 "values": [
                     *                                   "omnistrate"
                     *                                 ]
                     *                               }
                     *                             ]
                     *                           }
                     *                         ]
                     *                       }
                     *                     }
                     *                   }
                     *                 }
                     *               },
                     *               "valuesFile": {
                     *                 "gitConfiguration": {
                     *                   "accessToken": "my-token",
                     *                   "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                   "referenceName": "tags/v1.0.0",
                     *                   "repositoryUrl": "https://github.com/username/myrepo",
                     *                   "userName": "my-user"
                     *                 },
                     *                 "path": "helm/values/production.yaml"
                     *               }
                     *             }
                     *           ],
                     *           "namespace": "default",
                     *           "password": "my-password",
                     *           "username": "my-user"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListHelmPackagesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list helm packages */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "helm-package-api/SaveHelmPackage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "helmPackage": {
                 *         "chartName": "my-chart",
                 *         "chartRepoName": "my-repo",
                 *         "chartRepoUrl": "https://my-repo.com",
                 *         "chartValues": {
                 *           "key1": "value1",
                 *           "key2": 3,
                 *           "key3": {
                 *             "key4": "value4"
                 *           }
                 *         },
                 *         "chartVersion": "1.0.0",
                 *         "layeredChartValues": [
                 *           {
                 *             "name": "my-layer",
                 *             "scope": {
                 *               "{{ $sys.cloudProviderName }}": "aws"
                 *             },
                 *             "values": {
                 *               "global": {
                 *                 "affinity": {
                 *                   "nodeAffinity": {
                 *                     "requiredDuringSchedulingIgnoredDuringExecution": {
                 *                       "nodeSelectorTerms": [
                 *                         {
                 *                           "matchExpressions": [
                 *                             {
                 *                               "key": "omnistrate.com/managed-by",
                 *                               "operator": "In",
                 *                               "values": [
                 *                                 "omnistrate"
                 *                               ]
                 *                             }
                 *                           ]
                 *                         }
                 *                       ]
                 *                     }
                 *                   }
                 *                 }
                 *               }
                 *             },
                 *             "valuesFile": {
                 *               "gitConfiguration": {
                 *                 "accessToken": "my-token",
                 *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                 *                 "referenceName": "tags/v1.0.0",
                 *                 "repositoryUrl": "https://github.com/username/myrepo",
                 *                 "userName": "my-user"
                 *               },
                 *               "path": "helm/values/production.yaml"
                 *             }
                 *           },
                 *           {
                 *             "name": "my-layer",
                 *             "scope": {
                 *               "{{ $sys.cloudProviderName }}": "aws"
                 *             },
                 *             "values": {
                 *               "global": {
                 *                 "affinity": {
                 *                   "nodeAffinity": {
                 *                     "requiredDuringSchedulingIgnoredDuringExecution": {
                 *                       "nodeSelectorTerms": [
                 *                         {
                 *                           "matchExpressions": [
                 *                             {
                 *                               "key": "omnistrate.com/managed-by",
                 *                               "operator": "In",
                 *                               "values": [
                 *                                 "omnistrate"
                 *                               ]
                 *                             }
                 *                           ]
                 *                         }
                 *                       ]
                 *                     }
                 *                   }
                 *                 }
                 *               }
                 *             },
                 *             "valuesFile": {
                 *               "gitConfiguration": {
                 *                 "accessToken": "my-token",
                 *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                 *                 "referenceName": "tags/v1.0.0",
                 *                 "repositoryUrl": "https://github.com/username/myrepo",
                 *                 "userName": "my-user"
                 *               },
                 *               "path": "helm/values/production.yaml"
                 *             }
                 *           }
                 *         ],
                 *         "namespace": "default",
                 *         "password": "my-password",
                 *         "username": "my-user"
                 *       }
                 *     } */
                "application/json": components["schemas"]["SaveHelmPackageRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a helm package */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "helm-package-api/DescribeHelmPackage": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The chart name of the Helm package to describe
                 * @example my-chart
                 */
                chartName: string;
                /**
                 * @description The chart version of the Helm package to describe
                 * @example 1.0.0
                 */
                chartVersion: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "chartName": "my-chart",
                     *       "chartRepoName": "my-repo",
                     *       "chartRepoUrl": "https://my-repo.com",
                     *       "chartValues": {
                     *         "key1": "value1",
                     *         "key2": 3,
                     *         "key3": {
                     *           "key4": "value4"
                     *         }
                     *       },
                     *       "chartVersion": "1.0.0",
                     *       "layeredChartValues": [
                     *         {
                     *           "name": "my-layer",
                     *           "scope": {
                     *             "{{ $sys.cloudProviderName }}": "aws"
                     *           },
                     *           "values": {
                     *             "global": {
                     *               "affinity": {
                     *                 "nodeAffinity": {
                     *                   "requiredDuringSchedulingIgnoredDuringExecution": {
                     *                     "nodeSelectorTerms": [
                     *                       {
                     *                         "matchExpressions": [
                     *                           {
                     *                             "key": "omnistrate.com/managed-by",
                     *                             "operator": "In",
                     *                             "values": [
                     *                               "omnistrate"
                     *                             ]
                     *                           }
                     *                         ]
                     *                       }
                     *                     ]
                     *                   }
                     *                 }
                     *               }
                     *             }
                     *           },
                     *           "valuesFile": {
                     *             "gitConfiguration": {
                     *               "accessToken": "my-token",
                     *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *               "referenceName": "tags/v1.0.0",
                     *               "repositoryUrl": "https://github.com/username/myrepo",
                     *               "userName": "my-user"
                     *             },
                     *             "path": "helm/values/production.yaml"
                     *           }
                     *         },
                     *         {
                     *           "name": "my-layer",
                     *           "scope": {
                     *             "{{ $sys.cloudProviderName }}": "aws"
                     *           },
                     *           "values": {
                     *             "global": {
                     *               "affinity": {
                     *                 "nodeAffinity": {
                     *                   "requiredDuringSchedulingIgnoredDuringExecution": {
                     *                     "nodeSelectorTerms": [
                     *                       {
                     *                         "matchExpressions": [
                     *                           {
                     *                             "key": "omnistrate.com/managed-by",
                     *                             "operator": "In",
                     *                             "values": [
                     *                               "omnistrate"
                     *                             ]
                     *                           }
                     *                         ]
                     *                       }
                     *                     ]
                     *                   }
                     *                 }
                     *               }
                     *             }
                     *           },
                     *           "valuesFile": {
                     *             "gitConfiguration": {
                     *               "accessToken": "my-token",
                     *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *               "referenceName": "tags/v1.0.0",
                     *               "repositoryUrl": "https://github.com/username/myrepo",
                     *               "userName": "my-user"
                     *             },
                     *             "path": "helm/values/production.yaml"
                     *           }
                     *         },
                     *         {
                     *           "name": "my-layer",
                     *           "scope": {
                     *             "{{ $sys.cloudProviderName }}": "aws"
                     *           },
                     *           "values": {
                     *             "global": {
                     *               "affinity": {
                     *                 "nodeAffinity": {
                     *                   "requiredDuringSchedulingIgnoredDuringExecution": {
                     *                     "nodeSelectorTerms": [
                     *                       {
                     *                         "matchExpressions": [
                     *                           {
                     *                             "key": "omnistrate.com/managed-by",
                     *                             "operator": "In",
                     *                             "values": [
                     *                               "omnistrate"
                     *                             ]
                     *                           }
                     *                         ]
                     *                       }
                     *                     ]
                     *                   }
                     *                 }
                     *               }
                     *             }
                     *           },
                     *           "valuesFile": {
                     *             "gitConfiguration": {
                     *               "accessToken": "my-token",
                     *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *               "referenceName": "tags/v1.0.0",
                     *               "repositoryUrl": "https://github.com/username/myrepo",
                     *               "userName": "my-user"
                     *             },
                     *             "path": "helm/values/production.yaml"
                     *           }
                     *         }
                     *       ],
                     *       "namespace": "default",
                     *       "password": "my-password",
                     *       "username": "my-user"
                     *     } */
                    "application/json": components["schemas"]["HelmPackage"];
                };
            };
            /** @description bad_request: Response used on a bad request to describe a helm package */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a helm package */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "helm-package-api/DeleteHelmPackage": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The chart name of the Helm package to delete
                 * @example my-chart
                 */
                chartName: string;
                /**
                 * @description The chart version of the Helm package to delete
                 * @example 1.0.0
                 */
                chartVersion: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request to delete a helm package */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a helm package */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "identity-provider-api/ListIdentityProviders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "identityProviders": [
                     *         {
                     *           "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
                     *           "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                     *           "clientSecret": "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",
                     *           "disabled": false,
                     *           "emailIdentifiers": "company.com",
                     *           "environmentType": "production",
                     *           "id": "idp-12345678",
                     *           "identityProviderName": "Google",
                     *           "loginButtonIconUrl": "https://example.com/icon.png",
                     *           "loginButtonText": "Login with Google",
                     *           "name": "Google for my company",
                     *           "scopes": "openid email profile",
                     *           "status": "Ready",
                     *           "tokenEndpoint": "https://oauth2.googleapis.com/token",
                     *           "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
                     *         },
                     *         {
                     *           "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
                     *           "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                     *           "clientSecret": "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",
                     *           "disabled": false,
                     *           "emailIdentifiers": "company.com",
                     *           "environmentType": "production",
                     *           "id": "idp-12345678",
                     *           "identityProviderName": "Google",
                     *           "loginButtonIconUrl": "https://example.com/icon.png",
                     *           "loginButtonText": "Login with Google",
                     *           "name": "Google for my company",
                     *           "scopes": "openid email profile",
                     *           "status": "Ready",
                     *           "tokenEndpoint": "https://oauth2.googleapis.com/token",
                     *           "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListIdentityProvidersResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list identity providers */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "identity-provider-api/CreateIdentityProvider": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
                 *       "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                 *       "clientSecret": "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",
                 *       "disabled": false,
                 *       "emailIdentifiers": "company.com",
                 *       "environmentType": "Enim dolorem.",
                 *       "identityProviderName": "Google",
                 *       "loginButtonIconUrl": "https://example.com/icon.png",
                 *       "loginButtonText": "Login with Google",
                 *       "name": "Google for my company",
                 *       "scopes": "openid email profile",
                 *       "tokenEndpoint": "https://oauth2.googleapis.com/token",
                 *       "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
                 *     } */
                "application/json": components["schemas"]["CreateIdentityProviderRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create an identity provider */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "identity-provider-api/RenderIdentityProviders": {
        parameters: {
            query?: {
                /**
                 * @description The environment type to render the identity provider for
                 * @example production
                 */
                environmentType?: string;
                /**
                 * @description The URL to redirect to after successful authentication
                 * @example https://example.com/redirect
                 */
                redirectUrl?: string;
                /**
                 * @description Login hint to pre-fill the identity provider login form
                 * @example user@domain.com
                 */
                loginHint?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "identityProviders": [
                     *         {
                     *           "emailIdentifiers": "company.com",
                     *           "id": "idp-12345678",
                     *           "identityProviderName": "Google",
                     *           "loginButtonIconUrl": "https://example.com/icon.png",
                     *           "loginButtonText": "Login with Google",
                     *           "name": "Google for my company",
                     *           "renderedAuthorizationEndpoint": "https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid email profile&state=idpName-guid",
                     *           "state": "state"
                     *         },
                     *         {
                     *           "emailIdentifiers": "company.com",
                     *           "id": "idp-12345678",
                     *           "identityProviderName": "Google",
                     *           "loginButtonIconUrl": "https://example.com/icon.png",
                     *           "loginButtonText": "Login with Google",
                     *           "name": "Google for my company",
                     *           "renderedAuthorizationEndpoint": "https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid email profile&state=idpName-guid",
                     *           "state": "state"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["RenderIdentityProvidersResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to verify identity provider */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "identity-provider-api/ListIdentityProviderTypes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "identityProviderTypes": [
                     *         {
                     *           "SupportCustomEndpoints": true,
                     *           "SupportCustomScopes": false,
                     *           "identityProviderName": "Google"
                     *         },
                     *         {
                     *           "SupportCustomEndpoints": true,
                     *           "SupportCustomScopes": false,
                     *           "identityProviderName": "Google"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListIdentityProviderTypesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list identity providers */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "identity-provider-api/DescribeIdentityProvider": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The Identity Provider ID
                 * @example idp-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
                     *       "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                     *       "clientSecret": "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",
                     *       "disabled": false,
                     *       "emailIdentifiers": "company.com",
                     *       "environmentType": "production",
                     *       "id": "idp-12345678",
                     *       "identityProviderName": "Google",
                     *       "loginButtonIconUrl": "https://example.com/icon.png",
                     *       "loginButtonText": "Login with Google",
                     *       "name": "Google for my company",
                     *       "scopes": "openid email profile",
                     *       "status": "Ready",
                     *       "tokenEndpoint": "https://oauth2.googleapis.com/token",
                     *       "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
                     *     } */
                    "application/json": components["schemas"]["DescribeIdentityProviderResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list identity providers */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "identity-provider-api/VerifyIdentityProvider": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The Identity Provider ID
                 * @example idp-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                     *       "clientSecret": "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",
                     *       "id": "idp-12345678",
                     *       "identityProviderName": "Google",
                     *       "name": "Google for my company",
                     *       "status": "Ready"
                     *     } */
                    "application/json": components["schemas"]["VerifyIdentityProviderResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to verify identity provider */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "identity-provider-api/DeleteIdentityProvider": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The Identity Provider ID
                 * @example idp-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list identity providers */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "identity-provider-api/UpdateIdentityProvider": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The Identity Provider ID
                 * @example idp-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
                 *       "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                 *       "clientSecret": "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",
                 *       "disabled": false,
                 *       "emailIdentifiers": "company.com",
                 *       "environmentType": "production",
                 *       "loginButtonIconUrl": "https://example.com/icon.png",
                 *       "loginButtonText": "Login with Google",
                 *       "name": "Google for my company",
                 *       "scopes": "openid email profile",
                 *       "tokenEndpoint": "https://oauth2.googleapis.com/token",
                 *       "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo"
                 *     } */
                "application/json": components["schemas"]["UpdateIdentityProviderRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list identity providers */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-registry-api/ListImageRegistry": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "ir-12345678",
                     *         "ir-abcdefgh",
                     *         "ir-abcd5678"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListImageRegistryResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list image registries */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-registry-api/CreateImageRegistry": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "DockerHub is a public Docker Image Registry",
                 *       "host": "docker.io",
                 *       "name": "DockerHub",
                 *       "password": "mypassword",
                 *       "username": "myusername"
                 *     } */
                "application/json": components["schemas"]["CreateImageRegistryRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create an image registry */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-registry-api/DescribeImageRegistry": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the Image Registry
                 * @example ir-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "description": "DockerHub is a public Docker Image Registry",
                     *       "host": "docker.io",
                     *       "id": "ir-12345678",
                     *       "name": "DockerHub",
                     *       "password": "mypassword",
                     *       "username": "myusername"
                     *     } */
                    "application/json": components["schemas"]["DescribeImageRegistryResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe an image registry */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-registry-api/DeleteImageRegistry": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the Image Registry
                 * @example ir-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete an image registry */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-registry-api/UpdateImageRegistry": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the Image Registry
                 * @example ir-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "DockerHub is a public Docker Image Registry",
                 *       "host": "docker.io",
                 *       "name": "DockerHub",
                 *       "password": "mypassword",
                 *       "username": "myusername"
                 *     } */
                "application/json": components["schemas"]["UpdateImageRegistryRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update an image registry */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/InviteUser": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "email": "abc@gmail.com",
                 *       "roleType": "reader"
                 *     } */
                "application/json": components["schemas"]["InviteUserRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to invite user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "invoice-api/ListInvoices": {
        parameters: {
            query?: {
                /**
                 * @description Billing provider. If specified, list invoices for the specified billing provider.
                 * @example STRIPE
                 */
                billingProvider?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "invoices": [
                     *         {
                     *           "currency": "USD",
                     *           "dueDate": "2023-10-01T00:00:00Z",
                     *           "invoiceDate": "2021-01-01T00:00:00.000Z",
                     *           "invoiceId": "in_1234568",
                     *           "invoiceNumber": "2021-01-01-1234567890",
                     *           "invoicePdf": "https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap",
                     *           "invoiceStatus": "Open",
                     *           "invoiceUrl": "https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap",
                     *           "paymentTerms": "Net 30",
                     *           "taxAmount": 10,
                     *           "totalAmount": 110,
                     *           "totalAmountWithoutTax": 100
                     *         },
                     *         {
                     *           "currency": "USD",
                     *           "dueDate": "2023-10-01T00:00:00Z",
                     *           "invoiceDate": "2021-01-01T00:00:00.000Z",
                     *           "invoiceId": "in_1234568",
                     *           "invoiceNumber": "2021-01-01-1234567890",
                     *           "invoicePdf": "https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap",
                     *           "invoiceStatus": "Open",
                     *           "invoiceUrl": "https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap",
                     *           "paymentTerms": "Net 30",
                     *           "taxAmount": 10,
                     *           "totalAmount": 110,
                     *           "totalAmountWithoutTax": 100
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListInvoicesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list invoices */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "limit-api/ListLimit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "family": "COMPUTE_INFRA"
                 *     } */
                "application/json": components["schemas"]["ListLimitRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "keys": [
                     *         "MAX_VIRTUAL_CORES_PER_RESOURCE"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListLimitResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list limit */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "limit-api/DescribeLimit": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Limit family
                 * @example COMPUTE_INFRA
                 */
                family: string;
                /**
                 * @description Unique key to identify the limit
                 * @example MAX_VIRTUAL_CORES_PER_RESOURCE
                 */
                key: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "description": "A premium limit",
                     *       "family": "COMPUTE_INFRA",
                     *       "key": "MAX_VIRTUAL_CORES_PER_RESOURCE",
                     *       "modifiable": true,
                     *       "name": "Premium Tier",
                     *       "value": 4
                     *     } */
                    "application/json": components["schemas"]["DescribeLimitResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe limit */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "limit-api/DeleteLimit": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Limit family
                 * @example COMPUTE_INFRA
                 */
                family: string;
                /**
                 * @description Unique key to identify the limit
                 * @example MAX_VIRTUAL_CORES_PER_RESOURCE
                 */
                key: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete limit */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "limit-api/UpdateLimit": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Limit family
                 * @example COMPUTE_INFRA
                 */
                family: string;
                /**
                 * @description Unique key to identify the limit
                 * @example MAX_VIRTUAL_CORES_PER_RESOURCE
                 */
                key: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A premium limit",
                 *       "name": "Premium Tier",
                 *       "value": 4
                 *     } */
                "application/json": components["schemas"]["UpdateLimitRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update limit */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "signin-api/LoginWithIdentityProvider": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "authorizationCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
                 *       "companyDescription": "We sell xyz database software",
                 *       "companyUrl": "https://www.mywebsite.com",
                 *       "deviceCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
                 *       "identityProviderName": "Google",
                 *       "invitedEmail": "abc@gmail.com",
                 *       "legalCompanyName": "mywebsite",
                 *       "redirectUri": "https://www.example/redirect"
                 *     } */
                "application/json": components["schemas"]["LoginWithIdentityProviderRequest"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "jwtToken": ""
                     *     } */
                    "application/json": components["schemas"]["LoginWithIdentityProviderResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to login with identity provider */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/Logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to logout */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/DescribeUsersByOrg": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "Id": "org-aKQ8G13QeR",
                     *       "orgUsers": [
                     *         {
                     *           "email": "abc@gmail.com",
                     *           "invitedAt": "2023-01-10T00:00:00Z",
                     *           "name": "John Doe",
                     *           "roleType": "reader",
                     *           "userId": "user-abcd1234"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["DescribeUsersByOrgResult"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "plan-api/DescribePlan": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "modifiedAt": "2023-01-01T00:00:00Z",
                     *       "paymentConfigured": true,
                     *       "paymentInfoPortalURL": "https://billing.stripe.com/p/session/abc123",
                     *       "planCoreHourCost": 0.05,
                     *       "planDescription": "The starter plan is priced at 'X' units",
                     *       "planFrequency": "MONTHLY",
                     *       "planMonthlyCost": 49,
                     *       "planName": "STARTER",
                     *       "startDate": "2023-01-01"
                     *     } */
                    "application/json": components["schemas"]["DescribePlanResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to add plan */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "plan-api/ChangePlan": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "planName": "STARTER"
                 *     } */
                "application/json": components["schemas"]["ChangePlanRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to add plan */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "region-api/DescribeRegion": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description ID of the Region
                 * @example region-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "cloudProviderId": "infra-12345678",
                     *       "cloudProviderName": "aws",
                     *       "code": "us-east-1",
                     *       "description": "US East (N. Virginia)",
                     *       "id": "region-12345678"
                     *     } */
                    "application/json": components["schemas"]["DescribeRegionResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a region */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "region-api/ListRegion": {
        parameters: {
            query?: {
                /**
                 * @description Service ID. If specified together with serviceModelId,list the regions of the service model. Otherwise list all regions.
                 * @example s-12345678
                 */
                serviceId?: string;
                /**
                 * @description Service model ID. If specified together with serviceId,list the regions of the service model. Otherwise list all regions.
                 * @example sm-12345678
                 */
                serviceModelId?: string;
                /**
                 * @description Product tier ID. If specified together with serviceId,list the regions of the product tier. Otherwise list all regions.
                 * @example pt-12345678
                 */
                productTierId?: string;
                /**
                 * @description Model type. If specified, list regions for the specified model type.
                 * @example CUSTOMER_HOSTED
                 */
                modelType?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The cloud provider for this compute instance type config
                 * @example aws
                 */
                cloudProviderName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "region-12345678",
                     *         "region-87654321"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListRegionsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list regions */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "region-api/GetRegionByCode": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Cloud-provider native region code
                 * @example us-east-1
                 */
                code: string;
                /**
                 * @description The cloud provider for this compute instance type config
                 * @example aws
                 */
                cloudProviderName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example Alias minus voluptatum rem. */
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get a region by code */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "signup-api/ResetPassword": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "email": "abc@gmail.com"
                 *     } */
                "application/json": components["schemas"]["ResetPasswordRequest"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to reset password */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/ListAllResourceInstances": {
        parameters: {
            query?: {
                /**
                 * @description The environment type to filter by
                 * @example DEV
                 */
                environmentType?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "nextPageToken": "next-token",
                     *       "resourceInstances": [
                     *         {
                     *           "active": true,
                     *           "autoscalingEnabled": true,
                     *           "awsAccountID": "123456789012",
                     *           "azureSubscriptionID": "0fa05079-dd73-4b88-babc-05537817604a",
                     *           "backupStatus": {
                     *             "backupPeriodInHours": 2,
                     *             "backupRetentionInDays": 7,
                     *             "earliestRestoreTime": "2021-09-01T00:00:00Z",
                     *             "lastBackupTime": "2021-09-01T00:00:00Z"
                     *           },
                     *           "cloud_provider": "aws",
                     *           "created_at": "2023-01-10T00:00:00Z",
                     *           "createdByUserId": "user-12345678",
                     *           "createdByUserName": "John Doe",
                     *           "currentReplicas": "2",
                     *           "customNetworkDetail": {
                     *             "cidr": "10.177.0.0/16",
                     *             "id": "n-12345678",
                     *             "name": "Prod us-east-1"
                     *           },
                     *           "detailedNetworkTopology": {
                     *             "r-abcd1234": {
                     *               "allowedIPRanges": [
                     *                 "0.0.0.0/0"
                     *               ],
                     *               "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *               "clusterPorts": [
                     *                 3306
                     *               ],
                     *               "isJob": false,
                     *               "jobMetrics": [
                     *                 {
                     *                   "additionalData": {
                     *                     "exitCode": 0,
                     *                     "status": "Succeeded"
                     *                   },
                     *                   "endTime": "2023-01-01T10:05:00Z",
                     *                   "metricType": "cpu_core_seconds",
                     *                   "startTime": "2023-01-01T10:00:00Z",
                     *                   "value": 120.5
                     *                 },
                     *                 {
                     *                   "additionalData": {
                     *                     "peakMemoryUsage": "512MB"
                     *                   },
                     *                   "endTime": "2023-01-01T10:05:00Z",
                     *                   "metricType": "memory_mb_seconds",
                     *                   "startTime": "2023-01-01T10:00:00Z",
                     *                   "value": 2560
                     *                 }
                     *               ],
                     *               "main": true,
                     *               "networkingType": "PUBLIC",
                     *               "nodes": [
                     *                 {
                     *                   "availabilityZone": "us-east-2a",
                     *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *                   "healthStatus": "healthy",
                     *                   "id": "primary-0",
                     *                   "ports": [
                     *                     3306
                     *                   ],
                     *                   "status": "RUNNING"
                     *                 }
                     *               ],
                     *               "privateNetworkCIDR": "10.0.0.2/24",
                     *               "privateNetworkID": "n-1234abcd",
                     *               "publiclyAccessible": true,
                     *               "resourceKey": "primary",
                     *               "resourceName": "Primary MySQL Instance"
                     *             }
                     *           },
                     *           "externalPayerId": "external-payer-id-1234",
                     *           "gcpProjectID": "my-project",
                     *           "highAvailability": true,
                     *           "id": "instance-abcd1234",
                     *           "instanceLoadStatus": "Deleniti dolores quisquam quia.",
                     *           "kubernetesDashboardEndpoint": {
                     *             "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
                     *             "deploymentCellID": "hc-12345678"
                     *           },
                     *           "last_modified_at": "2023-01-20T00:00:00Z",
                     *           "maintenanceTasks": {
                     *             "Dolor omnis qui omnis ut facere libero.": "Odio porro vero blanditiis.",
                     *             "Iusto culpa nostrum.": "Rem et a.",
                     *             "Occaecati ut.": "Quos temporibus sit eos."
                     *           },
                     *           "maxReplicas": "1",
                     *           "minReplicas": "1",
                     *           "network_type": "PUBLIC|INTERNAL",
                     *           "productTierFeatures": {
                     *             "LOGS": {
                     *               "auth": {
                     *                 "password": "px3c4d5f6g7h8i",
                     *                 "username": "abcd1234"
                     *               },
                     *               "enabled": true,
                     *               "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
                     *             },
                     *             "METRICS": {
                     *               "enabled": false
                     *             }
                     *           },
                     *           "region": "us-east-1",
                     *           "resourceID": "r-abcd1234",
                     *           "result_params": {
                     *             "param1": "value1",
                     *             "param2": "value2"
                     *           },
                     *           "serverlessEnabled": true,
                     *           "status": "RUNNING",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "subscriptionLicense": {
                     *             "certificateBase64": "public-cert",
                     *             "expirationDate": "2024-01-01T10:00:00Z",
                     *             "licenseBase64": "license-file"
                     *           },
                     *           "subscriptionStatus": "ACTIVE",
                     *           "tierVersion": "1.0"
                     *         },
                     *         {
                     *           "active": true,
                     *           "autoscalingEnabled": true,
                     *           "awsAccountID": "123456789012",
                     *           "azureSubscriptionID": "0fa05079-dd73-4b88-babc-05537817604a",
                     *           "backupStatus": {
                     *             "backupPeriodInHours": 2,
                     *             "backupRetentionInDays": 7,
                     *             "earliestRestoreTime": "2021-09-01T00:00:00Z",
                     *             "lastBackupTime": "2021-09-01T00:00:00Z"
                     *           },
                     *           "cloud_provider": "aws",
                     *           "created_at": "2023-01-10T00:00:00Z",
                     *           "createdByUserId": "user-12345678",
                     *           "createdByUserName": "John Doe",
                     *           "currentReplicas": "2",
                     *           "customNetworkDetail": {
                     *             "cidr": "10.177.0.0/16",
                     *             "id": "n-12345678",
                     *             "name": "Prod us-east-1"
                     *           },
                     *           "detailedNetworkTopology": {
                     *             "r-abcd1234": {
                     *               "allowedIPRanges": [
                     *                 "0.0.0.0/0"
                     *               ],
                     *               "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *               "clusterPorts": [
                     *                 3306
                     *               ],
                     *               "isJob": false,
                     *               "jobMetrics": [
                     *                 {
                     *                   "additionalData": {
                     *                     "exitCode": 0,
                     *                     "status": "Succeeded"
                     *                   },
                     *                   "endTime": "2023-01-01T10:05:00Z",
                     *                   "metricType": "cpu_core_seconds",
                     *                   "startTime": "2023-01-01T10:00:00Z",
                     *                   "value": 120.5
                     *                 },
                     *                 {
                     *                   "additionalData": {
                     *                     "peakMemoryUsage": "512MB"
                     *                   },
                     *                   "endTime": "2023-01-01T10:05:00Z",
                     *                   "metricType": "memory_mb_seconds",
                     *                   "startTime": "2023-01-01T10:00:00Z",
                     *                   "value": 2560
                     *                 }
                     *               ],
                     *               "main": true,
                     *               "networkingType": "PUBLIC",
                     *               "nodes": [
                     *                 {
                     *                   "availabilityZone": "us-east-2a",
                     *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *                   "healthStatus": "healthy",
                     *                   "id": "primary-0",
                     *                   "ports": [
                     *                     3306
                     *                   ],
                     *                   "status": "RUNNING"
                     *                 }
                     *               ],
                     *               "privateNetworkCIDR": "10.0.0.2/24",
                     *               "privateNetworkID": "n-1234abcd",
                     *               "publiclyAccessible": true,
                     *               "resourceKey": "primary",
                     *               "resourceName": "Primary MySQL Instance"
                     *             }
                     *           },
                     *           "externalPayerId": "external-payer-id-1234",
                     *           "gcpProjectID": "my-project",
                     *           "highAvailability": true,
                     *           "id": "instance-abcd1234",
                     *           "instanceLoadStatus": "Deleniti dolores quisquam quia.",
                     *           "kubernetesDashboardEndpoint": {
                     *             "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
                     *             "deploymentCellID": "hc-12345678"
                     *           },
                     *           "last_modified_at": "2023-01-20T00:00:00Z",
                     *           "maintenanceTasks": {
                     *             "Dolor omnis qui omnis ut facere libero.": "Odio porro vero blanditiis.",
                     *             "Iusto culpa nostrum.": "Rem et a.",
                     *             "Occaecati ut.": "Quos temporibus sit eos."
                     *           },
                     *           "maxReplicas": "1",
                     *           "minReplicas": "1",
                     *           "network_type": "PUBLIC|INTERNAL",
                     *           "productTierFeatures": {
                     *             "LOGS": {
                     *               "auth": {
                     *                 "password": "px3c4d5f6g7h8i",
                     *                 "username": "abcd1234"
                     *               },
                     *               "enabled": true,
                     *               "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
                     *             },
                     *             "METRICS": {
                     *               "enabled": false
                     *             }
                     *           },
                     *           "region": "us-east-1",
                     *           "resourceID": "r-abcd1234",
                     *           "result_params": {
                     *             "param1": "value1",
                     *             "param2": "value2"
                     *           },
                     *           "serverlessEnabled": true,
                     *           "status": "RUNNING",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "subscriptionLicense": {
                     *             "certificateBase64": "public-cert",
                     *             "expirationDate": "2024-01-01T10:00:00Z",
                     *             "licenseBase64": "license-file"
                     *           },
                     *           "subscriptionStatus": "ACTIVE",
                     *           "tierVersion": "1.0"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListAllResourceInstancesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list all resource instances */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/GenerateTokenForDeploymentCellDashboard": {
        parameters: {
            query: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId: string;
            };
            header?: never;
            path: {
                /**
                 * @description The instance ID whose deployment cell dashboard token is to be generated
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "deploymentCellID": "hc-12345678",
                     *       "expirationTimestamp": "2021-01-01T00:00:00Z",
                     *       "token": "token"
                     *     } */
                    "application/json": components["schemas"]["GenerateTokenForDeploymentCellDashboardResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to generate a kubernetes dashboard token. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/UpgradeResourceInstanceVersion": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "productTierKey": "premium",
                 *       "resourceKey": "mysql",
                 *       "serviceAPIVersion": "v1",
                 *       "serviceEnvironmentKey": "dev",
                 *       "serviceKey": "service-orchestration",
                 *       "serviceModelKey": "hosted",
                 *       "serviceProviderId": "omnistrate",
                 *       "targetVersion": "2.0"
                 *     } */
                "application/json": components["schemas"]["UpgradeResourceInstanceVersionRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "audit-events-api/ListAuditEventsForInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The ID of the resource instance
                 * @example instance-12345678
                 */
                instanceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "events": [
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         }
                     *       ],
                     *       "ids": [
                     *         "event-12345678"
                     *       ],
                     *       "nextPageToken": "Aut exercitationem."
                     *     } */
                    "application/json": components["schemas"]["ListAuditEventsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list event */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "audit-events-api/DeprecatedListAuditEventsForInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The ID of the resource instance
                 * @example instance-12345678
                 */
                instanceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "events": [
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         }
                     *       ],
                     *       "ids": [
                     *         "event-12345678"
                     *       ],
                     *       "nextPageToken": "Necessitatibus itaque architecto deleniti sit."
                     *     } */
                    "application/json": components["schemas"]["ListAuditEventsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list event */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/ListResourceInstances": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service key
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "instance-abcd1234",
                     *         "instance-abcd1235"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListResourceInstancesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list resource instances */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/CreateResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "cloud_provider": "aws",
                 *       "custom_network_id": "n-1234567890",
                 *       "externalBillingId": "external-billing-id-1234",
                 *       "network_type": "PUBLIC|INTERNAL",
                 *       "onprem_platform": "OpenShift",
                 *       "productTierVersion": "1.0",
                 *       "region": "us-east-1",
                 *       "requestParams": {
                 *         "param1": "value1",
                 *         "param2": "value2"
                 *       }
                 *     } */
                "application/json": components["schemas"]["CreateResourceInstanceRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Minus modi possimus ipsa odio at."
                     *     } */
                    "application/json": components["schemas"]["CreateServicesOrchestrationResponseBody"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/DescribeResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "active": true,
                     *       "autoscalingEnabled": true,
                     *       "awsAccountID": "123456789012",
                     *       "azureSubscriptionID": "0fa05079-dd73-4b88-babc-05537817604a",
                     *       "backupStatus": {
                     *         "backupPeriodInHours": 2,
                     *         "backupRetentionInDays": 7,
                     *         "earliestRestoreTime": "2021-09-01T00:00:00Z",
                     *         "lastBackupTime": "2021-09-01T00:00:00Z"
                     *       },
                     *       "cloud_provider": "aws",
                     *       "created_at": "2023-01-10T00:00:00Z",
                     *       "createdByUserId": "user-12345678",
                     *       "createdByUserName": "John Doe",
                     *       "currentReplicas": "2",
                     *       "customNetworkDetail": {
                     *         "cidr": "10.177.0.0/16",
                     *         "id": "n-12345678",
                     *         "name": "Prod us-east-1"
                     *       },
                     *       "detailedNetworkTopology": {
                     *         "r-abcd1234": {
                     *           "allowedIPRanges": [
                     *             "0.0.0.0/0"
                     *           ],
                     *           "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *           "clusterPorts": [
                     *             3306
                     *           ],
                     *           "isJob": false,
                     *           "jobMetrics": [
                     *             {
                     *               "additionalData": {
                     *                 "exitCode": 0,
                     *                 "status": "Succeeded"
                     *               },
                     *               "endTime": "2023-01-01T10:05:00Z",
                     *               "metricType": "cpu_core_seconds",
                     *               "startTime": "2023-01-01T10:00:00Z",
                     *               "value": 120.5
                     *             },
                     *             {
                     *               "additionalData": {
                     *                 "peakMemoryUsage": "512MB"
                     *               },
                     *               "endTime": "2023-01-01T10:05:00Z",
                     *               "metricType": "memory_mb_seconds",
                     *               "startTime": "2023-01-01T10:00:00Z",
                     *               "value": 2560
                     *             }
                     *           ],
                     *           "main": true,
                     *           "networkingType": "PUBLIC",
                     *           "nodes": [
                     *             {
                     *               "availabilityZone": "us-east-2a",
                     *               "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *               "healthStatus": "healthy",
                     *               "id": "primary-0",
                     *               "ports": [
                     *                 3306
                     *               ],
                     *               "status": "RUNNING"
                     *             }
                     *           ],
                     *           "privateNetworkCIDR": "10.0.0.2/24",
                     *           "privateNetworkID": "n-1234abcd",
                     *           "publiclyAccessible": true,
                     *           "resourceKey": "primary",
                     *           "resourceName": "Primary MySQL Instance"
                     *         }
                     *       },
                     *       "externalPayerId": "external-payer-id-1234",
                     *       "gcpProjectID": "my-project",
                     *       "highAvailability": true,
                     *       "id": "instance-abcd1234",
                     *       "instanceLoadStatus": "Distinctio sed officia deleniti saepe ut.",
                     *       "kubernetesDashboardEndpoint": {
                     *         "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
                     *         "deploymentCellID": "hc-12345678"
                     *       },
                     *       "last_modified_at": "2023-01-20T00:00:00Z",
                     *       "maintenanceTasks": {
                     *         "Id eaque quia fugiat.": "Amet ut nesciunt cupiditate quo."
                     *       },
                     *       "maxReplicas": "1",
                     *       "minReplicas": "1",
                     *       "network_type": "PUBLIC|INTERNAL",
                     *       "productTierFeatures": {
                     *         "LOGS": {
                     *           "auth": {
                     *             "password": "px3c4d5f6g7h8i",
                     *             "username": "abcd1234"
                     *           },
                     *           "enabled": true,
                     *           "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
                     *         },
                     *         "METRICS": {
                     *           "enabled": false
                     *         }
                     *       },
                     *       "region": "us-east-1",
                     *       "resourceID": "r-abcd1234",
                     *       "result_params": {
                     *         "param1": "value1",
                     *         "param2": "value2"
                     *       },
                     *       "serverlessEnabled": true,
                     *       "status": "RUNNING",
                     *       "subscriptionId": "sub-abcd1234",
                     *       "subscriptionLicense": {
                     *         "certificateBase64": "public-cert",
                     *         "expirationDate": "2024-01-01T10:00:00Z",
                     *         "licenseBase64": "license-file"
                     *       },
                     *       "subscriptionStatus": "ACTIVE",
                     *       "tierVersion": "1.0"
                     *     } */
                    "application/json": components["schemas"]["DescribeResourceInstanceResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/DeleteResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/UpdateResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "network_type": "PUBLIC|INTERNAL",
                 *       "requestParams": {
                 *         "param1": "value1",
                 *         "param2": "value2"
                 *       }
                 *     } */
                "application/json": components["schemas"]["UpdateResourceInstanceRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/AddCapacityToResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "capacityToBeAdded": 3
                 *     } */
                "application/json": components["schemas"]["AddCapacityToResourceInstanceRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to add capacity to a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/AddCustomDNSToResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example http-service
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "customDNS": "my-custom-dns.com",
                 *       "targetPort": 8080
                 *     } */
                "application/json": components["schemas"]["AddCustomDNSToResourceInstanceRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/RemoveCustomDNSFromResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example http-service
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/FailoverResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "failedReplicaAction": "FAILOVER_AND_RESTART",
                 *       "failedReplicaID": "db-0"
                 *     } */
                "application/json": components["schemas"]["FailoverResourceInstanceRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to failover a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/RemoveCapacityFromResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "capacityToBeRemoved": 3
                 *     } */
                "application/json": components["schemas"]["RemoveCapacityFromResourceInstanceRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to remove capacity from a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/RestartResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to restart a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/RestoreResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "network_type": "PUBLIC|INTERNAL",
                 *       "targetRestoreTime": "2021-09-01T00:00:00Z"
                 *     } */
                "application/json": components["schemas"]["RestoreResourceInstanceRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Sit sapiente temporibus quas iure est."
                     *     } */
                    "application/json": components["schemas"]["CreateServicesOrchestrationResponseBody"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/ListResourceInstanceSnapshots": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service key
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "snapshots": [
                     *         {
                     *           "completeTime": "2021-09-01T00:00:00Z",
                     *           "createdTime": "2021-09-01T00:00:00Z",
                     *           "encrypted": true,
                     *           "progress": 100,
                     *           "snapshotId": "instance-ss-12345678",
                     *           "status": "completed"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListResourceInstanceSnapshotsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list snapshots of a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/StartResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to start a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/StopResourceInstance": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to stop a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/RestoreResourceInstanceFromSnapshot": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
                /**
                 * @description The resource key
                 * @example mysql
                 */
                resourceKey: string;
                /**
                 * @description The snapshot ID
                 * @example instance-ss-abcd1234
                 */
                snapshotId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "network_type": "PUBLIC|INTERNAL"
                 *     } */
                "application/json": components["schemas"]["RestoreResourceInstanceFromSnapshotRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Enim praesentium consequatur eos qui."
                     *     } */
                    "application/json": components["schemas"]["CreateServicesOrchestrationResponseBody"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "audit-events-api/ListAuditEventsForServicePlan": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "events": [
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         }
                     *       ],
                     *       "ids": [
                     *         "event-12345678"
                     *       ],
                     *       "nextPageToken": "Consequatur corrupti repellat."
                     *     } */
                    "application/json": components["schemas"]["ListAuditEventsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list event */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "audit-events-api/DeprecatedListAuditEventsForServicePlan": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
                /**
                 * @description The product tier name
                 * @example premium
                 */
                productTierKey: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "events": [
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         }
                     *       ],
                     *       "ids": [
                     *         "event-12345678"
                     *       ],
                     *       "nextPageToken": "Eveniet unde sequi praesentium cupiditate quia."
                     *     } */
                    "application/json": components["schemas"]["ListAuditEventsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list event */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/ResourceInstanceProvisionerSetupKit": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service provider ID
                 * @example omnistrate
                 */
                serviceProviderId: string;
                /**
                 * @description The service name
                 * @example service-orchestration
                 */
                serviceKey: string;
                /**
                 * @description The service API version
                 * @example v1
                 */
                serviceAPIVersion: string;
                /**
                 * @description The service environment name
                 * @example dev
                 */
                serviceEnvironmentKey: string;
                /**
                 * @description The service model name
                 * @example hosted
                 */
                serviceModelKey: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to setup kit for a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-instance-api/UpdateAccountConfigResourceInstance": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The instance ID
                 * @example instance-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "serviceId": "service-1234",
                 *       "setConnection": true,
                 *       "subscriptionId": "sub-abcd1234"
                 *     } */
                "application/json": components["schemas"]["UpdateAccountConfigResourceInstanceRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "audit-events-api/ListAllAuditEvents": {
        parameters: {
            query?: {
                /** @example token */
                nextPageToken?: string;
                /** @example 10 */
                pageSize?: number;
                /**
                 * @description The service ID to list events for
                 * @example s-123456
                 */
                serviceID?: string;
                /** @example PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL */
                environmentType?: string;
                /**
                 * @description The event types to filter by
                 * @example [
                 *       "Omnis praesentium molestiae saepe a.",
                 *       "Libero sit dolores perferendis saepe.",
                 *       "Saepe nulla eaque."
                 *     ]
                 */
                eventSourceTypes?: string[];
                /**
                 * @description The instance ID to list events for
                 * @example instance-12345678
                 */
                instanceID?: string;
                /**
                 * @description Start date of the events
                 * @example 2023-01-01T10:00:00Z
                 */
                startDate?: string;
                /**
                 * @description End date of the events
                 * @example 2024-01-01T10:00:00Z
                 */
                endDate?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "events": [
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         },
                     *         {
                     *           "eventSource": "Customer, Infra or Maintenance",
                     *           "id": "event-12345678",
                     *           "message": "instance-abcd1234 created",
                     *           "orgId": "org-12345678",
                     *           "orgName": "Acme Corporation",
                     *           "resourceInstanceId": "instance-abcd1234",
                     *           "resourceName": "Galera",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "time": "2023-01-10T00:00:00Z",
                     *           "userId": "user-12345678",
                     *           "userName": "John Doe",
                     *           "workflowFailures": [
                     *             {
                     *               "eventTime": "2020-01-01T00:00:00Z",
                     *               "message": "Bootstrap failed for reason X"
                     *             },
                     *             {
                     *               "eventTime": "2020-01-01T00:01:00Z",
                     *               "message": "Compute failed for reason Y"
                     *             }
                     *           ]
                     *         }
                     *       ],
                     *       "ids": [
                     *         "event-12345678"
                     *       ],
                     *       "nextPageToken": "Deserunt dolorem at dolorum."
                     *     } */
                    "application/json": components["schemas"]["ListAuditEventsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list all events */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "audit-events-api/DescribeAuditEvent": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The ID of the event
                 * @example event-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "eventSource": "Customer, Infra or Maintenance",
                     *       "id": "event-12345678",
                     *       "message": "instance-abcd1234 created",
                     *       "orgId": "org-12345678",
                     *       "orgName": "Acme Corporation",
                     *       "resourceInstanceId": "instance-abcd1234",
                     *       "resourceName": "Galera",
                     *       "subscriptionId": "sub-abcd1234",
                     *       "time": "2023-01-10T00:00:00Z",
                     *       "userId": "user-12345678",
                     *       "userName": "John Doe",
                     *       "workflowFailures": [
                     *         {
                     *           "eventTime": "2020-01-01T00:00:00Z",
                     *           "message": "Bootstrap failed for reason X"
                     *         },
                     *         {
                     *           "eventTime": "2020-01-01T00:01:00Z",
                     *           "message": "Compute failed for reason Y"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["DescribeAuditEventResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe event */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "consumption-billing-api/DescribeConsumptionBillingDetails": {
        parameters: {
            query?: {
                /**
                 * @description Return Url used to configure payment methods links
                 * @example https://mysaasportal.com
                 */
                returnUrl?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "billingProviders": [
                     *         {
                     *           "paymentConfigurable": true,
                     *           "paymentConfigured": true,
                     *           "paymentInfoPortalURL": "https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx",
                     *           "type": "STRIPE"
                     *         },
                     *         {
                     *           "balanceDueLink": "https://billing.provider.com/balance-due",
                     *           "logoURL": "https://example.com/logo.png",
                     *           "name": "GovPay",
                     *           "paymentConfigurable": false,
                     *           "paymentConfigured": false,
                     *           "paymentInfoPortalURL": null,
                     *           "type": "BRING_YOUR_OWN"
                     *         }
                     *       ],
                     *       "paymentConfigured": true,
                     *       "paymentInfoPortalURL": "https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx"
                     *     } */
                    "application/json": components["schemas"]["DescribeConsumptionBillingDetailsResult"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "consumption-billing-api/DescribeConsumptionBillingStatus": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "enabled": true
                     *     } */
                    "application/json": components["schemas"]["DescribeConsumptionBillingStatusResult"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "custom-network-api/ListCustomNetworks": {
        parameters: {
            query?: {
                /**
                 * @description The name of the cloud provider that custom network should be created in
                 * @example aws
                 */
                cloudProviderName?: string;
                /**
                 * @description The region of the cloud provider that the network should be created in
                 * @example us-east-1
                 */
                cloudProviderRegion?: string;
                /**
                 * @description Flag indicating whether to return only custom networks, or to include default and imported networks as well
                 * @example false
                 */
                customNetworksOnly?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "customNetworks": [
                     *         {
                     *           "cidr": "10.0.0.0/16",
                     *           "cloudProviderName": "aws",
                     *           "cloudProviderRegion": "us-east-1",
                     *           "id": "n-12345678",
                     *           "name": "Prod us-east-1",
                     *           "networkDefinitionType": "Custom",
                     *           "networkFeaturesConfiguration": {
                     *             "isPrivateLinkEnabled": false
                     *           },
                     *           "networkInstances": [
                     *             {
                     *               "awsAccountID": "123456789012",
                     *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *               "cloudProviderNativeNetworkId": "vpc-12345678",
                     *               "gcpProjectID": "my-project",
                     *               "gcpProjectNumber": "123456789012",
                     *               "hostClusterID": "hc-12345678"
                     *             },
                     *             {
                     *               "awsAccountID": "123456789012",
                     *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *               "cloudProviderNativeNetworkId": "vpc-12345678",
                     *               "gcpProjectID": "my-project",
                     *               "gcpProjectNumber": "123456789012",
                     *               "hostClusterID": "hc-12345678"
                     *             },
                     *             {
                     *               "awsAccountID": "123456789012",
                     *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *               "cloudProviderNativeNetworkId": "vpc-12345678",
                     *               "gcpProjectID": "my-project",
                     *               "gcpProjectNumber": "123456789012",
                     *               "hostClusterID": "hc-12345678"
                     *             }
                     *           ],
                     *           "owningUserId": "user-12345678",
                     *           "owningUserName": "John Doe"
                     *         },
                     *         {
                     *           "cidr": "10.0.0.0/16",
                     *           "cloudProviderName": "aws",
                     *           "cloudProviderRegion": "us-east-1",
                     *           "id": "n-12345678",
                     *           "name": "Prod us-east-1",
                     *           "networkDefinitionType": "Custom",
                     *           "networkFeaturesConfiguration": {
                     *             "isPrivateLinkEnabled": false
                     *           },
                     *           "networkInstances": [
                     *             {
                     *               "awsAccountID": "123456789012",
                     *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *               "cloudProviderNativeNetworkId": "vpc-12345678",
                     *               "gcpProjectID": "my-project",
                     *               "gcpProjectNumber": "123456789012",
                     *               "hostClusterID": "hc-12345678"
                     *             },
                     *             {
                     *               "awsAccountID": "123456789012",
                     *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *               "cloudProviderNativeNetworkId": "vpc-12345678",
                     *               "gcpProjectID": "my-project",
                     *               "gcpProjectNumber": "123456789012",
                     *               "hostClusterID": "hc-12345678"
                     *             },
                     *             {
                     *               "awsAccountID": "123456789012",
                     *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *               "cloudProviderNativeNetworkId": "vpc-12345678",
                     *               "gcpProjectID": "my-project",
                     *               "gcpProjectNumber": "123456789012",
                     *               "hostClusterID": "hc-12345678"
                     *             }
                     *           ],
                     *           "owningUserId": "user-12345678",
                     *           "owningUserName": "John Doe"
                     *         },
                     *         {
                     *           "cidr": "10.0.0.0/16",
                     *           "cloudProviderName": "aws",
                     *           "cloudProviderRegion": "us-east-1",
                     *           "id": "n-12345678",
                     *           "name": "Prod us-east-1",
                     *           "networkDefinitionType": "Custom",
                     *           "networkFeaturesConfiguration": {
                     *             "isPrivateLinkEnabled": false
                     *           },
                     *           "networkInstances": [
                     *             {
                     *               "awsAccountID": "123456789012",
                     *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *               "cloudProviderNativeNetworkId": "vpc-12345678",
                     *               "gcpProjectID": "my-project",
                     *               "gcpProjectNumber": "123456789012",
                     *               "hostClusterID": "hc-12345678"
                     *             },
                     *             {
                     *               "awsAccountID": "123456789012",
                     *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *               "cloudProviderNativeNetworkId": "vpc-12345678",
                     *               "gcpProjectID": "my-project",
                     *               "gcpProjectNumber": "123456789012",
                     *               "hostClusterID": "hc-12345678"
                     *             },
                     *             {
                     *               "awsAccountID": "123456789012",
                     *               "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *               "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *               "cloudProviderNativeNetworkId": "vpc-12345678",
                     *               "gcpProjectID": "my-project",
                     *               "gcpProjectNumber": "123456789012",
                     *               "hostClusterID": "hc-12345678"
                     *             }
                     *           ],
                     *           "owningUserId": "user-12345678",
                     *           "owningUserName": "John Doe"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListCustomNetworksResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list custom networks */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "custom-network-api/CreateCustomNetwork": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "cidr": "10.0.0.0/16",
                 *       "cloudProviderName": "aws",
                 *       "cloudProviderRegion": "us-east-1",
                 *       "name": "Prod us-east-1",
                 *       "networkFeaturesConfiguration": {
                 *         "isPrivateLinkEnabled": false
                 *       }
                 *     } */
                "application/json": components["schemas"]["CreateCustomNetworkRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "cidr": "10.0.0.0/16",
                     *       "cloudProviderName": "aws",
                     *       "cloudProviderRegion": "us-east-1",
                     *       "id": "n-12345678",
                     *       "name": "Prod us-east-1",
                     *       "networkDefinitionType": "Custom",
                     *       "networkFeaturesConfiguration": {
                     *         "isPrivateLinkEnabled": false
                     *       },
                     *       "networkInstances": [
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "cloudProviderNativeNetworkId": "vpc-12345678",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "hostClusterID": "hc-12345678"
                     *         },
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "cloudProviderNativeNetworkId": "vpc-12345678",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "hostClusterID": "hc-12345678"
                     *         },
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "cloudProviderNativeNetworkId": "vpc-12345678",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "hostClusterID": "hc-12345678"
                     *         }
                     *       ],
                     *       "owningUserId": "user-12345678",
                     *       "owningUserName": "John Doe"
                     *     } */
                    "application/json": components["schemas"]["CustomNetwork"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a custom network */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "custom-network-api/DescribeCustomNetwork": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description ID of a custom network
                 * @example n-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "cidr": "10.0.0.0/16",
                     *       "cloudProviderName": "aws",
                     *       "cloudProviderRegion": "us-east-1",
                     *       "id": "n-12345678",
                     *       "name": "Prod us-east-1",
                     *       "networkDefinitionType": "Custom",
                     *       "networkFeaturesConfiguration": {
                     *         "isPrivateLinkEnabled": false
                     *       },
                     *       "networkInstances": [
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "cloudProviderNativeNetworkId": "vpc-12345678",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "hostClusterID": "hc-12345678"
                     *         },
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "cloudProviderNativeNetworkId": "vpc-12345678",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "hostClusterID": "hc-12345678"
                     *         },
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "cloudProviderNativeNetworkId": "vpc-12345678",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "hostClusterID": "hc-12345678"
                     *         }
                     *       ],
                     *       "owningUserId": "user-12345678",
                     *       "owningUserName": "John Doe"
                     *     } */
                    "application/json": components["schemas"]["CustomNetwork"];
                };
            };
            /** @description bad_request: Response used on a bad request to describe a custom network */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested custom network is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a custom network */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "custom-network-api/DeleteCustomNetwork": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description ID of a custom network
                 * @example n-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request to delete a custom network */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested custom network is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a custom network */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "custom-network-api/UpdateCustomNetwork": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description ID of a custom network
                 * @example n-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "name": "Dev us-east-1"
                 *     } */
                "application/json": components["schemas"]["UpdateCustomNetworkRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "cidr": "10.0.0.0/16",
                     *       "cloudProviderName": "aws",
                     *       "cloudProviderRegion": "us-east-1",
                     *       "id": "n-12345678",
                     *       "name": "Prod us-east-1",
                     *       "networkDefinitionType": "Custom",
                     *       "networkFeaturesConfiguration": {
                     *         "isPrivateLinkEnabled": false
                     *       },
                     *       "networkInstances": [
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "cloudProviderNativeNetworkId": "vpc-12345678",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "hostClusterID": "hc-12345678"
                     *         },
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "cloudProviderNativeNetworkId": "vpc-12345678",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "hostClusterID": "hc-12345678"
                     *         },
                     *         {
                     *           "awsAccountID": "123456789012",
                     *           "azureSubscriptionID": "12345678-1234-1234-1234-123456789012",
                     *           "azureTenantID": "12345678-1234-1234-1234-123456789012",
                     *           "cloudProviderNativeNetworkId": "vpc-12345678",
                     *           "gcpProjectID": "my-project",
                     *           "gcpProjectNumber": "123456789012",
                     *           "hostClusterID": "hc-12345678"
                     *         }
                     *       ],
                     *       "owningUserId": "user-12345678",
                     *       "owningUserName": "John Doe"
                     *     } */
                    "application/json": components["schemas"]["CustomNetwork"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested custom network is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a custom network */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "audit-events-api/DeprecatedDescribeAuditEvent": {
        parameters: {
            query?: {
                /**
                 * @description Subscription Id
                 * @example sub-abcd1234
                 */
                subscriptionId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The ID of the event
                 * @example event-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "eventSource": "Customer, Infra or Maintenance",
                     *       "id": "event-12345678",
                     *       "message": "instance-abcd1234 created",
                     *       "orgId": "org-12345678",
                     *       "orgName": "Acme Corporation",
                     *       "resourceInstanceId": "instance-abcd1234",
                     *       "resourceName": "Galera",
                     *       "subscriptionId": "sub-abcd1234",
                     *       "time": "2023-01-10T00:00:00Z",
                     *       "userId": "user-12345678",
                     *       "userName": "John Doe",
                     *       "workflowFailures": [
                     *         {
                     *           "eventTime": "2020-01-01T00:00:00Z",
                     *           "message": "Bootstrap failed for reason X"
                     *         },
                     *         {
                     *           "eventTime": "2020-01-01T00:01:00Z",
                     *           "message": "Compute failed for reason Y"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["DescribeAuditEventResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe event */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "global-api/consumptionServiceHealth": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "status": "RUNNING"
                     *     } */
                    "application/json": components["schemas"]["OmnistrateServiceHealthResult"];
                };
            };
        };
    };
    "consumption-invoice-api/ListConsumptionInvoices": {
        parameters: {
            query?: {
                /**
                 * @description Billing provider. If specified, list invoices for the specified billing provider.
                 * @example STRIPE
                 */
                billingProvider?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "invoices": [
                     *         {
                     *           "currency": "USD",
                     *           "dueDate": "2023-10-01T00:00:00Z",
                     *           "invoiceDate": "2021-01-01T00:00:00.000Z",
                     *           "invoiceId": "in_1234568",
                     *           "invoiceNumber": "2021-01-01-1234567890",
                     *           "invoicePdf": "https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap",
                     *           "invoiceStatus": "Open",
                     *           "invoiceUrl": "https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap",
                     *           "paymentTerms": "Net 30",
                     *           "taxAmount": 10,
                     *           "totalAmount": 110,
                     *           "totalAmountWithoutTax": 100
                     *         },
                     *         {
                     *           "currency": "USD",
                     *           "dueDate": "2023-10-01T00:00:00Z",
                     *           "invoiceDate": "2021-01-01T00:00:00.000Z",
                     *           "invoiceId": "in_1234568",
                     *           "invoiceNumber": "2021-01-01-1234567890",
                     *           "invoicePdf": "https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap",
                     *           "invoiceStatus": "Open",
                     *           "invoiceUrl": "https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap",
                     *           "paymentTerms": "Net 30",
                     *           "taxAmount": 10,
                     *           "totalAmount": 110,
                     *           "totalAmountWithoutTax": 100
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListInvoicesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list invoices */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "services-orchestration-api/ListServicesOrchestrations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example [
                     *       {
                     *         "ServicesTopology": [
                     *           {
                     *             "dependsOnDeployment": [
                     *               "instanceDeploymentAlias1",
                     *               "instanceDeploymentAlias2"
                     *             ],
                     *             "failedReason": "Invalid inputs",
                     *             "instanceDeploymentAlias": "instanceDeploymentAlias",
                     *             "instanceId": "i-12345678",
                     *             "serviceId": "s-12345678",
                     *             "status": "PENDING",
                     *             "statusMessage": "Creating deployment",
                     *             "subscriptionId": "Alias quasi velit maiores iusto."
                     *           },
                     *           {
                     *             "dependsOnDeployment": [
                     *               "instanceDeploymentAlias1",
                     *               "instanceDeploymentAlias2"
                     *             ],
                     *             "failedReason": "Invalid inputs",
                     *             "instanceDeploymentAlias": "instanceDeploymentAlias",
                     *             "instanceId": "i-12345678",
                     *             "serviceId": "s-12345678",
                     *             "status": "PENDING",
                     *             "statusMessage": "Creating deployment",
                     *             "subscriptionId": "Alias quasi velit maiores iusto."
                     *           }
                     *         ],
                     *         "createdAt": "2021-01-01T00:00:00Z",
                     *         "id": "so-12345678",
                     *         "orchestrationFailedReason": "Invalid DSL",
                     *         "resultParams": {
                     *           "param1": "value1",
                     *           "param2": "value2"
                     *         },
                     *         "status": "PENDING",
                     *         "updatedAt": "2021-01-01T00:00:00Z"
                     *       },
                     *       {
                     *         "ServicesTopology": [
                     *           {
                     *             "dependsOnDeployment": [
                     *               "instanceDeploymentAlias1",
                     *               "instanceDeploymentAlias2"
                     *             ],
                     *             "failedReason": "Invalid inputs",
                     *             "instanceDeploymentAlias": "instanceDeploymentAlias",
                     *             "instanceId": "i-12345678",
                     *             "serviceId": "s-12345678",
                     *             "status": "PENDING",
                     *             "statusMessage": "Creating deployment",
                     *             "subscriptionId": "Alias quasi velit maiores iusto."
                     *           },
                     *           {
                     *             "dependsOnDeployment": [
                     *               "instanceDeploymentAlias1",
                     *               "instanceDeploymentAlias2"
                     *             ],
                     *             "failedReason": "Invalid inputs",
                     *             "instanceDeploymentAlias": "instanceDeploymentAlias",
                     *             "instanceId": "i-12345678",
                     *             "serviceId": "s-12345678",
                     *             "status": "PENDING",
                     *             "statusMessage": "Creating deployment",
                     *             "subscriptionId": "Alias quasi velit maiores iusto."
                     *           }
                     *         ],
                     *         "createdAt": "2021-01-01T00:00:00Z",
                     *         "id": "so-12345678",
                     *         "orchestrationFailedReason": "Invalid DSL",
                     *         "resultParams": {
                     *           "param1": "value1",
                     *           "param2": "value2"
                     *         },
                     *         "status": "PENDING",
                     *         "updatedAt": "2021-01-01T00:00:00Z"
                     *       },
                     *       {
                     *         "ServicesTopology": [
                     *           {
                     *             "dependsOnDeployment": [
                     *               "instanceDeploymentAlias1",
                     *               "instanceDeploymentAlias2"
                     *             ],
                     *             "failedReason": "Invalid inputs",
                     *             "instanceDeploymentAlias": "instanceDeploymentAlias",
                     *             "instanceId": "i-12345678",
                     *             "serviceId": "s-12345678",
                     *             "status": "PENDING",
                     *             "statusMessage": "Creating deployment",
                     *             "subscriptionId": "Alias quasi velit maiores iusto."
                     *           },
                     *           {
                     *             "dependsOnDeployment": [
                     *               "instanceDeploymentAlias1",
                     *               "instanceDeploymentAlias2"
                     *             ],
                     *             "failedReason": "Invalid inputs",
                     *             "instanceDeploymentAlias": "instanceDeploymentAlias",
                     *             "instanceId": "i-12345678",
                     *             "serviceId": "s-12345678",
                     *             "status": "PENDING",
                     *             "statusMessage": "Creating deployment",
                     *             "subscriptionId": "Alias quasi velit maiores iusto."
                     *           }
                     *         ],
                     *         "createdAt": "2021-01-01T00:00:00Z",
                     *         "id": "so-12345678",
                     *         "orchestrationFailedReason": "Invalid DSL",
                     *         "resultParams": {
                     *           "param1": "value1",
                     *           "param2": "value2"
                     *         },
                     *         "status": "PENDING",
                     *         "updatedAt": "2021-01-01T00:00:00Z"
                     *       },
                     *       {
                     *         "ServicesTopology": [
                     *           {
                     *             "dependsOnDeployment": [
                     *               "instanceDeploymentAlias1",
                     *               "instanceDeploymentAlias2"
                     *             ],
                     *             "failedReason": "Invalid inputs",
                     *             "instanceDeploymentAlias": "instanceDeploymentAlias",
                     *             "instanceId": "i-12345678",
                     *             "serviceId": "s-12345678",
                     *             "status": "PENDING",
                     *             "statusMessage": "Creating deployment",
                     *             "subscriptionId": "Alias quasi velit maiores iusto."
                     *           },
                     *           {
                     *             "dependsOnDeployment": [
                     *               "instanceDeploymentAlias1",
                     *               "instanceDeploymentAlias2"
                     *             ],
                     *             "failedReason": "Invalid inputs",
                     *             "instanceDeploymentAlias": "instanceDeploymentAlias",
                     *             "instanceId": "i-12345678",
                     *             "serviceId": "s-12345678",
                     *             "status": "PENDING",
                     *             "statusMessage": "Creating deployment",
                     *             "subscriptionId": "Alias quasi velit maiores iusto."
                     *           }
                     *         ],
                     *         "createdAt": "2021-01-01T00:00:00Z",
                     *         "id": "so-12345678",
                     *         "orchestrationFailedReason": "Invalid DSL",
                     *         "resultParams": {
                     *           "param1": "value1",
                     *           "param2": "value2"
                     *         },
                     *         "status": "PENDING",
                     *         "updatedAt": "2021-01-01T00:00:00Z"
                     *       }
                     *     ] */
                    "application/json": components["schemas"]["DescribeServicesOrchestrationResult"][];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list resource instances */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "services-orchestration-api/CreateServicesOrchestration": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "orchestrationCreateDSL": "Voluptatum esse."
                 *     } */
                "application/json": components["schemas"]["CreateServicesOrchestrationRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "Repudiandae aperiam ipsa alias quibusdam perspiciatis doloribus."
                     *     } */
                    "application/json": components["schemas"]["CreateServicesOrchestrationResponseBody"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "services-orchestration-api/DescribeServicesOrchestration": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the services orchestration
                 * @example so-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ServicesTopology": [
                     *         {
                     *           "dependsOnDeployment": [
                     *             "instanceDeploymentAlias1",
                     *             "instanceDeploymentAlias2"
                     *           ],
                     *           "failedReason": "Invalid inputs",
                     *           "instanceDeploymentAlias": "instanceDeploymentAlias",
                     *           "instanceId": "i-12345678",
                     *           "serviceId": "s-12345678",
                     *           "status": "PENDING",
                     *           "statusMessage": "Creating deployment",
                     *           "subscriptionId": "Magni iste."
                     *         },
                     *         {
                     *           "dependsOnDeployment": [
                     *             "instanceDeploymentAlias1",
                     *             "instanceDeploymentAlias2"
                     *           ],
                     *           "failedReason": "Invalid inputs",
                     *           "instanceDeploymentAlias": "instanceDeploymentAlias",
                     *           "instanceId": "i-12345678",
                     *           "serviceId": "s-12345678",
                     *           "status": "PENDING",
                     *           "statusMessage": "Creating deployment",
                     *           "subscriptionId": "Magni iste."
                     *         },
                     *         {
                     *           "dependsOnDeployment": [
                     *             "instanceDeploymentAlias1",
                     *             "instanceDeploymentAlias2"
                     *           ],
                     *           "failedReason": "Invalid inputs",
                     *           "instanceDeploymentAlias": "instanceDeploymentAlias",
                     *           "instanceId": "i-12345678",
                     *           "serviceId": "s-12345678",
                     *           "status": "PENDING",
                     *           "statusMessage": "Creating deployment",
                     *           "subscriptionId": "Magni iste."
                     *         }
                     *       ],
                     *       "createdAt": "2021-01-01T00:00:00Z",
                     *       "id": "so-12345678",
                     *       "orchestrationFailedReason": "Invalid DSL",
                     *       "resultParams": {
                     *         "param1": "value1",
                     *         "param2": "value2"
                     *       },
                     *       "status": "PENDING",
                     *       "updatedAt": "2021-01-01T00:00:00Z"
                     *     } */
                    "application/json": components["schemas"]["DescribeServicesOrchestrationResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "services-orchestration-api/DeleteServicesOrchestration": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the services orchestration
                 * @example so-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "services-orchestration-api/ModifyServicesOrchestration": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the services orchestration
                 * @example so-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "orchestrationModifyDSL": "Earum harum reiciendis mollitia explicabo non."
                 *     } */
                "application/json": components["schemas"]["ModifyServicesOrchestrationRequest2"];
            };
        };
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "consumption-user-api/ListAllSubscriptionUsers": {
        parameters: {
            query?: {
                /**
                 * @description The environment type to filter by
                 * @example DEV
                 */
                environmentType?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "subscriptionUsers": [
                     *         {
                     *           "email": "abc@gmail.com",
                     *           "name": "John Doe",
                     *           "roleType": "reader",
                     *           "userId": "user-abcd1234"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListAllSubscriptionUsersResult"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list all subscription users */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "consumption-user-api/InviteUser": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The subscription ID
                 * @example sub-abcd1234
                 */
                subscriptionId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "email": "abc@gmail.com",
                 *       "roleType": "reader"
                 *     } */
                "application/json": components["schemas"]["InviteConsumptionUserRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to invite user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "consumption-user-api/RevokeUserRole": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The subscription ID
                 * @example sub-abcd1234
                 */
                subscriptionId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "email": "abc@gmail.com",
                 *       "roleType": "reader"
                 *     } */
                "application/json": components["schemas"]["RevokeConsumptionUserRoleRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "consumption-user-api/DescribeUsersBySubscription": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The subscription ID
                 * @example sub-abcd1234
                 */
                subscriptionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "Id": "sub-abcd1234",
                     *       "subscriptionUsers": [
                     *         {
                     *           "email": "abc@gmail.com",
                     *           "name": "John Doe",
                     *           "roleType": "reader",
                     *           "subscriptionId": "sub-abcd1234",
                     *           "userId": "user-abcd1234"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["DescribeUsersBySubscriptionResult"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "consumption-usage-api/GetCurrentConsumptionUsage": {
        parameters: {
            query?: {
                /**
                 * @description The subscription ID to get usage for
                 * @example sub-12345678
                 */
                subscriptionID?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "endTime": "2021-01-01T00:00:00.000Z",
                     *       "startTime": "2021-01-01T00:00:00.000Z",
                     *       "usage": [
                     *         {
                     *           "dimension": "core/hours",
                     *           "endTime": "2021-01-01T00:00:00.000Z",
                     *           "startTime": "2021-01-01T00:00:00.000Z",
                     *           "total": 0.67
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["GetConsumptionUsageResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a resource instance */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "consumption-usage-api/GetConsumptionUsagePerDay": {
        parameters: {
            query?: {
                /**
                 * @description Start date of the usage report
                 * @example 2023-01-01T10:00:00Z
                 */
                startDate?: string;
                /**
                 * @description End date of the usage report
                 * @example 2024-01-01T10:00:00Z
                 */
                endDate?: string;
                /**
                 * @description The subscription ID to get usage for
                 * @example sub-12345678
                 */
                subscriptionID?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "endTime": "2021-01-01T00:00:00.000Z",
                     *       "startTime": "2021-01-01T00:00:00.000Z",
                     *       "usage": [
                     *         {
                     *           "dimension": "core/hours",
                     *           "endTime": "2021-01-01T00:00:00.000Z",
                     *           "startTime": "2021-01-01T00:00:00.000Z",
                     *           "total": 0.67
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["GetConsumptionUsageResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get usage */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "consumption-user-api/DescribeUserBillingDetails": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @example user-abcd1234 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "billingEmbedURL": "DEPRECATED",
                     *       "name": "John Dae",
                     *       "paymentConfigured": true,
                     *       "paymentInfoPortalURL": "https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx",
                     *       "userId": "user-abcd1234"
                     *     } */
                    "application/json": components["schemas"]["DescribeConsumptionUserBillingDetailsResult"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "consumption-user-api/Signin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "token": "r4"
                     *     } */
                    "application/json": components["schemas"]["ConsumptionServiceAuthResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to signin */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "global-api/consumptionServiceVersion": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "apiVersion": "a",
                     *       "buildCommitSHA": "1234567890abcdef1234567890abcdef12345678",
                     *       "buildTimestamp": "2020-01-01T00:00:00Z"
                     *     } */
                    "application/json": components["schemas"]["OmnistrateServiceVersionResult"];
                };
            };
        };
    };
    "users-api/RevokeUserRole": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "email": "abc@gmail.com",
                 *       "roleType": "reader"
                 *     } */
                "application/json": components["schemas"]["RevokeUserRoleRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "saas-portal-api/ListSaaSPortals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "saasPortals": [
                     *         {
                     *           "customDomain": "mycustomdomain.com",
                     *           "customDomainStatus": "READY",
                     *           "detailedNetworkTopology": {
                     *             "r-abcd1234": {
                     *               "allowedIPRanges": [
                     *                 "0.0.0.0/0"
                     *               ],
                     *               "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *               "clusterPorts": [
                     *                 3306
                     *               ],
                     *               "main": true,
                     *               "networkingType": "PUBLIC",
                     *               "nodes": [
                     *                 {
                     *                   "availabilityZone": "us-east-2a",
                     *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *                   "healthStatus": "healthy",
                     *                   "id": "primary-0",
                     *                   "ports": [
                     *                     3306
                     *                   ],
                     *                   "status": "RUNNING"
                     *                 }
                     *               ],
                     *               "privateNetworkCIDR": "10.0.0.2/24",
                     *               "privateNetworkID": "n-1234abcd",
                     *               "publiclyAccessible": true,
                     *               "resourceKey": "saasportal",
                     *               "resourceName": "SaaS Portal"
                     *             }
                     *           },
                     *           "disablePasswordLogin": false,
                     *           "emailConfig": {
                     *             "smtpFromEmail": "example@gmail.com",
                     *             "smtpHost": "smtp.gmail.com",
                     *             "smtpPassword": "password",
                     *             "smtpPort": 587,
                     *             "smtpUsername": "username"
                     *           },
                     *           "endpoint": "https://saas-portal.example.com",
                     *           "environmentType": "DEV",
                     *           "googleAnalyticsTagID": "G-123456789",
                     *           "imageConfig": {
                     *             "imageName": "myimage",
                     *             "imageRegistry": "ghcr.io",
                     *             "imageTag": "latest"
                     *           },
                     *           "status": "READY"
                     *         },
                     *         {
                     *           "customDomain": "mycustomdomain.com",
                     *           "customDomainStatus": "READY",
                     *           "detailedNetworkTopology": {
                     *             "r-abcd1234": {
                     *               "allowedIPRanges": [
                     *                 "0.0.0.0/0"
                     *               ],
                     *               "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *               "clusterPorts": [
                     *                 3306
                     *               ],
                     *               "main": true,
                     *               "networkingType": "PUBLIC",
                     *               "nodes": [
                     *                 {
                     *                   "availabilityZone": "us-east-2a",
                     *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *                   "healthStatus": "healthy",
                     *                   "id": "primary-0",
                     *                   "ports": [
                     *                     3306
                     *                   ],
                     *                   "status": "RUNNING"
                     *                 }
                     *               ],
                     *               "privateNetworkCIDR": "10.0.0.2/24",
                     *               "privateNetworkID": "n-1234abcd",
                     *               "publiclyAccessible": true,
                     *               "resourceKey": "saasportal",
                     *               "resourceName": "SaaS Portal"
                     *             }
                     *           },
                     *           "disablePasswordLogin": false,
                     *           "emailConfig": {
                     *             "smtpFromEmail": "example@gmail.com",
                     *             "smtpHost": "smtp.gmail.com",
                     *             "smtpPassword": "password",
                     *             "smtpPort": 587,
                     *             "smtpUsername": "username"
                     *           },
                     *           "endpoint": "https://saas-portal.example.com",
                     *           "environmentType": "DEV",
                     *           "googleAnalyticsTagID": "G-123456789",
                     *           "imageConfig": {
                     *             "imageName": "myimage",
                     *             "imageRegistry": "ghcr.io",
                     *             "imageTag": "latest"
                     *           },
                     *           "status": "READY"
                     *         },
                     *         {
                     *           "customDomain": "mycustomdomain.com",
                     *           "customDomainStatus": "READY",
                     *           "detailedNetworkTopology": {
                     *             "r-abcd1234": {
                     *               "allowedIPRanges": [
                     *                 "0.0.0.0/0"
                     *               ],
                     *               "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *               "clusterPorts": [
                     *                 3306
                     *               ],
                     *               "main": true,
                     *               "networkingType": "PUBLIC",
                     *               "nodes": [
                     *                 {
                     *                   "availabilityZone": "us-east-2a",
                     *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *                   "healthStatus": "healthy",
                     *                   "id": "primary-0",
                     *                   "ports": [
                     *                     3306
                     *                   ],
                     *                   "status": "RUNNING"
                     *                 }
                     *               ],
                     *               "privateNetworkCIDR": "10.0.0.2/24",
                     *               "privateNetworkID": "n-1234abcd",
                     *               "publiclyAccessible": true,
                     *               "resourceKey": "saasportal",
                     *               "resourceName": "SaaS Portal"
                     *             }
                     *           },
                     *           "disablePasswordLogin": false,
                     *           "emailConfig": {
                     *             "smtpFromEmail": "example@gmail.com",
                     *             "smtpHost": "smtp.gmail.com",
                     *             "smtpPassword": "password",
                     *             "smtpPort": 587,
                     *             "smtpUsername": "username"
                     *           },
                     *           "endpoint": "https://saas-portal.example.com",
                     *           "environmentType": "DEV",
                     *           "googleAnalyticsTagID": "G-123456789",
                     *           "imageConfig": {
                     *             "imageName": "myimage",
                     *             "imageRegistry": "ghcr.io",
                     *             "imageTag": "latest"
                     *           },
                     *           "status": "READY"
                     *         },
                     *         {
                     *           "customDomain": "mycustomdomain.com",
                     *           "customDomainStatus": "READY",
                     *           "detailedNetworkTopology": {
                     *             "r-abcd1234": {
                     *               "allowedIPRanges": [
                     *                 "0.0.0.0/0"
                     *               ],
                     *               "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *               "clusterPorts": [
                     *                 3306
                     *               ],
                     *               "main": true,
                     *               "networkingType": "PUBLIC",
                     *               "nodes": [
                     *                 {
                     *                   "availabilityZone": "us-east-2a",
                     *                   "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                     *                   "healthStatus": "healthy",
                     *                   "id": "primary-0",
                     *                   "ports": [
                     *                     3306
                     *                   ],
                     *                   "status": "RUNNING"
                     *                 }
                     *               ],
                     *               "privateNetworkCIDR": "10.0.0.2/24",
                     *               "privateNetworkID": "n-1234abcd",
                     *               "publiclyAccessible": true,
                     *               "resourceKey": "saasportal",
                     *               "resourceName": "SaaS Portal"
                     *             }
                     *           },
                     *           "disablePasswordLogin": false,
                     *           "emailConfig": {
                     *             "smtpFromEmail": "example@gmail.com",
                     *             "smtpHost": "smtp.gmail.com",
                     *             "smtpPassword": "password",
                     *             "smtpPort": 587,
                     *             "smtpUsername": "username"
                     *           },
                     *           "endpoint": "https://saas-portal.example.com",
                     *           "environmentType": "DEV",
                     *           "googleAnalyticsTagID": "G-123456789",
                     *           "imageConfig": {
                     *             "imageName": "myimage",
                     *             "imageRegistry": "ghcr.io",
                     *             "imageTag": "latest"
                     *           },
                     *           "status": "READY"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListSaaSPortalsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list saas portals */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "saas-portal-api/ListSaaSPortalCustomDomains": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "customDomains": [
                     *         {
                     *           "clusterEndpoint": "example.com",
                     *           "customDomain": "mycustomdomain.com",
                     *           "description": "My custom domain description",
                     *           "environmentType": "DEV",
                     *           "name": "MyCustomDomain",
                     *           "status": "READY"
                     *         },
                     *         {
                     *           "clusterEndpoint": "example.com",
                     *           "customDomain": "mycustomdomain.com",
                     *           "description": "My custom domain description",
                     *           "environmentType": "DEV",
                     *           "name": "MyCustomDomain",
                     *           "status": "READY"
                     *         },
                     *         {
                     *           "clusterEndpoint": "example.com",
                     *           "customDomain": "mycustomdomain.com",
                     *           "description": "My custom domain description",
                     *           "environmentType": "DEV",
                     *           "name": "MyCustomDomain",
                     *           "status": "READY"
                     *         },
                     *         {
                     *           "clusterEndpoint": "example.com",
                     *           "customDomain": "mycustomdomain.com",
                     *           "description": "My custom domain description",
                     *           "environmentType": "DEV",
                     *           "name": "MyCustomDomain",
                     *           "status": "READY"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListSaaSPortalCustomDomainsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list saas portal custom domains */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "saas-portal-api/CreateSaaSPortalCustomDomain": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "customDomain": "mycustomdomain.com",
                 *       "description": "My custom domain description",
                 *       "environmentType": "DEV",
                 *       "name": "MyCustomDomain"
                 *     } */
                "application/json": components["schemas"]["CreateSaaSPortalCustomDomainRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create saas portal custom domain */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "saas-portal-api/DeleteSaaSPortalCustomDomain": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The environment type for the custom domain
                 * @example DEV
                 */
                environmentType: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete saas portal custom domains */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "saas-portal-api/UpdateSaaSPortalCustomDomain": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The environment type for the saas portal custom domain to update
                 * @example DEV
                 */
                environmentType: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "customDomain": "mycustomdomain.com",
                 *       "description": "My custom domain description",
                 *       "name": "MyCustomDomain"
                 *     } */
                "application/json": components["schemas"]["UpdateSaaSPortalCustomDomainRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update saas portal custom domain */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "saas-portal-api/UpdateSaaSPortal": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The environment type for the saas portal custom domain to update
                 * @example DEV
                 */
                environmentType: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "customDomain": "mycustomdomain.com",
                 *       "disablePasswordLogin": false,
                 *       "emailConfig": {
                 *         "smtpFromEmail": "example@gmail.com",
                 *         "smtpHost": "smtp.gmail.com",
                 *         "smtpPassword": "password",
                 *         "smtpPort": 587,
                 *         "smtpUsername": "username"
                 *       },
                 *       "googleAnalyticsTagID": "G-123456789",
                 *       "imageConfig": {
                 *         "imageName": "myimage",
                 *         "imageRegistry": "ghcr.io",
                 *         "imageTag": "latest"
                 *       }
                 *     } */
                "application/json": components["schemas"]["UpdateSaaSPortalRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update saas portal */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api/ListService": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "s-12345678",
                     *         "s-abcdefgh",
                     *         "s-1234efgh"
                     *       ],
                     *       "nextPageToken": "next-token",
                     *       "services": [
                     *         {
                     *           "createdAt": "2019-01-01T00:00:00Z",
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "s-12345678",
                     *           "key": "mysql",
                     *           "name": "MySQL multi-writer service",
                     *           "roleType": "admin",
                     *           "serviceEnvironments": [
                     *             {
                     *               "id": "se-12345678",
                     *               "name": "dev",
                     *               "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                     *               "saasPortalStatus": "READY",
                     *               "saasPortalUrl": "https://saas-portal.example.com",
                     *               "servicePlans": [
                     *                 {
                     *                   "description": "A Basic product tier",
                     *                   "modelType": "CUSTOMER_HOSTED",
                     *                   "name": "Basic",
                     *                   "productTierID": "pt-12345678",
                     *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *                 },
                     *                 {
                     *                   "description": "A Basic product tier",
                     *                   "modelType": "CUSTOMER_HOSTED",
                     *                   "name": "Basic",
                     *                   "productTierID": "pt-12345678",
                     *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *                 },
                     *                 {
                     *                   "description": "A Basic product tier",
                     *                   "modelType": "CUSTOMER_HOSTED",
                     *                   "name": "Basic",
                     *                   "productTierID": "pt-12345678",
                     *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *                 }
                     *               ],
                     *               "sourceEnvironmentID": "se-12345678",
                     *               "sourceEnvironmentName": "dev",
                     *               "type": "DEV",
                     *               "visibility": "private"
                     *             },
                     *             {
                     *               "id": "se-12345678",
                     *               "name": "dev",
                     *               "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                     *               "saasPortalStatus": "READY",
                     *               "saasPortalUrl": "https://saas-portal.example.com",
                     *               "servicePlans": [
                     *                 {
                     *                   "description": "A Basic product tier",
                     *                   "modelType": "CUSTOMER_HOSTED",
                     *                   "name": "Basic",
                     *                   "productTierID": "pt-12345678",
                     *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *                 },
                     *                 {
                     *                   "description": "A Basic product tier",
                     *                   "modelType": "CUSTOMER_HOSTED",
                     *                   "name": "Basic",
                     *                   "productTierID": "pt-12345678",
                     *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *                 },
                     *                 {
                     *                   "description": "A Basic product tier",
                     *                   "modelType": "CUSTOMER_HOSTED",
                     *                   "name": "Basic",
                     *                   "productTierID": "pt-12345678",
                     *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *                 }
                     *               ],
                     *               "sourceEnvironmentID": "se-12345678",
                     *               "sourceEnvironmentName": "dev",
                     *               "type": "DEV",
                     *               "visibility": "private"
                     *             }
                     *           ],
                     *           "serviceLogoURL": "Quisquam eum fuga temporibus similique.",
                     *           "serviceProviderID": "sp-12345678",
                     *           "serviceProviderName": "Omnistrate, Inc."
                     *         },
                     *         {
                     *           "createdAt": "2019-01-01T00:00:00Z",
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "s-12345678",
                     *           "key": "mysql",
                     *           "name": "MySQL multi-writer service",
                     *           "roleType": "admin",
                     *           "serviceEnvironments": [
                     *             {
                     *               "id": "se-12345678",
                     *               "name": "dev",
                     *               "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                     *               "saasPortalStatus": "READY",
                     *               "saasPortalUrl": "https://saas-portal.example.com",
                     *               "servicePlans": [
                     *                 {
                     *                   "description": "A Basic product tier",
                     *                   "modelType": "CUSTOMER_HOSTED",
                     *                   "name": "Basic",
                     *                   "productTierID": "pt-12345678",
                     *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *                 },
                     *                 {
                     *                   "description": "A Basic product tier",
                     *                   "modelType": "CUSTOMER_HOSTED",
                     *                   "name": "Basic",
                     *                   "productTierID": "pt-12345678",
                     *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *                 },
                     *                 {
                     *                   "description": "A Basic product tier",
                     *                   "modelType": "CUSTOMER_HOSTED",
                     *                   "name": "Basic",
                     *                   "productTierID": "pt-12345678",
                     *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *                 }
                     *               ],
                     *               "sourceEnvironmentID": "se-12345678",
                     *               "sourceEnvironmentName": "dev",
                     *               "type": "DEV",
                     *               "visibility": "private"
                     *             },
                     *             {
                     *               "id": "se-12345678",
                     *               "name": "dev",
                     *               "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                     *               "saasPortalStatus": "READY",
                     *               "saasPortalUrl": "https://saas-portal.example.com",
                     *               "servicePlans": [
                     *                 {
                     *                   "description": "A Basic product tier",
                     *                   "modelType": "CUSTOMER_HOSTED",
                     *                   "name": "Basic",
                     *                   "productTierID": "pt-12345678",
                     *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *                 },
                     *                 {
                     *                   "description": "A Basic product tier",
                     *                   "modelType": "CUSTOMER_HOSTED",
                     *                   "name": "Basic",
                     *                   "productTierID": "pt-12345678",
                     *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *                 },
                     *                 {
                     *                   "description": "A Basic product tier",
                     *                   "modelType": "CUSTOMER_HOSTED",
                     *                   "name": "Basic",
                     *                   "productTierID": "pt-12345678",
                     *                   "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *                 }
                     *               ],
                     *               "sourceEnvironmentID": "se-12345678",
                     *               "sourceEnvironmentName": "dev",
                     *               "type": "DEV",
                     *               "visibility": "private"
                     *             }
                     *           ],
                     *           "serviceLogoURL": "Quisquam eum fuga temporibus similique.",
                     *           "serviceProviderID": "sp-12345678",
                     *           "serviceProviderName": "Omnistrate, Inc."
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListServiceResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list services */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api/CreateService": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                 *       "name": "MySQL multi-writer service",
                 *       "serviceLogoURL": "http://connelly.biz/ewell.turcotte"
                 *     } */
                "application/json": components["schemas"]["CreateServiceRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a service */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-offering-api/ListServiceOffering": {
        parameters: {
            query?: {
                /**
                 * @description Org Id
                 * @example org-12345678
                 */
                orgId?: string;
                /**
                 * @description The visibility of service offering
                 * @example PRIVATE
                 */
                visibility?: string;
                /**
                 * @description The environment type to filter by
                 * @example DEV
                 */
                environmentType?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "nextPageToken": "next-token",
                     *       "serviceIds": [
                     *         "s-12345678",
                     *         "s-abcdefgh"
                     *       ],
                     *       "services": [
                     *         {
                     *           "createdAt": "2019-01-01T00:00:00Z",
                     *           "isDeprecated": false,
                     *           "offerings": [
                     *             {
                     *               "allowCreatesWhenPaymentNotConfigured": true,
                     *               "assets": {
                     *                 "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                     *                 "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                     *               },
                     *               "maxNumberOfInstances": 4,
                     *               "productTierName": "Premium",
                     *               "productTierURLKey": "premium",
                     *               "resourceParameters": [
                     *                 {
                     *                   "name": "MySQL",
                     *                   "urlKey": "mysql"
                     *                 },
                     *                 {
                     *                   "name": "Redis",
                     *                   "urlKey": "redis"
                     *                 }
                     *               ],
                     *               "serviceAPIID": "sa-12345678",
                     *               "serviceAPIVersion": "v1",
                     *               "serviceEnvironmentName": "Production",
                     *               "serviceEnvironmentURLKey": "prod",
                     *               "serviceEnvironmentVisibility": "PRIVATE",
                     *               "serviceModelName": "Bring Your Own Account",
                     *               "serviceModelURLKey": "byoa"
                     *             },
                     *             {
                     *               "productTierName": "Basic",
                     *               "productTierURLKey": "basic",
                     *               "resourceParameters": [
                     *                 {
                     *                   "name": "MySQL",
                     *                   "urlKey": "mysql"
                     *                 },
                     *                 {
                     *                   "name": "Redis",
                     *                   "urlKey": "redis"
                     *                 }
                     *               ],
                     *               "serviceAPIID": "sa-abcdefgh",
                     *               "serviceAPIVersion": "v1",
                     *               "serviceEnvironmentName": "Production",
                     *               "serviceEnvironmentURLKey": "prod",
                     *               "serviceEnvironmentVisibility": "PUBLIC",
                     *               "serviceModelName": "Hosted",
                     *               "serviceModelURLKey": "hosted"
                     *             }
                     *           ],
                     *           "serviceDescription": "MySQL is a relational database",
                     *           "serviceId": "s-12345678",
                     *           "serviceName": "MySQL",
                     *           "serviceOrgId": "org-12345678",
                     *           "serviceProviderId": "sp-9zrg9W8Are",
                     *           "serviceProviderName": "Omnistrate, Inc.",
                     *           "serviceURLKey": "mysql"
                     *         },
                     *         {
                     *           "createdAt": "2019-01-01T00:00:00Z",
                     *           "isDeprecated": false,
                     *           "offerings": [
                     *             {
                     *               "allowCreatesWhenPaymentNotConfigured": true,
                     *               "assets": {
                     *                 "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                     *                 "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                     *               },
                     *               "maxNumberOfInstances": 4,
                     *               "productTierName": "Premium",
                     *               "productTierURLKey": "premium",
                     *               "resourceParameters": [
                     *                 {
                     *                   "name": "MySQL",
                     *                   "urlKey": "mysql"
                     *                 },
                     *                 {
                     *                   "name": "Redis",
                     *                   "urlKey": "redis"
                     *                 }
                     *               ],
                     *               "serviceAPIID": "sa-12345678",
                     *               "serviceAPIVersion": "v1",
                     *               "serviceEnvironmentName": "Production",
                     *               "serviceEnvironmentURLKey": "prod",
                     *               "serviceEnvironmentVisibility": "PRIVATE",
                     *               "serviceModelName": "Bring Your Own Account",
                     *               "serviceModelURLKey": "byoa"
                     *             },
                     *             {
                     *               "productTierName": "Basic",
                     *               "productTierURLKey": "basic",
                     *               "resourceParameters": [
                     *                 {
                     *                   "name": "MySQL",
                     *                   "urlKey": "mysql"
                     *                 },
                     *                 {
                     *                   "name": "Redis",
                     *                   "urlKey": "redis"
                     *                 }
                     *               ],
                     *               "serviceAPIID": "sa-abcdefgh",
                     *               "serviceAPIVersion": "v1",
                     *               "serviceEnvironmentName": "Production",
                     *               "serviceEnvironmentURLKey": "prod",
                     *               "serviceEnvironmentVisibility": "PUBLIC",
                     *               "serviceModelName": "Hosted",
                     *               "serviceModelURLKey": "hosted"
                     *             }
                     *           ],
                     *           "serviceDescription": "MySQL is a relational database",
                     *           "serviceId": "s-12345678",
                     *           "serviceName": "MySQL",
                     *           "serviceOrgId": "org-12345678",
                     *           "serviceProviderId": "sp-9zrg9W8Are",
                     *           "serviceProviderName": "Omnistrate, Inc.",
                     *           "serviceURLKey": "mysql"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListServiceOfferingsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list service offerings */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-offering-api/DescribeServiceOffering": {
        parameters: {
            query?: {
                /**
                 * @description The visibility of service offering
                 * @example PRIVATE
                 */
                visibility?: string;
                /**
                 * @description The environment type to filter by
                 * @example DEV
                 */
                environmentType?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "createdAt": "2019-01-01T00:00:00Z",
                     *       "isDeprecated": false,
                     *       "offerings": [
                     *         {
                     *           "allowCreatesWhenPaymentNotConfigured": true,
                     *           "assets": {
                     *             "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                     *             "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                     *           },
                     *           "maxNumberOfInstances": 4,
                     *           "productTierName": "Premium",
                     *           "productTierURLKey": "premium",
                     *           "resourceParameters": [
                     *             {
                     *               "name": "MySQL",
                     *               "urlKey": "mysql"
                     *             },
                     *             {
                     *               "name": "Redis",
                     *               "urlKey": "redis"
                     *             }
                     *           ],
                     *           "serviceAPIID": "sa-12345678",
                     *           "serviceAPIVersion": "v1",
                     *           "serviceEnvironmentName": "Production",
                     *           "serviceEnvironmentURLKey": "prod",
                     *           "serviceEnvironmentVisibility": "PRIVATE",
                     *           "serviceModelName": "Bring Your Own Account",
                     *           "serviceModelURLKey": "byoa"
                     *         },
                     *         {
                     *           "productTierName": "Basic",
                     *           "productTierURLKey": "basic",
                     *           "resourceParameters": [
                     *             {
                     *               "name": "MySQL",
                     *               "urlKey": "mysql"
                     *             },
                     *             {
                     *               "name": "Redis",
                     *               "urlKey": "redis"
                     *             }
                     *           ],
                     *           "serviceAPIID": "sa-abcdefgh",
                     *           "serviceAPIVersion": "v1",
                     *           "serviceEnvironmentName": "Production",
                     *           "serviceEnvironmentURLKey": "prod",
                     *           "serviceEnvironmentVisibility": "PUBLIC",
                     *           "serviceModelName": "Hosted",
                     *           "serviceModelURLKey": "hosted"
                     *         }
                     *       ],
                     *       "serviceDescription": "MySQL is a relational database",
                     *       "serviceId": "s-12345678",
                     *       "serviceName": "MySQL",
                     *       "serviceOrgId": "org-12345678",
                     *       "serviceProviderId": "sp-9zrg9W8Are",
                     *       "serviceProviderName": "Omnistrate, Inc.",
                     *       "serviceURLKey": "mysql"
                     *     } */
                    "application/json": components["schemas"]["DescribeServiceOfferingResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a service offering */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-offering-api/DescribeServiceOfferingResource": {
        parameters: {
            query?: {
                /**
                 * @description The product tier Id
                 * @example pt-12345678
                 */
                productTierId?: string;
                /**
                 * @description The product tier version
                 * @example 1.0.0
                 */
                productTierVersion?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The resource ID
                 * @example r-12345678
                 */
                resourceId: string;
                /**
                 * @description The instance ID
                 * @example instance-12345678
                 */
                instanceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "apis": [
                     *         {
                     *           "inputParameters": [
                     *             {
                     *               "defaultValue": null,
                     *               "description": "The name of the server",
                     *               "displayName": "Server Name",
                     *               "isList": false,
                     *               "key": "serverName",
                     *               "modifiable": true,
                     *               "options": null,
                     *               "required": true,
                     *               "type": "string"
                     *             },
                     *             {
                     *               "defaultValue": "option1",
                     *               "description": "The type of the server",
                     *               "displayName": "Server Type",
                     *               "isList": false,
                     *               "key": "serverType",
                     *               "modifiable": true,
                     *               "options": [
                     *                 "option1",
                     *                 "option2"
                     *               ],
                     *               "required": true,
                     *               "type": "string"
                     *             }
                     *           ],
                     *           "outputParameters": [
                     *             {
                     *               "description": "The name of the server",
                     *               "displayName": "Server Name",
                     *               "isList": false,
                     *               "key": "serverName",
                     *               "type": "string"
                     *             },
                     *             {
                     *               "description": "The type of the server",
                     *               "displayName": "Server Type",
                     *               "isList": false,
                     *               "key": "serverType",
                     *               "type": "string"
                     *             }
                     *           ],
                     *           "verb": "create"
                     *         },
                     *         {
                     *           "inputParameters": [
                     *             {
                     *               "defaultValue": null,
                     *               "description": "The name of the server",
                     *               "displayName": "Server Name",
                     *               "isList": false,
                     *               "key": "serverName",
                     *               "modifiable": true,
                     *               "options": null,
                     *               "required": true,
                     *               "type": "string"
                     *             }
                     *           ],
                     *           "outputParameters": [
                     *             {
                     *               "description": "The name of the server",
                     *               "displayName": "Server Name",
                     *               "isList": false,
                     *               "key": "serverName",
                     *               "type": "string"
                     *             },
                     *             {
                     *               "description": "The type of the server",
                     *               "displayName": "Server Type",
                     *               "isList": false,
                     *               "key": "serverType",
                     *               "type": "string"
                     *             }
                     *           ],
                     *           "verb": "describe"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["DescribeServiceOfferingResourceResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a service offering resource */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api/DescribeService": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID to operate on
                 * @example s-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "createdAt": "2019-01-01T00:00:00Z",
                     *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *       "id": "s-12345678",
                     *       "key": "mysql",
                     *       "name": "MySQL multi-writer service",
                     *       "roleType": "admin",
                     *       "serviceEnvironments": [
                     *         {
                     *           "id": "se-12345678",
                     *           "name": "dev",
                     *           "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                     *           "saasPortalStatus": "READY",
                     *           "saasPortalUrl": "https://saas-portal.example.com",
                     *           "servicePlans": [
                     *             {
                     *               "description": "A Basic product tier",
                     *               "modelType": "CUSTOMER_HOSTED",
                     *               "name": "Basic",
                     *               "productTierID": "pt-12345678",
                     *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *             },
                     *             {
                     *               "description": "A Basic product tier",
                     *               "modelType": "CUSTOMER_HOSTED",
                     *               "name": "Basic",
                     *               "productTierID": "pt-12345678",
                     *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *             },
                     *             {
                     *               "description": "A Basic product tier",
                     *               "modelType": "CUSTOMER_HOSTED",
                     *               "name": "Basic",
                     *               "productTierID": "pt-12345678",
                     *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *             }
                     *           ],
                     *           "sourceEnvironmentID": "se-12345678",
                     *           "sourceEnvironmentName": "dev",
                     *           "type": "DEV",
                     *           "visibility": "private"
                     *         },
                     *         {
                     *           "id": "se-12345678",
                     *           "name": "dev",
                     *           "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                     *           "saasPortalStatus": "READY",
                     *           "saasPortalUrl": "https://saas-portal.example.com",
                     *           "servicePlans": [
                     *             {
                     *               "description": "A Basic product tier",
                     *               "modelType": "CUSTOMER_HOSTED",
                     *               "name": "Basic",
                     *               "productTierID": "pt-12345678",
                     *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *             },
                     *             {
                     *               "description": "A Basic product tier",
                     *               "modelType": "CUSTOMER_HOSTED",
                     *               "name": "Basic",
                     *               "productTierID": "pt-12345678",
                     *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *             },
                     *             {
                     *               "description": "A Basic product tier",
                     *               "modelType": "CUSTOMER_HOSTED",
                     *               "name": "Basic",
                     *               "productTierID": "pt-12345678",
                     *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *             }
                     *           ],
                     *           "sourceEnvironmentID": "se-12345678",
                     *           "sourceEnvironmentName": "dev",
                     *           "type": "DEV",
                     *           "visibility": "private"
                     *         },
                     *         {
                     *           "id": "se-12345678",
                     *           "name": "dev",
                     *           "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                     *           "saasPortalStatus": "READY",
                     *           "saasPortalUrl": "https://saas-portal.example.com",
                     *           "servicePlans": [
                     *             {
                     *               "description": "A Basic product tier",
                     *               "modelType": "CUSTOMER_HOSTED",
                     *               "name": "Basic",
                     *               "productTierID": "pt-12345678",
                     *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *             },
                     *             {
                     *               "description": "A Basic product tier",
                     *               "modelType": "CUSTOMER_HOSTED",
                     *               "name": "Basic",
                     *               "productTierID": "pt-12345678",
                     *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *             },
                     *             {
                     *               "description": "A Basic product tier",
                     *               "modelType": "CUSTOMER_HOSTED",
                     *               "name": "Basic",
                     *               "productTierID": "pt-12345678",
                     *               "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *             }
                     *           ],
                     *           "sourceEnvironmentID": "se-12345678",
                     *           "sourceEnvironmentName": "dev",
                     *           "type": "DEV",
                     *           "visibility": "private"
                     *         }
                     *       ],
                     *       "serviceLogoURL": "Quo commodi error dicta non.",
                     *       "serviceProviderID": "sp-12345678",
                     *       "serviceProviderName": "Omnistrate, Inc."
                     *     } */
                    "application/json": components["schemas"]["DescribeServiceResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a service */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api/DeleteService": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID to operate on
                 * @example s-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a service */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api/UpdateService": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID to operate on
                 * @example s-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                 *       "name": "MySQL multi-writer service",
                 *       "serviceLogoURL": "Omnis est fugit nisi et."
                 *     } */
                "application/json": components["schemas"]["UpdateServiceRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update a service */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api/ServiceHealth": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service
                 * @example s-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "health": "UP",
                     *       "id": "s-12345678",
                     *       "report": {
                     *         "se-12345678": {
                     *           "sm-12345678": {
                     *             "vu-11111111": "UNKNOWN",
                     *             "vu-12345678": "UP",
                     *             "vu-87654321": "DOWN"
                     *           }
                     *         }
                     *       }
                     *     } */
                    "application/json": components["schemas"]["ReportHealthResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get service health */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "compute-config-api/ListComputeConfig": {
        parameters: {
            query?: {
                /**
                 * @description Is compute config managed by omnistrate
                 * @example false
                 */
                managed?: boolean;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "cc-12345678",
                     *         "cc-abcdefgh",
                     *         "cc-1234efgh"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListComputeConfigsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list compute configs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "compute-config-api/CreateComputeConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "autoscalingPolicy": {
                 *         "maxReplicas": 4,
                 *         "minReplicas": 1
                 *       },
                 *       "cpuArchitecture": "X86_64|ARM64",
                 *       "description": "my compute config description",
                 *       "name": "my compute config",
                 *       "replicaCount": "3",
                 *       "resources": {
                 *         "limits": {
                 *           "cpu": "1",
                 *           "memory": "500Mi"
                 *         },
                 *         "requests": {
                 *           "cpu": "0.5",
                 *           "memory": "200Mi"
                 *         }
                 *       },
                 *       "rootVolumeSizeGi": 10,
                 *       "warmPoolConfiguration": {
                 *         "minimumNodesInPool": 1
                 *       }
                 *     } */
                "application/json": components["schemas"]["CreateComputeConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create compute config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "compute-config-api/DescribeComputeConfig": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the compute config to describe. If not specified, the latest version is described.
                 * @example Debitis et ut ex aut eius.
                 */
                ProductTierVersion?: string;
                /**
                 * @description ProductTierId of the compute config to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description ID of the compute config
                 * @example cc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "autoscalingPolicy": {
                     *         "maxReplicas": 4,
                     *         "minReplicas": 1
                     *       },
                     *       "computeInstanceTypeConfigOverrides": {
                     *         "aws": {
                     *           "t3.micro": {
                     *             "instanceLifeCycleType": "Spot",
                     *             "rootVolumeSizeGi": 10,
                     *             "warmPoolConfiguration": {
                     *               "minimumNodesInPool": 1
                     *             }
                     *           },
                     *           "t3.small": {
                     *             "instanceLifeCycleType": "OnDemand",
                     *             "warmPoolConfiguration": {
                     *               "minimumNodesInPool": 2
                     *             }
                     *           }
                     *         },
                     *         "azure": {
                     *           "Standard_B1ls": {
                     *             "rootVolumeSizeGi": 10,
                     *             "warmPoolConfiguration": {
                     *               "minimumNodesInPool": 1
                     *             }
                     *           }
                     *         }
                     *       },
                     *       "cpuArchitecture": "X86_64|ARM64",
                     *       "description": "my compute config description",
                     *       "id": "cc-12345678",
                     *       "infraConfigIDs": [
                     *         "ic-12345678",
                     *         "ic-abcdefgh"
                     *       ],
                     *       "instanceTypes": {
                     *         "aws": [
                     *           "t3.micro",
                     *           "t3.small"
                     *         ],
                     *         "azure": [
                     *           "Standard_B1ls",
                     *           "Standard_B1ms"
                     *         ],
                     *         "gcp": [
                     *           "$var.instance_type"
                     *         ]
                     *       },
                     *       "name": "my compute config",
                     *       "replicaCount": "3",
                     *       "resources": {
                     *         "limits": {
                     *           "cpu": "1",
                     *           "memory": "500Mi"
                     *         },
                     *         "requests": {
                     *           "cpu": "0.5",
                     *           "memory": "200Mi"
                     *         }
                     *       },
                     *       "rootVolumeSizeGi": 10,
                     *       "serviceId": "s-12345678",
                     *       "warmPoolConfiguration": {
                     *         "minimumNodesInPool": 1
                     *       }
                     *     } */
                    "application/json": components["schemas"]["DescribeComputeConfigResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe compute config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "compute-config-api/DeleteComputeConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description ID of the compute config
                 * @example cc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a compute config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "compute-config-api/UpdateComputeConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description ID of the compute config
                 * @example cc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "autoscalingPolicy": {
                 *         "maxReplicas": 4,
                 *         "minReplicas": 1
                 *       },
                 *       "cpuArchitecture": "X86_64|ARM64",
                 *       "description": "my compute config description",
                 *       "name": "my compute config",
                 *       "replicaCount": "3",
                 *       "resources": {
                 *         "limits": {
                 *           "cpu": "1",
                 *           "memory": "500Mi"
                 *         },
                 *         "requests": {
                 *           "cpu": "0.5",
                 *           "memory": "200Mi"
                 *         }
                 *       },
                 *       "rootVolumeSizeGi": 10,
                 *       "warmPoolConfiguration": {
                 *         "minimumNodesInPool": 1
                 *       }
                 *     } */
                "application/json": components["schemas"]["UpdateComputeConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update compute config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "compute-config-api/AddComputeInstanceType": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description ID of the compute config
                 * @example cc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "cloudProviderName": "aws",
                 *       "configOverride": {
                 *         "instanceLifeCycleType": "Spot",
                 *         "labels": {
                 *           "env": "prod"
                 *         },
                 *         "rootVolumeSizeGi": 10,
                 *         "taints": [
                 *           {
                 *             "effect": "NoSchedule",
                 *             "key": "env",
                 *             "value": "prod"
                 *           }
                 *         ],
                 *         "warmPoolConfiguration": {
                 *           "minimumNodesInPool": 1
                 *         }
                 *       },
                 *       "instanceType": "t3.micro"
                 *     } */
                "application/json": components["schemas"]["AddComputeInstanceTypeRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to add compute instance type */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "compute-config-api/RemoveComputeInstanceType": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description ID of the compute config
                 * @example cc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "cloudProviderName": "aws",
                 *       "instanceType": "t3.micro"
                 *     } */
                "application/json": components["schemas"]["RemoveComputeInstanceTypeRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to remove compute instance type */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "compute-config-api/ListComputeInstanceTypes": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The cloud provider for this compute instance type config
                 * @example aws
                 */
                cloudProviderName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "nextPageToken": "next-token",
                     *       "types": [
                     *         "m5.xlarge",
                     *         "c5.xlarge",
                     *         "r5.xlarge"
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListComputeInstanceTypesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list compute instance types */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-environment-api/ListServiceEnvironment": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service this environment belongs to
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "se-12345678",
                     *         "se-23456789"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListServiceEnvironmentsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list service environments */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-environment-api/CreateServiceEnvironment": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service this environment belongs to
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "autoApproveSubscription": false,
                 *       "deploymentConfigId": "dc-12345678",
                 *       "description": "The production environment for the MySQL multi-writer service",
                 *       "name": "Production",
                 *       "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
                 *       "sourceEnvironmentId": "se-12345678",
                 *       "type": "DEV",
                 *       "visibility": "Est dolores odit magni et mollitia quibusdam."
                 *     } */
                "application/json": components["schemas"]["CreateServiceEnvironmentRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a service environment */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-environment-api/DescribeServiceEnvironment": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service this environment belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the service environment
                 * @example se-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "autoApproveSubscription": false,
                     *       "deploymentConfigId": "dc-12345678",
                     *       "description": "The production environment for the MySQL multi-writer service",
                     *       "id": "se-12345678",
                     *       "key": "production",
                     *       "name": "Production",
                     *       "roleType": "admin",
                     *       "saasPortalStatus": "READY",
                     *       "saasPortalUrl": "https://saas-portal.example.com",
                     *       "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
                     *       "serviceId": "s-12345678",
                     *       "sourceEnvironmentId": "se-12345678",
                     *       "type": "DEV",
                     *       "visibility": "Nihil eaque."
                     *     } */
                    "application/json": components["schemas"]["DescribeServiceEnvironmentResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a service environment */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-environment-api/DeleteServiceEnvironment": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service this environment belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the service environment
                 * @example se-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a service environment */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-environment-api/UpdateServiceEnvironment": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service this environment belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the service environment
                 * @example se-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "autoApproveSubscription": false,
                 *       "deploymentConfigId": "dc-12345678",
                 *       "description": "The production environment for the MySQL multi-writer service",
                 *       "name": "Production",
                 *       "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
                 *       "sourceEnvironmentId": "se-12345678",
                 *       "visibility": "Sit sapiente ut hic."
                 *     } */
                "application/json": components["schemas"]["UpdateServiceEnvironmentRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update a service environment */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-environment-api/PromoteServiceEnvironmentStatus": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service this environment belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the service environment
                 * @example se-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example [
                     *       {
                     *         "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                     *         "targetEnvironmentID": "se-12345678"
                     *       },
                     *       {
                     *         "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                     *         "targetEnvironmentID": "se-12345678"
                     *       }
                     *     ] */
                    "application/json": components["schemas"]["EnvironmentPromotionStatus"][];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get the status of a service environment promotion */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-environment-api/PromoteServiceEnvironment": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service this environment belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the service environment
                 * @example se-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted response. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to promote a service environment */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-plan-api/ListServicePlans": {
        parameters: {
            query?: {
                /** @example token */
                nextPageToken?: string;
                /** @example 10 */
                pageSize?: number;
                /**
                 * @description Skip the check for pending changes in the service plans
                 * @example false
                 */
                skipHasPendingChangesCheck?: boolean;
            };
            header?: never;
            path: {
                /**
                 * @description Service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Service environment ID
                 * @example se-12345678
                 */
                serviceEnvironmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "nextPageToken": "next-token",
                     *       "servicePlans": [
                     *         {
                     *           "AutoApproveSubscription": false,
                     *           "accountConfigIds": [
                     *             "ac-12345678",
                     *             "ac-23456789"
                     *           ],
                     *           "activeAccountConfigIds": {
                     *             "aws": "ac-12345678",
                     *             "gcp": "ac-23456789"
                     *           },
                     *           "apiVersion": "v1",
                     *           "awsRegions": [
                     *             "us-east-2",
                     *             "ca-central-1"
                     *           ],
                     *           "azureRegions": [
                     *             "northcentralus"
                     *           ],
                     *           "deploymentConfigId": "dc-12345678",
                     *           "gcpRegions": [
                     *             "us-central1"
                     *           ],
                     *           "hasPendingChanges": true,
                     *           "isProductTierDisabled": true,
                     *           "latestMajorVersion": "3.0",
                     *           "modelType": "CUSTOMER_HOSTED",
                     *           "privateRegions": [
                     *             "n/a"
                     *           ],
                     *           "productTierDescription": "A premium product tier",
                     *           "productTierDocumentation": "Any documentation",
                     *           "productTierFeatures": {
                     *             "LOGS": true,
                     *             "METRICS": false
                     *           },
                     *           "productTierId": "pt-12345678",
                     *           "productTierKey": "premium",
                     *           "productTierName": "Premium",
                     *           "productTierPlanDescription": "A premium plan",
                     *           "productTierPricing": {
                     *             "price1": "value1"
                     *           },
                     *           "productTierSupport": "Any support",
                     *           "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                     *           "serviceApiId": "sa-12345678",
                     *           "serviceEnvironmentId": "se-12345678",
                     *           "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                     *           "serviceModelFeatures": [
                     *             {
                     *               "configuration": {
                     *                 "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *               },
                     *               "feature": "Ad molestiae officia placeat sed est ipsam."
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *               },
                     *               "feature": "Ad molestiae officia placeat sed est ipsam."
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *               },
                     *               "feature": "Ad molestiae officia placeat sed est ipsam."
                     *             }
                     *           ],
                     *           "serviceModelId": "sm-12345678",
                     *           "serviceModelName": "MySQL multi-writer service hosted model",
                     *           "tierType": "OMNISTRATE_DEDICATED_TENANCY",
                     *           "versionSetStatus": "Preferred|Active|Deprecated|Pending"
                     *         },
                     *         {
                     *           "AutoApproveSubscription": false,
                     *           "accountConfigIds": [
                     *             "ac-12345678",
                     *             "ac-23456789"
                     *           ],
                     *           "activeAccountConfigIds": {
                     *             "aws": "ac-12345678",
                     *             "gcp": "ac-23456789"
                     *           },
                     *           "apiVersion": "v1",
                     *           "awsRegions": [
                     *             "us-east-2",
                     *             "ca-central-1"
                     *           ],
                     *           "azureRegions": [
                     *             "northcentralus"
                     *           ],
                     *           "deploymentConfigId": "dc-12345678",
                     *           "gcpRegions": [
                     *             "us-central1"
                     *           ],
                     *           "hasPendingChanges": true,
                     *           "isProductTierDisabled": true,
                     *           "latestMajorVersion": "3.0",
                     *           "modelType": "CUSTOMER_HOSTED",
                     *           "privateRegions": [
                     *             "n/a"
                     *           ],
                     *           "productTierDescription": "A premium product tier",
                     *           "productTierDocumentation": "Any documentation",
                     *           "productTierFeatures": {
                     *             "LOGS": true,
                     *             "METRICS": false
                     *           },
                     *           "productTierId": "pt-12345678",
                     *           "productTierKey": "premium",
                     *           "productTierName": "Premium",
                     *           "productTierPlanDescription": "A premium plan",
                     *           "productTierPricing": {
                     *             "price1": "value1"
                     *           },
                     *           "productTierSupport": "Any support",
                     *           "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                     *           "serviceApiId": "sa-12345678",
                     *           "serviceEnvironmentId": "se-12345678",
                     *           "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                     *           "serviceModelFeatures": [
                     *             {
                     *               "configuration": {
                     *                 "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *               },
                     *               "feature": "Ad molestiae officia placeat sed est ipsam."
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *               },
                     *               "feature": "Ad molestiae officia placeat sed est ipsam."
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *               },
                     *               "feature": "Ad molestiae officia placeat sed est ipsam."
                     *             }
                     *           ],
                     *           "serviceModelId": "sm-12345678",
                     *           "serviceModelName": "MySQL multi-writer service hosted model",
                     *           "tierType": "OMNISTRATE_DEDICATED_TENANCY",
                     *           "versionSetStatus": "Preferred|Active|Deprecated|Pending"
                     *         },
                     *         {
                     *           "AutoApproveSubscription": false,
                     *           "accountConfigIds": [
                     *             "ac-12345678",
                     *             "ac-23456789"
                     *           ],
                     *           "activeAccountConfigIds": {
                     *             "aws": "ac-12345678",
                     *             "gcp": "ac-23456789"
                     *           },
                     *           "apiVersion": "v1",
                     *           "awsRegions": [
                     *             "us-east-2",
                     *             "ca-central-1"
                     *           ],
                     *           "azureRegions": [
                     *             "northcentralus"
                     *           ],
                     *           "deploymentConfigId": "dc-12345678",
                     *           "gcpRegions": [
                     *             "us-central1"
                     *           ],
                     *           "hasPendingChanges": true,
                     *           "isProductTierDisabled": true,
                     *           "latestMajorVersion": "3.0",
                     *           "modelType": "CUSTOMER_HOSTED",
                     *           "privateRegions": [
                     *             "n/a"
                     *           ],
                     *           "productTierDescription": "A premium product tier",
                     *           "productTierDocumentation": "Any documentation",
                     *           "productTierFeatures": {
                     *             "LOGS": true,
                     *             "METRICS": false
                     *           },
                     *           "productTierId": "pt-12345678",
                     *           "productTierKey": "premium",
                     *           "productTierName": "Premium",
                     *           "productTierPlanDescription": "A premium plan",
                     *           "productTierPricing": {
                     *             "price1": "value1"
                     *           },
                     *           "productTierSupport": "Any support",
                     *           "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                     *           "serviceApiId": "sa-12345678",
                     *           "serviceEnvironmentId": "se-12345678",
                     *           "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                     *           "serviceModelFeatures": [
                     *             {
                     *               "configuration": {
                     *                 "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *               },
                     *               "feature": "Ad molestiae officia placeat sed est ipsam."
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *               },
                     *               "feature": "Ad molestiae officia placeat sed est ipsam."
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *               },
                     *               "feature": "Ad molestiae officia placeat sed est ipsam."
                     *             }
                     *           ],
                     *           "serviceModelId": "sm-12345678",
                     *           "serviceModelName": "MySQL multi-writer service hosted model",
                     *           "tierType": "OMNISTRATE_DEDICATED_TENANCY",
                     *           "versionSetStatus": "Preferred|Active|Deprecated|Pending"
                     *         },
                     *         {
                     *           "AutoApproveSubscription": false,
                     *           "accountConfigIds": [
                     *             "ac-12345678",
                     *             "ac-23456789"
                     *           ],
                     *           "activeAccountConfigIds": {
                     *             "aws": "ac-12345678",
                     *             "gcp": "ac-23456789"
                     *           },
                     *           "apiVersion": "v1",
                     *           "awsRegions": [
                     *             "us-east-2",
                     *             "ca-central-1"
                     *           ],
                     *           "azureRegions": [
                     *             "northcentralus"
                     *           ],
                     *           "deploymentConfigId": "dc-12345678",
                     *           "gcpRegions": [
                     *             "us-central1"
                     *           ],
                     *           "hasPendingChanges": true,
                     *           "isProductTierDisabled": true,
                     *           "latestMajorVersion": "3.0",
                     *           "modelType": "CUSTOMER_HOSTED",
                     *           "privateRegions": [
                     *             "n/a"
                     *           ],
                     *           "productTierDescription": "A premium product tier",
                     *           "productTierDocumentation": "Any documentation",
                     *           "productTierFeatures": {
                     *             "LOGS": true,
                     *             "METRICS": false
                     *           },
                     *           "productTierId": "pt-12345678",
                     *           "productTierKey": "premium",
                     *           "productTierName": "Premium",
                     *           "productTierPlanDescription": "A premium plan",
                     *           "productTierPricing": {
                     *             "price1": "value1"
                     *           },
                     *           "productTierSupport": "Any support",
                     *           "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                     *           "serviceApiId": "sa-12345678",
                     *           "serviceEnvironmentId": "se-12345678",
                     *           "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                     *           "serviceModelFeatures": [
                     *             {
                     *               "configuration": {
                     *                 "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *               },
                     *               "feature": "Ad molestiae officia placeat sed est ipsam."
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *               },
                     *               "feature": "Ad molestiae officia placeat sed est ipsam."
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *               },
                     *               "feature": "Ad molestiae officia placeat sed est ipsam."
                     *             }
                     *           ],
                     *           "serviceModelId": "sm-12345678",
                     *           "serviceModelName": "MySQL multi-writer service hosted model",
                     *           "tierType": "OMNISTRATE_DEDICATED_TENANCY",
                     *           "versionSetStatus": "Preferred|Active|Deprecated|Pending"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListServicePlansResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list product tiers */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-config-api/CreateImageConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID to use for the infra
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "customImageCommandsAndArgs": {
                 *         "args": [
                 *           "-d",
                 *           "mysql"
                 *         ],
                 *         "commands": [
                 *           "echo",
                 *           "Hello, World!"
                 *         ]
                 *       },
                 *       "description": "A image configuration for my new entity",
                 *       "imageName": "mysql",
                 *       "imageRegistryId": "ir-12345678",
                 *       "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
                 *       "imageTag": "latest",
                 *       "serviceEnvironmentId": "se-12345678"
                 *     } */
                "application/json": components["schemas"]["CreateImageConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create the image config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-config-api/DescribeImageConfig": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the image config to describe. If not specified, the latest version is described.
                 * @example Facilis aliquam dolorem.
                 */
                ProductTierVersion?: string;
                /**
                 * @description ProductTierId of the image config to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The image configuration ID
                 * @example imgc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "customImageCommandsAndArgs": {
                     *         "args": [
                     *           "-d",
                     *           "mysql"
                     *         ],
                     *         "commands": [
                     *           "echo",
                     *           "Hello, World!"
                     *         ]
                     *       },
                     *       "description": "An image configuration for my new entity",
                     *       "id": "imgc-12345678",
                     *       "imageName": "mysql",
                     *       "imageRegistryId": "ir-12345678",
                     *       "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
                     *       "imageTag": "v1",
                     *       "serviceEnvironmentId": "se-12345678",
                     *       "serviceId": "s-12345678"
                     *     } */
                    "application/json": components["schemas"]["DescribeImageConfigResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe the image config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-config-api/DeleteImageConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The image configuration ID
                 * @example imgc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete the image config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-config-api/UpdateImageConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The image configuration ID
                 * @example imgc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "customImageCommandsAndArgs": {
                 *         "args": [
                 *           "-d",
                 *           "mysql"
                 *         ],
                 *         "commands": [
                 *           "echo",
                 *           "Hello, World!"
                 *         ]
                 *       },
                 *       "description": "An image configuration for my new entity",
                 *       "imageName": "mysql",
                 *       "imageRegistryId": "ir-12345678",
                 *       "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
                 *       "imageTag": "v1"
                 *     } */
                "application/json": components["schemas"]["UpdateImageConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update the image config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-config-api/ReleaseImageConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The image configuration ID
                 * @example imgc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "productTierId": "pt-12345678"
                 *     } */
                "application/json": components["schemas"]["ReleaseImageConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to release the image config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-config-api/RolloutFleetImageStatus": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The image configuration ID
                 * @example imgc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "status": "IN_PROGRESS"
                     *     } */
                    "application/json": components["schemas"]["RolloutFleetImageStatusResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get the fleet image rollout status */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-config-api/RolloutFleetImageConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The image configuration ID
                 * @example imgc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to rollout to the fleet */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "infra-config-api/CreateInfraConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "computeConfigId": "cc-12345678",
                 *       "customTag": {
                 *         "key": "customKey",
                 *         "value": "customValue"
                 *       },
                 *       "description": "Infra config used for the base tier MySQL service",
                 *       "name": "MySQL Writer Infra Config",
                 *       "networkConfigId": "nc-12345678",
                 *       "serviceEnvironmentId": "se-12345678",
                 *       "storageConfigId": "sc-12345678"
                 *     } */
                "application/json": components["schemas"]["CreateInfraConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create an infra config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "infra-config-api/DescribeInfraConfig": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the infra config to describe. If not specified, the latest version is described.
                 * @example Reiciendis aut iste sit consequatur.
                 */
                ProductTierVersion?: string;
                /**
                 * @description ProductTierId of the infra config to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Infra Config ID to operate on
                 * @example ic-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "computeConfigId": "cc-12345678",
                     *       "customTag": {
                     *         "key": "customKey",
                     *         "value": "customValue"
                     *       },
                     *       "description": "Infra config used for the base tier MySQL service",
                     *       "id": "ic-12345678",
                     *       "name": "MySQL Writer Infra Config",
                     *       "networkConfigId": "nc-12345678",
                     *       "serviceEnvironmentId": "se-12345678",
                     *       "serviceId": "s-12345678",
                     *       "storageConfigId": "sc-12345678"
                     *     } */
                    "application/json": components["schemas"]["DescribeInfraConfigResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe an infra config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "infra-config-api/DeleteInfraConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Infra Config ID to operate on
                 * @example ic-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete an infra config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "infra-config-api/UpdateInfraConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Infra Config ID to operate on
                 * @example ic-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "computeConfigId": "cc-12345678",
                 *       "customTag": {
                 *         "key": "customKey",
                 *         "value": "customValue"
                 *       },
                 *       "description": "Infra config used for the base tier MySQL service",
                 *       "name": "MySQL Writer Infra Config",
                 *       "networkConfigId": "nc-12345678",
                 *       "storageConfigId": "sc-12345678"
                 *     } */
                "application/json": components["schemas"]["UpdateInfraConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update an infra config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "infra-config-api/ListAssociatedResources": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Infra Config ID to operate on
                 * @example ic-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "ic-12345678",
                     *       "resourceIds": [
                     *         "r-12345678",
                     *         "r-abcdefgh"
                     *       ],
                     *       "serviceId": "s-12345678"
                     *     } */
                    "application/json": components["schemas"]["ListAssociatedResourcesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list associated resources */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "infra-config-api/DetachComputeConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Infra Config ID to operate on
                 * @example ic-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to detach a compute config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "infra-config-api/DetachNetworkConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Infra Config ID to operate on
                 * @example ic-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to detach a network config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "infra-config-api/ReleaseInfraConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Infra Config ID to operate on
                 * @example ic-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "productTierId": "pt-12345678"
                 *     } */
                "application/json": components["schemas"]["ReleaseInfraConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to release an infra config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "infra-config-api/RolloutFleetInfra": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Infra Config ID to operate on
                 * @example ic-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to rollout to the fleet */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "infra-config-api/RolloutFleetInfraStatus": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Infra Config ID to operate on
                 * @example ic-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "status": "IN_PROGRESS"
                     *     } */
                    "application/json": components["schemas"]["RolloutFleetInfraStatusResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get the fleet rollout infra status */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "infra-config-api/DetachStorageConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Infra Config ID to operate on
                 * @example ic-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to detach a storage config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "input-parameter-api/CreateInputParameter": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service that this output parameter belongs to
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "defaultValue": "default value",
                 *       "dependentResourceId": "r-12345678",
                 *       "description": "Unde quos sequi id aut.",
                 *       "hasOptions": false,
                 *       "isList": false,
                 *       "key": "m7s",
                 *       "labeledOptions": {
                 *         "large": "t3.xlarge",
                 *         "medium": "t3.large",
                 *         "small": "t3.medium"
                 *       },
                 *       "limits": {
                 *         "max": "Magnam dolor enim et occaecati aperiam.",
                 *         "maxLength": "Hic natus est tempore.",
                 *         "min": "Architecto enim voluptatibus.",
                 *         "minLength": "Distinctio error perferendis."
                 *       },
                 *       "modifiable": true,
                 *       "name": "os",
                 *       "options": [
                 *         "a",
                 *         "b",
                 *         "c",
                 *         "default value"
                 *       ],
                 *       "regex": "^[a-zA-Z0-9_-]+$",
                 *       "required": false,
                 *       "resourceId": "r-12345678",
                 *       "tabIndex": 1,
                 *       "type": "Provident omnis animi."
                 *     } */
                "application/json": components["schemas"]["CreateInputParameterRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create an input parameter */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "input-parameter-api/DescribeInputParameter": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the instance to describe. If not specified, the latest version is described.
                 * @example Sunt voluptas ex eligendi reprehenderit.
                 */
                ProductTierVersion?: string;
                /**
                 * @description Product tier id of the instance to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The ID of the service that this output parameter belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description ID of the input parameter
                 * @example var-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "defaultValue": "true",
                     *       "dependentResourceId": "r-12345678",
                     *       "description": "Voluptatem expedita excepturi qui dicta.",
                     *       "hasOptions": true,
                     *       "id": "var-12345678",
                     *       "isList": true,
                     *       "key": "g",
                     *       "labeledOptions": {
                     *         "large": "t3.xlarge",
                     *         "medium": "t3.large",
                     *         "small": "t3.medium"
                     *       },
                     *       "limits": {
                     *         "max": "Natus iusto rem alias consequatur aut.",
                     *         "maxLength": "Maiores temporibus pariatur praesentium expedita.",
                     *         "min": "Sunt eius.",
                     *         "minLength": "Totam facilis fugiat."
                     *       },
                     *       "modifiable": true,
                     *       "name": "2",
                     *       "options": [
                     *         "true",
                     *         "false"
                     *       ],
                     *       "regex": "^[a-zA-Z0-9_-]+$",
                     *       "required": true,
                     *       "resourceId": "r-12345678",
                     *       "serviceId": "s-12345678",
                     *       "tabIndex": 1,
                     *       "type": "Dolore consequuntur rerum quia unde."
                     *     } */
                    "application/json": components["schemas"]["DescribeInputParameterResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe an input parameter */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "input-parameter-api/DeleteInputParameter": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service that this output parameter belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description ID of the input parameter
                 * @example var-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete an input parameter */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "input-parameter-api/UpdateInputParameter": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service that this output parameter belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description ID of the input parameter
                 * @example var-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "defaultValue": "[\"1\", \"2.8\", \"3\"]",
                 *       "description": "Voluptates ipsam repudiandae esse et.",
                 *       "hasOptions": false,
                 *       "labeledOptions": {
                 *         "large": "t3.xlarge",
                 *         "medium": "t3.large",
                 *         "small": "t3.medium"
                 *       },
                 *       "limits": {
                 *         "max": "Magnam dolor enim et occaecati aperiam.",
                 *         "maxLength": "Hic natus est tempore.",
                 *         "min": "Architecto enim voluptatibus.",
                 *         "minLength": "Distinctio error perferendis."
                 *       },
                 *       "modifiable": true,
                 *       "name": "ncn",
                 *       "options": [
                 *         "[\"1\", \"2.8\", \"3\"]",
                 *         "[\"3.4\", \"4.5\"]"
                 *       ],
                 *       "regex": "^[0-9]+$",
                 *       "required": true,
                 *       "tabIndex": 1
                 *     } */
                "application/json": components["schemas"]["UpdateInputParameterRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update an input parameter */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-model-api/CreateServiceModel": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service this model is for
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "accountConfigIds": [
                 *         "ac-12345678",
                 *         "ac-23456789"
                 *       ],
                 *       "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                 *       "features": [
                 *         {
                 *           "configuration": {
                 *             "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
                 *             "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
                 *           },
                 *           "feature": "Consequatur placeat in voluptate."
                 *         },
                 *         {
                 *           "configuration": {
                 *             "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
                 *             "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
                 *           },
                 *           "feature": "Consequatur placeat in voluptate."
                 *         },
                 *         {
                 *           "configuration": {
                 *             "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
                 *             "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
                 *           },
                 *           "feature": "Consequatur placeat in voluptate."
                 *         },
                 *         {
                 *           "configuration": {
                 *             "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
                 *             "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
                 *           },
                 *           "feature": "Consequatur placeat in voluptate."
                 *         }
                 *       ],
                 *       "modelType": "CUSTOMER_HOSTED",
                 *       "name": "MySQL multi-writer service hosted model",
                 *       "serviceApiId": "sa-12345678"
                 *     } */
                "application/json": components["schemas"]["CreateServiceModelRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a service model */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-model-api/DescribeServiceModel": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID this model belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service model ID
                 * @example sm-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "accountConfigIds": [
                     *         "ac-12345678",
                     *         "ac-23456789"
                     *       ],
                     *       "activeAccountConfigIds": {
                     *         "aws": "ac-12345678",
                     *         "gcp": "ac-23456789"
                     *       },
                     *       "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                     *       "features": [
                     *         {
                     *           "configuration": {
                     *             "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *           },
                     *           "feature": "Ad molestiae officia placeat sed est ipsam."
                     *         },
                     *         {
                     *           "configuration": {
                     *             "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *           },
                     *           "feature": "Ad molestiae officia placeat sed est ipsam."
                     *         },
                     *         {
                     *           "configuration": {
                     *             "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *           },
                     *           "feature": "Ad molestiae officia placeat sed est ipsam."
                     *         },
                     *         {
                     *           "configuration": {
                     *             "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *           },
                     *           "feature": "Ad molestiae officia placeat sed est ipsam."
                     *         }
                     *       ],
                     *       "id": "sm-12345678",
                     *       "key": "mysql-multi-writer-service-hosted-model",
                     *       "modelType": "CUSTOMER_HOSTED",
                     *       "name": "MySQL multi-writer service hosted model",
                     *       "productTiers": [
                     *         "pt-12345678",
                     *         "pt-87654321"
                     *       ],
                     *       "serviceApiId": "sa-12345678",
                     *       "serviceId": "s-12345678"
                     *     } */
                    "application/json": components["schemas"]["DescribeServiceModelResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a service model */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-model-api/DeleteServiceModel": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID this model belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service model ID
                 * @example sm-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a service model */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-model-api/UpdateServiceModel": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID this model belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service model ID
                 * @example sm-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                 *       "name": "MySQL multi-writer service hosted model"
                 *     } */
                "application/json": components["schemas"]["UpdateServiceModelRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update a service model */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-model-api/AddAccountConfigToServiceModel": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID this model belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service model ID
                 * @example sm-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "accountConfigId": "ac-12345678"
                 *     } */
                "application/json": components["schemas"]["AddAccountConfigToServiceModelRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to add an account config to a service model */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-model-api/RemoveAccountConfigFromServiceModel": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID this model belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service model ID
                 * @example sm-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "accountConfigId": "ac-12345678"
                 *     } */
                "application/json": components["schemas"]["RemoveAccountConfigFromServiceModelRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to remove an account config from a service model */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-model-api/SetActiveAccountConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID this model belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service model ID
                 * @example sm-12345678
                 */
                id: string;
                /**
                 * @description The infrastructure account configuration ID
                 * @example ac-12345678
                 */
                accountConfigId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to set the active account config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-model-api/EnableServiceModelFeature": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID this model belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service model ID
                 * @example sm-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "configuration": {
                 *         "Dolor labore eius id totam voluptatem.": "Corrupti laboriosam illo.",
                 *         "Et recusandae.": "Voluptatum esse eos aliquid repudiandae eum."
                 *       },
                 *       "feature": "Iure consequuntur autem est sed."
                 *     } */
                "application/json": components["schemas"]["EnableServiceModelFeatureRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used when the service model feature could not be enabled */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-model-api/DisableServiceModelFeature": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID this model belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service model ID
                 * @example sm-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "feature": "Iusto sed distinctio inventore reprehenderit laborum incidunt."
                 *     } */
                "application/json": components["schemas"]["DisableServiceModelFeatureRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used when the service model feature could not be disabled */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-model-api/ReleaseServiceModelStatus": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID this model belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service model ID
                 * @example sm-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "status": "READY"
                     *     } */
                    "application/json": components["schemas"]["ReleaseServiceModelResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to release a service model status */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "product-tier-api/ListProductTier": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Service model ID
                 * @example sm-12345678
                 */
                serviceModelId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "Sint quidem veritatis et sit qui.",
                     *         "Et saepe minus culpa molestias.",
                     *         "Laboriosam corporis."
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListProductTiersResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list product tiers */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "vunit-api/ListVUnits": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Service ID for the VUnit
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Service Model ID for the VUnit
                 * @example sm-12345678
                 */
                serviceModelId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "cloudProvider": "aws",
                 *       "region": "us-west-2"
                 *     } */
                "application/json": components["schemas"]["ListVUnitsRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": {
                     *         "aws": [
                     *           "vu-12345678",
                     *           "vu-abcdefgh"
                     *         ],
                     *         "gcp": [
                     *           "vu-1234efgh"
                     *         ]
                     *       },
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListVUnitsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list vunits */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-model-api/CopyServiceModel": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID this model belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The source service model ID
                 * @example sm-12345678
                 */
                sourceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "accountConfigIds": [
                 *         "ac-12345678",
                 *         "ac-23456789"
                 *       ],
                 *       "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                 *       "features": [
                 *         {
                 *           "configuration": {
                 *             "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
                 *             "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
                 *           },
                 *           "feature": "Consequatur placeat in voluptate."
                 *         },
                 *         {
                 *           "configuration": {
                 *             "Accusantium unde et quia culpa aut.": "Deleniti dicta repellat.",
                 *             "Est eaque ut voluptates sed ut.": "Ea incidunt qui ut ipsam non quia."
                 *           },
                 *           "feature": "Consequatur placeat in voluptate."
                 *         }
                 *       ],
                 *       "name": "MySQL multi-writer service hosted model",
                 *       "targetServiceModelType": "CUSTOMER_HOSTED",
                 *       "targetTierType": "OMNISTRATE_DEDICATED_TENANCY"
                 *     } */
                "application/json": components["schemas"]["CopyServiceModelRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to copy a service model */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "network-config-api/ListNetworkConfig": {
        parameters: {
            query?: {
                /**
                 * @description Is network config managed by omnistrate
                 * @example false
                 */
                managed?: boolean;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID to list network configs for
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "Dolores enim molestiae.",
                     *         "Et nisi cum vel ullam.",
                     *         "Est vero neque maxime."
                     *       ],
                     *       "nextPageToken": "token"
                     *     } */
                    "application/json": components["schemas"]["ListNetworkConfigsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list network configs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "network-config-api/CreateNetworkConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A multi-zone HA network config",
                 *       "endpointPerReplica": true,
                 *       "internal": true,
                 *       "name": "Multi-zone",
                 *       "openPorts": [
                 *         1299,
                 *         3306
                 *       ],
                 *       "privateNetworkingConfiguration": {
                 *         "privateLinkConfiguration": {
                 *           "awsPrivateLinkConfigurations": [
                 *             {
                 *               "port": 80,
                 *               "targetGroupName": "my-target-group"
                 *             },
                 *             {
                 *               "port": 80,
                 *               "targetGroupName": "my-target-group"
                 *             }
                 *           ]
                 *         }
                 *       },
                 *       "publicNetworkingConfiguration": {
                 *         "enableClusterLoadBalancer": true,
                 *         "enableNodeLoadBalancer": true
                 *       },
                 *       "stableEgressIP": true,
                 *       "tlsTerminationPort": 443,
                 *       "zoneConfiguration": "Dolores velit repellat ut maiores officiis rerum."
                 *     } */
                "application/json": components["schemas"]["CreateNetworkConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create network config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "network-config-api/DescribeNetworkConfig": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the network config to describe. If not specified, the latest version is described.
                 * @example Ut distinctio.
                 */
                ProductTierVersion?: string;
                /**
                 * @description ProductTierId of the network config to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The ID of the service
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the network config
                 * @example nc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "description": "A multi-zone HA network config",
                     *       "endpointPerReplica": true,
                     *       "id": "nc-12345678",
                     *       "infraConfigIDs": [
                     *         "ic-12345678",
                     *         "ic-abcdefgh"
                     *       ],
                     *       "internal": true,
                     *       "name": "Multi-zone",
                     *       "openPorts": [
                     *         1299,
                     *         3306
                     *       ],
                     *       "privateNetworkingConfiguration": {
                     *         "privateLinkConfiguration": {
                     *           "awsPrivateLinkConfigurations": [
                     *             {
                     *               "port": 80,
                     *               "targetGroupName": "my-target-group"
                     *             },
                     *             {
                     *               "port": 80,
                     *               "targetGroupName": "my-target-group"
                     *             },
                     *             {
                     *               "port": 80,
                     *               "targetGroupName": "my-target-group"
                     *             }
                     *           ]
                     *         }
                     *       },
                     *       "publicNetworkingConfiguration": {
                     *         "enableClusterLoadBalancer": true,
                     *         "enableNodeLoadBalancer": true
                     *       },
                     *       "serviceId": "s-12345678",
                     *       "stableEgressIP": true,
                     *       "tlsTerminationPort": 443,
                     *       "zoneConfiguration": "Quo architecto sit consequatur at itaque aspernatur."
                     *     } */
                    "application/json": components["schemas"]["DescribeNetworkConfigResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe network config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "network-config-api/DeleteNetworkConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the network config
                 * @example nc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a network config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "network-config-api/UpdateNetworkConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the network config
                 * @example nc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A multi-zone HA network config",
                 *       "endpointPerReplica": true,
                 *       "internal": true,
                 *       "name": "Multi-zone",
                 *       "openPorts": [
                 *         1299,
                 *         3306
                 *       ],
                 *       "privateNetworkingConfiguration": {
                 *         "privateLinkConfiguration": {
                 *           "awsPrivateLinkConfigurations": [
                 *             {
                 *               "port": 80,
                 *               "targetGroupName": "my-target-group"
                 *             },
                 *             {
                 *               "port": 80,
                 *               "targetGroupName": "my-target-group"
                 *             }
                 *           ]
                 *         }
                 *       },
                 *       "publicNetworkingConfiguration": {
                 *         "enableClusterLoadBalancer": true,
                 *         "enableNodeLoadBalancer": true
                 *       },
                 *       "stableEgressIP": true,
                 *       "tlsTerminationPort": 443,
                 *       "zoneConfiguration": "Occaecati exercitationem adipisci eum."
                 *     } */
                "application/json": components["schemas"]["UpdateNetworkConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update network config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "vunit-api/DescribeNetwork": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Service ID context
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Network to operate on
                 * @example n-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "cidr": "10.0.0.0/16",
                     *       "id": "n-12345678",
                     *       "networkConfigId": "nc-12345678",
                     *       "serviceId": "s-12345678",
                     *       "type": "PUBLIC",
                     *       "vunitId": "vu-12345678"
                     *     } */
                    "application/json": components["schemas"]["DescribeNetworkResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a network */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "output-parameter-api/CreateOutputParameter": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service that this output parameter belongs to
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "Username of the user created in the target system",
                 *       "key": "username",
                 *       "name": "Username",
                 *       "resourceId": "r-12345678",
                 *       "value": "johndoe",
                 *       "valueRef": "$var.username",
                 *       "valueType": "Laborum beatae eveniet."
                 *     } */
                "application/json": components["schemas"]["CreateOutputParameterRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create an output parameter */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "output-parameter-api/DescribeOutputParameter": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the resource to describe. If not specified, the latest version is described.
                 * @example Ut fugiat eveniet reprehenderit.
                 */
                ProductTierVersion?: string;
                /**
                 * @description ProductTierId of the resource to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The ID of the service that this output parameter belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the output parameter
                 * @example op-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "description": "Username of the user created in the target system",
                     *       "id": "op-12345678",
                     *       "key": "username",
                     *       "name": "Username",
                     *       "resourceId": "r-12345678",
                     *       "serviceId": "s-12345678",
                     *       "value": "johndoe",
                     *       "valueRef": "$var.username",
                     *       "valueType": "Sed soluta blanditiis neque ut."
                     *     } */
                    "application/json": components["schemas"]["DescribeOutputParameterResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe an output parameter */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "output-parameter-api/DeleteOutputParameter": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service that this output parameter belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the output parameter
                 * @example op-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete an output parameter */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "output-parameter-api/UpdateOutputParameter": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service that this output parameter belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the output parameter
                 * @example op-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "Username of the user created in the target system",
                 *       "name": "Username",
                 *       "value": "johndoe",
                 *       "valueRef": "$var.username",
                 *       "valueType": "Quibusdam veniam quia."
                 *     } */
                "application/json": components["schemas"]["UpdateOutputParameterRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update an output parameter */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "product-tier-api/CreateProductTier": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Service ID
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "allowCreatesWhenPaymentNotConfigured": true,
                 *       "autoApproveSubscription": false,
                 *       "awsRegions": [
                 *         "us-east-2",
                 *         "ca-central-1"
                 *       ],
                 *       "azureRegions": [
                 *         "northcentralus"
                 *       ],
                 *       "billingProductID": "abc123",
                 *       "billingProviders": [
                 *         "STRIPE",
                 *         "BRING_YOUR_OWN"
                 *       ],
                 *       "defaultBillingProvider": "STRIPE",
                 *       "description": "A premium product tier",
                 *       "documentation": "Any documentation",
                 *       "exportUsageMetering": true,
                 *       "exportUsageMeteringConfig": {
                 *         "GCS": {
                 *           "GCSBucketName": "my_billing_bucket_name"
                 *         },
                 *         "S3": {
                 *           "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
                 *           "S3BucketRegion": "us-east-1"
                 *         }
                 *       },
                 *       "gcpRegions": [
                 *         "us-central1"
                 *       ],
                 *       "isDisabled": false,
                 *       "maxNumberOfInstances": 5,
                 *       "name": "Premium",
                 *       "planDescription": "A premium plan",
                 *       "pricePerUnit": {
                 *         "CPU core hours": {
                 *           "amount": 0.001,
                 *           "currency": "USD"
                 *         },
                 *         "Memory GiB hours": {
                 *           "amount": 0.0001,
                 *           "currency": "USD"
                 *         },
                 *         "Storage GiB hours": {
                 *           "amount": 0.0001,
                 *           "currency": "USD"
                 *         }
                 *       },
                 *       "pricing": {
                 *         "price1": "value1"
                 *       },
                 *       "privateRegions": [
                 *         "n/a"
                 *       ],
                 *       "serviceModelId": "sm-12345678",
                 *       "support": "Any support",
                 *       "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                 *     } */
                "application/json": components["schemas"]["CreateProductTierRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a product tier */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "product-tier-api/DescribeProductTier": {
        parameters: {
            query?: {
                /**
                 * @description The version number for the specific version set
                 * @example 3.0
                 */
                version?: string;
            };
            header?: never;
            path: {
                /**
                 * @description Service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Product tier ID
                 * @example pt-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "allowCreatesWhenPaymentNotConfigured": true,
                     *       "apiGroups": {
                     *         "r-12345678": "v1",
                     *         "r-23456789": "v2",
                     *         "r-34567890": "v3"
                     *       },
                     *       "autoApproveSubscription": false,
                     *       "awsRegions": [
                     *         "us-east-2",
                     *         "ca-central-1"
                     *       ],
                     *       "azureRegions": [
                     *         "northcentralus"
                     *       ],
                     *       "billingProductID": "abc123",
                     *       "billingProviders": [
                     *         "STRIPE",
                     *         "BRING_YOUR_OWN"
                     *       ],
                     *       "cloudProvidersConfigReadiness": {
                     *         "aws": {
                     *           "resourceA": "missing terraform configuration",
                     *           "resourceB": "missing cloudformation configuration"
                     *         }
                     *       },
                     *       "defaultBillingProvider": "STRIPE",
                     *       "description": "A premium product tier",
                     *       "documentation": "Any documentation",
                     *       "enabledFeatures": [
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         }
                     *       ],
                     *       "exportUsageMetering": true,
                     *       "exportUsageMeteringConfig": {
                     *         "GCS": {
                     *           "GCSBucketName": "my_billing_bucket_name"
                     *         },
                     *         "S3": {
                     *           "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
                     *           "S3BucketRegion": "us-east-1"
                     *         }
                     *       },
                     *       "features": {
                     *         "LOGS": true,
                     *         "METRICS": false
                     *       },
                     *       "gcpRegions": [
                     *         "us-central1"
                     *       ],
                     *       "id": "pt-12345678",
                     *       "isDisabled": false,
                     *       "key": "premium",
                     *       "maxNumberOfInstances": 5,
                     *       "name": "Premium",
                     *       "planDescription": "A premium plan",
                     *       "pricePerUnit": {
                     *         "CPU core hours": {
                     *           "amount": 0.001,
                     *           "currency": "USD"
                     *         },
                     *         "Memory GiB hours": {
                     *           "amount": 0.0001,
                     *           "currency": "USD"
                     *         },
                     *         "Storage GiB hours": {
                     *           "amount": 0.0001,
                     *           "currency": "USD"
                     *         }
                     *       },
                     *       "pricing": {
                     *         "price1": "value1"
                     *       },
                     *       "privateRegions": [
                     *         "n/a"
                     *       ],
                     *       "serviceId": "s-12345678",
                     *       "serviceModelId": "sm-12345678",
                     *       "support": "Any support",
                     *       "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                     *     } */
                    "application/json": components["schemas"]["DescribeProductTierResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a product tier */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "product-tier-api/DeleteProductTier": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Product tier ID
                 * @example pt-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a product tier */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "product-tier-api/UpdateProductTier": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Product tier ID
                 * @example pt-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "allowCreatesWhenPaymentNotConfigured": true,
                 *       "autoApproveSubscription": false,
                 *       "awsRegions": [
                 *         "us-east-2",
                 *         "ca-central-1"
                 *       ],
                 *       "azureRegions": [
                 *         "northcentralus"
                 *       ],
                 *       "billingProductID": "abc123",
                 *       "billingProviders": [
                 *         "STRIPE",
                 *         "BRING_YOUR_OWN"
                 *       ],
                 *       "defaultBillingProvider": "STRIPE",
                 *       "description": "A premium product tier",
                 *       "documentation": "Any documentation",
                 *       "exportUsageMetering": true,
                 *       "exportUsageMeteringConfig": {
                 *         "GCS": {
                 *           "GCSBucketName": "my_billing_bucket_name"
                 *         },
                 *         "S3": {
                 *           "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
                 *           "S3BucketRegion": "us-east-1"
                 *         }
                 *       },
                 *       "gcpRegions": [
                 *         "us-central1"
                 *       ],
                 *       "isDisabled": false,
                 *       "maxNumberOfInstances": 5,
                 *       "name": "Premium",
                 *       "planDescription": "A premium plan",
                 *       "pricePerUnit": {
                 *         "CPU core hours": {
                 *           "amount": 0.001,
                 *           "currency": "USD"
                 *         },
                 *         "Memory GiB hours": {
                 *           "amount": 0.0001,
                 *           "currency": "USD"
                 *         },
                 *         "Storage GiB hours": {
                 *           "amount": 0.0001,
                 *           "currency": "USD"
                 *         }
                 *       },
                 *       "pricing": {
                 *         "price1": "value1"
                 *       },
                 *       "privateRegions": [
                 *         "n/a"
                 *       ],
                 *       "support": "Any support",
                 *       "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                 *     } */
                "application/json": components["schemas"]["UpdateProductTierRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update a product tier */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "product-tier-api/EnableProductTierFeature": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Product tier ID
                 * @example pt-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "configuration": {
                 *         "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name"
                 *       },
                 *       "feature": "LOGS",
                 *       "scope": "INTERNAL"
                 *     } */
                "application/json": components["schemas"]["EnableProductTierFeatureRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used when the product tier feature could not be enabled */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "product-tier-api/DisableProductTierFeature": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Product tier ID
                 * @example pt-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "feature": "LOGS",
                 *       "scope": "INTERNAL"
                 *     } */
                "application/json": components["schemas"]["DisableProductTierFeatureRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used when the product tier feature could not be disabled */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-plan-api/GetServicePlan": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description Product tier ID
                 * @example pt-12345678
                 */
                productTierId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "AutoApproveSubscription": false,
                     *       "accountConfigIds": [
                     *         "ac-12345678",
                     *         "ac-23456789"
                     *       ],
                     *       "activeAccountConfigIds": {
                     *         "aws": "ac-12345678",
                     *         "gcp": "ac-23456789"
                     *       },
                     *       "apiVersion": "v1",
                     *       "awsRegions": [
                     *         "us-east-2",
                     *         "ca-central-1"
                     *       ],
                     *       "azureRegions": [
                     *         "northcentralus"
                     *       ],
                     *       "deploymentConfigId": "dc-12345678",
                     *       "gcpRegions": [
                     *         "us-central1"
                     *       ],
                     *       "hasPendingChanges": true,
                     *       "isProductTierDisabled": true,
                     *       "latestMajorVersion": "3.0",
                     *       "modelType": "CUSTOMER_HOSTED",
                     *       "privateRegions": [
                     *         "n/a"
                     *       ],
                     *       "productTierDescription": "A premium product tier",
                     *       "productTierDocumentation": "Any documentation",
                     *       "productTierFeatures": {
                     *         "LOGS": true,
                     *         "METRICS": false
                     *       },
                     *       "productTierId": "pt-12345678",
                     *       "productTierKey": "premium",
                     *       "productTierName": "Premium",
                     *       "productTierPlanDescription": "A premium plan",
                     *       "productTierPricing": {
                     *         "price1": "value1"
                     *       },
                     *       "productTierSupport": "Any support",
                     *       "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                     *       "serviceApiId": "sa-12345678",
                     *       "serviceEnvironmentId": "se-12345678",
                     *       "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                     *       "serviceModelFeatures": [
                     *         {
                     *           "configuration": {
                     *             "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *           },
                     *           "feature": "Ad molestiae officia placeat sed est ipsam."
                     *         },
                     *         {
                     *           "configuration": {
                     *             "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *           },
                     *           "feature": "Ad molestiae officia placeat sed est ipsam."
                     *         },
                     *         {
                     *           "configuration": {
                     *             "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *           },
                     *           "feature": "Ad molestiae officia placeat sed est ipsam."
                     *         },
                     *         {
                     *           "configuration": {
                     *             "Natus tenetur impedit dolorem nam accusamus earum.": "Qui fugiat dolores est magni et."
                     *           },
                     *           "feature": "Ad molestiae officia placeat sed est ipsam."
                     *         }
                     *       ],
                     *       "serviceModelId": "sm-12345678",
                     *       "serviceModelName": "MySQL multi-writer service hosted model",
                     *       "tierType": "OMNISTRATE_DEDICATED_TENANCY",
                     *       "versionSetStatus": "Preferred|Active|Deprecated|Pending"
                     *     } */
                    "application/json": components["schemas"]["GetServicePlanResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list product tiers */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "product-tier-api/CopyProductTier": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The source product tier ID
                 * @example pt-12345678
                 */
                sourceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "allowCreatesWhenPaymentNotConfigured": true,
                 *       "autoApproveSubscription": false,
                 *       "awsRegions": [
                 *         "us-east-2",
                 *         "ca-central-1"
                 *       ],
                 *       "azureRegions": [
                 *         "northcentralus"
                 *       ],
                 *       "billingProductID": "abc123",
                 *       "description": "A premium product tier",
                 *       "documentation": "Any documentation",
                 *       "exportUsageMetering": true,
                 *       "exportUsageMeteringConfig": {
                 *         "GCS": {
                 *           "GCSBucketName": "my_billing_bucket_name"
                 *         },
                 *         "S3": {
                 *           "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name",
                 *           "S3BucketRegion": "us-east-1"
                 *         }
                 *       },
                 *       "gcpRegions": [
                 *         "us-central1"
                 *       ],
                 *       "maxNumberOfInstances": 5,
                 *       "name": "Premium",
                 *       "planDescription": "A premium plan",
                 *       "pricePerUnit": {
                 *         "CPU core hours": {
                 *           "amount": 0.001,
                 *           "currency": "USD"
                 *         },
                 *         "Memory GiB hours": {
                 *           "amount": 0.0001,
                 *           "currency": "USD"
                 *         },
                 *         "Storage GiB hours": {
                 *           "amount": 0.0001,
                 *           "currency": "USD"
                 *         }
                 *       },
                 *       "pricing": {
                 *         "price1": "value1"
                 *       },
                 *       "privateRegions": [
                 *         "n/a"
                 *       ],
                 *       "serviceModelId": "sm-12345678",
                 *       "support": "Any support",
                 *       "targetTierType": "OMNISTRATE_DEDICATED_TENANCY"
                 *     } */
                "application/json": components["schemas"]["CopyProductTierRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a product tier */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tier-version-set-api/CustomerListTierVersionSets": {
        parameters: {
            query?: {
                /** @example token */
                nextPageToken?: string;
                /** @example 10 */
                pageSize?: number;
            };
            header?: never;
            path: {
                /**
                 * @description ID of the Service
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The product tier ID that this version set belongs to.
                 * @example Beatae beatae.
                 */
                productTierId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "nextPageToken": "next-token",
                     *       "tierVersionSets": [
                     *         {
                     *           "autoApproveSubscription": false,
                     *           "baseVersion": "3.0",
                     *           "createdAt": "2020-01-01T00:00:00Z",
                     *           "createdBy": "John Doe",
                     *           "description": "Aliquam placeat et aut deserunt.",
                     *           "enabledFeatures": [
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             }
                     *           ],
                     *           "features": {
                     *             "LOGS": true,
                     *             "METRICS": false
                     *           },
                     *           "instanceCount": 12,
                     *           "latestUpgradePathId": "upgrade-12345678",
                     *           "name": "Regular version set",
                     *           "parentVersion": "2.0",
                     *           "productTierId": "Accusamus sunt omnis dicta consequatur.",
                     *           "releasedAt": "2020-01-01T00:00:00Z",
                     *           "releasedBy": "John Doe",
                     *           "resources": [
                     *             {
                     *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *               "id": "r-12345678",
                     *               "imageConfigId": "imgc-12345678",
                     *               "infraConfigId": "ic-12345678",
                     *               "isExternal": true,
                     *               "managedResourceType": "PortsBasedProxy",
                     *               "name": "MySQL multi-writer service",
                     *               "urlKey": "myResource"
                     *             },
                     *             {
                     *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *               "id": "r-12345678",
                     *               "imageConfigId": "imgc-12345678",
                     *               "infraConfigId": "ic-12345678",
                     *               "isExternal": true,
                     *               "managedResourceType": "PortsBasedProxy",
                     *               "name": "MySQL multi-writer service",
                     *               "urlKey": "myResource"
                     *             }
                     *           ],
                     *           "serviceId": "s-12345678",
                     *           "serviceModelId": "Rerum quasi tenetur explicabo reiciendis.",
                     *           "status": "Preferred|Active|Deprecated|Pending",
                     *           "type": "Major|Incremental|UserDefined",
                     *           "updatedAt": "2020-01-01T00:00:00Z",
                     *           "version": "3.0"
                     *         },
                     *         {
                     *           "autoApproveSubscription": false,
                     *           "baseVersion": "3.0",
                     *           "createdAt": "2020-01-01T00:00:00Z",
                     *           "createdBy": "John Doe",
                     *           "description": "Aliquam placeat et aut deserunt.",
                     *           "enabledFeatures": [
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             }
                     *           ],
                     *           "features": {
                     *             "LOGS": true,
                     *             "METRICS": false
                     *           },
                     *           "instanceCount": 12,
                     *           "latestUpgradePathId": "upgrade-12345678",
                     *           "name": "Regular version set",
                     *           "parentVersion": "2.0",
                     *           "productTierId": "Accusamus sunt omnis dicta consequatur.",
                     *           "releasedAt": "2020-01-01T00:00:00Z",
                     *           "releasedBy": "John Doe",
                     *           "resources": [
                     *             {
                     *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *               "id": "r-12345678",
                     *               "imageConfigId": "imgc-12345678",
                     *               "infraConfigId": "ic-12345678",
                     *               "isExternal": true,
                     *               "managedResourceType": "PortsBasedProxy",
                     *               "name": "MySQL multi-writer service",
                     *               "urlKey": "myResource"
                     *             },
                     *             {
                     *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *               "id": "r-12345678",
                     *               "imageConfigId": "imgc-12345678",
                     *               "infraConfigId": "ic-12345678",
                     *               "isExternal": true,
                     *               "managedResourceType": "PortsBasedProxy",
                     *               "name": "MySQL multi-writer service",
                     *               "urlKey": "myResource"
                     *             }
                     *           ],
                     *           "serviceId": "s-12345678",
                     *           "serviceModelId": "Rerum quasi tenetur explicabo reiciendis.",
                     *           "status": "Preferred|Active|Deprecated|Pending",
                     *           "type": "Major|Incremental|UserDefined",
                     *           "updatedAt": "2020-01-01T00:00:00Z",
                     *           "version": "3.0"
                     *         },
                     *         {
                     *           "autoApproveSubscription": false,
                     *           "baseVersion": "3.0",
                     *           "createdAt": "2020-01-01T00:00:00Z",
                     *           "createdBy": "John Doe",
                     *           "description": "Aliquam placeat et aut deserunt.",
                     *           "enabledFeatures": [
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             }
                     *           ],
                     *           "features": {
                     *             "LOGS": true,
                     *             "METRICS": false
                     *           },
                     *           "instanceCount": 12,
                     *           "latestUpgradePathId": "upgrade-12345678",
                     *           "name": "Regular version set",
                     *           "parentVersion": "2.0",
                     *           "productTierId": "Accusamus sunt omnis dicta consequatur.",
                     *           "releasedAt": "2020-01-01T00:00:00Z",
                     *           "releasedBy": "John Doe",
                     *           "resources": [
                     *             {
                     *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *               "id": "r-12345678",
                     *               "imageConfigId": "imgc-12345678",
                     *               "infraConfigId": "ic-12345678",
                     *               "isExternal": true,
                     *               "managedResourceType": "PortsBasedProxy",
                     *               "name": "MySQL multi-writer service",
                     *               "urlKey": "myResource"
                     *             },
                     *             {
                     *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *               "id": "r-12345678",
                     *               "imageConfigId": "imgc-12345678",
                     *               "infraConfigId": "ic-12345678",
                     *               "isExternal": true,
                     *               "managedResourceType": "PortsBasedProxy",
                     *               "name": "MySQL multi-writer service",
                     *               "urlKey": "myResource"
                     *             }
                     *           ],
                     *           "serviceId": "s-12345678",
                     *           "serviceModelId": "Rerum quasi tenetur explicabo reiciendis.",
                     *           "status": "Preferred|Active|Deprecated|Pending",
                     *           "type": "Major|Incremental|UserDefined",
                     *           "updatedAt": "2020-01-01T00:00:00Z",
                     *           "version": "3.0"
                     *         },
                     *         {
                     *           "autoApproveSubscription": false,
                     *           "baseVersion": "3.0",
                     *           "createdAt": "2020-01-01T00:00:00Z",
                     *           "createdBy": "John Doe",
                     *           "description": "Aliquam placeat et aut deserunt.",
                     *           "enabledFeatures": [
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             }
                     *           ],
                     *           "features": {
                     *             "LOGS": true,
                     *             "METRICS": false
                     *           },
                     *           "instanceCount": 12,
                     *           "latestUpgradePathId": "upgrade-12345678",
                     *           "name": "Regular version set",
                     *           "parentVersion": "2.0",
                     *           "productTierId": "Accusamus sunt omnis dicta consequatur.",
                     *           "releasedAt": "2020-01-01T00:00:00Z",
                     *           "releasedBy": "John Doe",
                     *           "resources": [
                     *             {
                     *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *               "id": "r-12345678",
                     *               "imageConfigId": "imgc-12345678",
                     *               "infraConfigId": "ic-12345678",
                     *               "isExternal": true,
                     *               "managedResourceType": "PortsBasedProxy",
                     *               "name": "MySQL multi-writer service",
                     *               "urlKey": "myResource"
                     *             },
                     *             {
                     *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *               "id": "r-12345678",
                     *               "imageConfigId": "imgc-12345678",
                     *               "infraConfigId": "ic-12345678",
                     *               "isExternal": true,
                     *               "managedResourceType": "PortsBasedProxy",
                     *               "name": "MySQL multi-writer service",
                     *               "urlKey": "myResource"
                     *             }
                     *           ],
                     *           "serviceId": "s-12345678",
                     *           "serviceModelId": "Rerum quasi tenetur explicabo reiciendis.",
                     *           "status": "Preferred|Active|Deprecated|Pending",
                     *           "type": "Major|Incremental|UserDefined",
                     *           "updatedAt": "2020-01-01T00:00:00Z",
                     *           "version": "3.0"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["CustomerListTierVersionSetsResult"];
                };
            };
            /** @description bad_request: Response used when a bad request is made */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used when authentication fails */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used when authorization fails */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used when a failure occurs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tier-version-set-api/ListTierVersionSets": {
        parameters: {
            query?: {
                /**
                 * @description If true, the latest major version is returned. The parameter needs to be specified in isolation.
                 * @example true
                 */
                latestMajorVersionOnly?: boolean;
                /**
                 * @description Returns the latest incremental version for the given major version. The paramenter needs to be specified in isolation.
                 * @example 3.0
                 */
                latestIncrementalVersionForMajorVersion?: string;
                /** @example token */
                nextPageToken?: string;
                /** @example 10 */
                pageSize?: number;
            };
            header?: never;
            path: {
                /**
                 * @description ID of the Service
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The product tier ID that this version set belongs to.
                 * @example Beatae beatae.
                 */
                productTierId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "nextPageToken": "next-token",
                     *       "tierVersionSets": [
                     *         {
                     *           "autoApproveSubscription": false,
                     *           "baseVersion": "3.0",
                     *           "createdAt": "2020-01-01T00:00:00Z",
                     *           "createdBy": "John Doe",
                     *           "description": "Aliquam placeat et aut deserunt.",
                     *           "enabledFeatures": [
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             }
                     *           ],
                     *           "features": {
                     *             "LOGS": true,
                     *             "METRICS": false
                     *           },
                     *           "instanceCount": 12,
                     *           "latestUpgradePathId": "upgrade-12345678",
                     *           "name": "Regular version set",
                     *           "parentVersion": "2.0",
                     *           "productTierId": "Accusamus sunt omnis dicta consequatur.",
                     *           "releasedAt": "2020-01-01T00:00:00Z",
                     *           "releasedBy": "John Doe",
                     *           "resources": [
                     *             {
                     *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *               "id": "r-12345678",
                     *               "imageConfigId": "imgc-12345678",
                     *               "infraConfigId": "ic-12345678",
                     *               "isExternal": true,
                     *               "managedResourceType": "PortsBasedProxy",
                     *               "name": "MySQL multi-writer service",
                     *               "urlKey": "myResource"
                     *             },
                     *             {
                     *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *               "id": "r-12345678",
                     *               "imageConfigId": "imgc-12345678",
                     *               "infraConfigId": "ic-12345678",
                     *               "isExternal": true,
                     *               "managedResourceType": "PortsBasedProxy",
                     *               "name": "MySQL multi-writer service",
                     *               "urlKey": "myResource"
                     *             }
                     *           ],
                     *           "serviceId": "s-12345678",
                     *           "serviceModelId": "Rerum quasi tenetur explicabo reiciendis.",
                     *           "status": "Preferred|Active|Deprecated|Pending",
                     *           "type": "Major|Incremental|UserDefined",
                     *           "updatedAt": "2020-01-01T00:00:00Z",
                     *           "version": "3.0"
                     *         },
                     *         {
                     *           "autoApproveSubscription": false,
                     *           "baseVersion": "3.0",
                     *           "createdAt": "2020-01-01T00:00:00Z",
                     *           "createdBy": "John Doe",
                     *           "description": "Aliquam placeat et aut deserunt.",
                     *           "enabledFeatures": [
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             },
                     *             {
                     *               "configuration": {
                     *                 "provider": "native"
                     *               },
                     *               "feature": "LOGS",
                     *               "scope": "INTERNAL"
                     *             }
                     *           ],
                     *           "features": {
                     *             "LOGS": true,
                     *             "METRICS": false
                     *           },
                     *           "instanceCount": 12,
                     *           "latestUpgradePathId": "upgrade-12345678",
                     *           "name": "Regular version set",
                     *           "parentVersion": "2.0",
                     *           "productTierId": "Accusamus sunt omnis dicta consequatur.",
                     *           "releasedAt": "2020-01-01T00:00:00Z",
                     *           "releasedBy": "John Doe",
                     *           "resources": [
                     *             {
                     *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *               "id": "r-12345678",
                     *               "imageConfigId": "imgc-12345678",
                     *               "infraConfigId": "ic-12345678",
                     *               "isExternal": true,
                     *               "managedResourceType": "PortsBasedProxy",
                     *               "name": "MySQL multi-writer service",
                     *               "urlKey": "myResource"
                     *             },
                     *             {
                     *               "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *               "id": "r-12345678",
                     *               "imageConfigId": "imgc-12345678",
                     *               "infraConfigId": "ic-12345678",
                     *               "isExternal": true,
                     *               "managedResourceType": "PortsBasedProxy",
                     *               "name": "MySQL multi-writer service",
                     *               "urlKey": "myResource"
                     *             }
                     *           ],
                     *           "serviceId": "s-12345678",
                     *           "serviceModelId": "Rerum quasi tenetur explicabo reiciendis.",
                     *           "status": "Preferred|Active|Deprecated|Pending",
                     *           "type": "Major|Incremental|UserDefined",
                     *           "updatedAt": "2020-01-01T00:00:00Z",
                     *           "version": "3.0"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListTierVersionSetsResult"];
                };
            };
            /** @description bad_request: Response used when a bad request is made */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used when authentication fails */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used when authorization fails */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used when a failure occurs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tier-version-set-api/CreateTierVersionSet": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description ID of the Service
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The product tier ID that this version set belongs to.
                 * @example Beatae beatae.
                 */
                productTierId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "Est deserunt voluptatem.",
                 *       "name": "Major version set",
                 *       "parentVersion": "2.0",
                 *       "type": "Major|Incremental|UserDefined"
                 *     } */
                "application/json": components["schemas"]["CreateTierVersionSetRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "version": "3.0"
                     *     } */
                    "application/json": components["schemas"]["CreateTierVersionSetResult"];
                };
            };
            /** @description bad_request: Response used on a bad request. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a version set. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tier-version-set-api/DescribeTierVersionSet": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description ID of the Service
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The product tier ID that this version set belongs to.
                 * @example Beatae beatae.
                 */
                productTierId: string;
                /**
                 * @description The version number for the specific version set.
                 * @example 3.0
                 */
                version: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "autoApproveSubscription": false,
                     *       "baseVersion": "3.0",
                     *       "createdAt": "2020-01-01T00:00:00Z",
                     *       "createdBy": "John Doe",
                     *       "description": "Assumenda esse sit sint sed debitis natus.",
                     *       "enabledFeatures": [
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         }
                     *       ],
                     *       "features": {
                     *         "LOGS": true,
                     *         "METRICS": false
                     *       },
                     *       "instanceCount": 12,
                     *       "latestUpgradePathId": "upgrade-12345678",
                     *       "name": "Regular version set",
                     *       "parentVersion": "2.0",
                     *       "productTierId": "Placeat dolores suscipit iste enim harum.",
                     *       "releasedAt": "2020-01-01T00:00:00Z",
                     *       "releasedBy": "John Doe",
                     *       "resources": [
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         },
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         }
                     *       ],
                     *       "serviceId": "s-12345678",
                     *       "serviceModelId": "Est deleniti et iure et sit iste.",
                     *       "status": "Preferred|Active|Deprecated|Pending",
                     *       "type": "Major|Incremental|UserDefined",
                     *       "updatedAt": "2020-01-01T00:00:00Z",
                     *       "version": "3.0"
                     *     } */
                    "application/json": components["schemas"]["TierVersionSet"];
                };
            };
            /** @description bad_request: Response used when a bad request is made */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used when authentication fails */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used when authorization fails */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used when a failure occurs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tier-version-set-api/UpdateTierVersionSet": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description ID of the Service
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The product tier ID that this version set belongs to.
                 * @example Beatae beatae.
                 */
                productTierId: string;
                /**
                 * @description The version number for the specific version set.
                 * @example 3.0
                 */
                version: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "name": "Updated version set name"
                 *     } */
                "application/json": components["schemas"]["UpdateTierVersionSetRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "autoApproveSubscription": false,
                     *       "baseVersion": "3.0",
                     *       "createdAt": "2020-01-01T00:00:00Z",
                     *       "createdBy": "John Doe",
                     *       "description": "Enim ipsa quaerat eveniet.",
                     *       "enabledFeatures": [
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         }
                     *       ],
                     *       "features": {
                     *         "LOGS": true,
                     *         "METRICS": false
                     *       },
                     *       "instanceCount": 12,
                     *       "latestUpgradePathId": "upgrade-12345678",
                     *       "name": "Regular version set",
                     *       "parentVersion": "2.0",
                     *       "productTierId": "Dolores aut ipsum harum delectus aliquid.",
                     *       "releasedAt": "2020-01-01T00:00:00Z",
                     *       "releasedBy": "John Doe",
                     *       "resources": [
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         },
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         },
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         },
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         }
                     *       ],
                     *       "serviceId": "s-12345678",
                     *       "serviceModelId": "Est ut et vero alias.",
                     *       "status": "Preferred|Active|Deprecated|Pending",
                     *       "type": "Major|Incremental|UserDefined",
                     *       "updatedAt": "2020-01-01T00:00:00Z",
                     *       "version": "3.0"
                     *     } */
                    "application/json": components["schemas"]["TierVersionSet"];
                };
            };
            /** @description bad_request: Response used when a bad request is made */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used when authentication fails */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used when authorization fails */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used when a failure occurs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tier-version-set-api/DeprecateTierVersionSet": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description ID of the Service
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The product tier ID that this version set belongs to.
                 * @example Beatae beatae.
                 */
                productTierId: string;
                /**
                 * @description The version number for the specific version set.
                 * @example 3.0
                 */
                version: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "autoApproveSubscription": false,
                     *       "baseVersion": "3.0",
                     *       "createdAt": "2020-01-01T00:00:00Z",
                     *       "createdBy": "John Doe",
                     *       "description": "Consequuntur minus qui.",
                     *       "enabledFeatures": [
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         }
                     *       ],
                     *       "features": {
                     *         "LOGS": true,
                     *         "METRICS": false
                     *       },
                     *       "instanceCount": 12,
                     *       "latestUpgradePathId": "upgrade-12345678",
                     *       "name": "Regular version set",
                     *       "parentVersion": "2.0",
                     *       "productTierId": "Explicabo delectus aut.",
                     *       "releasedAt": "2020-01-01T00:00:00Z",
                     *       "releasedBy": "John Doe",
                     *       "resources": [
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         },
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         }
                     *       ],
                     *       "serviceId": "s-12345678",
                     *       "serviceModelId": "Laudantium illum facere.",
                     *       "status": "Preferred|Active|Deprecated|Pending",
                     *       "type": "Major|Incremental|UserDefined",
                     *       "updatedAt": "2020-01-01T00:00:00Z",
                     *       "version": "3.0"
                     *     } */
                    "application/json": components["schemas"]["TierVersionSet"];
                };
            };
            /** @description bad_request: Response used when a bad request is made */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used when authentication fails */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used when authorization fails */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used when a failure occurs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tier-version-set-api/DiffTierVersionSets": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description ID of the Service
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The product tier ID that this version set belongs to.
                 * @example Beatae beatae.
                 */
                productTierId: string;
                /**
                 * @description The version number for the version set.
                 * @example 3.0
                 */
                version: string;
                /**
                 * @description The target version to compare against.
                 * @example 3.1
                 */
                anotherVersion: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "anotherVersion": "3.1",
                     *       "productTierId": "Velit voluptas.",
                     *       "resourceChangeSets": {
                     *         "Et iusto quod.": {
                     *           "categorizedResourceChanges": {
                     *             "Modi quidem.": {
                     *               "changes": [
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 },
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 },
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 }
                     *               ],
                     *               "status": "PENDING_UPDATE"
                     *             }
                     *           },
                     *           "imageConfigChanges": {
                     *             "changeState": "PENDING_NEW",
                     *             "imageConfigId": "imgc-12345678",
                     *             "imageName": "mysql"
                     *           },
                     *           "infraConfigChanges": {
                     *             "changeState": "PENDING_NEW",
                     *             "infraConfigId": "ic-12345678",
                     *             "name": "MySQL Writer Infra Config"
                     *           },
                     *           "overallResourceStatus": "PENDING_UPDATE",
                     *           "productTierFeatureChanges": "PENDING_UPDATE",
                     *           "resourceChanges": "PENDING_DELETE",
                     *           "resourceName": "Qui quia officiis id sint."
                     *         },
                     *         "Excepturi et error sequi et dignissimos illo.": {
                     *           "categorizedResourceChanges": {
                     *             "Modi quidem.": {
                     *               "changes": [
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 },
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 },
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 }
                     *               ],
                     *               "status": "PENDING_UPDATE"
                     *             }
                     *           },
                     *           "imageConfigChanges": {
                     *             "changeState": "PENDING_NEW",
                     *             "imageConfigId": "imgc-12345678",
                     *             "imageName": "mysql"
                     *           },
                     *           "infraConfigChanges": {
                     *             "changeState": "PENDING_NEW",
                     *             "infraConfigId": "ic-12345678",
                     *             "name": "MySQL Writer Infra Config"
                     *           },
                     *           "overallResourceStatus": "PENDING_UPDATE",
                     *           "productTierFeatureChanges": "PENDING_UPDATE",
                     *           "resourceChanges": "PENDING_DELETE",
                     *           "resourceName": "Qui quia officiis id sint."
                     *         },
                     *         "Voluptas recusandae ad suscipit aut ut suscipit.": {
                     *           "categorizedResourceChanges": {
                     *             "Modi quidem.": {
                     *               "changes": [
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 },
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 },
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 }
                     *               ],
                     *               "status": "PENDING_UPDATE"
                     *             }
                     *           },
                     *           "imageConfigChanges": {
                     *             "changeState": "PENDING_NEW",
                     *             "imageConfigId": "imgc-12345678",
                     *             "imageName": "mysql"
                     *           },
                     *           "infraConfigChanges": {
                     *             "changeState": "PENDING_NEW",
                     *             "infraConfigId": "ic-12345678",
                     *             "name": "MySQL Writer Infra Config"
                     *           },
                     *           "overallResourceStatus": "PENDING_UPDATE",
                     *           "productTierFeatureChanges": "PENDING_UPDATE",
                     *           "resourceChanges": "PENDING_DELETE",
                     *           "resourceName": "Qui quia officiis id sint."
                     *         }
                     *       },
                     *       "serviceId": "s-12345678",
                     *       "version": "3.0"
                     *     } */
                    "application/json": components["schemas"]["DiffTierVersionSetsResult"];
                };
            };
            /** @description bad_request: Response used when a bad request is made */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used when authentication fails */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used when authorization fails */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used when a failure occurs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tier-version-set-api/PromoteTierVersionSet": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description ID of the Service
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The product tier ID that this version set belongs to.
                 * @example Beatae beatae.
                 */
                productTierId: string;
                /**
                 * @description The version number for the specific version set.
                 * @example 3.0
                 */
                version: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "autoApproveSubscription": false,
                     *       "baseVersion": "3.0",
                     *       "createdAt": "2020-01-01T00:00:00Z",
                     *       "createdBy": "John Doe",
                     *       "description": "Laboriosam omnis sed ab id.",
                     *       "enabledFeatures": [
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         }
                     *       ],
                     *       "features": {
                     *         "LOGS": true,
                     *         "METRICS": false
                     *       },
                     *       "instanceCount": 12,
                     *       "latestUpgradePathId": "upgrade-12345678",
                     *       "name": "Regular version set",
                     *       "parentVersion": "2.0",
                     *       "productTierId": "Ut et voluptatem.",
                     *       "releasedAt": "2020-01-01T00:00:00Z",
                     *       "releasedBy": "John Doe",
                     *       "resources": [
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         },
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         }
                     *       ],
                     *       "serviceId": "s-12345678",
                     *       "serviceModelId": "In odit placeat distinctio et.",
                     *       "status": "Preferred|Active|Deprecated|Pending",
                     *       "type": "Major|Incremental|UserDefined",
                     *       "updatedAt": "2020-01-01T00:00:00Z",
                     *       "version": "3.0"
                     *     } */
                    "application/json": components["schemas"]["TierVersionSet"];
                };
            };
            /** @description bad_request: Response used when a bad request is made */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used when authentication fails */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used when authorization fails */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used when a failure occurs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tier-version-set-api/ReleaseTierVersionSet": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description ID of the Service
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The product tier ID that this version set belongs to.
                 * @example Beatae beatae.
                 */
                productTierId: string;
                /**
                 * @description The version number for the specific version set.
                 * @example 3.0
                 */
                version: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "isPreferred": true,
                 *       "name": "Major version set"
                 *     } */
                "application/json": components["schemas"]["ReleaseTierVersionSetRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "autoApproveSubscription": false,
                     *       "baseVersion": "3.0",
                     *       "createdAt": "2020-01-01T00:00:00Z",
                     *       "createdBy": "John Doe",
                     *       "description": "Officiis facere.",
                     *       "enabledFeatures": [
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         },
                     *         {
                     *           "configuration": {
                     *             "provider": "native"
                     *           },
                     *           "feature": "LOGS",
                     *           "scope": "INTERNAL"
                     *         }
                     *       ],
                     *       "features": {
                     *         "LOGS": true,
                     *         "METRICS": false
                     *       },
                     *       "instanceCount": 12,
                     *       "latestUpgradePathId": "upgrade-12345678",
                     *       "name": "Regular version set",
                     *       "parentVersion": "2.0",
                     *       "productTierId": "Eum voluptatum.",
                     *       "releasedAt": "2020-01-01T00:00:00Z",
                     *       "releasedBy": "John Doe",
                     *       "resources": [
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         },
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         },
                     *         {
                     *           "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "isExternal": true,
                     *           "managedResourceType": "PortsBasedProxy",
                     *           "name": "MySQL multi-writer service",
                     *           "urlKey": "myResource"
                     *         }
                     *       ],
                     *       "serviceId": "s-12345678",
                     *       "serviceModelId": "Amet fugiat aut aut aut.",
                     *       "status": "Preferred|Active|Deprecated|Pending",
                     *       "type": "Major|Incremental|UserDefined",
                     *       "updatedAt": "2020-01-01T00:00:00Z",
                     *       "version": "3.0"
                     *     } */
                    "application/json": components["schemas"]["TierVersionSet"];
                };
            };
            /** @description bad_request: Response used on a bad request. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to release a version set. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/ListResources": {
        parameters: {
            query?: {
                /**
                 * @description Is resource managed by omnistrate
                 * @example false
                 */
                managed?: boolean;
                /**
                 * @description Product tier version of the instance to describe. If not specified, the latest version is described.
                 * @example Quia veniam vitae iure delectus omnis.
                 */
                ProductTierVersion?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The ID of the service to list resources for
                 * @example si-12345678
                 */
                serviceId: string;
                /**
                 * @description The product tier ID
                 * @example pt-12345678
                 */
                productTierId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "r-12345678",
                     *         "r-abcdefgh",
                     *         "r-1234abcd"
                     *       ],
                     *       "nextPageToken": "next-token",
                     *       "resources": [
                     *         {
                     *           "actionHooks": [
                     *             {
                     *               "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                     *               "scope": "CLUSTER",
                     *               "type": "INIT"
                     *             }
                     *           ],
                     *           "additionalSecurityContext": {
                     *             "AddCapabilities": [
                     *               "CAP_NET_ADMIN",
                     *               "CAP_NET_RAW"
                     *             ],
                     *             "DropCapabilities": [
                     *               "CAP_NET_ADMIN",
                     *               "CAP_NET_RAW"
                     *             ],
                     *             "SupplementalGroupIDs": [
                     *               1001,
                     *               999
                     *             ]
                     *           },
                     *           "backupConfiguration": {
                     *             "backupPeriodInHours": 24,
                     *             "backupRetentionInDays": 7
                     *           },
                     *           "blobStorageConfiguration": {
                     *             "GCSConfiguration": {},
                     *             "S3Configuration": {}
                     *           },
                     *           "capabilities": [
                     *             {
                     *               "capability": "SERVERLESS",
                     *               "configuration": {
                     *                 "EnableAutoStop": true,
                     *                 "MinimumNodesInPool": 5,
                     *                 "PortsMappingProxyConfig": {
                     *                   "MaxNumberOfClustersPerProxyInstance": 50,
                     *                   "NumberOfPortsPerCluster": 4
                     *                 },
                     *                 "ProxyId": "r-123456",
                     *                 "ReferenceProxyKey": "resource-proxy",
                     *                 "TargetPort": 5432
                     *               }
                     *             },
                     *             {
                     *               "capability": "SERVERLESS",
                     *               "configuration": {
                     *                 "EnableAutoStop": true,
                     *                 "MinimumNodesInPool": 5,
                     *                 "PortsMappingProxyConfig": {
                     *                   "MaxNumberOfClustersPerProxyInstance": 50,
                     *                   "NumberOfPortsPerCluster": 4
                     *                 },
                     *                 "ProxyId": "r-123456",
                     *                 "ReferenceProxyKey": "resource-proxy",
                     *                 "TargetPort": 5432
                     *               }
                     *             },
                     *             {
                     *               "capability": "SERVERLESS",
                     *               "configuration": {
                     *                 "EnableAutoStop": true,
                     *                 "MinimumNodesInPool": 5,
                     *                 "PortsMappingProxyConfig": {
                     *                   "MaxNumberOfClustersPerProxyInstance": 50,
                     *                   "NumberOfPortsPerCluster": 4
                     *                 },
                     *                 "ProxyId": "r-123456",
                     *                 "ReferenceProxyKey": "resource-proxy",
                     *                 "TargetPort": 5432
                     *               }
                     *             }
                     *           ],
                     *           "customLabels": {
                     *             "key": "value"
                     *           },
                     *           "customSysCTLs": {
                     *             "net.ipv4.tcp_syncookies": "1"
                     *           },
                     *           "customULimits": [
                     *             {
                     *               "ULimitsName": "NoProc",
                     *               "ULimitsType": "Soft",
                     *               "ULimitsValue": 1000
                     *             },
                     *             {
                     *               "ULimitsName": "NoFile",
                     *               "ULimitsType": "Hard",
                     *               "ULimitsValue": 2048
                     *             }
                     *           ],
                     *           "dependencies": [
                     *             {
                     *               "parameterMap": {
                     *                 "clusterId": "writerId",
                     *                 "clusterOrg": "userDatabase"
                     *               },
                     *               "resourceId": "r-12345678"
                     *             },
                     *             {
                     *               "parameterMap": {
                     *                 "clusterId": "readerId",
                     *                 "clusterOrg": "userDatabase"
                     *               },
                     *               "resourceId": "r-abcdef12"
                     *             }
                     *           ],
                     *           "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                     *           "environmentVariables": [
                     *             {
                     *               "name": "MYSQL_ROOT_PASSWORD",
                     *               "value": "password"
                     *             }
                     *           ],
                     *           "fileSystemConfiguration": {
                     *             "EFSFileSystemConfiguration": {
                     *               "PerformanceMode": "generalPurpose|maxIO",
                     *               "ProvisionedThroughputInMibps": 125,
                     *               "ThroughputMode": "provisioned|bursting|elastic"
                     *             }
                     *           },
                     *           "helmChartConfiguration": {
                     *             "chartName": "my-chart",
                     *             "chartRepoName": "my-repo",
                     *             "chartRepoUrl": "https://my-repo.com",
                     *             "chartValues": {
                     *               "key1": "value1",
                     *               "key2": 3,
                     *               "key3": {
                     *                 "key4": "value4"
                     *               }
                     *             },
                     *             "chartVersion": "1.0.0",
                     *             "endpointConfiguration": {
                     *               "admin": {
                     *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                     *                 "networkingType": "PRIVATE",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": false
                     *               },
                     *               "cluster": {
                     *                 "host": "https://my-endpoint.com",
                     *                 "networkingType": "PUBLIC",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": true
                     *               }
                     *             },
                     *             "layeredChartValues": [
                     *               {
                     *                 "values": {
                     *                   "global": {
                     *                     "image": {
                     *                       "tag": "v1.0.0"
                     *                     },
                     *                     "replicaCount": 1,
                     *                     "resources": {
                     *                       "requests": {
                     *                         "cpu": "100m",
                     *                         "memory": "128Mi"
                     *                       }
                     *                     }
                     *                   }
                     *                 }
                     *               },
                     *               {
                     *                 "scope": {
                     *                   "{{ $sys.cloudProviderName }}": "aws"
                     *                 },
                     *                 "valuesFile": {
                     *                   "gitConfiguration": {
                     *                     "accessToken": "ghp_...",
                     *                     "commitSHA": "a1b2c3d4e5f6",
                     *                     "path": "aws/production.yaml",
                     *                     "referenceName": "refs/heads/main",
                     *                     "repositoryUrl": "https://github.com/org/helm-values"
                     *                   }
                     *                 }
                     *               }
                     *             ],
                     *             "namespace": "postgres",
                     *             "password": "my-password",
                     *             "runtimeConfiguration": {
                     *               "disableHooks": true,
                     *               "recreate": true,
                     *               "resetThenReuseValues": true,
                     *               "resetValues": true,
                     *               "reuseValues": true,
                     *               "skipCRDs": true,
                     *               "timeoutNanos": 1000000000,
                     *               "upgradeCRDs": true,
                     *               "wait": true,
                     *               "waitForJobs": true
                     *             },
                     *             "username": "my-user"
                     *           },
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "internal": true,
                     *           "isDeprecated": false,
                     *           "jobConfig": {
                     *             "activeDeadlineSeconds": 300,
                     *             "backoffLimit": 5
                     *           },
                     *           "key": "galera",
                     *           "kustomizeConfiguration": {
                     *             "endpointConfiguration": {
                     *               "admin": {
                     *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                     *                 "networkingType": "PRIVATE",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": false
                     *               },
                     *               "cluster": {
                     *                 "host": "https://my-endpoint.com",
                     *                 "networkingType": "PUBLIC",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": true
                     *               }
                     *             },
                     *             "gitConfiguration": {
                     *               "accessToken": "my-token",
                     *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *               "referenceName": "tags/v1.0.0",
                     *               "repositoryUrl": "https://github.com/username/myrepo",
                     *               "userName": "my-user"
                     *             },
                     *             "helmChartDependencies": [
                     *               {
                     *                 "chartName": "cert-manager",
                     *                 "chartVersion": "v1.5.3"
                     *               },
                     *               {
                     *                 "chartName": "nginx-ingress",
                     *                 "chartVersion": "v0.48.1"
                     *               },
                     *               {
                     *                 "chartName": "external-dns",
                     *                 "chartVersion": "v0.7.0"
                     *               },
                     *               {
                     *                 "chartName": "cnpg-operator",
                     *                 "chartVersion": "v0.23.1"
                     *               }
                     *             ],
                     *             "kustomizePath": "/kustomize"
                     *           },
                     *           "l4LoadBalancerConfiguration": {
                     *             "ingressPortConfiguration": [
                     *               {
                     *                 "associatedResourceIDs": [
                     *                   "r-12345678",
                     *                   "r-abcdef12"
                     *                 ],
                     *                 "backendPort": 8080,
                     *                 "ingressPort": 1234
                     *               },
                     *               {
                     *                 "associatedResourceIDs": [
                     *                   "r-12345678",
                     *                   "r-abcdef12"
                     *                 ],
                     *                 "backendPort": 8081,
                     *                 "ingressPort": 5678
                     *               },
                     *               {
                     *                 "associatedResourceIDs": [
                     *                   "r-vwxybz12",
                     *                   "r-poij122v"
                     *                 ],
                     *                 "backendPort": 8082,
                     *                 "ingressPort": 9012
                     *               }
                     *             ]
                     *           },
                     *           "l7LoadBalancerConfiguration": {
                     *             "paths": [
                     *               {
                     *                 "associatedResourceID": "r-12345678",
                     *                 "path": "/path",
                     *                 "port": 8080
                     *               }
                     *             ]
                     *           },
                     *           "name": "Galera",
                     *           "onPremTerraformConfigurations": {
                     *             "Maiores possimus aut fugit.": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "my-token",
                     *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                 "referenceName": "tags/v1.0.0",
                     *                 "repositoryUrl": "https://github.com/username/myrepo",
                     *                 "userName": "my-user"
                     *               },
                     *               "privateModuleGitAccessTokens": {
                     *                 "tokenName": "accessToken"
                     *               },
                     *               "requiredOutputKeys": [
                     *                 "output1"
                     *               ],
                     *               "requiredOutputs": [
                     *                 {
                     *                   "exported": true,
                     *                   "key": "output1"
                     *                 }
                     *               ],
                     *               "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *               "terraformPath": "/project1/tf"
                     *             },
                     *             "Ut pariatur.": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "my-token",
                     *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                 "referenceName": "tags/v1.0.0",
                     *                 "repositoryUrl": "https://github.com/username/myrepo",
                     *                 "userName": "my-user"
                     *               },
                     *               "privateModuleGitAccessTokens": {
                     *                 "tokenName": "accessToken"
                     *               },
                     *               "requiredOutputKeys": [
                     *                 "output1"
                     *               ],
                     *               "requiredOutputs": [
                     *                 {
                     *                   "exported": true,
                     *                   "key": "output1"
                     *                 }
                     *               ],
                     *               "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *               "terraformPath": "/project1/tf"
                     *             }
                     *           },
                     *           "operatorCRDConfiguration": {
                     *             "endpointConfiguration": {
                     *               "admin": {
                     *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                     *                 "networkingType": "PRIVATE",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": false
                     *               },
                     *               "cluster": {
                     *                 "host": "https://my-endpoint.com",
                     *                 "networkingType": "PUBLIC",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": true
                     *               }
                     *             },
                     *             "helmChartDependencies": [
                     *               {
                     *                 "chartName": "cert-manager",
                     *                 "chartVersion": "v1.5.3"
                     *               },
                     *               {
                     *                 "chartName": "nginx-ingress",
                     *                 "chartVersion": "v0.48.1"
                     *               },
                     *               {
                     *                 "chartName": "external-dns",
                     *                 "chartVersion": "v0.7.0"
                     *               },
                     *               {
                     *                 "chartName": "cnpg-operator",
                     *                 "chartVersion": "v0.23.1"
                     *               }
                     *             ],
                     *             "outputParameters": {
                     *               "expiresAt": "$out.status.notAfter",
                     *               "issuerName": "letsencrypt-prod"
                     *             },
                     *             "readinessConditions": {
                     *               "$out.status.conditions[?(@.type=='Ready')].status": true
                     *             },
                     *             "supplementalFiles": [
                     *               "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                     *               "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                     *             ],
                     *             "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                     *           },
                     *           "productTierId": "pt-12345678",
                     *           "proxyType": "PortsBasedProxy",
                     *           "resourceType": "Generic",
                     *           "serviceId": "s-12345678",
                     *           "terraformConfigurations": {
                     *             "Animi dolorem dolores saepe autem ut earum.": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "my-token",
                     *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                 "referenceName": "tags/v1.0.0",
                     *                 "repositoryUrl": "https://github.com/username/myrepo",
                     *                 "userName": "my-user"
                     *               },
                     *               "privateModuleGitAccessTokens": {
                     *                 "tokenName": "accessToken"
                     *               },
                     *               "requiredOutputKeys": [
                     *                 "output1"
                     *               ],
                     *               "requiredOutputs": [
                     *                 {
                     *                   "exported": true,
                     *                   "key": "output1"
                     *                 }
                     *               ],
                     *               "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *               "terraformPath": "/project1/tf"
                     *             },
                     *             "Repudiandae eos velit voluptatem aut ratione voluptas.": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "my-token",
                     *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                 "referenceName": "tags/v1.0.0",
                     *                 "repositoryUrl": "https://github.com/username/myrepo",
                     *                 "userName": "my-user"
                     *               },
                     *               "privateModuleGitAccessTokens": {
                     *                 "tokenName": "accessToken"
                     *               },
                     *               "requiredOutputKeys": [
                     *                 "output1"
                     *               ],
                     *               "requiredOutputs": [
                     *                 {
                     *                   "exported": true,
                     *                   "key": "output1"
                     *                 }
                     *               ],
                     *               "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *               "terraformPath": "/project1/tf"
                     *             }
                     *           }
                     *         },
                     *         {
                     *           "actionHooks": [
                     *             {
                     *               "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                     *               "scope": "CLUSTER",
                     *               "type": "INIT"
                     *             }
                     *           ],
                     *           "additionalSecurityContext": {
                     *             "AddCapabilities": [
                     *               "CAP_NET_ADMIN",
                     *               "CAP_NET_RAW"
                     *             ],
                     *             "DropCapabilities": [
                     *               "CAP_NET_ADMIN",
                     *               "CAP_NET_RAW"
                     *             ],
                     *             "SupplementalGroupIDs": [
                     *               1001,
                     *               999
                     *             ]
                     *           },
                     *           "backupConfiguration": {
                     *             "backupPeriodInHours": 24,
                     *             "backupRetentionInDays": 7
                     *           },
                     *           "blobStorageConfiguration": {
                     *             "GCSConfiguration": {},
                     *             "S3Configuration": {}
                     *           },
                     *           "capabilities": [
                     *             {
                     *               "capability": "SERVERLESS",
                     *               "configuration": {
                     *                 "EnableAutoStop": true,
                     *                 "MinimumNodesInPool": 5,
                     *                 "PortsMappingProxyConfig": {
                     *                   "MaxNumberOfClustersPerProxyInstance": 50,
                     *                   "NumberOfPortsPerCluster": 4
                     *                 },
                     *                 "ProxyId": "r-123456",
                     *                 "ReferenceProxyKey": "resource-proxy",
                     *                 "TargetPort": 5432
                     *               }
                     *             },
                     *             {
                     *               "capability": "SERVERLESS",
                     *               "configuration": {
                     *                 "EnableAutoStop": true,
                     *                 "MinimumNodesInPool": 5,
                     *                 "PortsMappingProxyConfig": {
                     *                   "MaxNumberOfClustersPerProxyInstance": 50,
                     *                   "NumberOfPortsPerCluster": 4
                     *                 },
                     *                 "ProxyId": "r-123456",
                     *                 "ReferenceProxyKey": "resource-proxy",
                     *                 "TargetPort": 5432
                     *               }
                     *             },
                     *             {
                     *               "capability": "SERVERLESS",
                     *               "configuration": {
                     *                 "EnableAutoStop": true,
                     *                 "MinimumNodesInPool": 5,
                     *                 "PortsMappingProxyConfig": {
                     *                   "MaxNumberOfClustersPerProxyInstance": 50,
                     *                   "NumberOfPortsPerCluster": 4
                     *                 },
                     *                 "ProxyId": "r-123456",
                     *                 "ReferenceProxyKey": "resource-proxy",
                     *                 "TargetPort": 5432
                     *               }
                     *             }
                     *           ],
                     *           "customLabels": {
                     *             "key": "value"
                     *           },
                     *           "customSysCTLs": {
                     *             "net.ipv4.tcp_syncookies": "1"
                     *           },
                     *           "customULimits": [
                     *             {
                     *               "ULimitsName": "NoProc",
                     *               "ULimitsType": "Soft",
                     *               "ULimitsValue": 1000
                     *             },
                     *             {
                     *               "ULimitsName": "NoFile",
                     *               "ULimitsType": "Hard",
                     *               "ULimitsValue": 2048
                     *             }
                     *           ],
                     *           "dependencies": [
                     *             {
                     *               "parameterMap": {
                     *                 "clusterId": "writerId",
                     *                 "clusterOrg": "userDatabase"
                     *               },
                     *               "resourceId": "r-12345678"
                     *             },
                     *             {
                     *               "parameterMap": {
                     *                 "clusterId": "readerId",
                     *                 "clusterOrg": "userDatabase"
                     *               },
                     *               "resourceId": "r-abcdef12"
                     *             }
                     *           ],
                     *           "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                     *           "environmentVariables": [
                     *             {
                     *               "name": "MYSQL_ROOT_PASSWORD",
                     *               "value": "password"
                     *             }
                     *           ],
                     *           "fileSystemConfiguration": {
                     *             "EFSFileSystemConfiguration": {
                     *               "PerformanceMode": "generalPurpose|maxIO",
                     *               "ProvisionedThroughputInMibps": 125,
                     *               "ThroughputMode": "provisioned|bursting|elastic"
                     *             }
                     *           },
                     *           "helmChartConfiguration": {
                     *             "chartName": "my-chart",
                     *             "chartRepoName": "my-repo",
                     *             "chartRepoUrl": "https://my-repo.com",
                     *             "chartValues": {
                     *               "key1": "value1",
                     *               "key2": 3,
                     *               "key3": {
                     *                 "key4": "value4"
                     *               }
                     *             },
                     *             "chartVersion": "1.0.0",
                     *             "endpointConfiguration": {
                     *               "admin": {
                     *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                     *                 "networkingType": "PRIVATE",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": false
                     *               },
                     *               "cluster": {
                     *                 "host": "https://my-endpoint.com",
                     *                 "networkingType": "PUBLIC",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": true
                     *               }
                     *             },
                     *             "layeredChartValues": [
                     *               {
                     *                 "values": {
                     *                   "global": {
                     *                     "image": {
                     *                       "tag": "v1.0.0"
                     *                     },
                     *                     "replicaCount": 1,
                     *                     "resources": {
                     *                       "requests": {
                     *                         "cpu": "100m",
                     *                         "memory": "128Mi"
                     *                       }
                     *                     }
                     *                   }
                     *                 }
                     *               },
                     *               {
                     *                 "scope": {
                     *                   "{{ $sys.cloudProviderName }}": "aws"
                     *                 },
                     *                 "valuesFile": {
                     *                   "gitConfiguration": {
                     *                     "accessToken": "ghp_...",
                     *                     "commitSHA": "a1b2c3d4e5f6",
                     *                     "path": "aws/production.yaml",
                     *                     "referenceName": "refs/heads/main",
                     *                     "repositoryUrl": "https://github.com/org/helm-values"
                     *                   }
                     *                 }
                     *               }
                     *             ],
                     *             "namespace": "postgres",
                     *             "password": "my-password",
                     *             "runtimeConfiguration": {
                     *               "disableHooks": true,
                     *               "recreate": true,
                     *               "resetThenReuseValues": true,
                     *               "resetValues": true,
                     *               "reuseValues": true,
                     *               "skipCRDs": true,
                     *               "timeoutNanos": 1000000000,
                     *               "upgradeCRDs": true,
                     *               "wait": true,
                     *               "waitForJobs": true
                     *             },
                     *             "username": "my-user"
                     *           },
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "internal": true,
                     *           "isDeprecated": false,
                     *           "jobConfig": {
                     *             "activeDeadlineSeconds": 300,
                     *             "backoffLimit": 5
                     *           },
                     *           "key": "galera",
                     *           "kustomizeConfiguration": {
                     *             "endpointConfiguration": {
                     *               "admin": {
                     *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                     *                 "networkingType": "PRIVATE",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": false
                     *               },
                     *               "cluster": {
                     *                 "host": "https://my-endpoint.com",
                     *                 "networkingType": "PUBLIC",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": true
                     *               }
                     *             },
                     *             "gitConfiguration": {
                     *               "accessToken": "my-token",
                     *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *               "referenceName": "tags/v1.0.0",
                     *               "repositoryUrl": "https://github.com/username/myrepo",
                     *               "userName": "my-user"
                     *             },
                     *             "helmChartDependencies": [
                     *               {
                     *                 "chartName": "cert-manager",
                     *                 "chartVersion": "v1.5.3"
                     *               },
                     *               {
                     *                 "chartName": "nginx-ingress",
                     *                 "chartVersion": "v0.48.1"
                     *               },
                     *               {
                     *                 "chartName": "external-dns",
                     *                 "chartVersion": "v0.7.0"
                     *               },
                     *               {
                     *                 "chartName": "cnpg-operator",
                     *                 "chartVersion": "v0.23.1"
                     *               }
                     *             ],
                     *             "kustomizePath": "/kustomize"
                     *           },
                     *           "l4LoadBalancerConfiguration": {
                     *             "ingressPortConfiguration": [
                     *               {
                     *                 "associatedResourceIDs": [
                     *                   "r-12345678",
                     *                   "r-abcdef12"
                     *                 ],
                     *                 "backendPort": 8080,
                     *                 "ingressPort": 1234
                     *               },
                     *               {
                     *                 "associatedResourceIDs": [
                     *                   "r-12345678",
                     *                   "r-abcdef12"
                     *                 ],
                     *                 "backendPort": 8081,
                     *                 "ingressPort": 5678
                     *               },
                     *               {
                     *                 "associatedResourceIDs": [
                     *                   "r-vwxybz12",
                     *                   "r-poij122v"
                     *                 ],
                     *                 "backendPort": 8082,
                     *                 "ingressPort": 9012
                     *               }
                     *             ]
                     *           },
                     *           "l7LoadBalancerConfiguration": {
                     *             "paths": [
                     *               {
                     *                 "associatedResourceID": "r-12345678",
                     *                 "path": "/path",
                     *                 "port": 8080
                     *               }
                     *             ]
                     *           },
                     *           "name": "Galera",
                     *           "onPremTerraformConfigurations": {
                     *             "Maiores possimus aut fugit.": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "my-token",
                     *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                 "referenceName": "tags/v1.0.0",
                     *                 "repositoryUrl": "https://github.com/username/myrepo",
                     *                 "userName": "my-user"
                     *               },
                     *               "privateModuleGitAccessTokens": {
                     *                 "tokenName": "accessToken"
                     *               },
                     *               "requiredOutputKeys": [
                     *                 "output1"
                     *               ],
                     *               "requiredOutputs": [
                     *                 {
                     *                   "exported": true,
                     *                   "key": "output1"
                     *                 }
                     *               ],
                     *               "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *               "terraformPath": "/project1/tf"
                     *             },
                     *             "Ut pariatur.": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "my-token",
                     *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                 "referenceName": "tags/v1.0.0",
                     *                 "repositoryUrl": "https://github.com/username/myrepo",
                     *                 "userName": "my-user"
                     *               },
                     *               "privateModuleGitAccessTokens": {
                     *                 "tokenName": "accessToken"
                     *               },
                     *               "requiredOutputKeys": [
                     *                 "output1"
                     *               ],
                     *               "requiredOutputs": [
                     *                 {
                     *                   "exported": true,
                     *                   "key": "output1"
                     *                 }
                     *               ],
                     *               "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *               "terraformPath": "/project1/tf"
                     *             }
                     *           },
                     *           "operatorCRDConfiguration": {
                     *             "endpointConfiguration": {
                     *               "admin": {
                     *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                     *                 "networkingType": "PRIVATE",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": false
                     *               },
                     *               "cluster": {
                     *                 "host": "https://my-endpoint.com",
                     *                 "networkingType": "PUBLIC",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": true
                     *               }
                     *             },
                     *             "helmChartDependencies": [
                     *               {
                     *                 "chartName": "cert-manager",
                     *                 "chartVersion": "v1.5.3"
                     *               },
                     *               {
                     *                 "chartName": "nginx-ingress",
                     *                 "chartVersion": "v0.48.1"
                     *               },
                     *               {
                     *                 "chartName": "external-dns",
                     *                 "chartVersion": "v0.7.0"
                     *               },
                     *               {
                     *                 "chartName": "cnpg-operator",
                     *                 "chartVersion": "v0.23.1"
                     *               }
                     *             ],
                     *             "outputParameters": {
                     *               "expiresAt": "$out.status.notAfter",
                     *               "issuerName": "letsencrypt-prod"
                     *             },
                     *             "readinessConditions": {
                     *               "$out.status.conditions[?(@.type=='Ready')].status": true
                     *             },
                     *             "supplementalFiles": [
                     *               "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                     *               "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                     *             ],
                     *             "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                     *           },
                     *           "productTierId": "pt-12345678",
                     *           "proxyType": "PortsBasedProxy",
                     *           "resourceType": "Generic",
                     *           "serviceId": "s-12345678",
                     *           "terraformConfigurations": {
                     *             "Animi dolorem dolores saepe autem ut earum.": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "my-token",
                     *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                 "referenceName": "tags/v1.0.0",
                     *                 "repositoryUrl": "https://github.com/username/myrepo",
                     *                 "userName": "my-user"
                     *               },
                     *               "privateModuleGitAccessTokens": {
                     *                 "tokenName": "accessToken"
                     *               },
                     *               "requiredOutputKeys": [
                     *                 "output1"
                     *               ],
                     *               "requiredOutputs": [
                     *                 {
                     *                   "exported": true,
                     *                   "key": "output1"
                     *                 }
                     *               ],
                     *               "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *               "terraformPath": "/project1/tf"
                     *             },
                     *             "Repudiandae eos velit voluptatem aut ratione voluptas.": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "my-token",
                     *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                 "referenceName": "tags/v1.0.0",
                     *                 "repositoryUrl": "https://github.com/username/myrepo",
                     *                 "userName": "my-user"
                     *               },
                     *               "privateModuleGitAccessTokens": {
                     *                 "tokenName": "accessToken"
                     *               },
                     *               "requiredOutputKeys": [
                     *                 "output1"
                     *               ],
                     *               "requiredOutputs": [
                     *                 {
                     *                   "exported": true,
                     *                   "key": "output1"
                     *                 }
                     *               ],
                     *               "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *               "terraformPath": "/project1/tf"
                     *             }
                     *           }
                     *         },
                     *         {
                     *           "actionHooks": [
                     *             {
                     *               "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                     *               "scope": "CLUSTER",
                     *               "type": "INIT"
                     *             }
                     *           ],
                     *           "additionalSecurityContext": {
                     *             "AddCapabilities": [
                     *               "CAP_NET_ADMIN",
                     *               "CAP_NET_RAW"
                     *             ],
                     *             "DropCapabilities": [
                     *               "CAP_NET_ADMIN",
                     *               "CAP_NET_RAW"
                     *             ],
                     *             "SupplementalGroupIDs": [
                     *               1001,
                     *               999
                     *             ]
                     *           },
                     *           "backupConfiguration": {
                     *             "backupPeriodInHours": 24,
                     *             "backupRetentionInDays": 7
                     *           },
                     *           "blobStorageConfiguration": {
                     *             "GCSConfiguration": {},
                     *             "S3Configuration": {}
                     *           },
                     *           "capabilities": [
                     *             {
                     *               "capability": "SERVERLESS",
                     *               "configuration": {
                     *                 "EnableAutoStop": true,
                     *                 "MinimumNodesInPool": 5,
                     *                 "PortsMappingProxyConfig": {
                     *                   "MaxNumberOfClustersPerProxyInstance": 50,
                     *                   "NumberOfPortsPerCluster": 4
                     *                 },
                     *                 "ProxyId": "r-123456",
                     *                 "ReferenceProxyKey": "resource-proxy",
                     *                 "TargetPort": 5432
                     *               }
                     *             },
                     *             {
                     *               "capability": "SERVERLESS",
                     *               "configuration": {
                     *                 "EnableAutoStop": true,
                     *                 "MinimumNodesInPool": 5,
                     *                 "PortsMappingProxyConfig": {
                     *                   "MaxNumberOfClustersPerProxyInstance": 50,
                     *                   "NumberOfPortsPerCluster": 4
                     *                 },
                     *                 "ProxyId": "r-123456",
                     *                 "ReferenceProxyKey": "resource-proxy",
                     *                 "TargetPort": 5432
                     *               }
                     *             },
                     *             {
                     *               "capability": "SERVERLESS",
                     *               "configuration": {
                     *                 "EnableAutoStop": true,
                     *                 "MinimumNodesInPool": 5,
                     *                 "PortsMappingProxyConfig": {
                     *                   "MaxNumberOfClustersPerProxyInstance": 50,
                     *                   "NumberOfPortsPerCluster": 4
                     *                 },
                     *                 "ProxyId": "r-123456",
                     *                 "ReferenceProxyKey": "resource-proxy",
                     *                 "TargetPort": 5432
                     *               }
                     *             }
                     *           ],
                     *           "customLabels": {
                     *             "key": "value"
                     *           },
                     *           "customSysCTLs": {
                     *             "net.ipv4.tcp_syncookies": "1"
                     *           },
                     *           "customULimits": [
                     *             {
                     *               "ULimitsName": "NoProc",
                     *               "ULimitsType": "Soft",
                     *               "ULimitsValue": 1000
                     *             },
                     *             {
                     *               "ULimitsName": "NoFile",
                     *               "ULimitsType": "Hard",
                     *               "ULimitsValue": 2048
                     *             }
                     *           ],
                     *           "dependencies": [
                     *             {
                     *               "parameterMap": {
                     *                 "clusterId": "writerId",
                     *                 "clusterOrg": "userDatabase"
                     *               },
                     *               "resourceId": "r-12345678"
                     *             },
                     *             {
                     *               "parameterMap": {
                     *                 "clusterId": "readerId",
                     *                 "clusterOrg": "userDatabase"
                     *               },
                     *               "resourceId": "r-abcdef12"
                     *             }
                     *           ],
                     *           "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                     *           "environmentVariables": [
                     *             {
                     *               "name": "MYSQL_ROOT_PASSWORD",
                     *               "value": "password"
                     *             }
                     *           ],
                     *           "fileSystemConfiguration": {
                     *             "EFSFileSystemConfiguration": {
                     *               "PerformanceMode": "generalPurpose|maxIO",
                     *               "ProvisionedThroughputInMibps": 125,
                     *               "ThroughputMode": "provisioned|bursting|elastic"
                     *             }
                     *           },
                     *           "helmChartConfiguration": {
                     *             "chartName": "my-chart",
                     *             "chartRepoName": "my-repo",
                     *             "chartRepoUrl": "https://my-repo.com",
                     *             "chartValues": {
                     *               "key1": "value1",
                     *               "key2": 3,
                     *               "key3": {
                     *                 "key4": "value4"
                     *               }
                     *             },
                     *             "chartVersion": "1.0.0",
                     *             "endpointConfiguration": {
                     *               "admin": {
                     *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                     *                 "networkingType": "PRIVATE",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": false
                     *               },
                     *               "cluster": {
                     *                 "host": "https://my-endpoint.com",
                     *                 "networkingType": "PUBLIC",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": true
                     *               }
                     *             },
                     *             "layeredChartValues": [
                     *               {
                     *                 "values": {
                     *                   "global": {
                     *                     "image": {
                     *                       "tag": "v1.0.0"
                     *                     },
                     *                     "replicaCount": 1,
                     *                     "resources": {
                     *                       "requests": {
                     *                         "cpu": "100m",
                     *                         "memory": "128Mi"
                     *                       }
                     *                     }
                     *                   }
                     *                 }
                     *               },
                     *               {
                     *                 "scope": {
                     *                   "{{ $sys.cloudProviderName }}": "aws"
                     *                 },
                     *                 "valuesFile": {
                     *                   "gitConfiguration": {
                     *                     "accessToken": "ghp_...",
                     *                     "commitSHA": "a1b2c3d4e5f6",
                     *                     "path": "aws/production.yaml",
                     *                     "referenceName": "refs/heads/main",
                     *                     "repositoryUrl": "https://github.com/org/helm-values"
                     *                   }
                     *                 }
                     *               }
                     *             ],
                     *             "namespace": "postgres",
                     *             "password": "my-password",
                     *             "runtimeConfiguration": {
                     *               "disableHooks": true,
                     *               "recreate": true,
                     *               "resetThenReuseValues": true,
                     *               "resetValues": true,
                     *               "reuseValues": true,
                     *               "skipCRDs": true,
                     *               "timeoutNanos": 1000000000,
                     *               "upgradeCRDs": true,
                     *               "wait": true,
                     *               "waitForJobs": true
                     *             },
                     *             "username": "my-user"
                     *           },
                     *           "id": "r-12345678",
                     *           "imageConfigId": "imgc-12345678",
                     *           "infraConfigId": "ic-12345678",
                     *           "internal": true,
                     *           "isDeprecated": false,
                     *           "jobConfig": {
                     *             "activeDeadlineSeconds": 300,
                     *             "backoffLimit": 5
                     *           },
                     *           "key": "galera",
                     *           "kustomizeConfiguration": {
                     *             "endpointConfiguration": {
                     *               "admin": {
                     *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                     *                 "networkingType": "PRIVATE",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": false
                     *               },
                     *               "cluster": {
                     *                 "host": "https://my-endpoint.com",
                     *                 "networkingType": "PUBLIC",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": true
                     *               }
                     *             },
                     *             "gitConfiguration": {
                     *               "accessToken": "my-token",
                     *               "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *               "referenceName": "tags/v1.0.0",
                     *               "repositoryUrl": "https://github.com/username/myrepo",
                     *               "userName": "my-user"
                     *             },
                     *             "helmChartDependencies": [
                     *               {
                     *                 "chartName": "cert-manager",
                     *                 "chartVersion": "v1.5.3"
                     *               },
                     *               {
                     *                 "chartName": "nginx-ingress",
                     *                 "chartVersion": "v0.48.1"
                     *               },
                     *               {
                     *                 "chartName": "external-dns",
                     *                 "chartVersion": "v0.7.0"
                     *               },
                     *               {
                     *                 "chartName": "cnpg-operator",
                     *                 "chartVersion": "v0.23.1"
                     *               }
                     *             ],
                     *             "kustomizePath": "/kustomize"
                     *           },
                     *           "l4LoadBalancerConfiguration": {
                     *             "ingressPortConfiguration": [
                     *               {
                     *                 "associatedResourceIDs": [
                     *                   "r-12345678",
                     *                   "r-abcdef12"
                     *                 ],
                     *                 "backendPort": 8080,
                     *                 "ingressPort": 1234
                     *               },
                     *               {
                     *                 "associatedResourceIDs": [
                     *                   "r-12345678",
                     *                   "r-abcdef12"
                     *                 ],
                     *                 "backendPort": 8081,
                     *                 "ingressPort": 5678
                     *               },
                     *               {
                     *                 "associatedResourceIDs": [
                     *                   "r-vwxybz12",
                     *                   "r-poij122v"
                     *                 ],
                     *                 "backendPort": 8082,
                     *                 "ingressPort": 9012
                     *               }
                     *             ]
                     *           },
                     *           "l7LoadBalancerConfiguration": {
                     *             "paths": [
                     *               {
                     *                 "associatedResourceID": "r-12345678",
                     *                 "path": "/path",
                     *                 "port": 8080
                     *               }
                     *             ]
                     *           },
                     *           "name": "Galera",
                     *           "onPremTerraformConfigurations": {
                     *             "Maiores possimus aut fugit.": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "my-token",
                     *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                 "referenceName": "tags/v1.0.0",
                     *                 "repositoryUrl": "https://github.com/username/myrepo",
                     *                 "userName": "my-user"
                     *               },
                     *               "privateModuleGitAccessTokens": {
                     *                 "tokenName": "accessToken"
                     *               },
                     *               "requiredOutputKeys": [
                     *                 "output1"
                     *               ],
                     *               "requiredOutputs": [
                     *                 {
                     *                   "exported": true,
                     *                   "key": "output1"
                     *                 }
                     *               ],
                     *               "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *               "terraformPath": "/project1/tf"
                     *             },
                     *             "Ut pariatur.": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "my-token",
                     *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                 "referenceName": "tags/v1.0.0",
                     *                 "repositoryUrl": "https://github.com/username/myrepo",
                     *                 "userName": "my-user"
                     *               },
                     *               "privateModuleGitAccessTokens": {
                     *                 "tokenName": "accessToken"
                     *               },
                     *               "requiredOutputKeys": [
                     *                 "output1"
                     *               ],
                     *               "requiredOutputs": [
                     *                 {
                     *                   "exported": true,
                     *                   "key": "output1"
                     *                 }
                     *               ],
                     *               "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *               "terraformPath": "/project1/tf"
                     *             }
                     *           },
                     *           "operatorCRDConfiguration": {
                     *             "endpointConfiguration": {
                     *               "admin": {
                     *                 "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                     *                 "networkingType": "PRIVATE",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": false
                     *               },
                     *               "cluster": {
                     *                 "host": "https://my-endpoint.com",
                     *                 "networkingType": "PUBLIC",
                     *                 "ports": [
                     *                   8080,
                     *                   8081
                     *                 ],
                     *                 "primary": true
                     *               }
                     *             },
                     *             "helmChartDependencies": [
                     *               {
                     *                 "chartName": "cert-manager",
                     *                 "chartVersion": "v1.5.3"
                     *               },
                     *               {
                     *                 "chartName": "nginx-ingress",
                     *                 "chartVersion": "v0.48.1"
                     *               },
                     *               {
                     *                 "chartName": "external-dns",
                     *                 "chartVersion": "v0.7.0"
                     *               },
                     *               {
                     *                 "chartName": "cnpg-operator",
                     *                 "chartVersion": "v0.23.1"
                     *               }
                     *             ],
                     *             "outputParameters": {
                     *               "expiresAt": "$out.status.notAfter",
                     *               "issuerName": "letsencrypt-prod"
                     *             },
                     *             "readinessConditions": {
                     *               "$out.status.conditions[?(@.type=='Ready')].status": true
                     *             },
                     *             "supplementalFiles": [
                     *               "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                     *               "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                     *             ],
                     *             "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                     *           },
                     *           "productTierId": "pt-12345678",
                     *           "proxyType": "PortsBasedProxy",
                     *           "resourceType": "Generic",
                     *           "serviceId": "s-12345678",
                     *           "terraformConfigurations": {
                     *             "Animi dolorem dolores saepe autem ut earum.": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "my-token",
                     *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                 "referenceName": "tags/v1.0.0",
                     *                 "repositoryUrl": "https://github.com/username/myrepo",
                     *                 "userName": "my-user"
                     *               },
                     *               "privateModuleGitAccessTokens": {
                     *                 "tokenName": "accessToken"
                     *               },
                     *               "requiredOutputKeys": [
                     *                 "output1"
                     *               ],
                     *               "requiredOutputs": [
                     *                 {
                     *                   "exported": true,
                     *                   "key": "output1"
                     *                 }
                     *               ],
                     *               "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *               "terraformPath": "/project1/tf"
                     *             },
                     *             "Repudiandae eos velit voluptatem aut ratione voluptas.": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "my-token",
                     *                 "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *                 "referenceName": "tags/v1.0.0",
                     *                 "repositoryUrl": "https://github.com/username/myrepo",
                     *                 "userName": "my-user"
                     *               },
                     *               "privateModuleGitAccessTokens": {
                     *                 "tokenName": "accessToken"
                     *               },
                     *               "requiredOutputKeys": [
                     *                 "output1"
                     *               ],
                     *               "requiredOutputs": [
                     *                 {
                     *                   "exported": true,
                     *                   "key": "output1"
                     *                 }
                     *               ],
                     *               "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *               "terraformPath": "/project1/tf"
                     *             }
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListResourcesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list resources */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/CreateResource": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "additionalSecurityContext": {
                 *         "AddCapabilities": [
                 *           "CAP_NET_ADMIN",
                 *           "CAP_NET_RAW"
                 *         ],
                 *         "DropCapabilities": [
                 *           "CAP_NET_ADMIN",
                 *           "CAP_NET_RAW"
                 *         ],
                 *         "SupplementalGroupIDs": [
                 *           1001,
                 *           999
                 *         ]
                 *       },
                 *       "backupConfiguration": {
                 *         "backupPeriodInHours": 24,
                 *         "backupRetentionInDays": 7
                 *       },
                 *       "blobStorageConfiguration": {
                 *         "GCSConfiguration": {},
                 *         "S3Configuration": {}
                 *       },
                 *       "customLabels": {
                 *         "key": "value"
                 *       },
                 *       "customSysCTLs": {
                 *         "net.ipv4.tcp_syncookies": "1"
                 *       },
                 *       "customULimits": [
                 *         {
                 *           "ULimitsName": "NoProc",
                 *           "ULimitsType": "Soft",
                 *           "ULimitsValue": 1000
                 *         },
                 *         {
                 *           "ULimitsName": "NoFile",
                 *           "ULimitsType": "Hard",
                 *           "ULimitsValue": 2048
                 *         }
                 *       ],
                 *       "description": "A resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                 *       "environmentVariables": [
                 *         {
                 *           "key": "MYSQL_ROOT_PASSWORD",
                 *           "value": "password"
                 *         }
                 *       ],
                 *       "fileSystemConfiguration": {
                 *         "EFSFileSystemConfiguration": {
                 *           "PerformanceMode": "generalPurpose|maxIO",
                 *           "ProvisionedThroughputInMibps": 125,
                 *           "ThroughputMode": "provisioned|bursting|elastic"
                 *         }
                 *       },
                 *       "helmChartConfiguration": {
                 *         "chartName": "my-chart",
                 *         "chartRepoName": "my-repo",
                 *         "chartRepoUrl": "https://my-repo.com",
                 *         "chartValues": {
                 *           "key1": "value1",
                 *           "key2": 3,
                 *           "key3": {
                 *             "key4": "value4"
                 *           }
                 *         },
                 *         "chartVersion": "1.0.0",
                 *         "endpointConfiguration": {
                 *           "admin": {
                 *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                 *             "networkingType": "PRIVATE",
                 *             "ports": [
                 *               8080,
                 *               8081
                 *             ],
                 *             "primary": false
                 *           },
                 *           "cluster": {
                 *             "host": "https://my-endpoint.com",
                 *             "networkingType": "PUBLIC",
                 *             "ports": [
                 *               8080,
                 *               8081
                 *             ],
                 *             "primary": true
                 *           }
                 *         },
                 *         "layeredChartValues": [
                 *           {
                 *             "values": {
                 *               "global": {
                 *                 "image": {
                 *                   "tag": "v1.0.0"
                 *                 },
                 *                 "replicaCount": 1,
                 *                 "resources": {
                 *                   "requests": {
                 *                     "cpu": "100m",
                 *                     "memory": "128Mi"
                 *                   }
                 *                 }
                 *               }
                 *             }
                 *           },
                 *           {
                 *             "scope": {
                 *               "{{ $sys.cloudProviderName }}": "aws"
                 *             },
                 *             "valuesFile": {
                 *               "gitConfiguration": {
                 *                 "accessToken": "ghp_...",
                 *                 "commitSHA": "a1b2c3d4e5f6",
                 *                 "path": "aws/production.yaml",
                 *                 "referenceName": "refs/heads/main",
                 *                 "repositoryUrl": "https://github.com/org/helm-values"
                 *               }
                 *             }
                 *           }
                 *         ],
                 *         "namespace": "postgres",
                 *         "password": "my-password",
                 *         "runtimeConfiguration": {
                 *           "disableHooks": true,
                 *           "recreate": true,
                 *           "resetThenReuseValues": true,
                 *           "resetValues": true,
                 *           "reuseValues": true,
                 *           "skipCRDs": true,
                 *           "timeoutNanos": 1000000000,
                 *           "upgradeCRDs": true,
                 *           "wait": true,
                 *           "waitForJobs": true
                 *         },
                 *         "username": "my-user"
                 *       },
                 *       "imageConfigId": "imgc-12345678",
                 *       "infraConfigId": "ic-12345678",
                 *       "internal": true,
                 *       "isProxy": false,
                 *       "jobConfig": {
                 *         "activeDeadlineSeconds": 300,
                 *         "backoffLimit": 5
                 *       },
                 *       "key": "galera",
                 *       "kustomizeConfiguration": {
                 *         "endpointConfiguration": {
                 *           "admin": {
                 *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                 *             "networkingType": "PRIVATE",
                 *             "ports": [
                 *               8080,
                 *               8081
                 *             ],
                 *             "primary": false
                 *           },
                 *           "cluster": {
                 *             "host": "https://my-endpoint.com",
                 *             "networkingType": "PUBLIC",
                 *             "ports": [
                 *               8080,
                 *               8081
                 *             ],
                 *             "primary": true
                 *           }
                 *         },
                 *         "gitConfiguration": {
                 *           "accessToken": "my-token",
                 *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                 *           "referenceName": "tags/v1.0.0",
                 *           "repositoryUrl": "https://github.com/username/myrepo",
                 *           "userName": "my-user"
                 *         },
                 *         "helmChartDependencies": [
                 *           {
                 *             "chartName": "cert-manager",
                 *             "chartVersion": "v1.5.3"
                 *           },
                 *           {
                 *             "chartName": "nginx-ingress",
                 *             "chartVersion": "v0.48.1"
                 *           },
                 *           {
                 *             "chartName": "external-dns",
                 *             "chartVersion": "v0.7.0"
                 *           },
                 *           {
                 *             "chartName": "cnpg-operator",
                 *             "chartVersion": "v0.23.1"
                 *           }
                 *         ],
                 *         "kustomizePath": "/kustomize"
                 *       },
                 *       "l4LoadBalancerConfiguration": {
                 *         "ingressPortConfiguration": [
                 *           {
                 *             "associatedResourceIDs": [
                 *               "r-12345678",
                 *               "r-abcdef12"
                 *             ],
                 *             "backendPort": 8080,
                 *             "ingressPort": 1234
                 *           },
                 *           {
                 *             "associatedResourceIDs": [
                 *               "r-12345678",
                 *               "r-abcdef12"
                 *             ],
                 *             "backendPort": 8081,
                 *             "ingressPort": 5678
                 *           },
                 *           {
                 *             "associatedResourceIDs": [
                 *               "r-vwxybz12",
                 *               "r-poij122v"
                 *             ],
                 *             "backendPort": 8082,
                 *             "ingressPort": 9012
                 *           }
                 *         ]
                 *       },
                 *       "l7LoadBalancerConfiguration": {
                 *         "paths": [
                 *           {
                 *             "associatedResourceID": "r-12345678",
                 *             "path": "/path",
                 *             "port": 8080
                 *           }
                 *         ]
                 *       },
                 *       "name": "Galera",
                 *       "onPremTerraformConfigurations": {
                 *         "Modi repellat adipisci.": {
                 *           "gitConfiguration": {
                 *             "accessToken": "my-token",
                 *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                 *             "referenceName": "tags/v1.0.0",
                 *             "repositoryUrl": "https://github.com/username/myrepo",
                 *             "userName": "my-user"
                 *           },
                 *           "privateModuleGitAccessTokens": {
                 *             "tokenName": "accessToken"
                 *           },
                 *           "requiredOutputKeys": [
                 *             "output1"
                 *           ],
                 *           "requiredOutputs": [
                 *             {
                 *               "exported": true,
                 *               "key": "output1"
                 *             }
                 *           ],
                 *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                 *           "terraformPath": "/project1/tf"
                 *         }
                 *       },
                 *       "operatorCRDConfiguration": {
                 *         "endpointConfiguration": {
                 *           "admin": {
                 *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                 *             "networkingType": "PRIVATE",
                 *             "ports": [
                 *               8080,
                 *               8081
                 *             ],
                 *             "primary": false
                 *           },
                 *           "cluster": {
                 *             "host": "https://my-endpoint.com",
                 *             "networkingType": "PUBLIC",
                 *             "ports": [
                 *               8080,
                 *               8081
                 *             ],
                 *             "primary": true
                 *           }
                 *         },
                 *         "helmChartDependencies": [
                 *           {
                 *             "chartName": "cert-manager",
                 *             "chartVersion": "v1.5.3"
                 *           },
                 *           {
                 *             "chartName": "nginx-ingress",
                 *             "chartVersion": "v0.48.1"
                 *           },
                 *           {
                 *             "chartName": "external-dns",
                 *             "chartVersion": "v0.7.0"
                 *           },
                 *           {
                 *             "chartName": "cnpg-operator",
                 *             "chartVersion": "v0.23.1"
                 *           }
                 *         ],
                 *         "outputParameters": {
                 *           "expiresAt": "$out.status.notAfter",
                 *           "issuerName": "letsencrypt-prod"
                 *         },
                 *         "readinessConditions": {
                 *           "$out.status.conditions[?(@.type=='Ready')].status": true
                 *         },
                 *         "supplementalFiles": [
                 *           "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                 *           "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                 *         ],
                 *         "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                 *       },
                 *       "productTierId": "pt-12345678",
                 *       "proxyType": "PortsBasedProxy",
                 *       "resourceDependencies": [
                 *         {
                 *           "parameterMap": {
                 *             "userDatabase": "clusterOrg",
                 *             "writerId": "clusterWriterId"
                 *           },
                 *           "resourceId": "r-12345678"
                 *         },
                 *         {
                 *           "parameterMap": {
                 *             "readerId": "clusterReaderId",
                 *             "userDatabase": "clusterOrg"
                 *           },
                 *           "resourceId": "r-abcdef12"
                 *         }
                 *       ],
                 *       "resourceType": "Generic",
                 *       "terraformConfigurations": {
                 *         "Ad harum est eos similique sed.": {
                 *           "gitConfiguration": {
                 *             "accessToken": "my-token",
                 *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                 *             "referenceName": "tags/v1.0.0",
                 *             "repositoryUrl": "https://github.com/username/myrepo",
                 *             "userName": "my-user"
                 *           },
                 *           "privateModuleGitAccessTokens": {
                 *             "tokenName": "accessToken"
                 *           },
                 *           "requiredOutputKeys": [
                 *             "output1"
                 *           ],
                 *           "requiredOutputs": [
                 *             {
                 *               "exported": true,
                 *               "key": "output1"
                 *             }
                 *           ],
                 *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                 *           "terraformPath": "/project1/tf"
                 *         },
                 *         "Quaerat voluptatem repellat.": {
                 *           "gitConfiguration": {
                 *             "accessToken": "my-token",
                 *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                 *             "referenceName": "tags/v1.0.0",
                 *             "repositoryUrl": "https://github.com/username/myrepo",
                 *             "userName": "my-user"
                 *           },
                 *           "privateModuleGitAccessTokens": {
                 *             "tokenName": "accessToken"
                 *           },
                 *           "requiredOutputKeys": [
                 *             "output1"
                 *           ],
                 *           "requiredOutputs": [
                 *             {
                 *               "exported": true,
                 *               "key": "output1"
                 *             }
                 *           ],
                 *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                 *           "terraformPath": "/project1/tf"
                 *         }
                 *       }
                 *     } */
                "application/json": components["schemas"]["CreateResourceRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create an resource */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/DescribeResource": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the resource to describe. If not specified, the latest version is described.
                 * @example Alias omnis voluptas.
                 */
                ProductTierVersion?: string;
                /**
                 * @description ProductTierId of the resource to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "actionHooks": [
                     *         {
                     *           "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                     *           "scope": "CLUSTER",
                     *           "type": "INIT"
                     *         }
                     *       ],
                     *       "additionalSecurityContext": {
                     *         "AddCapabilities": [
                     *           "CAP_NET_ADMIN",
                     *           "CAP_NET_RAW"
                     *         ],
                     *         "DropCapabilities": [
                     *           "CAP_NET_ADMIN",
                     *           "CAP_NET_RAW"
                     *         ],
                     *         "SupplementalGroupIDs": [
                     *           1001,
                     *           999
                     *         ]
                     *       },
                     *       "backupConfiguration": {
                     *         "backupPeriodInHours": 24,
                     *         "backupRetentionInDays": 7
                     *       },
                     *       "blobStorageConfiguration": {
                     *         "GCSConfiguration": {},
                     *         "S3Configuration": {}
                     *       },
                     *       "capabilities": [
                     *         {
                     *           "capability": "SERVERLESS",
                     *           "configuration": {
                     *             "EnableAutoStop": true,
                     *             "MinimumNodesInPool": 5,
                     *             "PortsMappingProxyConfig": {
                     *               "MaxNumberOfClustersPerProxyInstance": 50,
                     *               "NumberOfPortsPerCluster": 4
                     *             },
                     *             "ProxyId": "r-123456",
                     *             "ReferenceProxyKey": "resource-proxy",
                     *             "TargetPort": 5432
                     *           }
                     *         },
                     *         {
                     *           "capability": "SERVERLESS",
                     *           "configuration": {
                     *             "EnableAutoStop": true,
                     *             "MinimumNodesInPool": 5,
                     *             "PortsMappingProxyConfig": {
                     *               "MaxNumberOfClustersPerProxyInstance": 50,
                     *               "NumberOfPortsPerCluster": 4
                     *             },
                     *             "ProxyId": "r-123456",
                     *             "ReferenceProxyKey": "resource-proxy",
                     *             "TargetPort": 5432
                     *           }
                     *         }
                     *       ],
                     *       "customLabels": {
                     *         "key": "value"
                     *       },
                     *       "customSysCTLs": {
                     *         "net.ipv4.tcp_syncookies": "1"
                     *       },
                     *       "customULimits": [
                     *         {
                     *           "ULimitsName": "NoProc",
                     *           "ULimitsType": "Soft",
                     *           "ULimitsValue": 1000
                     *         },
                     *         {
                     *           "ULimitsName": "NoFile",
                     *           "ULimitsType": "Hard",
                     *           "ULimitsValue": 2048
                     *         }
                     *       ],
                     *       "dependencies": [
                     *         {
                     *           "parameterMap": {
                     *             "clusterId": "writerId",
                     *             "clusterOrg": "userDatabase"
                     *           },
                     *           "resourceId": "r-12345678"
                     *         },
                     *         {
                     *           "parameterMap": {
                     *             "clusterId": "readerId",
                     *             "clusterOrg": "userDatabase"
                     *           },
                     *           "resourceId": "r-abcdef12"
                     *         }
                     *       ],
                     *       "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                     *       "environmentVariables": [
                     *         {
                     *           "name": "MYSQL_ROOT_PASSWORD",
                     *           "value": "password"
                     *         }
                     *       ],
                     *       "fileSystemConfiguration": {
                     *         "EFSFileSystemConfiguration": {
                     *           "PerformanceMode": "generalPurpose|maxIO",
                     *           "ProvisionedThroughputInMibps": 125,
                     *           "ThroughputMode": "provisioned|bursting|elastic"
                     *         }
                     *       },
                     *       "helmChartConfiguration": {
                     *         "chartName": "my-chart",
                     *         "chartRepoName": "my-repo",
                     *         "chartRepoUrl": "https://my-repo.com",
                     *         "chartValues": {
                     *           "key1": "value1",
                     *           "key2": 3,
                     *           "key3": {
                     *             "key4": "value4"
                     *           }
                     *         },
                     *         "chartVersion": "1.0.0",
                     *         "endpointConfiguration": {
                     *           "admin": {
                     *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                     *             "networkingType": "PRIVATE",
                     *             "ports": [
                     *               8080,
                     *               8081
                     *             ],
                     *             "primary": false
                     *           },
                     *           "cluster": {
                     *             "host": "https://my-endpoint.com",
                     *             "networkingType": "PUBLIC",
                     *             "ports": [
                     *               8080,
                     *               8081
                     *             ],
                     *             "primary": true
                     *           }
                     *         },
                     *         "layeredChartValues": [
                     *           {
                     *             "values": {
                     *               "global": {
                     *                 "image": {
                     *                   "tag": "v1.0.0"
                     *                 },
                     *                 "replicaCount": 1,
                     *                 "resources": {
                     *                   "requests": {
                     *                     "cpu": "100m",
                     *                     "memory": "128Mi"
                     *                   }
                     *                 }
                     *               }
                     *             }
                     *           },
                     *           {
                     *             "scope": {
                     *               "{{ $sys.cloudProviderName }}": "aws"
                     *             },
                     *             "valuesFile": {
                     *               "gitConfiguration": {
                     *                 "accessToken": "ghp_...",
                     *                 "commitSHA": "a1b2c3d4e5f6",
                     *                 "path": "aws/production.yaml",
                     *                 "referenceName": "refs/heads/main",
                     *                 "repositoryUrl": "https://github.com/org/helm-values"
                     *               }
                     *             }
                     *           }
                     *         ],
                     *         "namespace": "postgres",
                     *         "password": "my-password",
                     *         "runtimeConfiguration": {
                     *           "disableHooks": true,
                     *           "recreate": true,
                     *           "resetThenReuseValues": true,
                     *           "resetValues": true,
                     *           "reuseValues": true,
                     *           "skipCRDs": true,
                     *           "timeoutNanos": 1000000000,
                     *           "upgradeCRDs": true,
                     *           "wait": true,
                     *           "waitForJobs": true
                     *         },
                     *         "username": "my-user"
                     *       },
                     *       "id": "r-12345678",
                     *       "imageConfigId": "imgc-12345678",
                     *       "infraConfigId": "ic-12345678",
                     *       "internal": false,
                     *       "isDeprecated": false,
                     *       "jobConfig": {
                     *         "activeDeadlineSeconds": 300,
                     *         "backoffLimit": 5
                     *       },
                     *       "key": "galera",
                     *       "kustomizeConfiguration": {
                     *         "endpointConfiguration": {
                     *           "admin": {
                     *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                     *             "networkingType": "PRIVATE",
                     *             "ports": [
                     *               8080,
                     *               8081
                     *             ],
                     *             "primary": false
                     *           },
                     *           "cluster": {
                     *             "host": "https://my-endpoint.com",
                     *             "networkingType": "PUBLIC",
                     *             "ports": [
                     *               8080,
                     *               8081
                     *             ],
                     *             "primary": true
                     *           }
                     *         },
                     *         "gitConfiguration": {
                     *           "accessToken": "my-token",
                     *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *           "referenceName": "tags/v1.0.0",
                     *           "repositoryUrl": "https://github.com/username/myrepo",
                     *           "userName": "my-user"
                     *         },
                     *         "helmChartDependencies": [
                     *           {
                     *             "chartName": "cert-manager",
                     *             "chartVersion": "v1.5.3"
                     *           },
                     *           {
                     *             "chartName": "nginx-ingress",
                     *             "chartVersion": "v0.48.1"
                     *           },
                     *           {
                     *             "chartName": "external-dns",
                     *             "chartVersion": "v0.7.0"
                     *           },
                     *           {
                     *             "chartName": "cnpg-operator",
                     *             "chartVersion": "v0.23.1"
                     *           }
                     *         ],
                     *         "kustomizePath": "/kustomize"
                     *       },
                     *       "l4LoadBalancerConfiguration": {
                     *         "ingressPortConfiguration": [
                     *           {
                     *             "associatedResourceIDs": [
                     *               "r-12345678",
                     *               "r-abcdef12"
                     *             ],
                     *             "backendPort": 8080,
                     *             "ingressPort": 1234
                     *           },
                     *           {
                     *             "associatedResourceIDs": [
                     *               "r-12345678",
                     *               "r-abcdef12"
                     *             ],
                     *             "backendPort": 8081,
                     *             "ingressPort": 5678
                     *           },
                     *           {
                     *             "associatedResourceIDs": [
                     *               "r-vwxybz12",
                     *               "r-poij122v"
                     *             ],
                     *             "backendPort": 8082,
                     *             "ingressPort": 9012
                     *           }
                     *         ]
                     *       },
                     *       "l7LoadBalancerConfiguration": {
                     *         "paths": [
                     *           {
                     *             "associatedResourceID": "r-12345678",
                     *             "path": "/path",
                     *             "port": 8080
                     *           }
                     *         ]
                     *       },
                     *       "name": "Galera",
                     *       "onPremTerraformConfigurations": {
                     *         "Consectetur et qui tenetur sequi asperiores.": {
                     *           "gitConfiguration": {
                     *             "accessToken": "my-token",
                     *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *             "referenceName": "tags/v1.0.0",
                     *             "repositoryUrl": "https://github.com/username/myrepo",
                     *             "userName": "my-user"
                     *           },
                     *           "privateModuleGitAccessTokens": {
                     *             "tokenName": "accessToken"
                     *           },
                     *           "requiredOutputKeys": [
                     *             "output1"
                     *           ],
                     *           "requiredOutputs": [
                     *             {
                     *               "exported": true,
                     *               "key": "output1"
                     *             }
                     *           ],
                     *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *           "terraformPath": "/project1/tf"
                     *         },
                     *         "Laborum non aliquam quo.": {
                     *           "gitConfiguration": {
                     *             "accessToken": "my-token",
                     *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *             "referenceName": "tags/v1.0.0",
                     *             "repositoryUrl": "https://github.com/username/myrepo",
                     *             "userName": "my-user"
                     *           },
                     *           "privateModuleGitAccessTokens": {
                     *             "tokenName": "accessToken"
                     *           },
                     *           "requiredOutputKeys": [
                     *             "output1"
                     *           ],
                     *           "requiredOutputs": [
                     *             {
                     *               "exported": true,
                     *               "key": "output1"
                     *             }
                     *           ],
                     *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *           "terraformPath": "/project1/tf"
                     *         },
                     *         "Tenetur illum a ut iusto omnis.": {
                     *           "gitConfiguration": {
                     *             "accessToken": "my-token",
                     *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *             "referenceName": "tags/v1.0.0",
                     *             "repositoryUrl": "https://github.com/username/myrepo",
                     *             "userName": "my-user"
                     *           },
                     *           "privateModuleGitAccessTokens": {
                     *             "tokenName": "accessToken"
                     *           },
                     *           "requiredOutputKeys": [
                     *             "output1"
                     *           ],
                     *           "requiredOutputs": [
                     *             {
                     *               "exported": true,
                     *               "key": "output1"
                     *             }
                     *           ],
                     *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *           "terraformPath": "/project1/tf"
                     *         }
                     *       },
                     *       "operatorCRDConfiguration": {
                     *         "endpointConfiguration": {
                     *           "admin": {
                     *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                     *             "networkingType": "PRIVATE",
                     *             "ports": [
                     *               8080,
                     *               8081
                     *             ],
                     *             "primary": false
                     *           },
                     *           "cluster": {
                     *             "host": "https://my-endpoint.com",
                     *             "networkingType": "PUBLIC",
                     *             "ports": [
                     *               8080,
                     *               8081
                     *             ],
                     *             "primary": true
                     *           }
                     *         },
                     *         "helmChartDependencies": [
                     *           {
                     *             "chartName": "cert-manager",
                     *             "chartVersion": "v1.5.3"
                     *           },
                     *           {
                     *             "chartName": "nginx-ingress",
                     *             "chartVersion": "v0.48.1"
                     *           },
                     *           {
                     *             "chartName": "external-dns",
                     *             "chartVersion": "v0.7.0"
                     *           },
                     *           {
                     *             "chartName": "cnpg-operator",
                     *             "chartVersion": "v0.23.1"
                     *           }
                     *         ],
                     *         "outputParameters": {
                     *           "expiresAt": "$out.status.notAfter",
                     *           "issuerName": "letsencrypt-prod"
                     *         },
                     *         "readinessConditions": {
                     *           "$out.status.conditions[?(@.type=='Ready')].status": true
                     *         },
                     *         "supplementalFiles": [
                     *           "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                     *           "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                     *         ],
                     *         "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                     *       },
                     *       "productTierId": "pt-12345678",
                     *       "proxyType": "PortsBasedProxy",
                     *       "resourceType": "Generic",
                     *       "serviceId": "s-12345678",
                     *       "terraformConfigurations": {
                     *         "Ab recusandae accusamus.": {
                     *           "gitConfiguration": {
                     *             "accessToken": "my-token",
                     *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *             "referenceName": "tags/v1.0.0",
                     *             "repositoryUrl": "https://github.com/username/myrepo",
                     *             "userName": "my-user"
                     *           },
                     *           "privateModuleGitAccessTokens": {
                     *             "tokenName": "accessToken"
                     *           },
                     *           "requiredOutputKeys": [
                     *             "output1"
                     *           ],
                     *           "requiredOutputs": [
                     *             {
                     *               "exported": true,
                     *               "key": "output1"
                     *             }
                     *           ],
                     *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *           "terraformPath": "/project1/tf"
                     *         },
                     *         "Ut dolores et non.": {
                     *           "gitConfiguration": {
                     *             "accessToken": "my-token",
                     *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                     *             "referenceName": "tags/v1.0.0",
                     *             "repositoryUrl": "https://github.com/username/myrepo",
                     *             "userName": "my-user"
                     *           },
                     *           "privateModuleGitAccessTokens": {
                     *             "tokenName": "accessToken"
                     *           },
                     *           "requiredOutputKeys": [
                     *             "output1"
                     *           ],
                     *           "requiredOutputs": [
                     *             {
                     *               "exported": true,
                     *               "key": "output1"
                     *             }
                     *           ],
                     *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                     *           "terraformPath": "/project1/tf"
                     *         }
                     *       }
                     *     } */
                    "application/json": components["schemas"]["DescribeResourceResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe an resource */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/DeleteResource": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete an resource */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/UpdateResource": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "additionalSecurityContext": {
                 *         "AddCapabilities": [
                 *           "CAP_NET_ADMIN",
                 *           "CAP_NET_RAW"
                 *         ],
                 *         "DropCapabilities": [
                 *           "CAP_NET_ADMIN",
                 *           "CAP_NET_RAW"
                 *         ],
                 *         "SupplementalGroupIDs": [
                 *           1001,
                 *           999
                 *         ]
                 *       },
                 *       "backupConfiguration": {
                 *         "backupPeriodInHours": 24,
                 *         "backupRetentionInDays": 7
                 *       },
                 *       "customLabels": {
                 *         "key": "value"
                 *       },
                 *       "customSysCTLs": {
                 *         "net.ipv4.tcp_syncookies": "1"
                 *       },
                 *       "customULimits": [
                 *         {
                 *           "ULimitsName": "NoProc",
                 *           "ULimitsType": "Soft",
                 *           "ULimitsValue": 1000
                 *         },
                 *         {
                 *           "ULimitsName": "NoFile",
                 *           "ULimitsType": "Hard",
                 *           "ULimitsValue": 2048
                 *         }
                 *       ],
                 *       "dependencies": [
                 *         {
                 *           "parameterMap": {
                 *             "clusterId": "writerId",
                 *             "clusterOrg": "userDatabase"
                 *           },
                 *           "resourceId": "r-12345678"
                 *         },
                 *         {
                 *           "parameterMap": {
                 *             "clusterId": "readerId",
                 *             "clusterOrg": "userDatabase"
                 *           },
                 *           "resourceId": "r-abcdef12"
                 *         }
                 *       ],
                 *       "description": "A resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                 *       "environmentVariables": [
                 *         {
                 *           "key": "MYSQL_ROOT_PASSWORD",
                 *           "value": "password"
                 *         }
                 *       ],
                 *       "helmChartConfiguration": {
                 *         "chartName": "my-chart",
                 *         "chartRepoName": "my-repo",
                 *         "chartRepoUrl": "https://my-repo.com",
                 *         "chartValues": {
                 *           "key1": "value1",
                 *           "key2": 3,
                 *           "key3": {
                 *             "key4": "value4"
                 *           }
                 *         },
                 *         "chartVersion": "1.0.0",
                 *         "endpointConfiguration": {
                 *           "admin": {
                 *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                 *             "networkingType": "PRIVATE",
                 *             "ports": [
                 *               8080,
                 *               8081
                 *             ],
                 *             "primary": false
                 *           },
                 *           "cluster": {
                 *             "host": "https://my-endpoint.com",
                 *             "networkingType": "PUBLIC",
                 *             "ports": [
                 *               8080,
                 *               8081
                 *             ],
                 *             "primary": true
                 *           }
                 *         },
                 *         "layeredChartValues": [
                 *           {
                 *             "values": {
                 *               "global": {
                 *                 "image": {
                 *                   "tag": "v1.0.0"
                 *                 },
                 *                 "replicaCount": 1,
                 *                 "resources": {
                 *                   "requests": {
                 *                     "cpu": "100m",
                 *                     "memory": "128Mi"
                 *                   }
                 *                 }
                 *               }
                 *             }
                 *           },
                 *           {
                 *             "scope": {
                 *               "{{ $sys.cloudProviderName }}": "aws"
                 *             },
                 *             "valuesFile": {
                 *               "gitConfiguration": {
                 *                 "accessToken": "ghp_...",
                 *                 "commitSHA": "a1b2c3d4e5f6",
                 *                 "path": "aws/production.yaml",
                 *                 "referenceName": "refs/heads/main",
                 *                 "repositoryUrl": "https://github.com/org/helm-values"
                 *               }
                 *             }
                 *           }
                 *         ],
                 *         "namespace": "postgres",
                 *         "password": "my-password",
                 *         "runtimeConfiguration": {
                 *           "disableHooks": true,
                 *           "recreate": true,
                 *           "resetThenReuseValues": true,
                 *           "resetValues": true,
                 *           "reuseValues": true,
                 *           "skipCRDs": true,
                 *           "timeoutNanos": 1000000000,
                 *           "upgradeCRDs": true,
                 *           "wait": true,
                 *           "waitForJobs": true
                 *         },
                 *         "username": "my-user"
                 *       },
                 *       "imageConfigId": "imgc-12345678",
                 *       "infraConfigId": "ic-12345678",
                 *       "jobConfig": {
                 *         "activeDeadlineSeconds": 300,
                 *         "backoffLimit": 5
                 *       },
                 *       "kustomizeConfiguration": {
                 *         "endpointConfiguration": {
                 *           "admin": {
                 *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                 *             "networkingType": "PRIVATE",
                 *             "ports": [
                 *               8080,
                 *               8081
                 *             ],
                 *             "primary": false
                 *           },
                 *           "cluster": {
                 *             "host": "https://my-endpoint.com",
                 *             "networkingType": "PUBLIC",
                 *             "ports": [
                 *               8080,
                 *               8081
                 *             ],
                 *             "primary": true
                 *           }
                 *         },
                 *         "gitConfiguration": {
                 *           "accessToken": "my-token",
                 *           "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                 *           "referenceName": "tags/v1.0.0",
                 *           "repositoryUrl": "https://github.com/username/myrepo",
                 *           "userName": "my-user"
                 *         },
                 *         "helmChartDependencies": [
                 *           {
                 *             "chartName": "cert-manager",
                 *             "chartVersion": "v1.5.3"
                 *           },
                 *           {
                 *             "chartName": "nginx-ingress",
                 *             "chartVersion": "v0.48.1"
                 *           },
                 *           {
                 *             "chartName": "external-dns",
                 *             "chartVersion": "v0.7.0"
                 *           },
                 *           {
                 *             "chartName": "cnpg-operator",
                 *             "chartVersion": "v0.23.1"
                 *           }
                 *         ],
                 *         "kustomizePath": "/kustomize"
                 *       },
                 *       "l4LoadBalancerConfiguration": {
                 *         "ingressPortConfiguration": [
                 *           {
                 *             "associatedResourceIDs": [
                 *               "r-12345678",
                 *               "r-abcdef12"
                 *             ],
                 *             "backendPort": 8080,
                 *             "ingressPort": 1234
                 *           },
                 *           {
                 *             "associatedResourceIDs": [
                 *               "r-12345678",
                 *               "r-abcdef12"
                 *             ],
                 *             "backendPort": 8081,
                 *             "ingressPort": 5678
                 *           },
                 *           {
                 *             "associatedResourceIDs": [
                 *               "r-vwxybz12",
                 *               "r-poij122v"
                 *             ],
                 *             "backendPort": 8082,
                 *             "ingressPort": 9012
                 *           }
                 *         ]
                 *       },
                 *       "l7LoadBalancerConfiguration": {
                 *         "paths": [
                 *           {
                 *             "associatedResourceID": "r-12345678",
                 *             "path": "/path",
                 *             "port": 8080
                 *           }
                 *         ]
                 *       },
                 *       "name": "Galera",
                 *       "onPremTerraformConfigurations": {
                 *         "Ex tempora expedita rerum aut ut.": {
                 *           "gitConfiguration": {
                 *             "accessToken": "my-token",
                 *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                 *             "referenceName": "tags/v1.0.0",
                 *             "repositoryUrl": "https://github.com/username/myrepo",
                 *             "userName": "my-user"
                 *           },
                 *           "privateModuleGitAccessTokens": {
                 *             "tokenName": "accessToken"
                 *           },
                 *           "requiredOutputKeys": [
                 *             "output1"
                 *           ],
                 *           "requiredOutputs": [
                 *             {
                 *               "exported": true,
                 *               "key": "output1"
                 *             }
                 *           ],
                 *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                 *           "terraformPath": "/project1/tf"
                 *         }
                 *       },
                 *       "operatorCRDConfiguration": {
                 *         "endpointConfiguration": {
                 *           "admin": {
                 *             "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                 *             "networkingType": "PRIVATE",
                 *             "ports": [
                 *               8080,
                 *               8081
                 *             ],
                 *             "primary": false
                 *           },
                 *           "cluster": {
                 *             "host": "https://my-endpoint.com",
                 *             "networkingType": "PUBLIC",
                 *             "ports": [
                 *               8080,
                 *               8081
                 *             ],
                 *             "primary": true
                 *           }
                 *         },
                 *         "helmChartDependencies": [
                 *           {
                 *             "chartName": "cert-manager",
                 *             "chartVersion": "v1.5.3"
                 *           },
                 *           {
                 *             "chartName": "nginx-ingress",
                 *             "chartVersion": "v0.48.1"
                 *           },
                 *           {
                 *             "chartName": "external-dns",
                 *             "chartVersion": "v0.7.0"
                 *           },
                 *           {
                 *             "chartName": "cnpg-operator",
                 *             "chartVersion": "v0.23.1"
                 *           }
                 *         ],
                 *         "outputParameters": {
                 *           "expiresAt": "$out.status.notAfter",
                 *           "issuerName": "letsencrypt-prod"
                 *         },
                 *         "readinessConditions": {
                 *           "$out.status.conditions[?(@.type=='Ready')].status": true
                 *         },
                 *         "supplementalFiles": [
                 *           "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                 *           "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                 *         ],
                 *         "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                 *       },
                 *       "terraformConfigurations": {
                 *         "Recusandae aut.": {
                 *           "gitConfiguration": {
                 *             "accessToken": "my-token",
                 *             "commitSHA": "1e386b5f54de9150d336ccfe2e14782b94faf67c",
                 *             "referenceName": "tags/v1.0.0",
                 *             "repositoryUrl": "https://github.com/username/myrepo",
                 *             "userName": "my-user"
                 *           },
                 *           "privateModuleGitAccessTokens": {
                 *             "tokenName": "accessToken"
                 *           },
                 *           "requiredOutputKeys": [
                 *             "output1"
                 *           ],
                 *           "requiredOutputs": [
                 *             {
                 *               "exported": true,
                 *               "key": "output1"
                 *             }
                 *           ],
                 *           "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                 *           "terraformPath": "/project1/tf"
                 *         }
                 *       }
                 *     } */
                "application/json": components["schemas"]["UpdateResourceRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update an resource */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/ListActionHooks": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service to which the hook belongs
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource to which the hook belongs
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "hooks": [
                     *         {
                     *           "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
                     *           "customCommand": [
                     *             "/bin/sh",
                     *             "-c"
                     *           ],
                     *           "customImage": "my-custom-image:latest",
                     *           "scope": "CLUSTER",
                     *           "type": "ADD"
                     *         },
                     *         {
                     *           "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
                     *           "customCommand": [
                     *             "/bin/sh",
                     *             "-c"
                     *           ],
                     *           "customImage": "my-custom-image:latest",
                     *           "scope": "CLUSTER",
                     *           "type": "ADD"
                     *         },
                     *         {
                     *           "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
                     *           "customCommand": [
                     *             "/bin/sh",
                     *             "-c"
                     *           ],
                     *           "customImage": "my-custom-image:latest",
                     *           "scope": "CLUSTER",
                     *           "type": "ADD"
                     *         },
                     *         {
                     *           "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
                     *           "customCommand": [
                     *             "/bin/sh",
                     *             "-c"
                     *           ],
                     *           "customImage": "my-custom-image:latest",
                     *           "scope": "CLUSTER",
                     *           "type": "ADD"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListActionHooksResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list action hooks */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/RegisterActionHook": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service to which the hook belongs
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource to which the hook belongs
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
                 *       "customCommand": [
                 *         "/bin/sh",
                 *         "-c"
                 *       ],
                 *       "customImage": "my-custom-image:latest",
                 *       "scope": "CLUSTER",
                 *       "type": "ADD"
                 *     } */
                "application/json": components["schemas"]["RegisterActionHookRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to register an action hook */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/DeregisterActionHook": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the service to which the hook belongs
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource to which the hook belongs
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "scope": "CLUSTER",
                 *       "type": "ADD"
                 *     } */
                "application/json": components["schemas"]["DeregisterActionHookRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to deregister an action hook */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/ListResourceCapabilities": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the instance to describe. If not specified, the latest version is described.
                 * @example At laborum in ducimus quod sint consequuntur.
                 */
                ProductTierVersion?: string;
                /**
                 * @description Product tier id of the instance to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "capabilities": [
                     *         {
                     *           "capability": "SERVERLESS",
                     *           "configuration": {
                     *             "EnableAutoStop": true,
                     *             "MinimumNodesInPool": 5,
                     *             "PortsMappingProxyConfig": {
                     *               "MaxNumberOfClustersPerProxyInstance": 50,
                     *               "NumberOfPortsPerCluster": 4
                     *             },
                     *             "ProxyId": "r-123456",
                     *             "ReferenceProxyKey": "resource-proxy",
                     *             "TargetPort": 5432
                     *           }
                     *         },
                     *         {
                     *           "capability": "SERVERLESS",
                     *           "configuration": {
                     *             "EnableAutoStop": true,
                     *             "MinimumNodesInPool": 5,
                     *             "PortsMappingProxyConfig": {
                     *               "MaxNumberOfClustersPerProxyInstance": 50,
                     *               "NumberOfPortsPerCluster": 4
                     *             },
                     *             "ProxyId": "r-123456",
                     *             "ReferenceProxyKey": "resource-proxy",
                     *             "TargetPort": 5432
                     *           }
                     *         },
                     *         {
                     *           "capability": "SERVERLESS",
                     *           "configuration": {
                     *             "EnableAutoStop": true,
                     *             "MinimumNodesInPool": 5,
                     *             "PortsMappingProxyConfig": {
                     *               "MaxNumberOfClustersPerProxyInstance": 50,
                     *               "NumberOfPortsPerCluster": 4
                     *             },
                     *             "ProxyId": "r-123456",
                     *             "ReferenceProxyKey": "resource-proxy",
                     *             "TargetPort": 5432
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListResourceCapabilitiesResponse"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to disable resource capabilities */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/EnableResourceCapability": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "capability": "SERVERLESS",
                 *       "configuration": {
                 *         "EnableAutoStop": true,
                 *         "MinimumNodesInPool": 5,
                 *         "PortsMappingProxyConfig": {
                 *           "MaxNumberOfClustersPerProxyInstance": 50,
                 *           "NumberOfPortsPerCluster": 4
                 *         },
                 *         "ReferenceProxyKey": "resource-proxy",
                 *         "TargetPort": 5432
                 *       }
                 *     } */
                "application/json": components["schemas"]["EnableResourceCapabilityRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to enable resource capabilities */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/DisableResourceCapability": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "capability": "SERVERLESS"
                 *     } */
                "application/json": components["schemas"]["DisableResourceCapabilityRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to disable resource capabilities */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/ListDependentResource": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "r-12345678",
                     *       "ids": [
                     *         "r-12345678",
                     *         "r-abcdefgh",
                     *         "r-1234abcd"
                     *       ],
                     *       "nextPageToken": "next-token",
                     *       "serviceId": "s-12345678"
                     *     } */
                    "application/json": components["schemas"]["ListDependentResourcesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list resources */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/DeprecateResource": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to deprecate an resource */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/UnsetEnvironmentVariables": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "environmentVariables": [
                 *         {
                 *           "key": "MYSQL_ROOT_PASSWORD",
                 *           "value": "password"
                 *         }
                 *       ]
                 *     } */
                "application/json": components["schemas"]["UnsetEnvironmentVariablesRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to remove environment variables from a resource */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/SetEnvironmentVariables": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "environmentVariables": [
                 *         {
                 *           "key": "MYSQL_ROOT_PASSWORD",
                 *           "value": "password"
                 *         }
                 *       ]
                 *     } */
                "application/json": components["schemas"]["SetEnvironmentVariablesRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to add environment variables to a resource */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/ListFiles": {
        parameters: {
            query?: {
                /**
                 * @description ProductTierId of the config file to describe
                 * @example pt-12345678
                 */
                productTierId?: string;
                /**
                 * @description Product tier version of the config file to describe. If missing, last version is described
                 * @example 1.0
                 */
                productTierVersion?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "files": [
                     *         {
                     *           "description": "A file to store the configuration for the resource",
                     *           "fileId": "f-12345678",
                     *           "mountPath": "/etc/config",
                     *           "name": "file.txt",
                     *           "size": 1234,
                     *           "type": "Config",
                     *           "uploadTime": "2023-01-10T00:00:00Z",
                     *           "uploadedBy": "user"
                     *         },
                     *         {
                     *           "description": "A file to store the configuration for the resource",
                     *           "fileId": "f-12345678",
                     *           "mountPath": "/etc/config",
                     *           "name": "file.txt",
                     *           "size": 1234,
                     *           "type": "Config",
                     *           "uploadTime": "2023-01-10T00:00:00Z",
                     *           "uploadedBy": "user"
                     *         },
                     *         {
                     *           "description": "A file to store the configuration for the resource",
                     *           "fileId": "f-12345678",
                     *           "mountPath": "/etc/config",
                     *           "name": "file.txt",
                     *           "size": 1234,
                     *           "type": "Config",
                     *           "uploadTime": "2023-01-10T00:00:00Z",
                     *           "uploadedBy": "user"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListFilesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list files */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/AddFile": {
        parameters: {
            query?: never;
            header: {
                /**
                 * @description Content-Type header, must define value for multipart boundary.
                 * @example multipart/form-data; boundary=boundary
                 */
                "Content-Type"?: string;
                /**
                 * @description The name of the file
                 * @example file.txt
                 */
                Name: string;
                /**
                 * @description The description of the file
                 * @example A file to store the configuration for the resource
                 */
                Description: string;
                /**
                 * @description The type of the file
                 * @example Config
                 */
                FileType: string;
                /**
                 * @description The mount path of the file
                 * @example /etc/config
                 */
                MountPath: string;
            };
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example Doloremque aperiam ab illo. */
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_media_type: Error returned when the Content-Type header does not define a multipart request. */
            415: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/GetFile": {
        parameters: {
            query?: {
                /**
                 * @description Product Tier ID of the config files to list
                 * @example pt-12345678
                 */
                productTierId?: string;
                /**
                 * @description Product Tier version of the config files to list. If missing, last version is used
                 * @example 1.0
                 */
                productTierVersion?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
                /**
                 * @description The ID of the file
                 * @example f-12345678
                 */
                fileId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    /**
                     * @description Length is the downloaded content length in bytes.
                     * @example 4194304
                     */
                    "Content-Length"?: number;
                    /**
                     * @description Content-Type header, must define value for multipart boundary.
                     * @example multipart/form-data; boundary=boundary
                     */
                    "Content-Type"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when the requested file is not found */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a file */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/RemoveFile": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
                /**
                 * @description The ID of the file
                 * @example file-12345678
                 */
                fileId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when the requested file is not found */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a file */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/UpdateFileContent": {
        parameters: {
            query?: never;
            header?: {
                /**
                 * @description Content-Type header, must define value for multipart boundary.
                 * @example multipart/form-data; boundary=boundary
                 */
                "Content-Type"?: string;
            };
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
                /**
                 * @description The ID of the file
                 * @example f-12345678
                 */
                fileId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/UpdateFileMetadata": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
                /**
                 * @description The ID of the file
                 * @example f-12345678
                 */
                fileId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A file to store the configuration for the resource",
                 *       "mountPath": "/etc/config",
                 *       "name": "file.txt"
                 *     } */
                "application/json": components["schemas"]["UpdateFileMetadataRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/DescribeResourceMetricsConfig": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the resource to describe. If not specified, the latest version is described.
                 * @example Esse quis aperiam fugit et.
                 */
                ProductTierVersion?: string;
                /**
                 * @description ProductTierId of the resource to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "r-12345678",
                     *       "metricEndpoint": "http://localhost:9187/metrics",
                     *       "serviceId": "s-12345678"
                     *     } */
                    "application/json": components["schemas"]["Describeresourcemetricsconfigresult"];
                };
            };
            /** @description bad_request: Response on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response on failure to describe resource metrics */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/RegisterResourceMetricsConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "metricEndpoint": "http://localhost:9187/metrics"
                 *     } */
                "application/json": components["schemas"]["RegisterResourceMetricsConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response on failure to register resource metrics */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/DeregisterResourceMetricsConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response on failure to register resource metrics */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/AddResourceDependency": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
                /**
                 * @description The ID of the resource to be added as a dependency
                 * @example r-12345678
                 */
                resourceDependencyId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "parameterMap": {
                 *         "clusterId": "writerId",
                 *         "clusterOrg": "userDatabase"
                 *       }
                 *     } */
                "application/json": components["schemas"]["AddResourceDependencyRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to add a resource dependency to a resource */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "resource-api/RemoveResourceDependency": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource
                 * @example r-12345678
                 */
                id: string;
                /**
                 * @description The ID of the resource dependency to remove
                 * @example r-12345678
                 */
                resourceDependencyId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to remove a resource dependency from a resource */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "input-parameter-api/ListInputParameter": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the instance to describe. If not specified, the latest version is described.
                 * @example Commodi et velit delectus.
                 */
                ProductTierVersion?: string;
                /**
                 * @description Product tier id of the instance to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The ID of the service that this output parameter belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource that this input parameter belongs to
                 * @example r-12345678
                 */
                resourceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "ip-12345678",
                     *         "ip-12345679"
                     *       ],
                     *       "inputParameters": [
                     *         {
                     *           "defaultValue": "true",
                     *           "dependentResourceId": "r-12345678",
                     *           "description": "Praesentium rerum sit ab veritatis sed recusandae.",
                     *           "hasOptions": false,
                     *           "id": "var-12345678",
                     *           "isList": false,
                     *           "key": "11v",
                     *           "labeledOptions": {
                     *             "large": "t3.xlarge",
                     *             "medium": "t3.large",
                     *             "small": "t3.medium"
                     *           },
                     *           "limits": {
                     *             "max": "Natus iusto rem alias consequatur aut.",
                     *             "maxLength": "Maiores temporibus pariatur praesentium expedita.",
                     *             "min": "Sunt eius.",
                     *             "minLength": "Totam facilis fugiat."
                     *           },
                     *           "modifiable": true,
                     *           "name": "eai",
                     *           "options": [
                     *             "true",
                     *             "false"
                     *           ],
                     *           "regex": "^[a-zA-Z0-9_-]+$",
                     *           "required": false,
                     *           "resourceId": "r-12345678",
                     *           "serviceId": "s-12345678",
                     *           "tabIndex": 1,
                     *           "type": "Adipisci deserunt."
                     *         },
                     *         {
                     *           "defaultValue": "true",
                     *           "dependentResourceId": "r-12345678",
                     *           "description": "Praesentium rerum sit ab veritatis sed recusandae.",
                     *           "hasOptions": false,
                     *           "id": "var-12345678",
                     *           "isList": false,
                     *           "key": "11v",
                     *           "labeledOptions": {
                     *             "large": "t3.xlarge",
                     *             "medium": "t3.large",
                     *             "small": "t3.medium"
                     *           },
                     *           "limits": {
                     *             "max": "Natus iusto rem alias consequatur aut.",
                     *             "maxLength": "Maiores temporibus pariatur praesentium expedita.",
                     *             "min": "Sunt eius.",
                     *             "minLength": "Totam facilis fugiat."
                     *           },
                     *           "modifiable": true,
                     *           "name": "eai",
                     *           "options": [
                     *             "true",
                     *             "false"
                     *           ],
                     *           "regex": "^[a-zA-Z0-9_-]+$",
                     *           "required": false,
                     *           "resourceId": "r-12345678",
                     *           "serviceId": "s-12345678",
                     *           "tabIndex": 1,
                     *           "type": "Adipisci deserunt."
                     *         },
                     *         {
                     *           "defaultValue": "true",
                     *           "dependentResourceId": "r-12345678",
                     *           "description": "Praesentium rerum sit ab veritatis sed recusandae.",
                     *           "hasOptions": false,
                     *           "id": "var-12345678",
                     *           "isList": false,
                     *           "key": "11v",
                     *           "labeledOptions": {
                     *             "large": "t3.xlarge",
                     *             "medium": "t3.large",
                     *             "small": "t3.medium"
                     *           },
                     *           "limits": {
                     *             "max": "Natus iusto rem alias consequatur aut.",
                     *             "maxLength": "Maiores temporibus pariatur praesentium expedita.",
                     *             "min": "Sunt eius.",
                     *             "minLength": "Totam facilis fugiat."
                     *           },
                     *           "modifiable": true,
                     *           "name": "eai",
                     *           "options": [
                     *             "true",
                     *             "false"
                     *           ],
                     *           "regex": "^[a-zA-Z0-9_-]+$",
                     *           "required": false,
                     *           "resourceId": "r-12345678",
                     *           "serviceId": "s-12345678",
                     *           "tabIndex": 1,
                     *           "type": "Adipisci deserunt."
                     *         },
                     *         {
                     *           "defaultValue": "true",
                     *           "dependentResourceId": "r-12345678",
                     *           "description": "Praesentium rerum sit ab veritatis sed recusandae.",
                     *           "hasOptions": false,
                     *           "id": "var-12345678",
                     *           "isList": false,
                     *           "key": "11v",
                     *           "labeledOptions": {
                     *             "large": "t3.xlarge",
                     *             "medium": "t3.large",
                     *             "small": "t3.medium"
                     *           },
                     *           "limits": {
                     *             "max": "Natus iusto rem alias consequatur aut.",
                     *             "maxLength": "Maiores temporibus pariatur praesentium expedita.",
                     *             "min": "Sunt eius.",
                     *             "minLength": "Totam facilis fugiat."
                     *           },
                     *           "modifiable": true,
                     *           "name": "eai",
                     *           "options": [
                     *             "true",
                     *             "false"
                     *           ],
                     *           "regex": "^[a-zA-Z0-9_-]+$",
                     *           "required": false,
                     *           "resourceId": "r-12345678",
                     *           "serviceId": "s-12345678",
                     *           "tabIndex": 1,
                     *           "type": "Adipisci deserunt."
                     *         }
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListInputParametersResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list input parameters */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "output-parameter-api/ListOutputParameter": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the resource to describe. If not specified, the latest version is described.
                 * @example Natus est autem ab dolor itaque.
                 */
                ProductTierVersion?: string;
                /**
                 * @description ProductTierId of the resource to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The ID of the service that this output parameter belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The ID of the resource that this output parameter belongs to
                 * @example r-12345678
                 */
                resourceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "op-12345678"
                     *       ],
                     *       "nextPageToken": "next-token",
                     *       "outputParameters": [
                     *         {
                     *           "description": "Username of the user created in the target system",
                     *           "id": "op-12345678",
                     *           "key": "username",
                     *           "name": "Username",
                     *           "resourceId": "r-12345678",
                     *           "serviceId": "s-12345678",
                     *           "value": "johndoe",
                     *           "valueRef": "$var.username",
                     *           "valueType": "Libero natus nostrum ipsa cumque explicabo."
                     *         },
                     *         {
                     *           "description": "Username of the user created in the target system",
                     *           "id": "op-12345678",
                     *           "key": "username",
                     *           "name": "Username",
                     *           "resourceId": "r-12345678",
                     *           "serviceId": "s-12345678",
                     *           "value": "johndoe",
                     *           "valueRef": "$var.username",
                     *           "valueType": "Libero natus nostrum ipsa cumque explicabo."
                     *         },
                     *         {
                     *           "description": "Username of the user created in the target system",
                     *           "id": "op-12345678",
                     *           "key": "username",
                     *           "name": "Username",
                     *           "resourceId": "r-12345678",
                     *           "serviceId": "s-12345678",
                     *           "value": "johndoe",
                     *           "valueRef": "$var.username",
                     *           "valueType": "Libero natus nostrum ipsa cumque explicabo."
                     *         },
                     *         {
                     *           "description": "Username of the user created in the target system",
                     *           "id": "op-12345678",
                     *           "key": "username",
                     *           "name": "Username",
                     *           "resourceId": "r-12345678",
                     *           "serviceId": "s-12345678",
                     *           "value": "johndoe",
                     *           "valueRef": "$var.username",
                     *           "valueType": "Libero natus nostrum ipsa cumque explicabo."
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListOutputParametersResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list output parameters */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api-api/CreateServiceAPI": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                 *       "serviceEnvironmentId": "se-12345678"
                 *     } */
                "application/json": components["schemas"]["CreateServiceAPIRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a service API */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api-api/DescribeServiceAPI": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service API ID
                 * @example sa-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "apiVersion": "v1",
                     *       "deploymentConfigId": "dc-12345678",
                     *       "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                     *       "id": "sa-12345678",
                     *       "serviceEnvironmentId": "se-12345678",
                     *       "serviceId": "s-12345678",
                     *       "serviceName": "mysql"
                     *     } */
                    "application/json": components["schemas"]["DescribeServiceAPIResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a service API */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api-api/DeleteServiceAPI": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service API ID
                 * @example sa-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a service API */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api-api/UpdateServiceAPI": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service API ID
                 * @example sa-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability"
                 *     } */
                "application/json": components["schemas"]["UpdateServiceAPIRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update a service API */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api-api/DescribePendingChanges": {
        parameters: {
            query?: {
                /**
                 * @description ProductTierID of the resource to describe pending changes forNeeds to specified in combination with the product tier version
                 * @example pt-12345678
                 */
                productTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service API ID
                 * @example sa-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": "sa-12345678",
                     *       "resourceChangeSets": {
                     *         "Hic quidem laboriosam quia quod dicta.": {
                     *           "categorizedResourceChanges": {
                     *             "Modi quidem.": {
                     *               "changes": [
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 },
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 },
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 }
                     *               ],
                     *               "status": "PENDING_UPDATE"
                     *             }
                     *           },
                     *           "imageConfigChanges": {
                     *             "changeState": "PENDING_NEW",
                     *             "imageConfigId": "imgc-12345678",
                     *             "imageName": "mysql"
                     *           },
                     *           "infraConfigChanges": {
                     *             "changeState": "PENDING_NEW",
                     *             "infraConfigId": "ic-12345678",
                     *             "name": "MySQL Writer Infra Config"
                     *           },
                     *           "overallResourceStatus": "PENDING_UPDATE",
                     *           "productTierFeatureChanges": "PENDING_UPDATE",
                     *           "resourceChanges": "PENDING_DELETE",
                     *           "resourceName": "Qui quia officiis id sint."
                     *         },
                     *         "Quaerat exercitationem enim et deserunt.": {
                     *           "categorizedResourceChanges": {
                     *             "Modi quidem.": {
                     *               "changes": [
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 },
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 },
                     *                 {
                     *                   "attributes": {
                     *                     "resourceId": "r-12345678"
                     *                   },
                     *                   "changeType": "PENDING_NEW",
                     *                   "name": "Customer metrics"
                     *                 }
                     *               ],
                     *               "status": "PENDING_UPDATE"
                     *             }
                     *           },
                     *           "imageConfigChanges": {
                     *             "changeState": "PENDING_NEW",
                     *             "imageConfigId": "imgc-12345678",
                     *             "imageName": "mysql"
                     *           },
                     *           "infraConfigChanges": {
                     *             "changeState": "PENDING_NEW",
                     *             "infraConfigId": "ic-12345678",
                     *             "name": "MySQL Writer Infra Config"
                     *           },
                     *           "overallResourceStatus": "PENDING_UPDATE",
                     *           "productTierFeatureChanges": "PENDING_UPDATE",
                     *           "resourceChanges": "PENDING_DELETE",
                     *           "resourceName": "Qui quia officiis id sint."
                     *         }
                     *       },
                     *       "serviceId": "s-12345678"
                     *     } */
                    "application/json": components["schemas"]["DescribePendingChangesResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe pending changes to a service API */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api-api/DiscardPendingChanges": {
        parameters: {
            query?: {
                /**
                 * @description ProductTierID of the resource to describe pending changes forNeeds to specified in combination with the product tier version
                 * @example pt-12345678
                 */
                productTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service API ID
                 * @example sa-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe pending changes to a service API */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api-api/DeprecateServiceAPI": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service API ID
                 * @example sa-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to deprecate a service API */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api-api/ReleaseServiceAPI": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service API ID
                 * @example sa-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "dryRun": false,
                 *       "isPreferred": true,
                 *       "productTierId": "pt-12345678",
                 *       "versionSetName": "v1",
                 *       "versionSetType": "Major|Incremental|UserDefined"
                 *     } */
                "application/json": components["schemas"]["ReleaseServiceAPIRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to release a service API */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-model-api/ListServiceModel": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service API ID
                 * @example sa-12345678
                 */
                serviceApiId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "sm-12345678",
                     *         "sm-87654321"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListServiceModelsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list service models */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "image-config-api/ListImageConfigs": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID to use for the infra
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service environment ID
                 * @example se-12345678
                 */
                serviceEnvironmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "imgc-12345678",
                     *         "imgc-87654321"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListImageConfigsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list image configs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "infra-config-api/ListInfraConfig": {
        parameters: {
            query?: {
                /**
                 * @description Is infra config managed by omnistrate
                 * @example false
                 */
                managed?: boolean;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service environment ID
                 * @example se-12345678
                 */
                serviceEnvironmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "ic-12345678",
                     *         "ic-abcdefgh",
                     *         "ic-1234efgh"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListInfraConfigResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list infra configs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api-api/ListServiceAPI": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID that this API bundle belongs to
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The service environment ID
                 * @example se-12345678
                 */
                serviceEnvironmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "sa-12345678"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListServiceAPIsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list service APIs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-config-api/ListStorageConfig": {
        parameters: {
            query?: {
                /**
                 * @description Is storage config managed by omnistrate
                 * @example false
                 */
                managed?: boolean;
            };
            header?: never;
            path: {
                /**
                 * @description The service id to filter by
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "sc-12345678"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListStorageConfigsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list storage configs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-config-api/CreateStorageConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service to which this storage config belongs
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "my-storage-config-description",
                 *       "name": "my-storage-config"
                 *     } */
                "application/json": components["schemas"]["CreateStorageConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create storage config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-config-api/DescribeStorageConfig": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the storage config to describe. If not specified, the latest version is described.
                 * @example Quibusdam fugiat.
                 */
                ProductTierVersion?: string;
                /**
                 * @description ProductTierId of the storage config to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The storage config ID
                 * @example sc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "description": "my-storage-config-description",
                     *       "id": "sc-12345678",
                     *       "infraConfigIDs": [
                     *         "ic-12345678",
                     *         "ic-abcdefgh"
                     *       ],
                     *       "name": "my-storage-config",
                     *       "serviceId": "s-12345678",
                     *       "volumes": {
                     *         "svc-12345678": [
                     *           "/data",
                     *           "/mnt/logs"
                     *         ],
                     *         "svc-23456789": [
                     *           "/config"
                     *         ]
                     *       }
                     *     } */
                    "application/json": components["schemas"]["DescribeStorageConfigResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe storage config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-config-api/DeleteStorageConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The storage config ID
                 * @example sc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a storage config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-config-api/UpdateStorageConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The storage config ID
                 * @example sc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "my-storage-config-description",
                 *       "name": "my-storage-config"
                 *     } */
                "application/json": components["schemas"]["UpdateStorageConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update storage config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-config-api/AddStorageVolumeConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The storage config ID
                 * @example sc-12345678
                 */
                id: string;
                /**
                 * @description The storage volume config ID
                 * @example svc-12345678
                 */
                storageVolumeConfigId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "mountPath": "/data"
                 *     } */
                "application/json": components["schemas"]["AddStorageVolumeConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to add storage volume config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-config-api/RemoveStorageVolumeConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The storage config ID
                 * @example sc-12345678
                 */
                id: string;
                /**
                 * @description The storage volume config ID
                 * @example svc-12345678
                 */
                storageVolumeConfigId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "mountPath": "/data"
                 *     } */
                "application/json": components["schemas"]["RemoveStorageVolumeConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to remove storage volume config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-volume-config-api/ListStorageVolumeConfig": {
        parameters: {
            query?: {
                /**
                 * @description Is storage volume config managed by omnistrate
                 * @example false
                 */
                managed?: boolean;
            };
            header?: never;
            path: {
                /**
                 * @description The service to list storage volume configs for
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "svc-12345678"
                     *       ],
                     *       "nextPageToken": "next-token"
                     *     } */
                    "application/json": components["schemas"]["ListStorageVolumeConfigsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list storage volume configs */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-volume-config-api/CreateStorageVolumeConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "clusterStorageType": "S3|$var.storageType|AWS::EFS",
                 *       "description": "A storage volume set to store the MySQL data directory",
                 *       "disableBackup": false,
                 *       "instanceStorageIops": "$var.storageIops",
                 *       "instanceStorageSizeGi": "$var.storage_size",
                 *       "instanceStorageThroughputMiBps": "128",
                 *       "instanceStorageType": "$var.storageType",
                 *       "name": "MySQL Data Volume",
                 *       "storageResourceID": "r-12345678"
                 *     } */
                "application/json": components["schemas"]["CreateStorageVolumeConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create storage volume config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-volume-config-api/DescribeStorageVolumeConfig": {
        parameters: {
            query?: {
                /**
                 * @description Product tier version of the network config to describe. If not specified, the latest version is described.
                 * @example Voluptatem eos velit voluptatem quibusdam magnam porro.
                 */
                ProductTierVersion?: string;
                /**
                 * @description ProductTierId of the network config to describe. Needs to specified in combination with the product tier version
                 * @example Beatae beatae.
                 */
                ProductTierId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The storage volume config ID
                 * @example svc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "cloudProviderName": "aws",
                     *       "clusterStorageType": "S3|$var.storageType|AWS::EFS",
                     *       "description": "A storage volume set to store the MySQL data directory",
                     *       "disableBackup": false,
                     *       "id": "svc-12345678",
                     *       "instanceStorageIops": "7500",
                     *       "instanceStorageSizeGi": "128",
                     *       "instanceStorageThroughputMiBps": "128",
                     *       "instanceStorageType": "$var.storageType",
                     *       "name": "MySQL Data Volume",
                     *       "serviceId": "s-12345678",
                     *       "storageResourceID": "r-12345678"
                     *     } */
                    "application/json": components["schemas"]["DescribeStorageVolumeConfigResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe storage volume config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-volume-config-api/DeleteStorageVolumeConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The storage volume config ID
                 * @example svc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a storage volume config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-volume-config-api/UpdateStorageVolumeConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The storage volume config ID
                 * @example svc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A storage volume set to store the MySQL data directory",
                 *       "disableBackup": false,
                 *       "name": "MySQL Data Volume"
                 *     } */
                "application/json": components["schemas"]["UpdateStorageVolumeConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update storage volume config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-volume-config-api/UpdateInstanceStorageVolumeConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The storage volume config ID
                 * @example svc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "instanceStorageIops": "7500",
                 *       "instanceStorageThroughputMiBps": "128",
                 *       "instanceStorageType": "AWS::EBS_GP2"
                 *     } */
                "application/json": components["schemas"]["UpdateInstanceStorageVolumeConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update instance storage volume type config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "storage-volume-config-api/UpdateStorageVolumeSizeConfig": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The service ID
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description The storage volume config ID
                 * @example svc-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "instanceStorageSizeGi": "$var.storage_size"
                 *     } */
                "application/json": components["schemas"]["UpdateStorageVolumeSizeConfigRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update storage volume size config */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "vunit-api/DescribeVUnit": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Service ID for the VUnit
                 * @example s-12345678
                 */
                serviceId: string;
                /**
                 * @description VUnit to operate on
                 * @example vu-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "cloudProvider": "aws",
                     *       "id": "vu-12345678",
                     *       "networkIds": [
                     *         "n-12345678",
                     *         "n-abcdefgh",
                     *         "n-1234efgh"
                     *       ],
                     *       "region": "us-west-2",
                     *       "serviceId": "s-12345678",
                     *       "serviceModelId": "sm-12345678"
                     *     } */
                    "application/json": components["schemas"]["DescribeVUnitResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a vunit */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api/BuildServiceFromComposeSpec": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "configs": {
                 *         "Aliquid pariatur molestiae quod unde.": "Labore quisquam dolore.",
                 *         "Vero reiciendis.": "Qui consequuntur doloremque ullam esse."
                 *       },
                 *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                 *       "dryrun": true,
                 *       "environment": "dev",
                 *       "environmentType": "DEV",
                 *       "fileContent": "Earum minima voluptates cupiditate.",
                 *       "name": "MySQL multi-writer service",
                 *       "release": true,
                 *       "releaseAsPreferred": true,
                 *       "releaseVersionName": "mysql",
                 *       "secrets": {
                 *         "Aperiam rerum et dicta aut corporis.": "Earum odio libero consectetur totam impedit.",
                 *         "Repudiandae excepturi.": "Dicta aspernatur deserunt unde est labore."
                 *       },
                 *       "serviceLogoURL": "http://cronin.net/salvador"
                 *     } */
                "application/json": components["schemas"]["BuildServiceFromComposeSpecRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "productTierID": "pt-12345678",
                     *       "serviceEnvironmentID": "se-12345678",
                     *       "serviceID": "s-12345678",
                     *       "undefinedResources": {
                     *         "mysql": "r-12345678"
                     *       }
                     *     } */
                    "application/json": components["schemas"]["BuildServiceFromComposeSpecResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to build a service from compose spec */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api/CreateServiceFromComposeSpec": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                 *       "fileContent": "Est facere voluptatem.",
                 *       "fileFormat": "text/plain",
                 *       "fileName": "mysql.yaml",
                 *       "name": "MySQL multi-writer service",
                 *       "serviceLogoURL": "http://koelpin.org/tracey"
                 *     } */
                "application/json": components["schemas"]["CreateServiceFromComposeSpecRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a service */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "service-api/BuildServiceFromServicePlanSpec": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                 *       "dryrun": true,
                 *       "environment": "dev",
                 *       "environmentType": "DEV",
                 *       "fileContent": "Quia quod rerum quis consequatur.",
                 *       "name": "MySQL multi-writer service",
                 *       "release": true,
                 *       "releaseAsPreferred": true,
                 *       "releaseVersionName": "mysql",
                 *       "serviceLogoURL": "http://wuckert.info/zoey_cormier"
                 *     } */
                "application/json": components["schemas"]["BuildServiceFromServicePlanSpecRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "productTierID": "pt-12345678",
                     *       "serviceEnvironmentID": "se-12345678",
                     *       "serviceID": "s-12345678",
                     *       "undefinedResources": {
                     *         "mysql": "r-12345678"
                     *       }
                     *     } */
                    "application/json": components["schemas"]["BuildServiceFromServicePlanSpecResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to build a service from compose spec */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "signin-api/Signin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "email": "abc@gmail.com",
                 *       "hashedPassword": "deprecated",
                 *       "password": "password"
                 *     } */
                "application/json": components["schemas"]["SigninRequest"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "jwtToken": ""
                     *     } */
                    "application/json": components["schemas"]["SigninResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to signin */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "signup-api/Signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "companyDescription": "We sell xyz database software",
                 *       "companyUrl": "https://www.mywebsite.com",
                 *       "email": "abc@gmail.com",
                 *       "legalCompanyName": "mywebsite",
                 *       "name": "John Doe",
                 *       "password": "password"
                 *     } */
                "application/json": components["schemas"]["SignupRequest"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to signup */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "sp-organization-api/DescribeServiceProviderOrganization": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "DefaultDeploymentCellConfigurations": {
                     *         "DeploymentCellConfigurationPerCloudProvider": {
                     *           "Esse delectus.": {
                     *             "Amenities": [
                     *               {
                     *                 "Description": "Ensures high availability across multiple zones.",
                     *                 "IsManaged": true,
                     *                 "Name": "Prometheus",
                     *                 "Properties": {
                     *                   "Cupiditate eius enim temporibus ut.": "Ut sint laudantium porro ex et eos."
                     *                 },
                     *                 "Type": "HelmChart"
                     *               },
                     *               {
                     *                 "Description": "Ensures high availability across multiple zones.",
                     *                 "IsManaged": true,
                     *                 "Name": "Prometheus",
                     *                 "Properties": {
                     *                   "Cupiditate eius enim temporibus ut.": "Ut sint laudantium porro ex et eos."
                     *                 },
                     *                 "Type": "HelmChart"
                     *               }
                     *             ]
                     *           },
                     *           "Et quam quidem quia.": {
                     *             "Amenities": [
                     *               {
                     *                 "Description": "Ensures high availability across multiple zones.",
                     *                 "IsManaged": true,
                     *                 "Name": "Prometheus",
                     *                 "Properties": {
                     *                   "Cupiditate eius enim temporibus ut.": "Ut sint laudantium porro ex et eos."
                     *                 },
                     *                 "Type": "HelmChart"
                     *               },
                     *               {
                     *                 "Description": "Ensures high availability across multiple zones.",
                     *                 "IsManaged": true,
                     *                 "Name": "Prometheus",
                     *                 "Properties": {
                     *                   "Cupiditate eius enim temporibus ut.": "Ut sint laudantium porro ex et eos."
                     *                 },
                     *                 "Type": "HelmChart"
                     *               }
                     *             ]
                     *           },
                     *           "Praesentium et aut itaque minus.": {
                     *             "Amenities": [
                     *               {
                     *                 "Description": "Ensures high availability across multiple zones.",
                     *                 "IsManaged": true,
                     *                 "Name": "Prometheus",
                     *                 "Properties": {
                     *                   "Cupiditate eius enim temporibus ut.": "Ut sint laudantium porro ex et eos."
                     *                 },
                     *                 "Type": "HelmChart"
                     *               },
                     *               {
                     *                 "Description": "Ensures high availability across multiple zones.",
                     *                 "IsManaged": true,
                     *                 "Name": "Prometheus",
                     *                 "Properties": {
                     *                   "Cupiditate eius enim temporibus ut.": "Ut sint laudantium porro ex et eos."
                     *                 },
                     *                 "Type": "HelmChart"
                     *               }
                     *             ]
                     *           }
                     *         }
                     *       },
                     *       "DeploymentCellConfigurationsPerEnv": {
                     *         "Neque occaecati explicabo.": {
                     *           "DeploymentCellConfigurationPerCloudProvider": {
                     *             "Esse delectus.": {
                     *               "Amenities": [
                     *                 {
                     *                   "Description": "Ensures high availability across multiple zones.",
                     *                   "IsManaged": true,
                     *                   "Name": "Prometheus",
                     *                   "Properties": {
                     *                     "Cupiditate eius enim temporibus ut.": "Ut sint laudantium porro ex et eos."
                     *                   },
                     *                   "Type": "HelmChart"
                     *                 },
                     *                 {
                     *                   "Description": "Ensures high availability across multiple zones.",
                     *                   "IsManaged": true,
                     *                   "Name": "Prometheus",
                     *                   "Properties": {
                     *                     "Cupiditate eius enim temporibus ut.": "Ut sint laudantium porro ex et eos."
                     *                   },
                     *                   "Type": "HelmChart"
                     *                 }
                     *               ]
                     *             },
                     *             "Et quam quidem quia.": {
                     *               "Amenities": [
                     *                 {
                     *                   "Description": "Ensures high availability across multiple zones.",
                     *                   "IsManaged": true,
                     *                   "Name": "Prometheus",
                     *                   "Properties": {
                     *                     "Cupiditate eius enim temporibus ut.": "Ut sint laudantium porro ex et eos."
                     *                   },
                     *                   "Type": "HelmChart"
                     *                 },
                     *                 {
                     *                   "Description": "Ensures high availability across multiple zones.",
                     *                   "IsManaged": true,
                     *                   "Name": "Prometheus",
                     *                   "Properties": {
                     *                     "Cupiditate eius enim temporibus ut.": "Ut sint laudantium porro ex et eos."
                     *                   },
                     *                   "Type": "HelmChart"
                     *                 }
                     *               ]
                     *             },
                     *             "Praesentium et aut itaque minus.": {
                     *               "Amenities": [
                     *                 {
                     *                   "Description": "Ensures high availability across multiple zones.",
                     *                   "IsManaged": true,
                     *                   "Name": "Prometheus",
                     *                   "Properties": {
                     *                     "Cupiditate eius enim temporibus ut.": "Ut sint laudantium porro ex et eos."
                     *                   },
                     *                   "Type": "HelmChart"
                     *                 },
                     *                 {
                     *                   "Description": "Ensures high availability across multiple zones.",
                     *                   "IsManaged": true,
                     *                   "Name": "Prometheus",
                     *                   "Properties": {
                     *                     "Cupiditate eius enim temporibus ut.": "Ut sint laudantium porro ex et eos."
                     *                   },
                     *                   "Type": "HelmChart"
                     *                 }
                     *               ]
                     *             }
                     *           }
                     *         }
                     *       },
                     *       "id": "org-aKQ8G13QeR"
                     *     } */
                    "application/json": components["schemas"]["DescribeServiceProviderOrganizationResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe service provider organization */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "sp-organization-api/ModifyServiceProviderOrganization": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "DeploymentCellConfigurations": {
                 *         "Atque reprehenderit dolores magnam consequatur.": {
                 *           "DeploymentCellConfigurationPerCloudProvider": {
                 *             "Voluptas natus dolor non aut.": {
                 *               "Amenities": [
                 *                 {
                 *                   "Description": "Ensures high availability across multiple zones.",
                 *                   "IsManaged": true,
                 *                   "Name": "Prometheus",
                 *                   "Properties": {
                 *                     "Dolores voluptatibus temporibus.": "Minus consequatur eos libero animi.",
                 *                     "Sed et nobis voluptas sequi officiis facilis.": "Nulla voluptatibus voluptatem explicabo ut.",
                 *                     "Sequi magnam porro.": "Qui earum odio quibusdam a adipisci id."
                 *                   },
                 *                   "Type": "HelmChart"
                 *                 },
                 *                 {
                 *                   "Description": "Ensures high availability across multiple zones.",
                 *                   "IsManaged": true,
                 *                   "Name": "Prometheus",
                 *                   "Properties": {
                 *                     "Dolores voluptatibus temporibus.": "Minus consequatur eos libero animi.",
                 *                     "Sed et nobis voluptas sequi officiis facilis.": "Nulla voluptatibus voluptatem explicabo ut.",
                 *                     "Sequi magnam porro.": "Qui earum odio quibusdam a adipisci id."
                 *                   },
                 *                   "Type": "HelmChart"
                 *                 }
                 *               ]
                 *             }
                 *           }
                 *         },
                 *         "Cumque rerum dignissimos id.": {
                 *           "DeploymentCellConfigurationPerCloudProvider": {
                 *             "Voluptas natus dolor non aut.": {
                 *               "Amenities": [
                 *                 {
                 *                   "Description": "Ensures high availability across multiple zones.",
                 *                   "IsManaged": true,
                 *                   "Name": "Prometheus",
                 *                   "Properties": {
                 *                     "Dolores voluptatibus temporibus.": "Minus consequatur eos libero animi.",
                 *                     "Sed et nobis voluptas sequi officiis facilis.": "Nulla voluptatibus voluptatem explicabo ut.",
                 *                     "Sequi magnam porro.": "Qui earum odio quibusdam a adipisci id."
                 *                   },
                 *                   "Type": "HelmChart"
                 *                 },
                 *                 {
                 *                   "Description": "Ensures high availability across multiple zones.",
                 *                   "IsManaged": true,
                 *                   "Name": "Prometheus",
                 *                   "Properties": {
                 *                     "Dolores voluptatibus temporibus.": "Minus consequatur eos libero animi.",
                 *                     "Sed et nobis voluptas sequi officiis facilis.": "Nulla voluptatibus voluptatem explicabo ut.",
                 *                     "Sequi magnam porro.": "Qui earum odio quibusdam a adipisci id."
                 *                   },
                 *                   "Type": "HelmChart"
                 *                 }
                 *               ]
                 *             }
                 *           }
                 *         }
                 *       }
                 *     } */
                "application/json": components["schemas"]["ModifyServiceProviderOrganizationRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to modify service provider organization */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "stripe-connect-api/GetStripeAuthorizeUrl": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "authorizeURL": "https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_12345678&scope=read_write&state=12345678"
                     *     } */
                    "application/json": components["schemas"]["StripeAuthorizeURLResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list invoices */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "stripe-connect-api/CompleteOAuthConnection": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "code": "ac_12345678",
                 *       "state": "12345678"
                 *     } */
                "application/json": components["schemas"]["CompleteOAuthConnectionRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "stripeUserID": "acct_12345678"
                     *     } */
                    "application/json": components["schemas"]["CompleteOAuthConnectionResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list invoices */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "subscription-api/ListSubscriptions": {
        parameters: {
            query?: {
                /**
                 * @description Service Id
                 * @example service-12345678
                 */
                serviceId?: string;
                /**
                 * @description The environment type to filter by
                 * @example DEV
                 */
                environmentType?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "sub-12345678",
                     *         "sub-abcdefgh",
                     *         "sub-1234efgh"
                     *       ],
                     *       "nextPageToken": "next-token",
                     *       "subscriptions": [
                     *         {
                     *           "accountConfigIdentityId": "org-12345678",
                     *           "allowCreatesWhenPaymentNotConfigured": true,
                     *           "cloudProviderNames": [
                     *             "aws",
                     *             "gcp"
                     *           ],
                     *           "createdAt": "2019-01-01T00:00:00Z",
                     *           "defaultSubscription": true,
                     *           "id": "sub-12345678",
                     *           "maxNumberOfInstances": 10,
                     *           "paymentMethodConfigured": true,
                     *           "productTierId": "pt-12345678",
                     *           "productTierName": "Omnistrate Multi Tenancy",
                     *           "roleType": "root",
                     *           "rootUserId": "user-12345678",
                     *           "serviceId": "s-12345678",
                     *           "serviceLogoURL": "Similique voluptas aut alias facilis non.",
                     *           "serviceName": "MySQL multi-writer service",
                     *           "serviceOrgId": "org-12345678",
                     *           "serviceOrgName": "Omnistrate",
                     *           "status": "ACTIVE",
                     *           "subscriptionOwnerName": "John Doe"
                     *         },
                     *         {
                     *           "accountConfigIdentityId": "org-12345678",
                     *           "allowCreatesWhenPaymentNotConfigured": true,
                     *           "cloudProviderNames": [
                     *             "aws",
                     *             "gcp"
                     *           ],
                     *           "createdAt": "2019-01-01T00:00:00Z",
                     *           "defaultSubscription": true,
                     *           "id": "sub-12345678",
                     *           "maxNumberOfInstances": 10,
                     *           "paymentMethodConfigured": true,
                     *           "productTierId": "pt-12345678",
                     *           "productTierName": "Omnistrate Multi Tenancy",
                     *           "roleType": "root",
                     *           "rootUserId": "user-12345678",
                     *           "serviceId": "s-12345678",
                     *           "serviceLogoURL": "Similique voluptas aut alias facilis non.",
                     *           "serviceName": "MySQL multi-writer service",
                     *           "serviceOrgId": "org-12345678",
                     *           "serviceOrgName": "Omnistrate",
                     *           "status": "ACTIVE",
                     *           "subscriptionOwnerName": "John Doe"
                     *         },
                     *         {
                     *           "accountConfigIdentityId": "org-12345678",
                     *           "allowCreatesWhenPaymentNotConfigured": true,
                     *           "cloudProviderNames": [
                     *             "aws",
                     *             "gcp"
                     *           ],
                     *           "createdAt": "2019-01-01T00:00:00Z",
                     *           "defaultSubscription": true,
                     *           "id": "sub-12345678",
                     *           "maxNumberOfInstances": 10,
                     *           "paymentMethodConfigured": true,
                     *           "productTierId": "pt-12345678",
                     *           "productTierName": "Omnistrate Multi Tenancy",
                     *           "roleType": "root",
                     *           "rootUserId": "user-12345678",
                     *           "serviceId": "s-12345678",
                     *           "serviceLogoURL": "Similique voluptas aut alias facilis non.",
                     *           "serviceName": "MySQL multi-writer service",
                     *           "serviceOrgId": "org-12345678",
                     *           "serviceOrgName": "Omnistrate",
                     *           "status": "ACTIVE",
                     *           "subscriptionOwnerName": "John Doe"
                     *         },
                     *         {
                     *           "accountConfigIdentityId": "org-12345678",
                     *           "allowCreatesWhenPaymentNotConfigured": true,
                     *           "cloudProviderNames": [
                     *             "aws",
                     *             "gcp"
                     *           ],
                     *           "createdAt": "2019-01-01T00:00:00Z",
                     *           "defaultSubscription": true,
                     *           "id": "sub-12345678",
                     *           "maxNumberOfInstances": 10,
                     *           "paymentMethodConfigured": true,
                     *           "productTierId": "pt-12345678",
                     *           "productTierName": "Omnistrate Multi Tenancy",
                     *           "roleType": "root",
                     *           "rootUserId": "user-12345678",
                     *           "serviceId": "s-12345678",
                     *           "serviceLogoURL": "Similique voluptas aut alias facilis non.",
                     *           "serviceName": "MySQL multi-writer service",
                     *           "serviceOrgId": "org-12345678",
                     *           "serviceOrgName": "Omnistrate",
                     *           "status": "ACTIVE",
                     *           "subscriptionOwnerName": "John Doe"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListSubscriptionsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list subscriptions */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "subscription-api/CreateSubscription": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "productTierId": "pt-12345678",
                 *       "serviceId": "s-12345678"
                 *     } */
                "application/json": components["schemas"]["CreateSubscriptionRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a subscription */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "subscription-api/DescribeSubscription": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The subscription ID
                 * @example sub-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "accountConfigIdentityId": "org-12345678",
                     *       "allowCreatesWhenPaymentNotConfigured": true,
                     *       "cloudProviderNames": [
                     *         "aws",
                     *         "gcp"
                     *       ],
                     *       "createdAt": "2019-01-01T00:00:00Z",
                     *       "defaultSubscription": true,
                     *       "id": "sub-12345678",
                     *       "maxNumberOfInstances": 10,
                     *       "paymentMethodConfigured": true,
                     *       "productTierId": "pt-12345678",
                     *       "productTierName": "Omnistrate Multi Tenancy",
                     *       "roleType": "root",
                     *       "rootUserId": "user-12345678",
                     *       "serviceId": "s-12345678",
                     *       "serviceLogoURL": "Culpa harum ut maxime.",
                     *       "serviceName": "MySQL multi-writer service",
                     *       "serviceOrgId": "org-12345678",
                     *       "serviceOrgName": "Omnistrate",
                     *       "status": "ACTIVE",
                     *       "subscriptionOwnerName": "John Doe"
                     *     } */
                    "application/json": components["schemas"]["DescribeSubscriptionResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a subscription */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "subscription-api/DeleteSubscription": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The subscription ID
                 * @example sub-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete a subscription */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "subscription-request-api/ListSubscriptionRequests": {
        parameters: {
            query?: {
                /**
                 * @description The status of the subscription request to filter by
                 * @example PENDING
                 */
                status?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "ids": [
                     *         "subr-12345678",
                     *         "subr-abcdefgh",
                     *         "subr-1234efgh"
                     *       ],
                     *       "nextPageToken": "next-token",
                     *       "subscriptionRequests": [
                     *         {
                     *           "createdAt": "2019-01-01T00:00:00Z",
                     *           "id": "subr-12345678",
                     *           "productTierId": "pt-12345678",
                     *           "productTierName": "Omnistrate Multi Tenancy",
                     *           "rootUserEmail": "abc@gmail.com",
                     *           "rootUserId": "org-12345678",
                     *           "rootUserName": "John Doe",
                     *           "serviceId": "s-12345678",
                     *           "serviceLogoURL": "Corrupti corrupti qui in aut.",
                     *           "serviceName": "MySQL multi-writer service",
                     *           "status": "PENDING",
                     *           "updatedAt": "2019-01-01T00:00:00Z",
                     *           "updatedByUserId": "user-12345678",
                     *           "updatedByUserName": "John Doe"
                     *         },
                     *         {
                     *           "createdAt": "2019-01-01T00:00:00Z",
                     *           "id": "subr-12345678",
                     *           "productTierId": "pt-12345678",
                     *           "productTierName": "Omnistrate Multi Tenancy",
                     *           "rootUserEmail": "abc@gmail.com",
                     *           "rootUserId": "org-12345678",
                     *           "rootUserName": "John Doe",
                     *           "serviceId": "s-12345678",
                     *           "serviceLogoURL": "Corrupti corrupti qui in aut.",
                     *           "serviceName": "MySQL multi-writer service",
                     *           "status": "PENDING",
                     *           "updatedAt": "2019-01-01T00:00:00Z",
                     *           "updatedByUserId": "user-12345678",
                     *           "updatedByUserName": "John Doe"
                     *         },
                     *         {
                     *           "createdAt": "2019-01-01T00:00:00Z",
                     *           "id": "subr-12345678",
                     *           "productTierId": "pt-12345678",
                     *           "productTierName": "Omnistrate Multi Tenancy",
                     *           "rootUserEmail": "abc@gmail.com",
                     *           "rootUserId": "org-12345678",
                     *           "rootUserName": "John Doe",
                     *           "serviceId": "s-12345678",
                     *           "serviceLogoURL": "Corrupti corrupti qui in aut.",
                     *           "serviceName": "MySQL multi-writer service",
                     *           "status": "PENDING",
                     *           "updatedAt": "2019-01-01T00:00:00Z",
                     *           "updatedByUserId": "user-12345678",
                     *           "updatedByUserName": "John Doe"
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["ListSubscriptionRequestsResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a subscription */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "subscription-request-api/CreateSubscriptionRequest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "productTierId": "pt-12345678",
                 *       "serviceId": "s-12345678"
                 *     } */
                "application/json": components["schemas"]["CreateSubscriptionRequestRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a subscription */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "subscription-request-api/DescribeSubscriptionRequest": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The subscription ID
                 * @example subr-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "createdAt": "2019-01-01T00:00:00Z",
                     *       "id": "subr-12345678",
                     *       "productTierId": "pt-12345678",
                     *       "productTierName": "Omnistrate Multi Tenancy",
                     *       "rootUserEmail": "abc@gmail.com",
                     *       "rootUserId": "org-12345678",
                     *       "rootUserName": "John Doe",
                     *       "serviceId": "s-12345678",
                     *       "serviceLogoURL": "Numquam quibusdam quas dolorem corporis.",
                     *       "serviceName": "MySQL multi-writer service",
                     *       "status": "PENDING",
                     *       "updatedAt": "2019-01-01T00:00:00Z",
                     *       "updatedByUserId": "user-12345678",
                     *       "updatedByUserName": "John Doe"
                     *     } */
                    "application/json": components["schemas"]["DescribeSubscriptionRequestResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a subscription */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "subscription-request-api/CancelSubscriptionRequest": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The subscription ID
                 * @example subr-12345678
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to create a subscription */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tenant-billing-api/GetTenantBillingStatus": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "billingProviders": [
                     *         {
                     *           "connectClientID": "ca_1234567890",
                     *           "status": "ENABLED",
                     *           "stripeCustomerID": "cus_1234567890",
                     *           "type": "STRIPE"
                     *         },
                     *         {
                     *           "balanceDueLink": "https://billing.provider.com/balance-due",
                     *           "logoURL": "https://example.com/logo.png",
                     *           "name": "GovPay",
                     *           "status": "ENABLED",
                     *           "type": "BRING_YOUR_OWN"
                     *         }
                     *       ],
                     *       "enabled": true
                     *     } */
                    "application/json": components["schemas"]["GetTenantBillingStatusResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to list billing providers */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tenant-billing-api/DisableTenantBilling": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to disable tenant billing */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tenant-billing-api/DisableBillingProvider": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The type of billing provider to enable
                 * @example STRIPE
                 */
                billingProviderType: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to disable billing provider */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tenant-billing-api/EnableTenantBilling": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to enable tenant billing */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "tenant-billing-api/EnableBillingProvider": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The type of billing provider to enable
                 * @example STRIPE
                 */
                billingProviderType: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "balanceDueLink": "https://billing.provider.com/balance-due. Only present when the billing provider is BRING_YOUR_OWN",
                 *       "logoURL": "https://example.com/logo.png",
                 *       "name": "Stripe"
                 *     } */
                "application/json": components["schemas"]["EnableBillingProviderRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to enable billing provider */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/UpdatePassword": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "currentPassword": "currentPassword",
                 *       "currentPasswordHash": "currentPasswordHash",
                 *       "password": "password"
                 *     } */
                "application/json": components["schemas"]["UpdatePasswordRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to update password */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "usage-api/GetCurrentUsage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "endTime": "2021-01-01T00:00:00.000Z",
                     *       "planName": "STARTER",
                     *       "startTime": "2021-01-01T00:00:00.000Z",
                     *       "usage": [
                     *         {
                     *           "dimension": "core/hours",
                     *           "endTime": "2021-01-01T00:00:00.000Z",
                     *           "startTime": "2021-01-01T00:00:00.000Z",
                     *           "total": 0.67
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["GetUsageResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get usage */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "usage-api/GetUsagePerDay": {
        parameters: {
            query?: {
                /**
                 * @description Start date of the usage report
                 * @example 2023-01-01T10:00:00Z
                 */
                startDate?: string;
                /**
                 * @description End date of the usage report
                 * @example 2024-01-01T10:00:00Z
                 */
                endDate?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "endTime": "2021-01-01T00:00:00.000Z",
                     *       "planName": "STARTER",
                     *       "startTime": "2021-01-01T00:00:00.000Z",
                     *       "usage": [
                     *         {
                     *           "dimension": "core/hours",
                     *           "endTime": "2021-01-01T00:00:00.000Z",
                     *           "startTime": "2021-01-01T00:00:00.000Z",
                     *           "total": 0.67
                     *         }
                     *       ]
                     *     } */
                    "application/json": components["schemas"]["GetUsageResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to get usage */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/DescribeUser": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "address": {
                     *         "addressLine1": "1234 Main St",
                     *         "addressLine2": "Apt 123",
                     *         "addressLine3": "Building 123",
                     *         "city": "San Francisco",
                     *         "country": "US",
                     *         "state": "CA",
                     *         "zip": "94123"
                     *       },
                     *       "createdAt": "2023-01-10T00:00:00Z",
                     *       "email": "abc@gmail.com",
                     *       "enabled": true,
                     *       "id": "user-abcd1234",
                     *       "lastModifiedAt": "2023-01-20T00:00:00Z",
                     *       "name": "John Dae",
                     *       "orgCookiePolicy": "Et sed est alias eligendi quis.",
                     *       "orgDescription": "ACME Inc.",
                     *       "orgFavIconURL": "Earum aperiam beatae.",
                     *       "orgId": "org-aKQ8G13QeR",
                     *       "orgLogoURL": "Qui et qui dolor et atque.",
                     *       "orgName": "ACME",
                     *       "orgPrivacyPolicy": "Exercitationem et.",
                     *       "orgSupportEmail": "support@example.com",
                     *       "orgTermsOfUse": "Corrupti rerum.",
                     *       "orgURL": "something.acme",
                     *       "planName": "STARTER",
                     *       "roleType": "reader",
                     *       "status": "ACTIVE"
                     *     } */
                    "application/json": components["schemas"]["DescribeUserResult"];
                };
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/DeleteUser": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to delete user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-api/UpdateUser": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The User ID
                 * @example user-abcd1234
                 */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "address": {
                 *         "addressLine1": "1234 Main St",
                 *         "addressLine2": "Apt 123",
                 *         "addressLine3": "Building 123",
                 *         "city": "San Francisco",
                 *         "country": "US",
                 *         "state": "CA",
                 *         "zip": "94123"
                 *       },
                 *       "name": "John Dae",
                 *       "orgCookiePolicy": "Recusandae enim accusantium quia voluptas.",
                 *       "orgDescription": "ACME Inc.",
                 *       "orgFavIconURL": "http://koch.org/aimee_hansen",
                 *       "orgLogoURL": "http://spencer.org/riley",
                 *       "orgName": "ACME",
                 *       "orgPrivacyPolicy": "Perspiciatis placeat sit.",
                 *       "orgSupportEmail": "support@example.com",
                 *       "orgTermsOfUse": "Possimus est voluptatem quod vel sunt quia.",
                 *       "orgURL": "something.acme"
                 *     } */
                "application/json": components["schemas"]["UpdateUserRequest2"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to describe a user */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "signup-api/RegenerateToken": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @example user-abcd1234 */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to regenerate token */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "signup-api/ValidateToken": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "email": "abc@gmail.com",
                 *       "token": "fc7b8dea-a50b-4c9a-8864-fc3d845a2be6"
                 *     } */
                "application/json": components["schemas"]["ValidateTokenRequest"];
            };
        };
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description bad_request: Response used on a bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description auth_failure: Response used on authentication failure */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description forbidden: Response used on authorization failure */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description not_found: Response used when the requested resource is not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description invalid_state: Response used when requested resource is in an invalid state for this operation */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
            /** @description failed_request: Response used on failure to validate the token */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.goa.error": components["schemas"]["Error"];
                };
            };
        };
    };
    "global-api/registrationServiceVersion": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "apiVersion": "a",
                     *       "buildCommitSHA": "1234567890abcdef1234567890abcdef12345678",
                     *       "buildTimestamp": "2020-01-01T00:00:00Z"
                     *     } */
                    "application/json": components["schemas"]["OmnistrateServiceVersionResult"];
                };
            };
        };
    };
}
