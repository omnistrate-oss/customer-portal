{
  "openapi": "3.0.3",
  "info": {
    "title": "Omnistrate Registration API",
    "description": "REST API for Omnistrate Service Registration",
    "version": "2022-09-01-00"
  },
  "servers": [
    {
      "url": "https://api.omnistrate.cloud"
    }
  ],
  "paths": {
    "/2022-09-01-00/accountconfig": {
      "post": {
        "tags": [
          "account-config-api"
        ],
        "summary": "CreateAccountConfig account-config-api",
        "operationId": "account-config-api#CreateAccountConfig",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountConfigRequestBody"
              },
              "example": {
                "awsAccessKey": "Tenetur numquam.",
                "awsAccountID": "123456789012",
                "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                "awsSecretKey": "Et nostrum harum eos suscipit iusto.",
                "byoaInstanceID": "instance-12345678",
                "cloudProviderId": "infra-12345678",
                "description": "An AWS account hosting multiple dev environments",
                "gcpProjectID": "my-project",
                "gcpProjectNumber": "123456789012",
                "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                "gcpServiceAccountKey": "Totam quisquam nostrum.",
                "name": "Dev AWS account"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "The ID of the registered account config",
                  "example": "ac-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "ac-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create an account config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/accountconfig/{id}": {
      "delete": {
        "tags": [
          "account-config-api"
        ],
        "summary": "DeleteAccountConfig account-config-api",
        "operationId": "account-config-api#DeleteAccountConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Account Config",
              "example": "Est quia maiores est earum vel."
            },
            "example": "ac-12345678"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete an account config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "account-config-api"
        ],
        "summary": "DescribeAccountConfig account-config-api",
        "operationId": "account-config-api#DescribeAccountConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Account Config",
              "example": "Distinctio et numquam rerum cum voluptatem."
            },
            "example": "ac-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeAccountConfigResult"
                },
                "example": {
                  "awsAccountID": "123456789012",
                  "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                  "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                  "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                  "byoaInstanceIDs": [
                    "instance-12345678",
                    "instance-abcdefgh"
                  ],
                  "cloudProviderId": "infra-12345678",
                  "description": "An AWS account hosting multiple dev environments",
                  "gcpProjectID": "my-project",
                  "gcpProjectNumber": "123456789012",
                  "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                  "id": "ac-12345678",
                  "name": "Dev AWS account",
                  "status": "READY",
                  "statusMessage": "Account is ready"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe an account config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/accountconfig/aws/{awsAccountID}": {
      "get": {
        "tags": [
          "account-config-api"
        ],
        "summary": "DescribeAccountConfigByAWSAccountID account-config-api",
        "operationId": "account-config-api#DescribeAccountConfigByAWSAccountID",
        "parameters": [
          {
            "name": "awsAccountID",
            "in": "path",
            "description": "The AWS account ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The AWS account ID",
              "example": "123456789012"
            },
            "example": "123456789012"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeAccountConfigByAWSAccountIDResult"
                },
                "example": {
                  "awsAccountID": "123456789012",
                  "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                  "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                  "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                  "byoaInstanceIDs": [
                    "instance-12345678",
                    "instance-abcdefgh"
                  ],
                  "cloudProviderId": "infra-12345678",
                  "description": "An AWS account hosting multiple dev environments",
                  "id": "ac-12345678",
                  "name": "Dev AWS account",
                  "status": "READY",
                  "statusMessage": "Account is ready"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe an account config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/accountconfig/byoa": {
      "get": {
        "tags": [
          "account-config-api"
        ],
        "summary": "ListBYOAConfig account-config-api",
        "operationId": "account-config-api#ListBYOAConfig",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListBYOAConfigRequestBody"
              },
              "example": {
                "cloudProviderName": "aws"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAccountConfigResult"
                },
                "example": {
                  "accountConfigs": [
                    {
                      "awsAccountID": "123456789012",
                      "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                      "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                      "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                      "byoaInstanceIDs": [
                        "instance-12345678",
                        "instance-abcdefgh"
                      ],
                      "cloudProviderId": "infra-12345678",
                      "description": "An AWS account hosting multiple dev environments",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                      "id": "ac-12345678",
                      "name": "Dev AWS account",
                      "status": "READY",
                      "statusMessage": "Account is ready"
                    },
                    {
                      "awsAccountID": "123456789012",
                      "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                      "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                      "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                      "byoaInstanceIDs": [
                        "instance-12345678",
                        "instance-abcdefgh"
                      ],
                      "cloudProviderId": "infra-12345678",
                      "description": "An AWS account hosting multiple dev environments",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                      "id": "ac-12345678",
                      "name": "Dev AWS account",
                      "status": "READY",
                      "statusMessage": "Account is ready"
                    },
                    {
                      "awsAccountID": "123456789012",
                      "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                      "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                      "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                      "byoaInstanceIDs": [
                        "instance-12345678",
                        "instance-abcdefgh"
                      ],
                      "cloudProviderId": "infra-12345678",
                      "description": "An AWS account hosting multiple dev environments",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                      "id": "ac-12345678",
                      "name": "Dev AWS account",
                      "status": "READY",
                      "statusMessage": "Account is ready"
                    }
                  ],
                  "ids": [
                    "ac-12345678",
                    "ac-abcdefgh",
                    "ac-1234efgh"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list account configs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/accountconfig/cloudprovider/{cloudProviderName}": {
      "get": {
        "tags": [
          "account-config-api"
        ],
        "summary": "ListAccountConfig account-config-api",
        "operationId": "account-config-api#ListAccountConfig",
        "parameters": [
          {
            "name": "cloudProviderName",
            "in": "path",
            "description": "Cloud Provider name to filter on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the Infra Provider",
              "example": "aws|azure|gcp|all"
            },
            "example": "aws"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAccountConfigResult"
                },
                "example": {
                  "accountConfigs": [
                    {
                      "awsAccountID": "123456789012",
                      "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                      "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                      "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                      "byoaInstanceIDs": [
                        "instance-12345678",
                        "instance-abcdefgh"
                      ],
                      "cloudProviderId": "infra-12345678",
                      "description": "An AWS account hosting multiple dev environments",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                      "id": "ac-12345678",
                      "name": "Dev AWS account",
                      "status": "READY",
                      "statusMessage": "Account is ready"
                    },
                    {
                      "awsAccountID": "123456789012",
                      "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                      "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                      "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                      "byoaInstanceIDs": [
                        "instance-12345678",
                        "instance-abcdefgh"
                      ],
                      "cloudProviderId": "infra-12345678",
                      "description": "An AWS account hosting multiple dev environments",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                      "id": "ac-12345678",
                      "name": "Dev AWS account",
                      "status": "READY",
                      "statusMessage": "Account is ready"
                    },
                    {
                      "awsAccountID": "123456789012",
                      "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                      "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                      "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                      "byoaInstanceIDs": [
                        "instance-12345678",
                        "instance-abcdefgh"
                      ],
                      "cloudProviderId": "infra-12345678",
                      "description": "An AWS account hosting multiple dev environments",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                      "id": "ac-12345678",
                      "name": "Dev AWS account",
                      "status": "READY",
                      "statusMessage": "Account is ready"
                    },
                    {
                      "awsAccountID": "123456789012",
                      "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                      "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                      "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                      "byoaInstanceIDs": [
                        "instance-12345678",
                        "instance-abcdefgh"
                      ],
                      "cloudProviderId": "infra-12345678",
                      "description": "An AWS account hosting multiple dev environments",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                      "id": "ac-12345678",
                      "name": "Dev AWS account",
                      "status": "READY",
                      "statusMessage": "Account is ready"
                    }
                  ],
                  "ids": [
                    "ac-12345678",
                    "ac-abcdefgh",
                    "ac-1234efgh"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list account configs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/accountconfig/gcp/{gcpProjectID}": {
      "get": {
        "tags": [
          "account-config-api"
        ],
        "summary": "DescribeAccountConfigByGCPProjectID account-config-api",
        "operationId": "account-config-api#DescribeAccountConfigByGCPProjectID",
        "parameters": [
          {
            "name": "gcpProjectID",
            "in": "path",
            "description": "The GCP project ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The GCP project ID",
              "example": "my-project"
            },
            "example": "my-project"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeAccountConfigByGCPProjectIDResult"
                },
                "example": {
                  "byoaInstanceIDs": [
                    "instance-12345678",
                    "instance-abcdefgh"
                  ],
                  "cloudProviderId": "infra-12345678",
                  "description": "An AWS account hosting multiple dev environments",
                  "gcpProjectID": "my-project",
                  "gcpProjectNumber": "123456789012",
                  "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                  "id": "ac-12345678",
                  "name": "Dev AWS account",
                  "status": "READY",
                  "statusMessage": "Account is ready"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe an account config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/accountconfig/identityid": {
      "get": {
        "tags": [
          "account-config-api"
        ],
        "summary": "AccountConfigIdentityID account-config-api",
        "description": "Returns the identity id of the account config to be used in the trust policy of the account",
        "operationId": "account-config-api#AccountConfigIdentityID",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountConfigIdentityIDResult"
                },
                "example": {
                  "id": "org-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to get an account config identity id",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/accountconfig/verify/{id}": {
      "post": {
        "tags": [
          "account-config-api"
        ],
        "summary": "VerifyAccountConfig account-config-api",
        "operationId": "account-config-api#VerifyAccountConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Account Config",
              "example": "Ab ipsum et provident omnis ut error."
            },
            "example": "ac-12345678"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list account configs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/availability-zone/{id}": {
      "get": {
        "tags": [
          "availability-zone-api"
        ],
        "summary": "DescribeAvailabilityZone availability-zone-api",
        "operationId": "availability-zone-api#DescribeAvailabilityZone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an AZ",
              "example": "Molestiae ut quia velit harum quia quo."
            },
            "example": "az-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeAvailabilityZoneResult"
                },
                "example": {
                  "cloudProviderName": "aws",
                  "code": "us-east-1a",
                  "description": "US East (N. Virginia) Availability Zone A",
                  "id": "az-12345678",
                  "regionCode": "us-east-1"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe an availability zone",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/availability-zone/cloud-provider/{cloudProviderName}": {
      "get": {
        "tags": [
          "availability-zone-api"
        ],
        "summary": "ListAvailabilityZone availability-zone-api",
        "operationId": "availability-zone-api#ListAvailabilityZone",
        "parameters": [
          {
            "name": "cloudProviderName",
            "in": "path",
            "description": "The cloud provider for this compute instance type config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the Infra Provider",
              "example": "aws|azure|gcp|all"
            },
            "example": "aws"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "az-12345678",
                    "az-87654321"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list availability zones",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/availability-zone/code/{code}/cloud-provider/{cloudProviderName}": {
      "get": {
        "tags": [
          "availability-zone-api"
        ],
        "summary": "GetAvailabilityZoneByCode availability-zone-api",
        "operationId": "availability-zone-api#GetAvailabilityZoneByCode",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Cloud-provider native availability zone code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Cloud-provider native availability zone code",
              "example": "us-east-1a"
            },
            "example": "us-east-1a"
          },
          {
            "name": "cloudProviderName",
            "in": "path",
            "description": "The cloud provider for this compute instance type config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the Infra Provider",
              "example": "aws|azure|gcp|all"
            },
            "example": "aws"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Nisi sed perspiciatis est."
                },
                "example": "Ut odit vero deleniti tempore aut."
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to get an availability zone by code",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/availability-zone/region/code/{regionCode}/cloud-provider/{cloudProviderName}": {
      "get": {
        "tags": [
          "availability-zone-api"
        ],
        "summary": "ListAvailabilityZonesByRegionCode availability-zone-api",
        "operationId": "availability-zone-api#ListAvailabilityZonesByRegionCode",
        "parameters": [
          {
            "name": "regionCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "us-east-1"
            },
            "example": "us-east-1"
          },
          {
            "name": "cloudProviderName",
            "in": "path",
            "description": "The cloud provider for this compute instance type config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the Infra Provider",
              "example": "aws|azure|gcp|all"
            },
            "example": "aws"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "az-12345678",
                    "az-87654321"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list availability zones by region code",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/change-password": {
      "post": {
        "tags": [
          "signup-api"
        ],
        "summary": "ChangePassword signup-api",
        "operationId": "signup-api#ChangePassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequestBody"
              },
              "example": {
                "email": "abc@gmail.com",
                "password": "password",
                "token": "fc7b8dea-a50b-4c9a-8864-fc3d845a2be6"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to change password",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/2022-09-01-00/cloud-provider": {
      "get": {
        "tags": [
          "cloud-provider-api"
        ],
        "summary": "ListCloudProvider cloud-provider-api",
        "operationId": "cloud-provider-api#ListCloudProvider",
        "parameters": [
          {
            "name": "serviceId",
            "in": "query",
            "description": "Service ID. If specified together with serviceModelId,list the cloud provider of the service model. Otherwise list all cloud provider.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "serviceModelId",
            "in": "query",
            "description": "Service model ID. If specified together with serviceId,list the cloud provider of the service model. Otherwise list all cloud provider.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Eaque et et voluptates quae."
            },
            "example": "sm-12345678"
          },
          {
            "name": "productTierId",
            "in": "query",
            "description": "Product tier ID. If specified together with serviceId,list the cloud provider of the product tier. Otherwise list all cloud provider.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Saepe optio earum quia enim fuga."
            },
            "example": "pt-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "infra-12345678",
                    "infra-87654321"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list cloud providers",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/cloud-provider/{id}": {
      "get": {
        "tags": [
          "cloud-provider-api"
        ],
        "summary": "DescribeCloudProvider cloud-provider-api",
        "operationId": "cloud-provider-api#DescribeCloudProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the CloudProvider",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an CloudProvider",
              "example": "Unde aut veritatis."
            },
            "example": "infra-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeCloudProviderResult"
                },
                "example": {
                  "description": "Amazon Web Services",
                  "id": "infra-12345678",
                  "name": "aws"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe an cloud provider",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/cloud-provider/name/{name}": {
      "get": {
        "tags": [
          "cloud-provider-api"
        ],
        "summary": "GetCloudProviderByName cloud-provider-api",
        "operationId": "cloud-provider-api#GetCloudProviderByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the CloudProvider",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the CloudProvider",
              "example": "aws",
              "minLength": 1
            },
            "example": "aws"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Asperiores veritatis in maxime autem sed."
                },
                "example": "Quo aliquam fuga laudantium."
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to get an cloud provider by name",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/compose-gen/image": {
      "get": {
        "tags": [
          "compose-gen-api"
        ],
        "summary": "CheckIfContainerImageAccessible compose-gen-api",
        "operationId": "compose-gen-api#CheckIfContainerImageAccessible",
        "parameters": [
          {
            "name": "imageRegistry",
            "in": "query",
            "description": "Registry where the image is stored",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "Registry where the image is stored",
              "example": "docker.io"
            },
            "example": "docker.io"
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username to access the image registry",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Username to access the image registry",
              "example": "username"
            },
            "example": "username"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password to access the image registry",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Password to access the image registry",
              "example": "password"
            },
            "example": "password"
          },
          {
            "name": "image",
            "in": "query",
            "description": "Name of the image along with the tag. Include the repository name if the image is not from the official repository",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the image along with the tag. Include the repository name if the image is not from the official repository",
              "example": "library/mysql:5.7"
            },
            "example": "library/mysql:5.7"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckIfContainerImageAccessibleResult"
                },
                "example": {
                  "errorMsg": "Omnis quas nihil magni odio accusamus.",
                  "imageAccessible": true
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to build a service from compose spec",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "compose-gen-api"
        ],
        "summary": "GenerateComposeSpecFromContainerImage compose-gen-api",
        "operationId": "compose-gen-api#GenerateComposeSpecFromContainerImage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateComposeSpecFromContainerImageRequestBody"
              },
              "example": {
                "environmentVariables": [
                  {
                    "key": "MYSQL_ROOT_PASSWORD",
                    "value": "password"
                  }
                ],
                "image": "library/mysql:5.7",
                "imageRegistry": "docker.io",
                "password": "password",
                "username": "username"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateComposeSpecFromContainerImageResult"
                },
                "example": {
                  "fileContent": "Rem nesciunt id."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to build a service from compose spec",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/contactus": {
      "post": {
        "tags": [
          "contactus-api"
        ],
        "summary": "Contactus contactus-api",
        "operationId": "contactus-api#Contactus",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactusRequestBody"
              },
              "example": {
                "company": "ABC",
                "email": "abc@gmail.com",
                "message": "this is a test",
                "name": "John Doe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to contactus",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/2022-09-01-00/customdomain": {
      "get": {
        "tags": [
          "custom-domain-api"
        ],
        "summary": "ListCustomDomain custom-domain-api",
        "operationId": "custom-domain-api#ListCustomDomain",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomDomainResult"
                },
                "example": {
                  "CustomDomains": [
                    {
                      "customDomain": "mydomain.dev",
                      "description": "Description of the domain",
                      "id": "cd-12345678",
                      "name": "Dev domain",
                      "route53Configuration": {
                        "awsAccountID": "123456789012",
                        "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
                      },
                      "status": "READY",
                      "statusMessage": "Account is ready"
                    },
                    {
                      "customDomain": "mydomain.dev",
                      "description": "Description of the domain",
                      "id": "cd-12345678",
                      "name": "Dev domain",
                      "route53Configuration": {
                        "awsAccountID": "123456789012",
                        "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
                      },
                      "status": "READY",
                      "statusMessage": "Account is ready"
                    },
                    {
                      "customDomain": "mydomain.dev",
                      "description": "Description of the domain",
                      "id": "cd-12345678",
                      "name": "Dev domain",
                      "route53Configuration": {
                        "awsAccountID": "123456789012",
                        "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
                      },
                      "status": "READY",
                      "statusMessage": "Account is ready"
                    }
                  ],
                  "ids": [
                    "cd-12345678",
                    "cd-abcdefgh",
                    "cd-1234efgh"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list Custom Domains",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "custom-domain-api"
        ],
        "summary": "CreateCustomDomain custom-domain-api",
        "operationId": "custom-domain-api#CreateCustomDomain",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomDomainRequestBody"
              },
              "example": {
                "customDomain": "mydomain.dev",
                "description": "Description of the domain",
                "name": "Dev domain",
                "route53Configuration": {
                  "awsAccountID": "123456789012"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "The ID of the registered Custom Domain",
                  "example": "cd-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "cd-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create an Custom Domain",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/customdomain/{id}": {
      "delete": {
        "tags": [
          "custom-domain-api"
        ],
        "summary": "DeleteCustomDomain custom-domain-api",
        "operationId": "custom-domain-api#DeleteCustomDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "custom domain ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Custom Domain",
              "example": "Voluptatem nulla deleniti eligendi."
            },
            "example": "cd-12345678"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete an Custom Domain",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "custom-domain-api"
        ],
        "summary": "DescribeCustomDomain custom-domain-api",
        "operationId": "custom-domain-api#DescribeCustomDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "custom domain ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Custom Domain",
              "example": "Voluptatem quos corporis dolores."
            },
            "example": "cd-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeCustomDomainResult"
                },
                "example": {
                  "customDomain": "mydomain.dev",
                  "description": "Description of the domain",
                  "id": "cd-12345678",
                  "name": "Dev domain",
                  "route53Configuration": {
                    "awsAccountID": "123456789012",
                    "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
                  },
                  "status": "READY",
                  "statusMessage": "Account is ready"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe an Custom Domain",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/customdomain/identityid": {
      "get": {
        "tags": [
          "custom-domain-api"
        ],
        "summary": "CustomDomainIdentityID custom-domain-api",
        "description": "Returns the identity id of the Custom Domain to be used in the trust policy of the account",
        "operationId": "custom-domain-api#CustomDomainIdentityID",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountConfigIdentityIDResult"
                },
                "example": {
                  "id": "org-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to get an Custom Domain identity id",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/customdomain/verify/{id}": {
      "post": {
        "tags": [
          "custom-domain-api"
        ],
        "summary": "VerifyCustomDomain custom-domain-api",
        "operationId": "custom-domain-api#VerifyCustomDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "custom domain ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Custom Domain",
              "example": "Ipsa expedita laboriosam et error quaerat."
            },
            "example": "cd-12345678"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list Custom Domains",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/customer-invite-user": {
      "post": {
        "tags": [
          "users-api"
        ],
        "summary": "CustomerInviteUser users-api",
        "operationId": "users-api#CustomerInviteUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequestBody"
              },
              "example": {
                "email": "abc@example.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to invite user",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/customer-login-with-identity-provider": {
      "post": {
        "tags": [
          "users-api"
        ],
        "summary": "CustomerLoginWithIdentityProvider users-api",
        "operationId": "users-api#CustomerLoginWithIdentityProvider",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerLoginWithIdentityProviderRequestBody"
              },
              "example": {
                "authorizationCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
                "companyDescription": "We sell xyz database software",
                "companyUrl": "https://www.mywebsite.com",
                "environmentType": "DEV",
                "identityProviderName": "Google",
                "invitedEmail": "abc@gmail.com",
                "legalCompanyName": "mywebsite",
                "redirectUri": "https://www.example/redirect"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResult"
                },
                "example": {
                  "jwtToken": ""
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to signin",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/customer-reset-password": {
      "post": {
        "tags": [
          "users-api"
        ],
        "summary": "CustomerResetPassword users-api",
        "operationId": "users-api#CustomerResetPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequestBody"
              },
              "example": {
                "email": "abc@example.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to signin",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/customer-user-signin": {
      "post": {
        "tags": [
          "users-api"
        ],
        "summary": "CustomerSignin users-api",
        "operationId": "users-api#CustomerSignin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerSigninRequestBody"
              },
              "example": {
                "email": "abc@gmail.com",
                "environmentType": "DEV",
                "hashedPassword": "deprecated",
                "password": "password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResult"
                },
                "example": {
                  "jwtToken": ""
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to signin",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/customer-user-signup": {
      "post": {
        "tags": [
          "users-api"
        ],
        "summary": "CustomerSignup users-api",
        "operationId": "users-api#CustomerSignup",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequestBody"
              },
              "example": {
                "companyDescription": "We sell xyz database software",
                "companyUrl": "https://www.mywebsite.com",
                "email": "abc@gmail.com",
                "legalCompanyName": "mywebsite",
                "name": "John Doe",
                "password": "password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete user",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/demo": {
      "post": {
        "tags": [
          "demo-api"
        ],
        "summary": "Demo demo-api",
        "operationId": "demo-api#Demo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DemoRequestBody"
              },
              "example": {
                "company": "ABC",
                "email": "abc@gmail.com",
                "name": "John Doe",
                "phone": "+1-234567890"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to demo",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/2022-09-01-00/deployment-config": {
      "get": {
        "tags": [
          "deployment-config-api"
        ],
        "summary": "ListDeploymentConfigs deployment-config-api",
        "operationId": "deployment-config-api#ListDeploymentConfigs",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "dc-12345678"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list deployment configs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "deployment-config-api"
        ],
        "summary": "CreateDeploymentConfig deployment-config-api",
        "operationId": "deployment-config-api#CreateDeploymentConfig",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeploymentConfigRequestBody"
              },
              "example": {
                "description": "A production deployment config",
                "infraRollConfiguration": {
                  "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
                  "maximumNumberOfResourceInstancesPerBatch": 1,
                  "maximumUnavailableReplicas": 1
                },
                "name": "Production",
                "rolloutPriorityList": [
                  "region-12345678",
                  "region-abcd1234",
                  "region-3c3c3c3c"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Deployment Config ID created",
                  "example": "dc-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "dc-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create the deployment config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/deployment-config/{id}": {
      "delete": {
        "tags": [
          "deployment-config-api"
        ],
        "summary": "DeleteDeploymentConfig deployment-config-api",
        "operationId": "deployment-config-api#DeleteDeploymentConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The deployment configuration ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Deployment Config",
              "example": "Dolorem commodi."
            },
            "example": "dc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete the deployment config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "deployment-config-api"
        ],
        "summary": "DescribeDeploymentConfig deployment-config-api",
        "operationId": "deployment-config-api#DescribeDeploymentConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The deployment configuration ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The deployment configuration ID",
              "example": "default"
            },
            "examples": {
              "default": {
                "summary": "default",
                "value": "default"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeDeploymentConfigResult"
                },
                "example": {
                  "description": "A production deployment config",
                  "id": "dc-12345678",
                  "infraRollConfiguration": {
                    "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
                    "maximumNumberOfResourceInstancesPerBatch": 1,
                    "maximumUnavailableReplicas": 1
                  },
                  "name": "Production",
                  "rolloutPriorityList": [
                    "region-12345678",
                    "region-abcd1234",
                    "region-3c3c3c3c"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe the deployment config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "deployment-config-api"
        ],
        "summary": "UpdateDeploymentConfig deployment-config-api",
        "operationId": "deployment-config-api#UpdateDeploymentConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The deployment configuration ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Deployment Config",
              "example": "Asperiores asperiores nam saepe iste."
            },
            "example": "dc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeploymentConfigRequestBody"
              },
              "example": {
                "description": "A production deployment config",
                "infraRollConfiguration": {
                  "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
                  "maximumNumberOfResourceInstancesPerBatch": 1,
                  "maximumUnavailableReplicas": 1
                },
                "name": "Production",
                "rolloutPriorityList": [
                  "region-12345678",
                  "region-abcd1234",
                  "region-3c3c3c3c"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update the deployment config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/health": {
      "get": {
        "tags": [
          "global-api"
        ],
        "summary": "registrationServiceHealth global-api",
        "description": "Registration service health check endpoint",
        "operationId": "global-api#registrationServiceHealth",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OmnistrateServiceHealthResult"
                },
                "example": {
                  "status": "RUNNING"
                }
              }
            }
          }
        }
      }
    },
    "/2022-09-01-00/helm-package": {
      "get": {
        "tags": [
          "helm-package-api"
        ],
        "summary": "ListHelmPackages helm-package-api",
        "operationId": "helm-package-api#ListHelmPackages",
        "parameters": [
          {
            "name": "chartName",
            "in": "query",
            "description": "The chart name to filter by",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The chart name to filter by",
              "example": "my-chart"
            },
            "example": "my-chart"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListHelmPackagesResult"
                },
                "example": {
                  "helmPackages": [
                    {
                      "chartName": "my-chart",
                      "chartRepoName": "my-repo",
                      "chartRepoUrl": "https://my-repo.com",
                      "chartValues": {
                        "key1": "value1",
                        "key2": 3,
                        "key3": {
                          "key4": "value4"
                        }
                      },
                      "chartVersion": "1.0.0",
                      "namespace": "default",
                      "password": "my-password",
                      "username": "my-user"
                    },
                    {
                      "chartName": "my-chart",
                      "chartRepoName": "my-repo",
                      "chartRepoUrl": "https://my-repo.com",
                      "chartValues": {
                        "key1": "value1",
                        "key2": 3,
                        "key3": {
                          "key4": "value4"
                        }
                      },
                      "chartVersion": "1.0.0",
                      "namespace": "default",
                      "password": "my-password",
                      "username": "my-user"
                    },
                    {
                      "chartName": "my-chart",
                      "chartRepoName": "my-repo",
                      "chartRepoUrl": "https://my-repo.com",
                      "chartValues": {
                        "key1": "value1",
                        "key2": 3,
                        "key3": {
                          "key4": "value4"
                        }
                      },
                      "chartVersion": "1.0.0",
                      "namespace": "default",
                      "password": "my-password",
                      "username": "my-user"
                    },
                    {
                      "chartName": "my-chart",
                      "chartRepoName": "my-repo",
                      "chartRepoUrl": "https://my-repo.com",
                      "chartValues": {
                        "key1": "value1",
                        "key2": 3,
                        "key3": {
                          "key4": "value4"
                        }
                      },
                      "chartVersion": "1.0.0",
                      "namespace": "default",
                      "password": "my-password",
                      "username": "my-user"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list helm packages",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "helm-package-api"
        ],
        "summary": "SaveHelmPackage helm-package-api",
        "operationId": "helm-package-api#SaveHelmPackage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveHelmPackageRequestBody"
              },
              "example": {
                "helmPackage": {
                  "chartName": "my-chart",
                  "chartRepoName": "my-repo",
                  "chartRepoUrl": "https://my-repo.com",
                  "chartValues": {
                    "key1": "value1",
                    "key2": 3,
                    "key3": {
                      "key4": "value4"
                    }
                  },
                  "chartVersion": "1.0.0",
                  "namespace": "default",
                  "password": "my-password",
                  "username": "my-user"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a helm package",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/helm-package/{chartName}/{chartVersion}": {
      "delete": {
        "tags": [
          "helm-package-api"
        ],
        "summary": "DeleteHelmPackage helm-package-api",
        "operationId": "helm-package-api#DeleteHelmPackage",
        "parameters": [
          {
            "name": "chartName",
            "in": "path",
            "description": "The chart name of the Helm package to delete",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The chart name of the Helm package to delete",
              "example": "my-chart"
            },
            "example": "my-chart"
          },
          {
            "name": "chartVersion",
            "in": "path",
            "description": "The chart version of the Helm package to delete",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The chart version of the Helm package to delete",
              "example": "1.0.0"
            },
            "example": "1.0.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request to delete a helm package",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a helm package",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "helm-package-api"
        ],
        "summary": "DescribeHelmPackage helm-package-api",
        "operationId": "helm-package-api#DescribeHelmPackage",
        "parameters": [
          {
            "name": "chartName",
            "in": "path",
            "description": "The chart name of the Helm package to describe",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The chart name of the Helm package to describe",
              "example": "my-chart"
            },
            "example": "my-chart"
          },
          {
            "name": "chartVersion",
            "in": "path",
            "description": "The chart version of the Helm package to describe",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The chart version of the Helm package to describe",
              "example": "1.0.0"
            },
            "example": "1.0.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelmPackage"
                },
                "example": {
                  "chartName": "my-chart",
                  "chartRepoName": "my-repo",
                  "chartRepoUrl": "https://my-repo.com",
                  "chartValues": {
                    "key1": "value1",
                    "key2": 3,
                    "key3": {
                      "key4": "value4"
                    }
                  },
                  "chartVersion": "1.0.0",
                  "namespace": "default",
                  "password": "my-password",
                  "username": "my-user"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request to describe a helm package",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a helm package",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/identity-provider": {
      "get": {
        "tags": [
          "identity-provider-api"
        ],
        "summary": "ListIdentityProviders identity-provider-api",
        "operationId": "identity-provider-api#ListIdentityProviders",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListIdentityProvidersResult"
                },
                "example": {
                  "identityProviders": [
                    {
                      "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                      "clientSecret": "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",
                      "id": "idp-12345678",
                      "identityProviderName": "Google",
                      "status": "Ready"
                    },
                    {
                      "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                      "clientSecret": "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",
                      "id": "idp-12345678",
                      "identityProviderName": "Google",
                      "status": "Ready"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list identity providers",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "identity-provider-api"
        ],
        "summary": "CreateIdentityProvider identity-provider-api",
        "operationId": "identity-provider-api#CreateIdentityProvider",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIdentityProviderRequestBody"
              },
              "example": {
                "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                "clientSecret": "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",
                "identityProviderName": "Google"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Identity Provider ID created",
                  "example": "idp-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "idp-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create an identity provider",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/identity-provider/{id}": {
      "delete": {
        "tags": [
          "identity-provider-api"
        ],
        "summary": "DeleteIdentityProvider identity-provider-api",
        "operationId": "identity-provider-api#DeleteIdentityProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Identity Provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Identity Provider",
              "example": "Officiis eaque esse laboriosam culpa."
            },
            "example": "idp-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list identity providers",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "identity-provider-api"
        ],
        "summary": "DescribeIdentityProvider identity-provider-api",
        "operationId": "identity-provider-api#DescribeIdentityProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Identity Provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Identity Provider",
              "example": "Optio est ut doloribus tenetur in."
            },
            "example": "idp-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeIdentityProviderResult"
                },
                "example": {
                  "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                  "clientSecret": "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",
                  "id": "idp-12345678",
                  "identityProviderName": "Google",
                  "status": "Ready"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list identity providers",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "identity-provider-api"
        ],
        "summary": "UpdateIdentityProvider identity-provider-api",
        "operationId": "identity-provider-api#UpdateIdentityProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Identity Provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Identity Provider",
              "example": "Totam explicabo cupiditate corrupti exercitationem qui."
            },
            "example": "idp-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIdentityProviderRequestBody"
              },
              "example": {
                "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                "clientSecret": "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"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list identity providers",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "identity-provider-api"
        ],
        "summary": "VerifyIdentityProvider identity-provider-api",
        "operationId": "identity-provider-api#VerifyIdentityProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Identity Provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Identity Provider",
              "example": "Qui et aperiam dolorum."
            },
            "example": "idp-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeIdentityProviderResult"
                },
                "example": {
                  "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                  "clientSecret": "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",
                  "id": "idp-12345678",
                  "identityProviderName": "Google",
                  "status": "Ready"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to verify identity provider",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/image-registry": {
      "get": {
        "tags": [
          "image-registry-api"
        ],
        "summary": "ListImageRegistry image-registry-api",
        "operationId": "image-registry-api#ListImageRegistry",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "ir-12345678",
                    "ir-abcdefgh",
                    "ir-abcd5678"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list image registries",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "image-registry-api"
        ],
        "summary": "CreateImageRegistry image-registry-api",
        "operationId": "image-registry-api#CreateImageRegistry",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateImageRegistryRequestBody"
              },
              "example": {
                "description": "DockerHub is a public Docker Image Registry",
                "host": "docker.io",
                "name": "DockerHub",
                "password": "mypassword",
                "username": "myusername"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Image Registry ID created",
                  "example": "ir-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "ir-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create an image registry",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/image-registry/{id}": {
      "delete": {
        "tags": [
          "image-registry-api"
        ],
        "summary": "DeleteImageRegistry image-registry-api",
        "operationId": "image-registry-api#DeleteImageRegistry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Image Registry",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Image Registry",
              "example": "Quasi voluptas repudiandae commodi nam."
            },
            "example": "ir-12345678"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete an image registry",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "image-registry-api"
        ],
        "summary": "DescribeImageRegistry image-registry-api",
        "operationId": "image-registry-api#DescribeImageRegistry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Image Registry",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Image Registry",
              "example": "Et alias nihil hic blanditiis est."
            },
            "example": "ir-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeImageRegistryResult"
                },
                "example": {
                  "description": "DockerHub is a public Docker Image Registry",
                  "host": "docker.io",
                  "id": "ir-12345678",
                  "name": "DockerHub",
                  "password": "mypassword",
                  "username": "myusername"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe an image registry",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "image-registry-api"
        ],
        "summary": "UpdateImageRegistry image-registry-api",
        "operationId": "image-registry-api#UpdateImageRegistry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Image Registry",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Image Registry",
              "example": "Cum eveniet doloribus doloribus voluptas."
            },
            "example": "ir-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateImageRegistryRequestBody"
              },
              "example": {
                "description": "DockerHub is a public Docker Image Registry",
                "host": "docker.io",
                "name": "DockerHub",
                "password": "mypassword",
                "username": "myusername"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update an image registry",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/invite-user": {
      "post": {
        "tags": [
          "users-api"
        ],
        "summary": "InviteUser users-api",
        "operationId": "users-api#InviteUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequestBody"
              },
              "example": {
                "email": "abc@gmail.com",
                "roleType": "reader"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to invite user",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/invoice": {
      "get": {
        "tags": [
          "invoice-api"
        ],
        "summary": "ListInvoices invoice-api",
        "operationId": "invoice-api#ListInvoices",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInvoicesResult"
                },
                "example": {
                  "invoices": [
                    {
                      "currency": "USD",
                      "invoiceDate": "2021-01-01T00:00:00.000Z",
                      "invoiceId": "123MyCoolCorp980-2021-01-01-1234567890",
                      "invoicePaymentTerm": "30",
                      "invoiceStatus": "Open",
                      "invoiceUrl": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf",
                      "taxAmount": 10,
                      "totalAmount": 110,
                      "totalAmountWithoutTax": 100
                    },
                    {
                      "currency": "USD",
                      "invoiceDate": "2021-01-01T00:00:00.000Z",
                      "invoiceId": "123MyCoolCorp980-2021-01-01-1234567890",
                      "invoicePaymentTerm": "30",
                      "invoiceStatus": "Open",
                      "invoiceUrl": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf",
                      "taxAmount": 10,
                      "totalAmount": 110,
                      "totalAmountWithoutTax": 100
                    },
                    {
                      "currency": "USD",
                      "invoiceDate": "2021-01-01T00:00:00.000Z",
                      "invoiceId": "123MyCoolCorp980-2021-01-01-1234567890",
                      "invoicePaymentTerm": "30",
                      "invoiceStatus": "Open",
                      "invoiceUrl": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf",
                      "taxAmount": 10,
                      "totalAmount": 110,
                      "totalAmountWithoutTax": 100
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list invoices",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/limit": {
      "get": {
        "tags": [
          "limit-api"
        ],
        "summary": "ListLimit limit-api",
        "operationId": "limit-api#ListLimit",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListLimitRequestBody"
              },
              "example": {
                "family": "COMPUTE_INFRA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLimitResult"
                },
                "example": {
                  "keys": [
                    "MAX_VIRTUAL_CORES_PER_RESOURCE"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list limit",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/limit/family/{family}/key/{key}": {
      "delete": {
        "tags": [
          "limit-api"
        ],
        "summary": "DeleteLimit limit-api",
        "operationId": "limit-api#DeleteLimit",
        "parameters": [
          {
            "name": "family",
            "in": "path",
            "description": "Limit family",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The limit family",
              "example": "SERVICE"
            },
            "example": "COMPUTE_INFRA"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Unique key to identify the limit",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique key to identify the limit",
              "example": "MAX_VIRTUAL_CORES_PER_RESOURCE"
            },
            "example": "MAX_VIRTUAL_CORES_PER_RESOURCE"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete limit",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "limit-api"
        ],
        "summary": "DescribeLimit limit-api",
        "operationId": "limit-api#DescribeLimit",
        "parameters": [
          {
            "name": "family",
            "in": "path",
            "description": "Limit family",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The limit family",
              "example": "SERVICE"
            },
            "example": "COMPUTE_INFRA"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Unique key to identify the limit",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique key to identify the limit",
              "example": "MAX_VIRTUAL_CORES_PER_RESOURCE"
            },
            "example": "MAX_VIRTUAL_CORES_PER_RESOURCE"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeLimitResult"
                },
                "example": {
                  "description": "A premium limit",
                  "family": "COMPUTE_INFRA",
                  "key": "MAX_VIRTUAL_CORES_PER_RESOURCE",
                  "modifiable": true,
                  "name": "Premium Tier",
                  "value": 4
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe limit",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "limit-api"
        ],
        "summary": "UpdateLimit limit-api",
        "operationId": "limit-api#UpdateLimit",
        "parameters": [
          {
            "name": "family",
            "in": "path",
            "description": "Limit family",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The limit family",
              "example": "SERVICE"
            },
            "example": "COMPUTE_INFRA"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Unique key to identify the limit",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique key to identify the limit",
              "example": "MAX_VIRTUAL_CORES_PER_RESOURCE"
            },
            "example": "MAX_VIRTUAL_CORES_PER_RESOURCE"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLimitRequestBody"
              },
              "example": {
                "description": "A premium limit",
                "name": "Premium Tier",
                "value": 4
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update limit",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/login-with-identity-provider": {
      "post": {
        "tags": [
          "signin-api"
        ],
        "summary": "LoginWithIdentityProvider signin-api",
        "operationId": "signin-api#LoginWithIdentityProvider",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithIdentityProviderRequestBody"
              },
              "example": {
                "authorizationCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
                "companyDescription": "We sell xyz database software",
                "companyUrl": "https://www.mywebsite.com",
                "deviceCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
                "identityProviderName": "Google",
                "invitedEmail": "abc@gmail.com",
                "legalCompanyName": "mywebsite",
                "redirectUri": "https://www.example/redirect"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResult"
                },
                "example": {
                  "jwtToken": ""
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to login with identity provider",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/2022-09-01-00/logout": {
      "post": {
        "tags": [
          "users-api"
        ],
        "summary": "Logout users-api",
        "operationId": "users-api#Logout",
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to logout",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/org-users": {
      "get": {
        "tags": [
          "users-api"
        ],
        "summary": "DescribeUsersByOrg users-api",
        "operationId": "users-api#DescribeUsersByOrg",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeUsersByOrgResult"
                },
                "example": {
                  "Id": "org-aKQ8G13QeR",
                  "orgUsers": [
                    {
                      "email": "abc@gmail.com",
                      "invitedAt": "2023-01-10T00:00:00Z",
                      "name": "John Doe",
                      "roleType": "reader",
                      "userId": "user-abcd1234"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a user",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/plan": {
      "get": {
        "tags": [
          "plan-api"
        ],
        "summary": "DescribePlan plan-api",
        "operationId": "plan-api#DescribePlan",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribePlanResult"
                },
                "example": {
                  "modifiedAt": "2023-01-01T00:00:00Z",
                  "nextChargeDate": "2023-02-01",
                  "paymentConfigured": true,
                  "paymentInfoPortalURL": "https://billing.paigo.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx",
                  "planCoreHourCost": 0.05,
                  "planDescription": "The starter plan is priced at 'X' units",
                  "planFrequency": "MONTHLY",
                  "planMonthlyCost": 49,
                  "planName": "STARTER",
                  "remainingCredits": "100",
                  "startDate": "2023-01-01"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to add plan",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "plan-api"
        ],
        "summary": "ChangePlan plan-api",
        "operationId": "plan-api#ChangePlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePlanRequestBody"
              },
              "example": {
                "planName": "STARTER"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to add plan",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/region/{id}": {
      "get": {
        "tags": [
          "region-api"
        ],
        "summary": "DescribeRegion region-api",
        "operationId": "region-api#DescribeRegion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Region",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Region",
              "example": "Illum dolores porro quia doloremque consequuntur sequi."
            },
            "example": "region-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeRegionResult"
                },
                "example": {
                  "cloudProviderId": "infra-12345678",
                  "cloudProviderName": "aws",
                  "code": "us-east-1",
                  "description": "US East (N. Virginia)",
                  "id": "region-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a region",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/region/cloudprovider/{cloudProviderName}": {
      "get": {
        "tags": [
          "region-api"
        ],
        "summary": "ListRegion region-api",
        "operationId": "region-api#ListRegion",
        "parameters": [
          {
            "name": "serviceId",
            "in": "query",
            "description": "Service ID. If specified together with serviceModelId,list the regions of the service model. Otherwise list all regions.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "serviceModelId",
            "in": "query",
            "description": "Service model ID. If specified together with serviceId,list the regions of the service model. Otherwise list all regions.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Quibusdam odio modi aperiam."
            },
            "example": "sm-12345678"
          },
          {
            "name": "productTierId",
            "in": "query",
            "description": "Product tier ID. If specified together with serviceId,list the regions of the product tier. Otherwise list all regions.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Minus est temporibus placeat velit."
            },
            "example": "pt-12345678"
          },
          {
            "name": "modelType",
            "in": "query",
            "description": "Model type. If specified, list regions for the specified model type.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The model type encapsulating this service",
              "example": "OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA"
            },
            "example": "CUSTOMER_HOSTED"
          },
          {
            "name": "cloudProviderName",
            "in": "path",
            "description": "The cloud provider for this compute instance type config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the Infra Provider",
              "example": "aws|azure|gcp|all"
            },
            "example": "aws"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "region-12345678",
                    "region-87654321"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list regions",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/region/code/{code}/cloud-provider/{cloudProviderName}": {
      "get": {
        "tags": [
          "region-api"
        ],
        "summary": "GetRegionByCode region-api",
        "operationId": "region-api#GetRegionByCode",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Cloud-provider native region code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Cloud-provider native region code",
              "example": "us-east-1",
              "minLength": 1
            },
            "example": "us-east-1"
          },
          {
            "name": "cloudProviderName",
            "in": "path",
            "description": "The cloud provider for this compute instance type config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the Infra Provider",
              "example": "aws|azure|gcp|all"
            },
            "example": "aws"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Quisquam optio voluptatum odio."
                },
                "example": "Fugiat nostrum tempora quibusdam ad."
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to get a region by code",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/reset-password": {
      "post": {
        "tags": [
          "signup-api"
        ],
        "summary": "ResetPassword signup-api",
        "operationId": "signup-api#ResetPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequestBody"
              },
              "example": {
                "email": "abc@gmail.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to reset password",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/2022-09-01-00/resource-instance": {
      "get": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "ListAllResourceInstances resource-instance-api",
        "operationId": "resource-instance-api#ListAllResourceInstances",
        "parameters": [
          {
            "name": "environmentType",
            "in": "query",
            "description": "The environment type to filter by",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The type of service environment",
              "example": "PROD|PRIVATE|CANARY|STAGING|QA|DEV"
            },
            "example": "DEV"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllResourceInstancesResult"
                },
                "example": {
                  "nextPageToken": "next-token",
                  "resourceInstances": [
                    {
                      "active": true,
                      "autoscalingEnabled": true,
                      "awsAccountID": "123456789012",
                      "backupStatus": {
                        "backupPeriodInHours": 2,
                        "backupRetentionInDays": 7,
                        "earliestRestoreTime": "2021-09-01T00:00:00Z",
                        "lastBackupTime": "2021-09-01T00:00:00Z"
                      },
                      "cloud_provider": "aws",
                      "created_at": "2023-01-10T00:00:00Z",
                      "createdByUserId": "user-12345678",
                      "createdByUserName": "John Doe",
                      "currentReplicas": "2",
                      "customNetworkDetail": {
                        "cidr": "10.177.0.0/16",
                        "id": "n-12345678",
                        "name": "Prod us-east-1"
                      },
                      "detailedNetworkTopology": {
                        "r-abcd1234": {
                          "allowedIPRanges": [
                            "0.0.0.0/0"
                          ],
                          "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                          "clusterPorts": [
                            3306
                          ],
                          "main": true,
                          "networkingType": "PUBLIC",
                          "nodes": [
                            {
                              "availabilityZone": "us-east-2a",
                              "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                              "healthStatus": "healthy",
                              "id": "primary-0",
                              "ports": [
                                3306
                              ],
                              "status": "RUNNING"
                            }
                          ],
                          "privateNetworkCIDR": "10.0.0.2/24",
                          "privateNetworkID": "n-1234abcd",
                          "publiclyAccessible": true,
                          "resourceKey": "primary",
                          "resourceName": "Primary MySQL Instance"
                        }
                      },
                      "externalPayerId": "external-payer-id-1234",
                      "gcpProjectID": "my-project",
                      "highAvailability": true,
                      "id": "instance-abcd1234",
                      "instanceLoadStatus": "Quaerat id.",
                      "kubernetesDashboardEndpoint": {
                        "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
                        "deploymentCellID": "hc-12345678"
                      },
                      "last_modified_at": "2023-01-20T00:00:00Z",
                      "maxReplicas": "1",
                      "minReplicas": "1",
                      "network_type": "PUBLIC",
                      "productTierFeatures": {
                        "BILLING": {
                          "enabled": false
                        },
                        "LOGS": {
                          "auth": {
                            "password": "px3c4d5f6g7h8i",
                            "username": "abcd1234"
                          },
                          "enabled": true,
                          "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
                        },
                        "METRICS": {
                          "enabled": false
                        }
                      },
                      "region": "us-east-1",
                      "result_params": {
                        "param1": "value1",
                        "param2": "value2"
                      },
                      "serverlessEnabled": true,
                      "status": "RUNNING",
                      "subscriptionId": "sub-abcd1234"
                    },
                    {
                      "active": true,
                      "autoscalingEnabled": true,
                      "awsAccountID": "123456789012",
                      "backupStatus": {
                        "backupPeriodInHours": 2,
                        "backupRetentionInDays": 7,
                        "earliestRestoreTime": "2021-09-01T00:00:00Z",
                        "lastBackupTime": "2021-09-01T00:00:00Z"
                      },
                      "cloud_provider": "aws",
                      "created_at": "2023-01-10T00:00:00Z",
                      "createdByUserId": "user-12345678",
                      "createdByUserName": "John Doe",
                      "currentReplicas": "2",
                      "customNetworkDetail": {
                        "cidr": "10.177.0.0/16",
                        "id": "n-12345678",
                        "name": "Prod us-east-1"
                      },
                      "detailedNetworkTopology": {
                        "r-abcd1234": {
                          "allowedIPRanges": [
                            "0.0.0.0/0"
                          ],
                          "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                          "clusterPorts": [
                            3306
                          ],
                          "main": true,
                          "networkingType": "PUBLIC",
                          "nodes": [
                            {
                              "availabilityZone": "us-east-2a",
                              "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                              "healthStatus": "healthy",
                              "id": "primary-0",
                              "ports": [
                                3306
                              ],
                              "status": "RUNNING"
                            }
                          ],
                          "privateNetworkCIDR": "10.0.0.2/24",
                          "privateNetworkID": "n-1234abcd",
                          "publiclyAccessible": true,
                          "resourceKey": "primary",
                          "resourceName": "Primary MySQL Instance"
                        }
                      },
                      "externalPayerId": "external-payer-id-1234",
                      "gcpProjectID": "my-project",
                      "highAvailability": true,
                      "id": "instance-abcd1234",
                      "instanceLoadStatus": "Quaerat id.",
                      "kubernetesDashboardEndpoint": {
                        "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
                        "deploymentCellID": "hc-12345678"
                      },
                      "last_modified_at": "2023-01-20T00:00:00Z",
                      "maxReplicas": "1",
                      "minReplicas": "1",
                      "network_type": "PUBLIC",
                      "productTierFeatures": {
                        "BILLING": {
                          "enabled": false
                        },
                        "LOGS": {
                          "auth": {
                            "password": "px3c4d5f6g7h8i",
                            "username": "abcd1234"
                          },
                          "enabled": true,
                          "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
                        },
                        "METRICS": {
                          "enabled": false
                        }
                      },
                      "region": "us-east-1",
                      "result_params": {
                        "param1": "value1",
                        "param2": "value2"
                      },
                      "serverlessEnabled": true,
                      "status": "RUNNING",
                      "subscriptionId": "sub-abcd1234"
                    },
                    {
                      "active": true,
                      "autoscalingEnabled": true,
                      "awsAccountID": "123456789012",
                      "backupStatus": {
                        "backupPeriodInHours": 2,
                        "backupRetentionInDays": 7,
                        "earliestRestoreTime": "2021-09-01T00:00:00Z",
                        "lastBackupTime": "2021-09-01T00:00:00Z"
                      },
                      "cloud_provider": "aws",
                      "created_at": "2023-01-10T00:00:00Z",
                      "createdByUserId": "user-12345678",
                      "createdByUserName": "John Doe",
                      "currentReplicas": "2",
                      "customNetworkDetail": {
                        "cidr": "10.177.0.0/16",
                        "id": "n-12345678",
                        "name": "Prod us-east-1"
                      },
                      "detailedNetworkTopology": {
                        "r-abcd1234": {
                          "allowedIPRanges": [
                            "0.0.0.0/0"
                          ],
                          "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                          "clusterPorts": [
                            3306
                          ],
                          "main": true,
                          "networkingType": "PUBLIC",
                          "nodes": [
                            {
                              "availabilityZone": "us-east-2a",
                              "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                              "healthStatus": "healthy",
                              "id": "primary-0",
                              "ports": [
                                3306
                              ],
                              "status": "RUNNING"
                            }
                          ],
                          "privateNetworkCIDR": "10.0.0.2/24",
                          "privateNetworkID": "n-1234abcd",
                          "publiclyAccessible": true,
                          "resourceKey": "primary",
                          "resourceName": "Primary MySQL Instance"
                        }
                      },
                      "externalPayerId": "external-payer-id-1234",
                      "gcpProjectID": "my-project",
                      "highAvailability": true,
                      "id": "instance-abcd1234",
                      "instanceLoadStatus": "Quaerat id.",
                      "kubernetesDashboardEndpoint": {
                        "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
                        "deploymentCellID": "hc-12345678"
                      },
                      "last_modified_at": "2023-01-20T00:00:00Z",
                      "maxReplicas": "1",
                      "minReplicas": "1",
                      "network_type": "PUBLIC",
                      "productTierFeatures": {
                        "BILLING": {
                          "enabled": false
                        },
                        "LOGS": {
                          "auth": {
                            "password": "px3c4d5f6g7h8i",
                            "username": "abcd1234"
                          },
                          "enabled": true,
                          "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
                        },
                        "METRICS": {
                          "enabled": false
                        }
                      },
                      "region": "us-east-1",
                      "result_params": {
                        "param1": "value1",
                        "param2": "value2"
                      },
                      "serverlessEnabled": true,
                      "status": "RUNNING",
                      "subscriptionId": "sub-abcd1234"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list all resource instances",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{id}/deployment-cell-dashboard/token": {
      "post": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "GenerateTokenForDeploymentCellDashboard resource-instance-api",
        "operationId": "resource-instance-api#GenerateTokenForDeploymentCellDashboard",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID whose deployment cell dashboard token is to be generated",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Resource Instance",
              "example": "instance-12345678"
            },
            "example": "instance-abcd1234"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTokenForDeploymentCellDashboardResult"
                },
                "example": {
                  "deploymentCellID": "hc-12345678",
                  "expirationTimestamp": "2021-01-01T00:00:00Z",
                  "token": "token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to generate a kubernetes dashboard token.",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{instanceId}/audit-events": {
      "get": {
        "tags": [
          "audit-events-api"
        ],
        "summary": "ListAuditEventsForInstance audit-events-api",
        "operationId": "audit-events-api#ListAuditEventsForInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The ID of the resource instance",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the resource instance",
              "example": "instance-12345678"
            },
            "example": "instance-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAuditEventsResult"
                },
                "example": {
                  "events": [
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    },
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    },
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    }
                  ],
                  "ids": [
                    "event-12345678"
                  ],
                  "nextPageToken": "Qui laboriosam."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list event",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{instanceId}/event": {
      "get": {
        "tags": [
          "audit-events-api"
        ],
        "summary": "DeprecatedListAuditEventsForInstance audit-events-api",
        "operationId": "audit-events-api#DeprecatedListAuditEventsForInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The ID of the resource instance",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the resource instance",
              "example": "instance-12345678"
            },
            "example": "instance-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAuditEventsResult"
                },
                "example": {
                  "events": [
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    },
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    },
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    }
                  ],
                  "ids": [
                    "event-12345678"
                  ],
                  "nextPageToken": "Qui dolores consectetur et atque."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list event",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}": {
      "get": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "ListResourceInstances resource-instance-api",
        "operationId": "resource-instance-api#ListResourceInstances",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Neque at consequuntur."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service key",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "instance-abcd1234",
                    "instance-abcd1235"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list resource instances",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "CreateResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#CreateResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Atque illum inventore."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateResourceInstanceRequestBody"
              },
              "example": {
                "cloud_provider": "aws",
                "custom_network_id": "n-1234567890",
                "externalBillingId": "external-billing-id-1234",
                "network_type": "PUBLIC",
                "region": "us-east-1",
                "requestParams": {
                  "param1": "value1",
                  "param2": "value2"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateServicesOrchestrationResponseBody"
                },
                "example": {
                  "id": "Enim accusantium quia voluptas excepturi itaque."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}": {
      "delete": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "DeleteResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#DeleteResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Ex sit ex."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "DescribeResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#DescribeResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Quas veniam."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeResourceInstanceResult"
                },
                "example": {
                  "active": true,
                  "autoscalingEnabled": true,
                  "awsAccountID": "123456789012",
                  "backupStatus": {
                    "backupPeriodInHours": 2,
                    "backupRetentionInDays": 7,
                    "earliestRestoreTime": "2021-09-01T00:00:00Z",
                    "lastBackupTime": "2021-09-01T00:00:00Z"
                  },
                  "cloud_provider": "aws",
                  "created_at": "2023-01-10T00:00:00Z",
                  "createdByUserId": "user-12345678",
                  "createdByUserName": "John Doe",
                  "currentReplicas": "2",
                  "customNetworkDetail": {
                    "cidr": "10.177.0.0/16",
                    "id": "n-12345678",
                    "name": "Prod us-east-1"
                  },
                  "detailedNetworkTopology": {
                    "r-abcd1234": {
                      "allowedIPRanges": [
                        "0.0.0.0/0"
                      ],
                      "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                      "clusterPorts": [
                        3306
                      ],
                      "main": true,
                      "networkingType": "PUBLIC",
                      "nodes": [
                        {
                          "availabilityZone": "us-east-2a",
                          "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                          "healthStatus": "healthy",
                          "id": "primary-0",
                          "ports": [
                            3306
                          ],
                          "status": "RUNNING"
                        }
                      ],
                      "privateNetworkCIDR": "10.0.0.2/24",
                      "privateNetworkID": "n-1234abcd",
                      "publiclyAccessible": true,
                      "resourceKey": "primary",
                      "resourceName": "Primary MySQL Instance"
                    }
                  },
                  "externalPayerId": "external-payer-id-1234",
                  "gcpProjectID": "my-project",
                  "highAvailability": true,
                  "id": "instance-abcd1234",
                  "instanceLoadStatus": "Maiores ipsam velit et.",
                  "kubernetesDashboardEndpoint": {
                    "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
                    "deploymentCellID": "hc-12345678"
                  },
                  "last_modified_at": "2023-01-20T00:00:00Z",
                  "maxReplicas": "1",
                  "minReplicas": "1",
                  "network_type": "PUBLIC",
                  "productTierFeatures": {
                    "BILLING": {
                      "enabled": false
                    },
                    "LOGS": {
                      "auth": {
                        "password": "px3c4d5f6g7h8i",
                        "username": "abcd1234"
                      },
                      "enabled": true,
                      "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
                    },
                    "METRICS": {
                      "enabled": false
                    }
                  },
                  "region": "us-east-1",
                  "result_params": {
                    "param1": "value1",
                    "param2": "value2"
                  },
                  "serverlessEnabled": true,
                  "status": "RUNNING",
                  "subscriptionId": "sub-abcd1234"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "UpdateResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#UpdateResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Delectus asperiores fuga adipisci."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateResourceInstanceRequestBody"
              },
              "example": {
                "requestParams": {
                  "param1": "value1",
                  "param2": "value2"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/add-capacity": {
      "post": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "AddCapacityToResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#AddCapacityToResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Harum sed ut consequatur sequi consequatur ipsum."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCapacityToResourceInstanceRequestBody"
              },
              "example": {
                "capacityToBeAdded": 3
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to add capacity to a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/custom-dns": {
      "delete": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "RemoveCustomDNSFromResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#RemoveCustomDNSFromResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Minus fugit autem perspiciatis."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "http-service"
            },
            "example": "http-service"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "AddCustomDNSToResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#AddCustomDNSToResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Nesciunt a voluptas iusto."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "http-service"
            },
            "example": "http-service"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCustomDNSToResourceInstanceRequestBody"
              },
              "example": {
                "customDNS": "my-custom-dns.com",
                "targetPort": 8080
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/failover": {
      "post": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "FailoverResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#FailoverResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Voluptatum ex dolores illo accusantium."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FailoverResourceInstanceRequestBody"
              },
              "example": {
                "failedReplicaAction": "FAILOVER_AND_RESTART",
                "failedReplicaID": "db-0"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to failover a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/remove-capacity": {
      "post": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "RemoveCapacityFromResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#RemoveCapacityFromResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Totam ut dicta unde in voluptatibus."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveCapacityFromResourceInstanceRequestBody"
              },
              "example": {
                "capacityToBeRemoved": 3
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to remove capacity from a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/restart": {
      "post": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "RestartResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#RestartResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Eaque incidunt velit earum."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to restart a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/restore": {
      "post": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "RestoreResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#RestoreResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Sunt ut maxime vel."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreResourceInstanceRequestBody"
              },
              "example": {
                "network_type": "PUBLIC",
                "targetRestoreTime": "2021-09-01T00:00:00Z"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateServicesOrchestrationResponseBody"
                },
                "example": {
                  "id": "Minus amet."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/snapshot": {
      "get": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "ListResourceInstanceSnapshots resource-instance-api",
        "operationId": "resource-instance-api#ListResourceInstanceSnapshots",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Nulla praesentium."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service key",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResourceInstanceSnapshotsResult"
                },
                "example": {
                  "snapshots": [
                    {
                      "completeTime": "2021-09-01T00:00:00Z",
                      "createdTime": "2021-09-01T00:00:00Z",
                      "encrypted": true,
                      "progress": 100,
                      "snapshotId": "instance-ss-12345678",
                      "status": "completed"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list snapshots of a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/start": {
      "post": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "StartResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#StartResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Asperiores animi voluptas illo quis."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to start a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/stop": {
      "post": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "StopResourceInstance resource-instance-api",
        "operationId": "resource-instance-api#StopResourceInstance",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Non excepturi nobis ut."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "example": "instance-abcd1234"
            },
            "example": "instance-abcd1234"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to stop a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/snapshot/{snapshotId}/restore": {
      "post": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "RestoreResourceInstanceFromSnapshot resource-instance-api",
        "operationId": "resource-instance-api#RestoreResourceInstanceFromSnapshot",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Molestias omnis."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          },
          {
            "name": "resourceKey",
            "in": "path",
            "description": "The resource key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The resource key",
              "example": "mysql"
            },
            "example": "mysql"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The snapshot ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Resource Instance Snapshot",
              "example": "Non voluptatum."
            },
            "example": "instance-ss-abcd1234"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreResourceInstanceFromSnapshotRequestBody"
              },
              "example": {
                "network_type": "PUBLIC"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateServicesOrchestrationResponseBody"
                },
                "example": {
                  "id": "Adipisci nemo dolorum modi."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/audit-events": {
      "get": {
        "tags": [
          "audit-events-api"
        ],
        "summary": "ListAuditEventsForServicePlan audit-events-api",
        "operationId": "audit-events-api#ListAuditEventsForServicePlan",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Non magnam maxime delectus quia."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAuditEventsResult"
                },
                "example": {
                  "events": [
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    },
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    }
                  ],
                  "ids": [
                    "event-12345678"
                  ],
                  "nextPageToken": "Non illum ea."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list event",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/event": {
      "get": {
        "tags": [
          "audit-events-api"
        ],
        "summary": "DeprecatedListAuditEventsForServicePlan audit-events-api",
        "operationId": "audit-events-api#DeprecatedListAuditEventsForServicePlan",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Dolorem itaque nemo."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          },
          {
            "name": "productTierKey",
            "in": "path",
            "description": "The product tier name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The product tier name",
              "example": "premium"
            },
            "example": "premium"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAuditEventsResult"
                },
                "example": {
                  "events": [
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    },
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    },
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    },
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    }
                  ],
                  "ids": [
                    "event-12345678"
                  ],
                  "nextPageToken": "Aut ea sit."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list event",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/setup-kit": {
      "get": {
        "tags": [
          "resource-instance-api"
        ],
        "summary": "ResourceInstanceProvisionerSetupKit resource-instance-api",
        "operationId": "resource-instance-api#ResourceInstanceProvisionerSetupKit",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "serviceProviderId",
            "in": "path",
            "description": "The service provider ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Provider",
              "example": "Sit dicta eos qui atque necessitatibus."
            },
            "example": "omnistrate"
          },
          {
            "name": "serviceKey",
            "in": "path",
            "description": "The service name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service name",
              "example": "service-orchestration"
            },
            "example": "service-orchestration"
          },
          {
            "name": "serviceAPIVersion",
            "in": "path",
            "description": "The service API version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service API version",
              "example": "v1"
            },
            "example": "v1"
          },
          {
            "name": "serviceEnvironmentKey",
            "in": "path",
            "description": "The service environment name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service environment name",
              "example": "dev"
            },
            "example": "dev"
          },
          {
            "name": "serviceModelKey",
            "in": "path",
            "description": "The service model name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service model name",
              "example": "hosted"
            },
            "example": "hosted"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to setup kit for a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/audit-events": {
      "get": {
        "tags": [
          "audit-events-api"
        ],
        "summary": "ListAllAuditEvents audit-events-api",
        "operationId": "audit-events-api#ListAllAuditEvents",
        "parameters": [
          {
            "name": "serviceID",
            "in": "query",
            "description": "The service ID to list events for",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-123456"
          },
          {
            "name": "environmentType",
            "in": "query",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The type of service environment",
              "example": "PROD|PRIVATE|CANARY|STAGING|QA|DEV"
            },
            "example": "PROD|PRIVATE|CANARY|STAGING|QA|DEV"
          },
          {
            "name": "eventSourceTypes",
            "in": "query",
            "description": "The event types to filter by",
            "allowEmptyValue": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Quasi omnis cumque eaque sed numquam sint."
              },
              "description": "The event types to filter by",
              "example": [
                "Vel qui culpa.",
                "Ab aut odit itaque amet."
              ]
            },
            "example": [
              "Quia sit quaerat porro et.",
              "Dolore enim maiores dolorem."
            ]
          },
          {
            "name": "instanceID",
            "in": "query",
            "description": "The instance ID to list events for",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Resource Instance",
              "example": "instance-12345678"
            },
            "example": "instance-12345678"
          },
          {
            "name": "nextPageToken",
            "in": "query",
            "description": "The next token to use for pagination",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The next token to use for pagination",
              "example": "token"
            },
            "example": "token"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of events to return per page",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "description": "The number of resources to return per page",
              "example": 10,
              "format": "int64"
            },
            "example": 10
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date of the events",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Start time of the window in ISO 8601 format. If omitted, the filter is open-ended at the start.",
              "example": "2023-01-01T10:00:00Z",
              "format": "date-time"
            },
            "example": "2023-01-01T10:00:00Z"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date of the events",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "End time of the window in ISO 8601 format. If omitted, the filter is open-ended at the start.",
              "example": "2024-01-01T10:00:00Z",
              "format": "date-time"
            },
            "example": "2024-01-01T10:00:00Z"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAuditEventsResult"
                },
                "example": {
                  "events": [
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    },
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    },
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    },
                    {
                      "eventSource": "Customer, Infra or Maintenance",
                      "id": "event-12345678",
                      "message": "instance-abcd1234 created",
                      "orgId": "org-12345678",
                      "orgName": "Acme Corporation",
                      "resourceInstanceId": "instance-abcd1234",
                      "resourceName": "Galera",
                      "subscriptionId": "sub-abcd1234",
                      "time": "2023-01-10T00:00:00Z",
                      "userId": "user-12345678",
                      "userName": "John Doe",
                      "workflowFailures": [
                        {
                          "eventTime": "2020-01-01T00:00:00Z",
                          "message": "Bootstrap failed for reason X"
                        },
                        {
                          "eventTime": "2020-01-01T00:01:00Z",
                          "message": "Compute failed for reason Y"
                        }
                      ]
                    }
                  ],
                  "ids": [
                    "event-12345678"
                  ],
                  "nextPageToken": "Est pariatur quia facilis adipisci ducimus."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list all events",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/audit-events/{id}": {
      "get": {
        "tags": [
          "audit-events-api"
        ],
        "summary": "DescribeAuditEvent audit-events-api",
        "operationId": "audit-events-api#DescribeAuditEvent",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Event",
              "example": "Omnis delectus."
            },
            "example": "event-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeAuditEventResult"
                },
                "example": {
                  "eventSource": "Customer, Infra or Maintenance",
                  "id": "event-12345678",
                  "message": "instance-abcd1234 created",
                  "orgId": "org-12345678",
                  "orgName": "Acme Corporation",
                  "resourceInstanceId": "instance-abcd1234",
                  "resourceName": "Galera",
                  "subscriptionId": "sub-abcd1234",
                  "time": "2023-01-10T00:00:00Z",
                  "userId": "user-12345678",
                  "userName": "John Doe",
                  "workflowFailures": [
                    {
                      "eventTime": "2020-01-01T00:00:00Z",
                      "message": "Bootstrap failed for reason X"
                    },
                    {
                      "eventTime": "2020-01-01T00:01:00Z",
                      "message": "Compute failed for reason Y"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe event",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/custom-network": {
      "get": {
        "tags": [
          "custom-network-api"
        ],
        "summary": "ListCustomNetworks custom-network-api",
        "operationId": "custom-network-api#ListCustomNetworks",
        "parameters": [
          {
            "name": "cloudProviderName",
            "in": "query",
            "description": "The name of the cloud provider that custom network should be created in",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Name of the Infra Provider",
              "example": "aws|azure|gcp|all"
            },
            "example": "aws"
          },
          {
            "name": "cloudProviderRegion",
            "in": "query",
            "description": "The region of the cloud provider that the network should be created in",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The region of the cloud provider that the network should be created in",
              "example": "us-east-1"
            },
            "example": "us-east-1"
          },
          {
            "name": "customNetworksOnly",
            "in": "query",
            "description": "Flag indicating whether to return only custom networks, or to include default and imported networks as well",
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "description": "Flag indicating whether to return only custom networks, or to include default and imported networks as well",
              "example": false
            },
            "example": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomNetworksResult"
                },
                "example": {
                  "customNetworks": [
                    {
                      "cidr": "10.0.0.0/16",
                      "cloudProviderName": "aws",
                      "cloudProviderRegion": "us-east-1",
                      "id": "n-12345678",
                      "name": "Prod us-east-1",
                      "networkDefinitionType": "Custom",
                      "networkFeaturesConfiguration": {
                        "isPrivateLinkEnabled": true
                      },
                      "networkInstances": [
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        },
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        },
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        },
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        }
                      ]
                    },
                    {
                      "cidr": "10.0.0.0/16",
                      "cloudProviderName": "aws",
                      "cloudProviderRegion": "us-east-1",
                      "id": "n-12345678",
                      "name": "Prod us-east-1",
                      "networkDefinitionType": "Custom",
                      "networkFeaturesConfiguration": {
                        "isPrivateLinkEnabled": true
                      },
                      "networkInstances": [
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        },
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        },
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        },
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        }
                      ]
                    },
                    {
                      "cidr": "10.0.0.0/16",
                      "cloudProviderName": "aws",
                      "cloudProviderRegion": "us-east-1",
                      "id": "n-12345678",
                      "name": "Prod us-east-1",
                      "networkDefinitionType": "Custom",
                      "networkFeaturesConfiguration": {
                        "isPrivateLinkEnabled": true
                      },
                      "networkInstances": [
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        },
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        },
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        },
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        }
                      ]
                    },
                    {
                      "cidr": "10.0.0.0/16",
                      "cloudProviderName": "aws",
                      "cloudProviderRegion": "us-east-1",
                      "id": "n-12345678",
                      "name": "Prod us-east-1",
                      "networkDefinitionType": "Custom",
                      "networkFeaturesConfiguration": {
                        "isPrivateLinkEnabled": true
                      },
                      "networkInstances": [
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        },
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        },
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        },
                        {
                          "awsAccountID": "123456789012",
                          "cloudProviderNativeNetworkId": "vpc-12345678",
                          "gcpProjectID": "my-project",
                          "gcpProjectNumber": "123456789012",
                          "hostClusterID": "hc-12345678"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list custom networks",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "custom-network-api"
        ],
        "summary": "CreateCustomNetwork custom-network-api",
        "operationId": "custom-network-api#CreateCustomNetwork",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomNetworkRequestBody"
              },
              "example": {
                "cidr": "10.0.0.0/16",
                "cloudProviderName": "aws",
                "cloudProviderRegion": "us-east-1",
                "name": "Prod us-east-1",
                "networkFeaturesConfiguration": {
                  "isPrivateLinkEnabled": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomNetwork"
                },
                "example": {
                  "cidr": "10.0.0.0/16",
                  "cloudProviderName": "aws",
                  "cloudProviderRegion": "us-east-1",
                  "id": "n-12345678",
                  "name": "Prod us-east-1",
                  "networkDefinitionType": "Custom",
                  "networkFeaturesConfiguration": {
                    "isPrivateLinkEnabled": true
                  },
                  "networkInstances": [
                    {
                      "awsAccountID": "123456789012",
                      "cloudProviderNativeNetworkId": "vpc-12345678",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "hostClusterID": "hc-12345678"
                    },
                    {
                      "awsAccountID": "123456789012",
                      "cloudProviderNativeNetworkId": "vpc-12345678",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "hostClusterID": "hc-12345678"
                    },
                    {
                      "awsAccountID": "123456789012",
                      "cloudProviderNativeNetworkId": "vpc-12345678",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "hostClusterID": "hc-12345678"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a custom network",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/custom-network/{id}": {
      "delete": {
        "tags": [
          "custom-network-api"
        ],
        "summary": "DeleteCustomNetwork custom-network-api",
        "operationId": "custom-network-api#DeleteCustomNetwork",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of a custom network",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a custom network",
              "example": "Fugiat facere dicta quo dolore nemo autem."
            },
            "example": "n-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request to delete a custom network",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested custom network is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a custom network",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "custom-network-api"
        ],
        "summary": "DescribeCustomNetwork custom-network-api",
        "operationId": "custom-network-api#DescribeCustomNetwork",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of a custom network",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a custom network",
              "example": "Et explicabo."
            },
            "example": "n-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomNetwork"
                },
                "example": {
                  "cidr": "10.0.0.0/16",
                  "cloudProviderName": "aws",
                  "cloudProviderRegion": "us-east-1",
                  "id": "n-12345678",
                  "name": "Prod us-east-1",
                  "networkDefinitionType": "Custom",
                  "networkFeaturesConfiguration": {
                    "isPrivateLinkEnabled": true
                  },
                  "networkInstances": [
                    {
                      "awsAccountID": "123456789012",
                      "cloudProviderNativeNetworkId": "vpc-12345678",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "hostClusterID": "hc-12345678"
                    },
                    {
                      "awsAccountID": "123456789012",
                      "cloudProviderNativeNetworkId": "vpc-12345678",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "hostClusterID": "hc-12345678"
                    },
                    {
                      "awsAccountID": "123456789012",
                      "cloudProviderNativeNetworkId": "vpc-12345678",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "hostClusterID": "hc-12345678"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request to describe a custom network",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested custom network is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a custom network",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "custom-network-api"
        ],
        "summary": "UpdateCustomNetwork custom-network-api",
        "operationId": "custom-network-api#UpdateCustomNetwork",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of a custom network",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a custom network",
              "example": "Vel neque."
            },
            "example": "n-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomNetworkRequestBody"
              },
              "example": {
                "name": "Dev us-east-1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomNetwork"
                },
                "example": {
                  "cidr": "10.0.0.0/16",
                  "cloudProviderName": "aws",
                  "cloudProviderRegion": "us-east-1",
                  "id": "n-12345678",
                  "name": "Prod us-east-1",
                  "networkDefinitionType": "Custom",
                  "networkFeaturesConfiguration": {
                    "isPrivateLinkEnabled": true
                  },
                  "networkInstances": [
                    {
                      "awsAccountID": "123456789012",
                      "cloudProviderNativeNetworkId": "vpc-12345678",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "hostClusterID": "hc-12345678"
                    },
                    {
                      "awsAccountID": "123456789012",
                      "cloudProviderNativeNetworkId": "vpc-12345678",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "hostClusterID": "hc-12345678"
                    },
                    {
                      "awsAccountID": "123456789012",
                      "cloudProviderNativeNetworkId": "vpc-12345678",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "hostClusterID": "hc-12345678"
                    },
                    {
                      "awsAccountID": "123456789012",
                      "cloudProviderNativeNetworkId": "vpc-12345678",
                      "gcpProjectID": "my-project",
                      "gcpProjectNumber": "123456789012",
                      "hostClusterID": "hc-12345678"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested custom network is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a custom network",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/event/{id}": {
      "get": {
        "tags": [
          "audit-events-api"
        ],
        "summary": "DeprecatedDescribeAuditEvent audit-events-api",
        "operationId": "audit-events-api#DeprecatedDescribeAuditEvent",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Subscription Id",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Event",
              "example": "Delectus eum deleniti."
            },
            "example": "event-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeAuditEventResult"
                },
                "example": {
                  "eventSource": "Customer, Infra or Maintenance",
                  "id": "event-12345678",
                  "message": "instance-abcd1234 created",
                  "orgId": "org-12345678",
                  "orgName": "Acme Corporation",
                  "resourceInstanceId": "instance-abcd1234",
                  "resourceName": "Galera",
                  "subscriptionId": "sub-abcd1234",
                  "time": "2023-01-10T00:00:00Z",
                  "userId": "user-12345678",
                  "userName": "John Doe",
                  "workflowFailures": [
                    {
                      "eventTime": "2020-01-01T00:00:00Z",
                      "message": "Bootstrap failed for reason X"
                    },
                    {
                      "eventTime": "2020-01-01T00:01:00Z",
                      "message": "Compute failed for reason Y"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe event",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/health": {
      "get": {
        "tags": [
          "global-api"
        ],
        "summary": "consumptionServiceHealth global-api",
        "description": "Consumption service health check endpoint",
        "operationId": "global-api#consumptionServiceHealth",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OmnistrateServiceHealthResult"
                },
                "example": {
                  "status": "RUNNING"
                }
              }
            }
          }
        }
      }
    },
    "/2022-09-01-00/resource-instance/services-orchestration": {
      "get": {
        "tags": [
          "services-orchestration-api"
        ],
        "summary": "ListServicesOrchestrations services-orchestration-api",
        "operationId": "services-orchestration-api#ListServicesOrchestrations",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DescribeServicesOrchestrationResult"
                  },
                  "example": [
                    {
                      "ServicesTopology": [
                        {
                          "dependsOnDeployment": [
                            "instanceDeploymentAlias1",
                            "instanceDeploymentAlias2"
                          ],
                          "instanceDeploymentAlias": "instanceDeploymentAlias",
                          "instanceId": "i-12345678",
                          "serviceId": "s-12345678",
                          "status": "PENDING",
                          "statusMessage": "Creating deployment",
                          "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                        },
                        {
                          "dependsOnDeployment": [
                            "instanceDeploymentAlias1",
                            "instanceDeploymentAlias2"
                          ],
                          "instanceDeploymentAlias": "instanceDeploymentAlias",
                          "instanceId": "i-12345678",
                          "serviceId": "s-12345678",
                          "status": "PENDING",
                          "statusMessage": "Creating deployment",
                          "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                        },
                        {
                          "dependsOnDeployment": [
                            "instanceDeploymentAlias1",
                            "instanceDeploymentAlias2"
                          ],
                          "instanceDeploymentAlias": "instanceDeploymentAlias",
                          "instanceId": "i-12345678",
                          "serviceId": "s-12345678",
                          "status": "PENDING",
                          "statusMessage": "Creating deployment",
                          "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                        },
                        {
                          "dependsOnDeployment": [
                            "instanceDeploymentAlias1",
                            "instanceDeploymentAlias2"
                          ],
                          "instanceDeploymentAlias": "instanceDeploymentAlias",
                          "instanceId": "i-12345678",
                          "serviceId": "s-12345678",
                          "status": "PENDING",
                          "statusMessage": "Creating deployment",
                          "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                        }
                      ],
                      "createdAt": "2021-01-01T00:00:00Z",
                      "id": "so-12345678",
                      "orchestrationFailedReason": "Invalid DSL",
                      "resultParams": {
                        "param1": "value1",
                        "param2": "value2"
                      },
                      "status": "PENDING",
                      "updatedAt": "2021-01-01T00:00:00Z"
                    },
                    {
                      "ServicesTopology": [
                        {
                          "dependsOnDeployment": [
                            "instanceDeploymentAlias1",
                            "instanceDeploymentAlias2"
                          ],
                          "instanceDeploymentAlias": "instanceDeploymentAlias",
                          "instanceId": "i-12345678",
                          "serviceId": "s-12345678",
                          "status": "PENDING",
                          "statusMessage": "Creating deployment",
                          "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                        },
                        {
                          "dependsOnDeployment": [
                            "instanceDeploymentAlias1",
                            "instanceDeploymentAlias2"
                          ],
                          "instanceDeploymentAlias": "instanceDeploymentAlias",
                          "instanceId": "i-12345678",
                          "serviceId": "s-12345678",
                          "status": "PENDING",
                          "statusMessage": "Creating deployment",
                          "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                        },
                        {
                          "dependsOnDeployment": [
                            "instanceDeploymentAlias1",
                            "instanceDeploymentAlias2"
                          ],
                          "instanceDeploymentAlias": "instanceDeploymentAlias",
                          "instanceId": "i-12345678",
                          "serviceId": "s-12345678",
                          "status": "PENDING",
                          "statusMessage": "Creating deployment",
                          "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                        },
                        {
                          "dependsOnDeployment": [
                            "instanceDeploymentAlias1",
                            "instanceDeploymentAlias2"
                          ],
                          "instanceDeploymentAlias": "instanceDeploymentAlias",
                          "instanceId": "i-12345678",
                          "serviceId": "s-12345678",
                          "status": "PENDING",
                          "statusMessage": "Creating deployment",
                          "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                        }
                      ],
                      "createdAt": "2021-01-01T00:00:00Z",
                      "id": "so-12345678",
                      "orchestrationFailedReason": "Invalid DSL",
                      "resultParams": {
                        "param1": "value1",
                        "param2": "value2"
                      },
                      "status": "PENDING",
                      "updatedAt": "2021-01-01T00:00:00Z"
                    }
                  ]
                },
                "example": [
                  {
                    "ServicesTopology": [
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      },
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      },
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      },
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      }
                    ],
                    "createdAt": "2021-01-01T00:00:00Z",
                    "id": "so-12345678",
                    "orchestrationFailedReason": "Invalid DSL",
                    "resultParams": {
                      "param1": "value1",
                      "param2": "value2"
                    },
                    "status": "PENDING",
                    "updatedAt": "2021-01-01T00:00:00Z"
                  },
                  {
                    "ServicesTopology": [
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      },
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      },
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      },
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      }
                    ],
                    "createdAt": "2021-01-01T00:00:00Z",
                    "id": "so-12345678",
                    "orchestrationFailedReason": "Invalid DSL",
                    "resultParams": {
                      "param1": "value1",
                      "param2": "value2"
                    },
                    "status": "PENDING",
                    "updatedAt": "2021-01-01T00:00:00Z"
                  },
                  {
                    "ServicesTopology": [
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      },
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      },
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      },
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      }
                    ],
                    "createdAt": "2021-01-01T00:00:00Z",
                    "id": "so-12345678",
                    "orchestrationFailedReason": "Invalid DSL",
                    "resultParams": {
                      "param1": "value1",
                      "param2": "value2"
                    },
                    "status": "PENDING",
                    "updatedAt": "2021-01-01T00:00:00Z"
                  },
                  {
                    "ServicesTopology": [
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      },
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      },
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      },
                      {
                        "dependsOnDeployment": [
                          "instanceDeploymentAlias1",
                          "instanceDeploymentAlias2"
                        ],
                        "instanceDeploymentAlias": "instanceDeploymentAlias",
                        "instanceId": "i-12345678",
                        "serviceId": "s-12345678",
                        "status": "PENDING",
                        "statusMessage": "Creating deployment",
                        "subscriptionId": "Corrupti eligendi quia laborum tenetur."
                      }
                    ],
                    "createdAt": "2021-01-01T00:00:00Z",
                    "id": "so-12345678",
                    "orchestrationFailedReason": "Invalid DSL",
                    "resultParams": {
                      "param1": "value1",
                      "param2": "value2"
                    },
                    "status": "PENDING",
                    "updatedAt": "2021-01-01T00:00:00Z"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list resource instances",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "services-orchestration-api"
        ],
        "summary": "CreateServicesOrchestration services-orchestration-api",
        "operationId": "services-orchestration-api#CreateServicesOrchestration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServicesOrchestrationRequestBody"
              },
              "example": {
                "orchestrationCreateDSL": "Nesciunt harum."
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateServicesOrchestrationResponseBody"
                },
                "example": {
                  "id": "Sint voluptatem vitae sint laborum alias id."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/services-orchestration/{id}": {
      "delete": {
        "tags": [
          "services-orchestration-api"
        ],
        "summary": "DeleteServicesOrchestration services-orchestration-api",
        "operationId": "services-orchestration-api#DeleteServicesOrchestration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the services orchestration",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Services Orchestration",
              "example": "Eaque dignissimos deleniti tempora."
            },
            "example": "so-12345678"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "services-orchestration-api"
        ],
        "summary": "DescribeServicesOrchestration services-orchestration-api",
        "operationId": "services-orchestration-api#DescribeServicesOrchestration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the services orchestration",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Services Orchestration",
              "example": "Dolorem expedita voluptatibus quaerat molestiae temporibus."
            },
            "example": "so-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeServicesOrchestrationResult"
                },
                "example": {
                  "ServicesTopology": [
                    {
                      "dependsOnDeployment": [
                        "instanceDeploymentAlias1",
                        "instanceDeploymentAlias2"
                      ],
                      "instanceDeploymentAlias": "instanceDeploymentAlias",
                      "instanceId": "i-12345678",
                      "serviceId": "s-12345678",
                      "status": "PENDING",
                      "statusMessage": "Creating deployment",
                      "subscriptionId": "Officia adipisci mollitia et."
                    },
                    {
                      "dependsOnDeployment": [
                        "instanceDeploymentAlias1",
                        "instanceDeploymentAlias2"
                      ],
                      "instanceDeploymentAlias": "instanceDeploymentAlias",
                      "instanceId": "i-12345678",
                      "serviceId": "s-12345678",
                      "status": "PENDING",
                      "statusMessage": "Creating deployment",
                      "subscriptionId": "Officia adipisci mollitia et."
                    }
                  ],
                  "createdAt": "2021-01-01T00:00:00Z",
                  "id": "so-12345678",
                  "orchestrationFailedReason": "Invalid DSL",
                  "resultParams": {
                    "param1": "value1",
                    "param2": "value2"
                  },
                  "status": "PENDING",
                  "updatedAt": "2021-01-01T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "services-orchestration-api"
        ],
        "summary": "ModifyServicesOrchestration services-orchestration-api",
        "operationId": "services-orchestration-api#ModifyServicesOrchestration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the services orchestration",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Services Orchestration",
              "example": "Incidunt odio cumque eaque sed."
            },
            "example": "so-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyServicesOrchestrationRequestBody"
              },
              "example": {
                "orchestrationModifyDSL": "Doloremque nobis eveniet animi."
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update a resource instance",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/subscription-users": {
      "get": {
        "tags": [
          "consumption-user-api"
        ],
        "summary": "ListAllSubscriptionUsers consumption-user-api",
        "operationId": "consumption-user-api#ListAllSubscriptionUsers",
        "parameters": [
          {
            "name": "environmentType",
            "in": "query",
            "description": "The environment type to filter by",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The type of service environment",
              "example": "PROD|PRIVATE|CANARY|STAGING|QA|DEV"
            },
            "example": "DEV"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllSubscriptionUsersResult"
                },
                "example": {
                  "subscriptionUsers": [
                    {
                      "email": "abc@gmail.com",
                      "name": "John Doe",
                      "roleType": "reader",
                      "userId": "user-abcd1234"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list all subscription users",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/subscription/{subscriptionId}/invite-user": {
      "post": {
        "tags": [
          "consumption-user-api"
        ],
        "summary": "InviteUser consumption-user-api",
        "operationId": "consumption-user-api#InviteUser",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The subscription ID",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequestBody"
              },
              "example": {
                "email": "abc@gmail.com",
                "roleType": "reader"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to invite user",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/subscription/{subscriptionId}/revoke-user-role": {
      "delete": {
        "tags": [
          "consumption-user-api"
        ],
        "summary": "RevokeUserRole consumption-user-api",
        "operationId": "consumption-user-api#RevokeUserRole",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The subscription ID",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequestBody"
              },
              "example": {
                "email": "abc@gmail.com",
                "roleType": "reader"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete user",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/subscription/{subscriptionId}/subscription-users": {
      "get": {
        "tags": [
          "consumption-user-api"
        ],
        "summary": "DescribeUsersBySubscription consumption-user-api",
        "operationId": "consumption-user-api#DescribeUsersBySubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The subscription ID",
              "example": "sub-abcd1234"
            },
            "example": "sub-abcd1234"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeUsersBySubscriptionResult"
                },
                "example": {
                  "Id": "sub-abcd1234",
                  "subscriptionUsers": [
                    {
                      "email": "abc@gmail.com",
                      "name": "John Doe",
                      "roleType": "reader",
                      "subscriptionId": "sub-abcd1234",
                      "userId": "user-abcd1234"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a user",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/user/{id}/billing-details": {
      "get": {
        "tags": [
          "consumption-user-api"
        ],
        "summary": "DescribeUserBillingDetails consumption-user-api",
        "operationId": "consumption-user-api#DescribeUserBillingDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a User",
              "example": "Rerum est."
            },
            "example": "user-abcd1234"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeUserBillingDetailsResult"
                },
                "example": {
                  "billingEmbedURL": "https://billing.provider.com/embed?customerId=cus_xxxxxxxxxxxxxx",
                  "name": "John Dae",
                  "paymentConfigured": true,
                  "paymentInfoPortalURL": "https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx",
                  "userId": "user-abcd1234"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a user",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/user/signin": {
      "post": {
        "tags": [
          "consumption-user-api"
        ],
        "summary": "Signin consumption-user-api",
        "operationId": "consumption-user-api#Signin",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumptionServiceAuthResult"
                },
                "example": {
                  "token": "m"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to signin",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/resource-instance/version": {
      "get": {
        "tags": [
          "global-api"
        ],
        "summary": "consumptionServiceVersion global-api",
        "description": "Consumption service version endpoint",
        "operationId": "global-api#consumptionServiceVersion",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OmnistrateServiceVersionResult"
                },
                "example": {
                  "apiVersion": "klb",
                  "buildCommitSHA": "1234567890abcdef1234567890abcdef12345678",
                  "buildTimestamp": "2020-01-01T00:00:00Z"
                }
              }
            }
          }
        }
      }
    },
    "/2022-09-01-00/revoke-user-role": {
      "delete": {
        "tags": [
          "users-api"
        ],
        "summary": "RevokeUserRole users-api",
        "operationId": "users-api#RevokeUserRole",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequestBody"
              },
              "example": {
                "email": "abc@gmail.com",
                "roleType": "reader"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete user",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/saas-portal": {
      "get": {
        "tags": [
          "saas-portal-api"
        ],
        "summary": "ListSaaSPortals saas-portal-api",
        "operationId": "saas-portal-api#ListSaaSPortals",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSaaSPortalsResult"
                },
                "example": {
                  "saasPortals": [
                    {
                      "customDomain": "mycustomdomain.com",
                      "customDomainStatus": "READY",
                      "detailedNetworkTopology": {
                        "r-abcd1234": {
                          "allowedIPRanges": [
                            "0.0.0.0/0"
                          ],
                          "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                          "clusterPorts": [
                            3306
                          ],
                          "main": true,
                          "networkingType": "PUBLIC",
                          "nodes": [
                            {
                              "availabilityZone": "us-east-2a",
                              "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                              "healthStatus": "healthy",
                              "id": "primary-0",
                              "ports": [
                                3306
                              ],
                              "status": "RUNNING"
                            }
                          ],
                          "privateNetworkCIDR": "10.0.0.2/24",
                          "privateNetworkID": "n-1234abcd",
                          "publiclyAccessible": true,
                          "resourceKey": "saasportal",
                          "resourceName": "SaaS Portal"
                        }
                      },
                      "emailConfig": {
                        "smtpFromEmail": "example@gmail.com",
                        "smtpHost": "smtp.gmail.com",
                        "smtpPassword": "password",
                        "smtpPort": 587,
                        "smtpUsername": "username"
                      },
                      "endpoint": "https://saas-portal.example.com",
                      "environmentType": "DEV",
                      "googleAnalyticsTagID": "G-123456789",
                      "imageConfig": {
                        "imageName": "myimage",
                        "imageRegistry": "ghcr.io",
                        "imageTag": "latest"
                      },
                      "status": "READY"
                    },
                    {
                      "customDomain": "mycustomdomain.com",
                      "customDomainStatus": "READY",
                      "detailedNetworkTopology": {
                        "r-abcd1234": {
                          "allowedIPRanges": [
                            "0.0.0.0/0"
                          ],
                          "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                          "clusterPorts": [
                            3306
                          ],
                          "main": true,
                          "networkingType": "PUBLIC",
                          "nodes": [
                            {
                              "availabilityZone": "us-east-2a",
                              "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                              "healthStatus": "healthy",
                              "id": "primary-0",
                              "ports": [
                                3306
                              ],
                              "status": "RUNNING"
                            }
                          ],
                          "privateNetworkCIDR": "10.0.0.2/24",
                          "privateNetworkID": "n-1234abcd",
                          "publiclyAccessible": true,
                          "resourceKey": "saasportal",
                          "resourceName": "SaaS Portal"
                        }
                      },
                      "emailConfig": {
                        "smtpFromEmail": "example@gmail.com",
                        "smtpHost": "smtp.gmail.com",
                        "smtpPassword": "password",
                        "smtpPort": 587,
                        "smtpUsername": "username"
                      },
                      "endpoint": "https://saas-portal.example.com",
                      "environmentType": "DEV",
                      "googleAnalyticsTagID": "G-123456789",
                      "imageConfig": {
                        "imageName": "myimage",
                        "imageRegistry": "ghcr.io",
                        "imageTag": "latest"
                      },
                      "status": "READY"
                    },
                    {
                      "customDomain": "mycustomdomain.com",
                      "customDomainStatus": "READY",
                      "detailedNetworkTopology": {
                        "r-abcd1234": {
                          "allowedIPRanges": [
                            "0.0.0.0/0"
                          ],
                          "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                          "clusterPorts": [
                            3306
                          ],
                          "main": true,
                          "networkingType": "PUBLIC",
                          "nodes": [
                            {
                              "availabilityZone": "us-east-2a",
                              "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                              "healthStatus": "healthy",
                              "id": "primary-0",
                              "ports": [
                                3306
                              ],
                              "status": "RUNNING"
                            }
                          ],
                          "privateNetworkCIDR": "10.0.0.2/24",
                          "privateNetworkID": "n-1234abcd",
                          "publiclyAccessible": true,
                          "resourceKey": "saasportal",
                          "resourceName": "SaaS Portal"
                        }
                      },
                      "emailConfig": {
                        "smtpFromEmail": "example@gmail.com",
                        "smtpHost": "smtp.gmail.com",
                        "smtpPassword": "password",
                        "smtpPort": 587,
                        "smtpUsername": "username"
                      },
                      "endpoint": "https://saas-portal.example.com",
                      "environmentType": "DEV",
                      "googleAnalyticsTagID": "G-123456789",
                      "imageConfig": {
                        "imageName": "myimage",
                        "imageRegistry": "ghcr.io",
                        "imageTag": "latest"
                      },
                      "status": "READY"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list saas portals",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/saas-portal-custom-domain": {
      "get": {
        "tags": [
          "saas-portal-api"
        ],
        "summary": "ListSaaSPortalCustomDomains saas-portal-api",
        "operationId": "saas-portal-api#ListSaaSPortalCustomDomains",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSaaSPortalCustomDomainsResult"
                },
                "example": {
                  "customDomains": [
                    {
                      "clusterEndpoint": "example.com",
                      "customDomain": "mycustomdomain.com",
                      "description": "My custom domain description",
                      "environmentType": "DEV",
                      "name": "MyCustomDomain",
                      "status": "READY"
                    },
                    {
                      "clusterEndpoint": "example.com",
                      "customDomain": "mycustomdomain.com",
                      "description": "My custom domain description",
                      "environmentType": "DEV",
                      "name": "MyCustomDomain",
                      "status": "READY"
                    },
                    {
                      "clusterEndpoint": "example.com",
                      "customDomain": "mycustomdomain.com",
                      "description": "My custom domain description",
                      "environmentType": "DEV",
                      "name": "MyCustomDomain",
                      "status": "READY"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list saas portal custom domains",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "saas-portal-api"
        ],
        "summary": "CreateSaaSPortalCustomDomain saas-portal-api",
        "operationId": "saas-portal-api#CreateSaaSPortalCustomDomain",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaaSPortalCustomDomainRequestBody"
              },
              "example": {
                "customDomain": "mycustomdomain.com",
                "description": "My custom domain description",
                "environmentType": "DEV",
                "name": "MyCustomDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create saas portal custom domain",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/saas-portal-custom-domain/{environmentType}": {
      "delete": {
        "tags": [
          "saas-portal-api"
        ],
        "summary": "DeleteSaaSPortalCustomDomain saas-portal-api",
        "operationId": "saas-portal-api#DeleteSaaSPortalCustomDomain",
        "parameters": [
          {
            "name": "environmentType",
            "in": "path",
            "description": "The environment type for the custom domain",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The type of service environment",
              "example": "PROD|PRIVATE|CANARY|STAGING|QA|DEV"
            },
            "example": "DEV"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete saas portal custom domains",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "saas-portal-api"
        ],
        "summary": "UpdateSaaSPortalCustomDomain saas-portal-api",
        "operationId": "saas-portal-api#UpdateSaaSPortalCustomDomain",
        "parameters": [
          {
            "name": "environmentType",
            "in": "path",
            "description": "The environment type for the saas portal custom domain to update",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The type of service environment",
              "example": "PROD|PRIVATE|CANARY|STAGING|QA|DEV"
            },
            "example": "DEV"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSaaSPortalCustomDomainRequestBody"
              },
              "example": {
                "customDomain": "mycustomdomain.com",
                "description": "My custom domain description",
                "name": "MyCustomDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update saas portal custom domain",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/saas-portal/{environmentType}": {
      "patch": {
        "tags": [
          "saas-portal-api"
        ],
        "summary": "UpdateSaaSPortal saas-portal-api",
        "operationId": "saas-portal-api#UpdateSaaSPortal",
        "parameters": [
          {
            "name": "environmentType",
            "in": "path",
            "description": "The environment type for the saas portal custom domain to update",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The type of service environment",
              "example": "PROD|PRIVATE|CANARY|STAGING|QA|DEV"
            },
            "example": "DEV"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSaaSPortalRequestBody"
              },
              "example": {
                "customDomain": "mycustomdomain.com",
                "emailConfig": {
                  "smtpFromEmail": "example@gmail.com",
                  "smtpHost": "smtp.gmail.com",
                  "smtpPassword": "password",
                  "smtpPort": 587,
                  "smtpUsername": "username"
                },
                "googleAnalyticsTagID": "G-123456789",
                "imageConfig": {
                  "imageName": "myimage",
                  "imageRegistry": "ghcr.io",
                  "imageTag": "latest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update saas portal",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service": {
      "get": {
        "tags": [
          "service-api"
        ],
        "summary": "ListService service-api",
        "operationId": "service-api#ListService",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceResult"
                },
                "example": {
                  "ids": [
                    "s-12345678",
                    "s-abcdefgh",
                    "s-1234efgh"
                  ],
                  "nextPageToken": "next-token",
                  "services": [
                    {
                      "createdAt": "2019-01-01T00:00:00Z",
                      "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                      "id": "s-12345678",
                      "key": "mysql",
                      "name": "MySQL multi-writer service",
                      "roleType": "admin",
                      "serviceEnvironments": [
                        {
                          "id": "se-12345678",
                          "name": "dev",
                          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                          "saasPortalStatus": "READY",
                          "saasPortalUrl": "https://saas-portal.example.com",
                          "servicePlans": [
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            }
                          ],
                          "sourceEnvironmentID": "se-12345678",
                          "sourceEnvironmentName": "dev",
                          "type": "DEV",
                          "visibility": "private"
                        },
                        {
                          "id": "se-12345678",
                          "name": "dev",
                          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                          "saasPortalStatus": "READY",
                          "saasPortalUrl": "https://saas-portal.example.com",
                          "servicePlans": [
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            }
                          ],
                          "sourceEnvironmentID": "se-12345678",
                          "sourceEnvironmentName": "dev",
                          "type": "DEV",
                          "visibility": "private"
                        },
                        {
                          "id": "se-12345678",
                          "name": "dev",
                          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                          "saasPortalStatus": "READY",
                          "saasPortalUrl": "https://saas-portal.example.com",
                          "servicePlans": [
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            }
                          ],
                          "sourceEnvironmentID": "se-12345678",
                          "sourceEnvironmentName": "dev",
                          "type": "DEV",
                          "visibility": "private"
                        },
                        {
                          "id": "se-12345678",
                          "name": "dev",
                          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                          "saasPortalStatus": "READY",
                          "saasPortalUrl": "https://saas-portal.example.com",
                          "servicePlans": [
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            }
                          ],
                          "sourceEnvironmentID": "se-12345678",
                          "sourceEnvironmentName": "dev",
                          "type": "DEV",
                          "visibility": "private"
                        }
                      ],
                      "serviceLogoURL": "Aliquid pariatur molestiae quod unde.",
                      "serviceProviderID": "sp-12345678",
                      "serviceProviderName": "Omnistrate, Inc."
                    },
                    {
                      "createdAt": "2019-01-01T00:00:00Z",
                      "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                      "id": "s-12345678",
                      "key": "mysql",
                      "name": "MySQL multi-writer service",
                      "roleType": "admin",
                      "serviceEnvironments": [
                        {
                          "id": "se-12345678",
                          "name": "dev",
                          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                          "saasPortalStatus": "READY",
                          "saasPortalUrl": "https://saas-portal.example.com",
                          "servicePlans": [
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            }
                          ],
                          "sourceEnvironmentID": "se-12345678",
                          "sourceEnvironmentName": "dev",
                          "type": "DEV",
                          "visibility": "private"
                        },
                        {
                          "id": "se-12345678",
                          "name": "dev",
                          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                          "saasPortalStatus": "READY",
                          "saasPortalUrl": "https://saas-portal.example.com",
                          "servicePlans": [
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            }
                          ],
                          "sourceEnvironmentID": "se-12345678",
                          "sourceEnvironmentName": "dev",
                          "type": "DEV",
                          "visibility": "private"
                        },
                        {
                          "id": "se-12345678",
                          "name": "dev",
                          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                          "saasPortalStatus": "READY",
                          "saasPortalUrl": "https://saas-portal.example.com",
                          "servicePlans": [
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            }
                          ],
                          "sourceEnvironmentID": "se-12345678",
                          "sourceEnvironmentName": "dev",
                          "type": "DEV",
                          "visibility": "private"
                        },
                        {
                          "id": "se-12345678",
                          "name": "dev",
                          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                          "saasPortalStatus": "READY",
                          "saasPortalUrl": "https://saas-portal.example.com",
                          "servicePlans": [
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            }
                          ],
                          "sourceEnvironmentID": "se-12345678",
                          "sourceEnvironmentName": "dev",
                          "type": "DEV",
                          "visibility": "private"
                        }
                      ],
                      "serviceLogoURL": "Aliquid pariatur molestiae quod unde.",
                      "serviceProviderID": "sp-12345678",
                      "serviceProviderName": "Omnistrate, Inc."
                    },
                    {
                      "createdAt": "2019-01-01T00:00:00Z",
                      "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                      "id": "s-12345678",
                      "key": "mysql",
                      "name": "MySQL multi-writer service",
                      "roleType": "admin",
                      "serviceEnvironments": [
                        {
                          "id": "se-12345678",
                          "name": "dev",
                          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                          "saasPortalStatus": "READY",
                          "saasPortalUrl": "https://saas-portal.example.com",
                          "servicePlans": [
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            }
                          ],
                          "sourceEnvironmentID": "se-12345678",
                          "sourceEnvironmentName": "dev",
                          "type": "DEV",
                          "visibility": "private"
                        },
                        {
                          "id": "se-12345678",
                          "name": "dev",
                          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                          "saasPortalStatus": "READY",
                          "saasPortalUrl": "https://saas-portal.example.com",
                          "servicePlans": [
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            }
                          ],
                          "sourceEnvironmentID": "se-12345678",
                          "sourceEnvironmentName": "dev",
                          "type": "DEV",
                          "visibility": "private"
                        },
                        {
                          "id": "se-12345678",
                          "name": "dev",
                          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                          "saasPortalStatus": "READY",
                          "saasPortalUrl": "https://saas-portal.example.com",
                          "servicePlans": [
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            }
                          ],
                          "sourceEnvironmentID": "se-12345678",
                          "sourceEnvironmentName": "dev",
                          "type": "DEV",
                          "visibility": "private"
                        },
                        {
                          "id": "se-12345678",
                          "name": "dev",
                          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                          "saasPortalStatus": "READY",
                          "saasPortalUrl": "https://saas-portal.example.com",
                          "servicePlans": [
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            },
                            {
                              "description": "A Basic product tier",
                              "modelType": "CUSTOMER_HOSTED",
                              "name": "Basic",
                              "productTierID": "pt-12345678",
                              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                            }
                          ],
                          "sourceEnvironmentID": "se-12345678",
                          "sourceEnvironmentName": "dev",
                          "type": "DEV",
                          "visibility": "private"
                        }
                      ],
                      "serviceLogoURL": "Aliquid pariatur molestiae quod unde.",
                      "serviceProviderID": "sp-12345678",
                      "serviceProviderName": "Omnistrate, Inc."
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list services",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "service-api"
        ],
        "summary": "CreateService service-api",
        "operationId": "service-api#CreateService",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceRequestBody"
              },
              "example": {
                "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                "name": "MySQL multi-writer service",
                "serviceLogoURL": "http://walter.name/arden"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Service ID created",
                  "example": "s-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "s-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a service",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service-offering": {
      "get": {
        "tags": [
          "service-offering-api"
        ],
        "summary": "ListServiceOffering service-offering-api",
        "operationId": "service-offering-api#ListServiceOffering",
        "parameters": [
          {
            "name": "orgId",
            "in": "query",
            "description": "Org Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of an Org",
              "example": "Doloribus ipsum."
            },
            "example": "org-12345678"
          },
          {
            "name": "visibility",
            "in": "query",
            "description": "The visibility of service offering",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "This parameter is used to configure the visibility of the service control-plane APIs",
              "example": "PUBLIC"
            },
            "example": "PRIVATE"
          },
          {
            "name": "environmentType",
            "in": "query",
            "description": "The environment type to filter by",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The type of service environment",
              "example": "PROD|PRIVATE|CANARY|STAGING|QA|DEV"
            },
            "example": "DEV"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceOfferingsResult"
                },
                "example": {
                  "nextPageToken": "next-token",
                  "serviceIds": [
                    "s-12345678",
                    "s-abcdefgh"
                  ],
                  "services": [
                    {
                      "createdAt": "2019-01-01T00:00:00Z",
                      "isDeprecated": false,
                      "offerings": [
                        {
                          "assets": {
                            "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                            "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                          },
                          "billingPlans": [
                            {
                              "maxNumberofInstances": 4
                            }
                          ],
                          "productTierName": "Premium",
                          "productTierURLKey": "premium",
                          "resourceParameters": [
                            {
                              "name": "MySQL",
                              "urlKey": "mysql"
                            },
                            {
                              "name": "Redis",
                              "urlKey": "redis"
                            }
                          ],
                          "serviceAPIID": "sa-12345678",
                          "serviceAPIVersion": "v1",
                          "serviceEnvironmentName": "Production",
                          "serviceEnvironmentURLKey": "prod",
                          "serviceEnvironmentVisibility": "PRIVATE",
                          "serviceModelName": "Bring Your Own Account",
                          "serviceModelURLKey": "byoa"
                        },
                        {
                          "productTierName": "Basic",
                          "productTierURLKey": "basic",
                          "resourceParameters": [
                            {
                              "name": "MySQL",
                              "urlKey": "mysql"
                            },
                            {
                              "name": "Redis",
                              "urlKey": "redis"
                            }
                          ],
                          "serviceAPIID": "sa-abcdefgh",
                          "serviceAPIVersion": "v1",
                          "serviceEnvironmentName": "Production",
                          "serviceEnvironmentURLKey": "prod",
                          "serviceEnvironmentVisibility": "PUBLIC",
                          "serviceModelName": "Hosted",
                          "serviceModelURLKey": "hosted"
                        }
                      ],
                      "serviceDescription": "MySQL is a relational database",
                      "serviceId": "s-12345678",
                      "serviceName": "MySQL",
                      "serviceOrgId": "org-12345678",
                      "serviceProviderId": "sp-9zrg9W8Are",
                      "serviceProviderName": "Omnistrate, Inc.",
                      "serviceURLKey": "mysql"
                    },
                    {
                      "createdAt": "2019-01-01T00:00:00Z",
                      "isDeprecated": false,
                      "offerings": [
                        {
                          "assets": {
                            "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                            "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                          },
                          "billingPlans": [
                            {
                              "maxNumberofInstances": 4
                            }
                          ],
                          "productTierName": "Premium",
                          "productTierURLKey": "premium",
                          "resourceParameters": [
                            {
                              "name": "MySQL",
                              "urlKey": "mysql"
                            },
                            {
                              "name": "Redis",
                              "urlKey": "redis"
                            }
                          ],
                          "serviceAPIID": "sa-12345678",
                          "serviceAPIVersion": "v1",
                          "serviceEnvironmentName": "Production",
                          "serviceEnvironmentURLKey": "prod",
                          "serviceEnvironmentVisibility": "PRIVATE",
                          "serviceModelName": "Bring Your Own Account",
                          "serviceModelURLKey": "byoa"
                        },
                        {
                          "productTierName": "Basic",
                          "productTierURLKey": "basic",
                          "resourceParameters": [
                            {
                              "name": "MySQL",
                              "urlKey": "mysql"
                            },
                            {
                              "name": "Redis",
                              "urlKey": "redis"
                            }
                          ],
                          "serviceAPIID": "sa-abcdefgh",
                          "serviceAPIVersion": "v1",
                          "serviceEnvironmentName": "Production",
                          "serviceEnvironmentURLKey": "prod",
                          "serviceEnvironmentVisibility": "PUBLIC",
                          "serviceModelName": "Hosted",
                          "serviceModelURLKey": "hosted"
                        }
                      ],
                      "serviceDescription": "MySQL is a relational database",
                      "serviceId": "s-12345678",
                      "serviceName": "MySQL",
                      "serviceOrgId": "org-12345678",
                      "serviceProviderId": "sp-9zrg9W8Are",
                      "serviceProviderName": "Omnistrate, Inc.",
                      "serviceURLKey": "mysql"
                    },
                    {
                      "createdAt": "2019-01-01T00:00:00Z",
                      "isDeprecated": false,
                      "offerings": [
                        {
                          "assets": {
                            "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                            "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                          },
                          "billingPlans": [
                            {
                              "maxNumberofInstances": 4
                            }
                          ],
                          "productTierName": "Premium",
                          "productTierURLKey": "premium",
                          "resourceParameters": [
                            {
                              "name": "MySQL",
                              "urlKey": "mysql"
                            },
                            {
                              "name": "Redis",
                              "urlKey": "redis"
                            }
                          ],
                          "serviceAPIID": "sa-12345678",
                          "serviceAPIVersion": "v1",
                          "serviceEnvironmentName": "Production",
                          "serviceEnvironmentURLKey": "prod",
                          "serviceEnvironmentVisibility": "PRIVATE",
                          "serviceModelName": "Bring Your Own Account",
                          "serviceModelURLKey": "byoa"
                        },
                        {
                          "productTierName": "Basic",
                          "productTierURLKey": "basic",
                          "resourceParameters": [
                            {
                              "name": "MySQL",
                              "urlKey": "mysql"
                            },
                            {
                              "name": "Redis",
                              "urlKey": "redis"
                            }
                          ],
                          "serviceAPIID": "sa-abcdefgh",
                          "serviceAPIVersion": "v1",
                          "serviceEnvironmentName": "Production",
                          "serviceEnvironmentURLKey": "prod",
                          "serviceEnvironmentVisibility": "PUBLIC",
                          "serviceModelName": "Hosted",
                          "serviceModelURLKey": "hosted"
                        }
                      ],
                      "serviceDescription": "MySQL is a relational database",
                      "serviceId": "s-12345678",
                      "serviceName": "MySQL",
                      "serviceOrgId": "org-12345678",
                      "serviceProviderId": "sp-9zrg9W8Are",
                      "serviceProviderName": "Omnistrate, Inc.",
                      "serviceURLKey": "mysql"
                    },
                    {
                      "createdAt": "2019-01-01T00:00:00Z",
                      "isDeprecated": false,
                      "offerings": [
                        {
                          "assets": {
                            "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                            "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                          },
                          "billingPlans": [
                            {
                              "maxNumberofInstances": 4
                            }
                          ],
                          "productTierName": "Premium",
                          "productTierURLKey": "premium",
                          "resourceParameters": [
                            {
                              "name": "MySQL",
                              "urlKey": "mysql"
                            },
                            {
                              "name": "Redis",
                              "urlKey": "redis"
                            }
                          ],
                          "serviceAPIID": "sa-12345678",
                          "serviceAPIVersion": "v1",
                          "serviceEnvironmentName": "Production",
                          "serviceEnvironmentURLKey": "prod",
                          "serviceEnvironmentVisibility": "PRIVATE",
                          "serviceModelName": "Bring Your Own Account",
                          "serviceModelURLKey": "byoa"
                        },
                        {
                          "productTierName": "Basic",
                          "productTierURLKey": "basic",
                          "resourceParameters": [
                            {
                              "name": "MySQL",
                              "urlKey": "mysql"
                            },
                            {
                              "name": "Redis",
                              "urlKey": "redis"
                            }
                          ],
                          "serviceAPIID": "sa-abcdefgh",
                          "serviceAPIVersion": "v1",
                          "serviceEnvironmentName": "Production",
                          "serviceEnvironmentURLKey": "prod",
                          "serviceEnvironmentVisibility": "PUBLIC",
                          "serviceModelName": "Hosted",
                          "serviceModelURLKey": "hosted"
                        }
                      ],
                      "serviceDescription": "MySQL is a relational database",
                      "serviceId": "s-12345678",
                      "serviceName": "MySQL",
                      "serviceOrgId": "org-12345678",
                      "serviceProviderId": "sp-9zrg9W8Are",
                      "serviceProviderName": "Omnistrate, Inc.",
                      "serviceURLKey": "mysql"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list service offerings",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service-offering/{serviceId}": {
      "get": {
        "tags": [
          "service-offering-api"
        ],
        "summary": "DescribeServiceOffering service-offering-api",
        "operationId": "service-offering-api#DescribeServiceOffering",
        "parameters": [
          {
            "name": "visibility",
            "in": "query",
            "description": "The visibility of service offering",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "This parameter is used to configure the visibility of the service control-plane APIs",
              "example": "PUBLIC"
            },
            "example": "PRIVATE"
          },
          {
            "name": "environmentType",
            "in": "query",
            "description": "The environment type to filter by",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The type of service environment",
              "example": "PROD|PRIVATE|CANARY|STAGING|QA|DEV"
            },
            "example": "DEV"
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeServiceOfferingResult"
                },
                "example": {
                  "createdAt": "2019-01-01T00:00:00Z",
                  "isDeprecated": false,
                  "offerings": [
                    {
                      "assets": {
                        "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                        "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                      },
                      "billingPlans": [
                        {
                          "maxNumberofInstances": 4
                        }
                      ],
                      "productTierName": "Premium",
                      "productTierURLKey": "premium",
                      "resourceParameters": [
                        {
                          "name": "MySQL",
                          "urlKey": "mysql"
                        },
                        {
                          "name": "Redis",
                          "urlKey": "redis"
                        }
                      ],
                      "serviceAPIID": "sa-12345678",
                      "serviceAPIVersion": "v1",
                      "serviceEnvironmentName": "Production",
                      "serviceEnvironmentURLKey": "prod",
                      "serviceEnvironmentVisibility": "PRIVATE",
                      "serviceModelName": "Bring Your Own Account",
                      "serviceModelURLKey": "byoa"
                    },
                    {
                      "productTierName": "Basic",
                      "productTierURLKey": "basic",
                      "resourceParameters": [
                        {
                          "name": "MySQL",
                          "urlKey": "mysql"
                        },
                        {
                          "name": "Redis",
                          "urlKey": "redis"
                        }
                      ],
                      "serviceAPIID": "sa-abcdefgh",
                      "serviceAPIVersion": "v1",
                      "serviceEnvironmentName": "Production",
                      "serviceEnvironmentURLKey": "prod",
                      "serviceEnvironmentVisibility": "PUBLIC",
                      "serviceModelName": "Hosted",
                      "serviceModelURLKey": "hosted"
                    }
                  ],
                  "serviceDescription": "MySQL is a relational database",
                  "serviceId": "s-12345678",
                  "serviceName": "MySQL",
                  "serviceOrgId": "org-12345678",
                  "serviceProviderId": "sp-9zrg9W8Are",
                  "serviceProviderName": "Omnistrate, Inc.",
                  "serviceURLKey": "mysql"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a service offering",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service-offering/{serviceId}/resource/{resourceId}/instance/{instanceId}": {
      "get": {
        "tags": [
          "service-offering-api"
        ],
        "summary": "DescribeServiceOfferingResource service-offering-api",
        "operationId": "service-offering-api#DescribeServiceOfferingResource",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "The resource ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Doloribus doloremque quia molestias."
            },
            "example": "r-12345678"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The instance ID",
              "default": "none",
              "example": "instance-12345678"
            },
            "example": "instance-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeServiceOfferingResourceResult"
                },
                "example": {
                  "apis": [
                    {
                      "inputParameters": [
                        {
                          "defaultValue": null,
                          "description": "The name of the server",
                          "displayName": "Server Name",
                          "isList": false,
                          "key": "serverName",
                          "modifiable": true,
                          "options": null,
                          "required": true,
                          "type": "string"
                        },
                        {
                          "defaultValue": "option1",
                          "description": "The type of the server",
                          "displayName": "Server Type",
                          "isList": false,
                          "key": "serverType",
                          "modifiable": true,
                          "options": [
                            "option1",
                            "option2"
                          ],
                          "required": true,
                          "type": "string"
                        }
                      ],
                      "outputParameters": [
                        {
                          "description": "The name of the server",
                          "displayName": "Server Name",
                          "isList": false,
                          "key": "serverName",
                          "type": "string"
                        },
                        {
                          "description": "The type of the server",
                          "displayName": "Server Type",
                          "isList": false,
                          "key": "serverType",
                          "type": "string"
                        }
                      ],
                      "verb": "create"
                    },
                    {
                      "inputParameters": [
                        {
                          "defaultValue": null,
                          "description": "The name of the server",
                          "displayName": "Server Name",
                          "isList": false,
                          "key": "serverName",
                          "modifiable": true,
                          "options": null,
                          "required": true,
                          "type": "string"
                        }
                      ],
                      "outputParameters": [
                        {
                          "description": "The name of the server",
                          "displayName": "Server Name",
                          "isList": false,
                          "key": "serverName",
                          "type": "string"
                        },
                        {
                          "description": "The type of the server",
                          "displayName": "Server Type",
                          "isList": false,
                          "key": "serverType",
                          "type": "string"
                        }
                      ],
                      "verb": "describe"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a service offering resource",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{id}": {
      "delete": {
        "tags": [
          "service-api"
        ],
        "summary": "DeleteService service-api",
        "operationId": "service-api#DeleteService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The service ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a service",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "service-api"
        ],
        "summary": "DescribeService service-api",
        "operationId": "service-api#DescribeService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The service ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeServiceResult"
                },
                "example": {
                  "createdAt": "2019-01-01T00:00:00Z",
                  "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                  "id": "s-12345678",
                  "key": "mysql",
                  "name": "MySQL multi-writer service",
                  "roleType": "admin",
                  "serviceEnvironments": [
                    {
                      "id": "se-12345678",
                      "name": "dev",
                      "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                      "saasPortalStatus": "READY",
                      "saasPortalUrl": "https://saas-portal.example.com",
                      "servicePlans": [
                        {
                          "description": "A Basic product tier",
                          "modelType": "CUSTOMER_HOSTED",
                          "name": "Basic",
                          "productTierID": "pt-12345678",
                          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                        },
                        {
                          "description": "A Basic product tier",
                          "modelType": "CUSTOMER_HOSTED",
                          "name": "Basic",
                          "productTierID": "pt-12345678",
                          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                        },
                        {
                          "description": "A Basic product tier",
                          "modelType": "CUSTOMER_HOSTED",
                          "name": "Basic",
                          "productTierID": "pt-12345678",
                          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                        }
                      ],
                      "sourceEnvironmentID": "se-12345678",
                      "sourceEnvironmentName": "dev",
                      "type": "DEV",
                      "visibility": "private"
                    },
                    {
                      "id": "se-12345678",
                      "name": "dev",
                      "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                      "saasPortalStatus": "READY",
                      "saasPortalUrl": "https://saas-portal.example.com",
                      "servicePlans": [
                        {
                          "description": "A Basic product tier",
                          "modelType": "CUSTOMER_HOSTED",
                          "name": "Basic",
                          "productTierID": "pt-12345678",
                          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                        },
                        {
                          "description": "A Basic product tier",
                          "modelType": "CUSTOMER_HOSTED",
                          "name": "Basic",
                          "productTierID": "pt-12345678",
                          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                        },
                        {
                          "description": "A Basic product tier",
                          "modelType": "CUSTOMER_HOSTED",
                          "name": "Basic",
                          "productTierID": "pt-12345678",
                          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                        }
                      ],
                      "sourceEnvironmentID": "se-12345678",
                      "sourceEnvironmentName": "dev",
                      "type": "DEV",
                      "visibility": "private"
                    },
                    {
                      "id": "se-12345678",
                      "name": "dev",
                      "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                      "saasPortalStatus": "READY",
                      "saasPortalUrl": "https://saas-portal.example.com",
                      "servicePlans": [
                        {
                          "description": "A Basic product tier",
                          "modelType": "CUSTOMER_HOSTED",
                          "name": "Basic",
                          "productTierID": "pt-12345678",
                          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                        },
                        {
                          "description": "A Basic product tier",
                          "modelType": "CUSTOMER_HOSTED",
                          "name": "Basic",
                          "productTierID": "pt-12345678",
                          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                        },
                        {
                          "description": "A Basic product tier",
                          "modelType": "CUSTOMER_HOSTED",
                          "name": "Basic",
                          "productTierID": "pt-12345678",
                          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                        }
                      ],
                      "sourceEnvironmentID": "se-12345678",
                      "sourceEnvironmentName": "dev",
                      "type": "DEV",
                      "visibility": "private"
                    },
                    {
                      "id": "se-12345678",
                      "name": "dev",
                      "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                      "saasPortalStatus": "READY",
                      "saasPortalUrl": "https://saas-portal.example.com",
                      "servicePlans": [
                        {
                          "description": "A Basic product tier",
                          "modelType": "CUSTOMER_HOSTED",
                          "name": "Basic",
                          "productTierID": "pt-12345678",
                          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                        },
                        {
                          "description": "A Basic product tier",
                          "modelType": "CUSTOMER_HOSTED",
                          "name": "Basic",
                          "productTierID": "pt-12345678",
                          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                        },
                        {
                          "description": "A Basic product tier",
                          "modelType": "CUSTOMER_HOSTED",
                          "name": "Basic",
                          "productTierID": "pt-12345678",
                          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                        }
                      ],
                      "sourceEnvironmentID": "se-12345678",
                      "sourceEnvironmentName": "dev",
                      "type": "DEV",
                      "visibility": "private"
                    }
                  ],
                  "serviceLogoURL": "Incidunt cupiditate quis voluptatem.",
                  "serviceProviderID": "sp-12345678",
                  "serviceProviderName": "Omnistrate, Inc."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a service",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "service-api"
        ],
        "summary": "UpdateService service-api",
        "operationId": "service-api#UpdateService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The service ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceRequestBody"
              },
              "example": {
                "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                "name": "MySQL multi-writer service",
                "serviceLogoURL": "Autem enim dolorum velit ea id."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update a service",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{id}/health": {
      "get": {
        "tags": [
          "service-api"
        ],
        "summary": "ServiceHealth service-api",
        "operationId": "service-api#ServiceHealth",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportHealthResult"
                },
                "example": {
                  "health": "UP",
                  "id": "s-12345678",
                  "report": {
                    "se-12345678": {
                      "sm-12345678": {
                        "vu-11111111": "UNKNOWN",
                        "vu-12345678": "UP",
                        "vu-87654321": "DOWN"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to get service health",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/compute-config": {
      "get": {
        "tags": [
          "compute-config-api"
        ],
        "summary": "ListComputeConfig compute-config-api",
        "operationId": "compute-config-api#ListComputeConfig",
        "parameters": [
          {
            "name": "managed",
            "in": "query",
            "description": "Is compute config managed by omnistrate",
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "description": "Is compute config managed by omnistrate",
              "example": false
            },
            "example": false
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "cc-12345678",
                    "cc-abcdefgh",
                    "cc-1234efgh"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list compute configs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "compute-config-api"
        ],
        "summary": "CreateComputeConfig compute-config-api",
        "operationId": "compute-config-api#CreateComputeConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComputeConfigRequestBody"
              },
              "example": {
                "autoscalingPolicy": {
                  "maxReplicas": 4,
                  "minReplicas": 1
                },
                "cpuArchitecture": "X86_64|ARM64",
                "description": "my compute config description",
                "name": "my compute config",
                "replicaCount": "3",
                "resources": {
                  "limits": {
                    "cpu": "1",
                    "memory": "500Mi"
                  },
                  "requests": {
                    "cpu": "0.5",
                    "memory": "200Mi"
                  }
                },
                "rootVolumeSizeGi": 10,
                "warmPoolConfiguration": {
                  "minimumNodesInPool": 1
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Compute Config ID created",
                  "example": "cc-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "cc-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create compute config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/compute-config/{id}": {
      "delete": {
        "tags": [
          "compute-config-api"
        ],
        "summary": "DeleteComputeConfig compute-config-api",
        "operationId": "compute-config-api#DeleteComputeConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the compute config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Compute Config",
              "example": "Beatae totam."
            },
            "example": "cc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a compute config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "compute-config-api"
        ],
        "summary": "DescribeComputeConfig compute-config-api",
        "operationId": "compute-config-api#DescribeComputeConfig",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the compute config to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the compute config to describe. If not specified, the latest version is described.",
              "example": "Minus qui."
            },
            "example": "Placeat exercitationem sunt incidunt minus at et."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "ProductTierId of the compute config to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Aut qui asperiores impedit."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the compute config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Compute Config",
              "example": "Itaque natus voluptas qui ut."
            },
            "example": "cc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeComputeConfigResult"
                },
                "example": {
                  "autoscalingPolicy": {
                    "maxReplicas": 4,
                    "minReplicas": 1
                  },
                  "cpuArchitecture": "X86_64|ARM64",
                  "description": "my compute config description",
                  "id": "cc-12345678",
                  "infraConfigIDs": [
                    "ic-12345678",
                    "ic-abcdefgh"
                  ],
                  "instanceTypes": {
                    "aws": [
                      "t3.micro",
                      "t3.small"
                    ],
                    "azure": [
                      "Standard_B1ls",
                      "Standard_B1ms"
                    ],
                    "gcp": [
                      "$var.instance_type"
                    ]
                  },
                  "name": "my compute config",
                  "replicaCount": "3",
                  "resources": {
                    "limits": {
                      "cpu": "1",
                      "memory": "500Mi"
                    },
                    "requests": {
                      "cpu": "0.5",
                      "memory": "200Mi"
                    }
                  },
                  "rootVolumeSizeGi": 10,
                  "serviceId": "s-12345678",
                  "warmPoolConfiguration": {
                    "minimumNodesInPool": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe compute config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "compute-config-api"
        ],
        "summary": "UpdateComputeConfig compute-config-api",
        "operationId": "compute-config-api#UpdateComputeConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the compute config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Compute Config",
              "example": "Cum eum ut vero assumenda expedita."
            },
            "example": "cc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComputeConfigRequestBody"
              },
              "example": {
                "autoscalingPolicy": {
                  "maxReplicas": 4,
                  "minReplicas": 1
                },
                "cpuArchitecture": "X86_64|ARM64",
                "description": "my compute config description",
                "name": "my compute config",
                "replicaCount": "3",
                "resources": {
                  "limits": {
                    "cpu": "1",
                    "memory": "500Mi"
                  },
                  "requests": {
                    "cpu": "0.5",
                    "memory": "200Mi"
                  }
                },
                "rootVolumeSizeGi": 10,
                "warmPoolConfiguration": {
                  "minimumNodesInPool": 1
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update compute config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/compute-config/{id}/instance-type": {
      "delete": {
        "tags": [
          "compute-config-api"
        ],
        "summary": "RemoveComputeInstanceType compute-config-api",
        "operationId": "compute-config-api#RemoveComputeInstanceType",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the compute config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Compute Config",
              "example": "Ut totam dolorem."
            },
            "example": "cc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddComputeInstanceTypeRequestBody"
              },
              "example": {
                "cloudProviderName": "aws",
                "instanceType": "t3.micro"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to remove compute instance type",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "compute-config-api"
        ],
        "summary": "AddComputeInstanceType compute-config-api",
        "operationId": "compute-config-api#AddComputeInstanceType",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the compute config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Compute Config",
              "example": "Recusandae laudantium accusantium voluptas reiciendis sit deleniti."
            },
            "example": "cc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddComputeInstanceTypeRequestBody"
              },
              "example": {
                "cloudProviderName": "aws",
                "instanceType": "t3.micro"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to add compute instance type",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/compute-config/cloud-provider/{cloudProviderName}/instance-types": {
      "get": {
        "tags": [
          "compute-config-api"
        ],
        "summary": "ListComputeInstanceTypes compute-config-api",
        "operationId": "compute-config-api#ListComputeInstanceTypes",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "cloudProviderName",
            "in": "path",
            "description": "The cloud provider for this compute instance type config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the Infra Provider",
              "example": "aws|azure|gcp|all"
            },
            "example": "aws"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListComputeInstanceTypesResult"
                },
                "example": {
                  "nextPageToken": "next-token",
                  "types": [
                    "m5.xlarge",
                    "c5.xlarge",
                    "r5.xlarge"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list compute instance types",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/environment": {
      "get": {
        "tags": [
          "service-environment-api"
        ],
        "summary": "ListServiceEnvironment service-environment-api",
        "operationId": "service-environment-api#ListServiceEnvironment",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service this environment belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "se-12345678",
                    "se-23456789"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list service environments",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "service-environment-api"
        ],
        "summary": "CreateServiceEnvironment service-environment-api",
        "operationId": "service-environment-api#CreateServiceEnvironment",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service this environment belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceEnvironmentRequestBody"
              },
              "example": {
                "autoApproveSubscription": false,
                "deploymentConfigId": "dc-12345678",
                "description": "The production environment for the MySQL multi-writer service",
                "name": "Production",
                "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
                "sourceEnvironmentId": "se-12345678",
                "type": "DEV",
                "visibility": "Itaque beatae placeat in et ea."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Service Environment ID created",
                  "example": "se-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "se-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a service environment",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/environment/{id}": {
      "delete": {
        "tags": [
          "service-environment-api"
        ],
        "summary": "DeleteServiceEnvironment service-environment-api",
        "operationId": "service-environment-api#DeleteServiceEnvironment",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service this environment belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service environment",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Environment",
              "example": "se-123456"
            },
            "example": "se-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a service environment",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "service-environment-api"
        ],
        "summary": "DescribeServiceEnvironment service-environment-api",
        "operationId": "service-environment-api#DescribeServiceEnvironment",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service this environment belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service environment",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Environment",
              "example": "se-123456"
            },
            "example": "se-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeServiceEnvironmentResult"
                },
                "example": {
                  "autoApproveSubscription": false,
                  "deploymentConfigId": "dc-12345678",
                  "description": "The production environment for the MySQL multi-writer service",
                  "id": "se-12345678",
                  "key": "production",
                  "name": "Production",
                  "roleType": "admin",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
                  "serviceId": "s-12345678",
                  "sourceEnvironmentId": "se-12345678",
                  "type": "DEV",
                  "visibility": "Similique voluptas eos."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a service environment",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "service-environment-api"
        ],
        "summary": "UpdateServiceEnvironment service-environment-api",
        "operationId": "service-environment-api#UpdateServiceEnvironment",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service this environment belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service environment",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Environment",
              "example": "se-123456"
            },
            "example": "se-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceEnvironmentRequestBody"
              },
              "example": {
                "autoApproveSubscription": false,
                "deploymentConfigId": "dc-12345678",
                "description": "The production environment for the MySQL multi-writer service",
                "name": "Production",
                "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
                "sourceEnvironmentId": "se-12345678",
                "visibility": "Quisquam et adipisci."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update a service environment",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/environment/{id}/promote": {
      "get": {
        "tags": [
          "service-environment-api"
        ],
        "summary": "PromoteServiceEnvironmentStatus service-environment-api",
        "operationId": "service-environment-api#PromoteServiceEnvironmentStatus",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service this environment belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service environment",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Environment",
              "example": "se-123456"
            },
            "example": "se-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentPromotionStatus"
                  },
                  "example": [
                    {
                      "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                      "targetEnvironmentID": "se-12345678"
                    },
                    {
                      "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                      "targetEnvironmentID": "se-12345678"
                    },
                    {
                      "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                      "targetEnvironmentID": "se-12345678"
                    }
                  ]
                },
                "example": [
                  {
                    "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "targetEnvironmentID": "se-12345678"
                  },
                  {
                    "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "targetEnvironmentID": "se-12345678"
                  },
                  {
                    "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "targetEnvironmentID": "se-12345678"
                  },
                  {
                    "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "targetEnvironmentID": "se-12345678"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to get the status of a service environment promotion",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "service-environment-api"
        ],
        "summary": "PromoteServiceEnvironment service-environment-api",
        "operationId": "service-environment-api#PromoteServiceEnvironment",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service this environment belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service environment",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Environment",
              "example": "se-123456"
            },
            "example": "se-12345678"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to promote a service environment",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/environment/{serviceEnvironmentId}/service-plan": {
      "get": {
        "tags": [
          "service-plan-api"
        ],
        "summary": "ListServicePlans service-plan-api",
        "operationId": "service-plan-api#ListServicePlans",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "serviceEnvironmentId",
            "in": "path",
            "description": "Service environment ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Environment",
              "example": "se-123456"
            },
            "example": "se-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServicePlansResult"
                },
                "example": {
                  "nextPageToken": "next-token",
                  "servicePlans": [
                    {
                      "AutoApproveSubscription": false,
                      "accountConfigIds": [
                        "ac-12345678",
                        "ac-23456789"
                      ],
                      "activeAccountConfigIds": {
                        "aws": "ac-12345678",
                        "gcp": "ac-23456789"
                      },
                      "apiVersion": "v1",
                      "awsRegions": [
                        "us-east-2",
                        "ca-central-1"
                      ],
                      "deploymentConfigId": "dc-12345678",
                      "gcpRegions": [
                        "us-central1"
                      ],
                      "hasPendingChanges": true,
                      "isProductTierDisabled": true,
                      "latestMajorVersion": "3.0",
                      "modelType": "CUSTOMER_HOSTED",
                      "productTierDescription": "A premium product tier",
                      "productTierDocumentation": "Any documentation",
                      "productTierFeatures": {
                        "BILLING": false,
                        "LOGS": true,
                        "METRICS": false
                      },
                      "productTierId": "pt-12345678",
                      "productTierKey": "premium",
                      "productTierName": "Premium",
                      "productTierPlanDescription": "A premium plan",
                      "productTierPricing": {
                        "price1": "value1"
                      },
                      "productTierSupport": "Any support",
                      "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                      "serviceApiId": "sa-12345678",
                      "serviceEnvironmentId": "se-12345678",
                      "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                      "serviceModelFeatures": [
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        },
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        },
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        },
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        }
                      ],
                      "serviceModelId": "sm-12345678",
                      "serviceModelName": "MySQL multi-writer service hosted model",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY",
                      "versionSetStatus": "Preferred|Active|Deprecated|Pending"
                    },
                    {
                      "AutoApproveSubscription": false,
                      "accountConfigIds": [
                        "ac-12345678",
                        "ac-23456789"
                      ],
                      "activeAccountConfigIds": {
                        "aws": "ac-12345678",
                        "gcp": "ac-23456789"
                      },
                      "apiVersion": "v1",
                      "awsRegions": [
                        "us-east-2",
                        "ca-central-1"
                      ],
                      "deploymentConfigId": "dc-12345678",
                      "gcpRegions": [
                        "us-central1"
                      ],
                      "hasPendingChanges": true,
                      "isProductTierDisabled": true,
                      "latestMajorVersion": "3.0",
                      "modelType": "CUSTOMER_HOSTED",
                      "productTierDescription": "A premium product tier",
                      "productTierDocumentation": "Any documentation",
                      "productTierFeatures": {
                        "BILLING": false,
                        "LOGS": true,
                        "METRICS": false
                      },
                      "productTierId": "pt-12345678",
                      "productTierKey": "premium",
                      "productTierName": "Premium",
                      "productTierPlanDescription": "A premium plan",
                      "productTierPricing": {
                        "price1": "value1"
                      },
                      "productTierSupport": "Any support",
                      "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                      "serviceApiId": "sa-12345678",
                      "serviceEnvironmentId": "se-12345678",
                      "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                      "serviceModelFeatures": [
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        },
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        },
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        },
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        }
                      ],
                      "serviceModelId": "sm-12345678",
                      "serviceModelName": "MySQL multi-writer service hosted model",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY",
                      "versionSetStatus": "Preferred|Active|Deprecated|Pending"
                    },
                    {
                      "AutoApproveSubscription": false,
                      "accountConfigIds": [
                        "ac-12345678",
                        "ac-23456789"
                      ],
                      "activeAccountConfigIds": {
                        "aws": "ac-12345678",
                        "gcp": "ac-23456789"
                      },
                      "apiVersion": "v1",
                      "awsRegions": [
                        "us-east-2",
                        "ca-central-1"
                      ],
                      "deploymentConfigId": "dc-12345678",
                      "gcpRegions": [
                        "us-central1"
                      ],
                      "hasPendingChanges": true,
                      "isProductTierDisabled": true,
                      "latestMajorVersion": "3.0",
                      "modelType": "CUSTOMER_HOSTED",
                      "productTierDescription": "A premium product tier",
                      "productTierDocumentation": "Any documentation",
                      "productTierFeatures": {
                        "BILLING": false,
                        "LOGS": true,
                        "METRICS": false
                      },
                      "productTierId": "pt-12345678",
                      "productTierKey": "premium",
                      "productTierName": "Premium",
                      "productTierPlanDescription": "A premium plan",
                      "productTierPricing": {
                        "price1": "value1"
                      },
                      "productTierSupport": "Any support",
                      "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                      "serviceApiId": "sa-12345678",
                      "serviceEnvironmentId": "se-12345678",
                      "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                      "serviceModelFeatures": [
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        },
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        },
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        },
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        }
                      ],
                      "serviceModelId": "sm-12345678",
                      "serviceModelName": "MySQL multi-writer service hosted model",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY",
                      "versionSetStatus": "Preferred|Active|Deprecated|Pending"
                    },
                    {
                      "AutoApproveSubscription": false,
                      "accountConfigIds": [
                        "ac-12345678",
                        "ac-23456789"
                      ],
                      "activeAccountConfigIds": {
                        "aws": "ac-12345678",
                        "gcp": "ac-23456789"
                      },
                      "apiVersion": "v1",
                      "awsRegions": [
                        "us-east-2",
                        "ca-central-1"
                      ],
                      "deploymentConfigId": "dc-12345678",
                      "gcpRegions": [
                        "us-central1"
                      ],
                      "hasPendingChanges": true,
                      "isProductTierDisabled": true,
                      "latestMajorVersion": "3.0",
                      "modelType": "CUSTOMER_HOSTED",
                      "productTierDescription": "A premium product tier",
                      "productTierDocumentation": "Any documentation",
                      "productTierFeatures": {
                        "BILLING": false,
                        "LOGS": true,
                        "METRICS": false
                      },
                      "productTierId": "pt-12345678",
                      "productTierKey": "premium",
                      "productTierName": "Premium",
                      "productTierPlanDescription": "A premium plan",
                      "productTierPricing": {
                        "price1": "value1"
                      },
                      "productTierSupport": "Any support",
                      "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                      "serviceApiId": "sa-12345678",
                      "serviceEnvironmentId": "se-12345678",
                      "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                      "serviceModelFeatures": [
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        },
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        },
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        },
                        {
                          "configuration": {
                            "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                            "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                          },
                          "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                        }
                      ],
                      "serviceModelId": "sm-12345678",
                      "serviceModelName": "MySQL multi-writer service hosted model",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY",
                      "versionSetStatus": "Preferred|Active|Deprecated|Pending"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list product tiers",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/image-config": {
      "post": {
        "tags": [
          "image-config-api"
        ],
        "summary": "CreateImageConfig image-config-api",
        "operationId": "image-config-api#CreateImageConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID to use for the infra",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateImageConfigRequestBody"
              },
              "example": {
                "customImageCommandsAndArgs": {
                  "args": [
                    "-d",
                    "mysql"
                  ],
                  "commands": [
                    "echo",
                    "Hello, World!"
                  ]
                },
                "description": "A image configuration for my new entity",
                "imageName": "mysql",
                "imageRegistryId": "ir-12345678",
                "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
                "imageTag": "latest",
                "serviceEnvironmentId": "se-12345678"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Image Config ID created",
                  "example": "imgc-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "imgc-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create the image config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/image-config/{id}": {
      "delete": {
        "tags": [
          "image-config-api"
        ],
        "summary": "DeleteImageConfig image-config-api",
        "operationId": "image-config-api#DeleteImageConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The image configuration ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Image Config",
              "example": "Impedit expedita ut et magnam."
            },
            "example": "imgc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete the image config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "image-config-api"
        ],
        "summary": "DescribeImageConfig image-config-api",
        "operationId": "image-config-api#DescribeImageConfig",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the image config to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the image config to describe. If not specified, the latest version is described.",
              "example": "Vel facilis molestiae pariatur."
            },
            "example": "Eaque omnis."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "ProductTierId of the image config to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Nemo natus ipsum dolore aut."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The image configuration ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Image Config",
              "example": "Qui aut cum."
            },
            "example": "imgc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeImageConfigResult"
                },
                "example": {
                  "customImageCommandsAndArgs": {
                    "args": [
                      "-d",
                      "mysql"
                    ],
                    "commands": [
                      "echo",
                      "Hello, World!"
                    ]
                  },
                  "description": "An image configuration for my new entity",
                  "id": "imgc-12345678",
                  "imageName": "mysql",
                  "imageRegistryId": "ir-12345678",
                  "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
                  "imageTag": "v1",
                  "serviceEnvironmentId": "se-12345678",
                  "serviceId": "s-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe the image config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "image-config-api"
        ],
        "summary": "UpdateImageConfig image-config-api",
        "operationId": "image-config-api#UpdateImageConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The image configuration ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Image Config",
              "example": "Quis excepturi alias et perspiciatis nostrum adipisci."
            },
            "example": "imgc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateImageConfigRequestBody"
              },
              "example": {
                "customImageCommandsAndArgs": {
                  "args": [
                    "-d",
                    "mysql"
                  ],
                  "commands": [
                    "echo",
                    "Hello, World!"
                  ]
                },
                "description": "An image configuration for my new entity",
                "imageName": "mysql",
                "imageRegistryId": "ir-12345678",
                "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
                "imageTag": "v1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update the image config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/image-config/{id}/release": {
      "post": {
        "tags": [
          "image-config-api"
        ],
        "summary": "ReleaseImageConfig image-config-api",
        "operationId": "image-config-api#ReleaseImageConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The image configuration ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Image Config",
              "example": "Perferendis dolores quae ipsum cum assumenda."
            },
            "example": "imgc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseInfraConfigRequestBody"
              },
              "example": {
                "productTierId": "pt-12345678"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to release the image config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/image-config/{id}/rollout": {
      "get": {
        "tags": [
          "image-config-api"
        ],
        "summary": "RolloutFleetImageStatus image-config-api",
        "operationId": "image-config-api#RolloutFleetImageStatus",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The image configuration ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Image Config",
              "example": "Sed dolore id officia animi ut."
            },
            "example": "imgc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OmnistrateServiceHealthResult"
                },
                "example": {
                  "status": "IN_PROGRESS"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to get the fleet image rollout status",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "image-config-api"
        ],
        "summary": "RolloutFleetImageConfig image-config-api",
        "operationId": "image-config-api#RolloutFleetImageConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The image configuration ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Image Config",
              "example": "Laboriosam commodi."
            },
            "example": "imgc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to rollout to the fleet",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/infra-config": {
      "post": {
        "tags": [
          "infra-config-api"
        ],
        "summary": "CreateInfraConfig infra-config-api",
        "operationId": "infra-config-api#CreateInfraConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInfraConfigRequestBody"
              },
              "example": {
                "computeConfigId": "cc-12345678",
                "customTag": {
                  "key": "customKey",
                  "value": "customValue"
                },
                "description": "Infra config used for the base tier MySQL service",
                "name": "MySQL Writer Infra Config",
                "networkConfigId": "nc-12345678",
                "serviceEnvironmentId": "se-12345678",
                "storageConfigId": "sc-12345678"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Infra Config ID created",
                  "example": "ic-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "ic-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create an infra config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}": {
      "delete": {
        "tags": [
          "infra-config-api"
        ],
        "summary": "DeleteInfraConfig infra-config-api",
        "operationId": "infra-config-api#DeleteInfraConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Infra Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Infra Config",
              "example": "Beatae eos perspiciatis esse est."
            },
            "example": "ic-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete an infra config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "infra-config-api"
        ],
        "summary": "DescribeInfraConfig infra-config-api",
        "operationId": "infra-config-api#DescribeInfraConfig",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the infra config to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the infra config to describe. If not specified, the latest version is described.",
              "example": "Rem veniam necessitatibus ratione amet accusamus."
            },
            "example": "Est sed exercitationem natus doloremque quis dolorem."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "ProductTierId of the infra config to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Repudiandae sed."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Infra Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Infra Config",
              "example": "Id et enim delectus."
            },
            "example": "ic-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeInfraConfigResult"
                },
                "example": {
                  "computeConfigId": "cc-12345678",
                  "customTag": {
                    "key": "customKey",
                    "value": "customValue"
                  },
                  "description": "Infra config used for the base tier MySQL service",
                  "id": "ic-12345678",
                  "name": "MySQL Writer Infra Config",
                  "networkConfigId": "nc-12345678",
                  "serviceEnvironmentId": "se-12345678",
                  "serviceId": "s-12345678",
                  "storageConfigId": "sc-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe an infra config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "infra-config-api"
        ],
        "summary": "UpdateInfraConfig infra-config-api",
        "operationId": "infra-config-api#UpdateInfraConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Infra Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Infra Config",
              "example": "Minus odio voluptates."
            },
            "example": "ic-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInfraConfigRequestBody"
              },
              "example": {
                "computeConfigId": "cc-12345678",
                "customTag": {
                  "key": "customKey",
                  "value": "customValue"
                },
                "description": "Infra config used for the base tier MySQL service",
                "name": "MySQL Writer Infra Config",
                "networkConfigId": "nc-12345678",
                "storageConfigId": "sc-12345678"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update an infra config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/associated-resources": {
      "get": {
        "tags": [
          "infra-config-api"
        ],
        "summary": "ListAssociatedResources infra-config-api",
        "operationId": "infra-config-api#ListAssociatedResources",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Infra Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Infra Config",
              "example": "Aperiam voluptatum aut consequuntur qui sed ut."
            },
            "example": "ic-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssociatedResourcesResult"
                },
                "example": {
                  "id": "ic-12345678",
                  "resourceIds": [
                    "r-12345678",
                    "r-abcdefgh"
                  ],
                  "serviceId": "s-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list associated resources",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/compute-config": {
      "delete": {
        "tags": [
          "infra-config-api"
        ],
        "summary": "DetachComputeConfig infra-config-api",
        "operationId": "infra-config-api#DetachComputeConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Infra Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Infra Config",
              "example": "Commodi vel quas rem aut."
            },
            "example": "ic-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to detach a compute config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/network-config": {
      "delete": {
        "tags": [
          "infra-config-api"
        ],
        "summary": "DetachNetworkConfig infra-config-api",
        "operationId": "infra-config-api#DetachNetworkConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Infra Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Infra Config",
              "example": "Ut quidem."
            },
            "example": "ic-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to detach a network config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/release": {
      "post": {
        "tags": [
          "infra-config-api"
        ],
        "summary": "ReleaseInfraConfig infra-config-api",
        "operationId": "infra-config-api#ReleaseInfraConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Infra Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Infra Config",
              "example": "Et esse ad inventore eos nobis."
            },
            "example": "ic-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseInfraConfigRequestBody"
              },
              "example": {
                "productTierId": "pt-12345678"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to release an infra config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/rollout": {
      "post": {
        "tags": [
          "infra-config-api"
        ],
        "summary": "RolloutFleetInfra infra-config-api",
        "operationId": "infra-config-api#RolloutFleetInfra",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Infra Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Infra Config",
              "example": "Voluptatum doloribus."
            },
            "example": "ic-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to rollout to the fleet",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/rollout/status": {
      "get": {
        "tags": [
          "infra-config-api"
        ],
        "summary": "RolloutFleetInfraStatus infra-config-api",
        "operationId": "infra-config-api#RolloutFleetInfraStatus",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Infra Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Infra Config",
              "example": "Quos iusto modi non."
            },
            "example": "ic-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OmnistrateServiceHealthResult"
                },
                "example": {
                  "status": "IN_PROGRESS"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to get the fleet rollout infra status",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/infra-config/{id}/storage-config": {
      "delete": {
        "tags": [
          "infra-config-api"
        ],
        "summary": "DetachStorageConfig infra-config-api",
        "operationId": "infra-config-api#DetachStorageConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Infra Config ID to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Infra Config",
              "example": "Aliquam et recusandae id officia aut exercitationem."
            },
            "example": "ic-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to detach a storage config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/input-parameter": {
      "post": {
        "tags": [
          "input-parameter-api"
        ],
        "summary": "CreateInputParameter input-parameter-api",
        "operationId": "input-parameter-api#CreateInputParameter",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service that this output parameter belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInputParameterRequestBody"
              },
              "example": {
                "defaultValue": "default value",
                "dependentResourceId": "r-12345678",
                "description": "Commodi deserunt architecto ut sit ut.",
                "hasOptions": true,
                "isList": false,
                "key": "4u",
                "labeledOptions": {
                  "large": "t3.xlarge",
                  "medium": "t3.large",
                  "small": "t3.medium"
                },
                "limits": {
                  "max": "Sit explicabo delectus aut nisi consequuntur.",
                  "maxLength": "Sunt amet provident.",
                  "min": "Cumque temporibus dolores vitae dolores doloremque illum.",
                  "minLength": "Qui odio laudantium illum."
                },
                "modifiable": true,
                "name": "qrn",
                "options": [
                  "a",
                  "b",
                  "c",
                  "default value"
                ],
                "required": false,
                "resourceId": "r-12345678",
                "type": "Quis sunt."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Input Parameter ID created",
                  "example": "ip-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "ip-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create an input parameter",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/input-parameter/{id}": {
      "delete": {
        "tags": [
          "input-parameter-api"
        ],
        "summary": "DeleteInputParameter input-parameter-api",
        "operationId": "input-parameter-api#DeleteInputParameter",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service that this output parameter belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the input parameter",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Input Parameter",
              "example": "Quaerat nisi molestiae molestiae."
            },
            "example": "var-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete an input parameter",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "input-parameter-api"
        ],
        "summary": "DescribeInputParameter input-parameter-api",
        "operationId": "input-parameter-api#DescribeInputParameter",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the instance to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the instance to describe. If not specified, the latest version is described.",
              "example": "Amet fugit aut rerum."
            },
            "example": "Fugiat reiciendis et mollitia."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "Product tier id of the instance to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Iure est ex."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service that this output parameter belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the input parameter",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Input Parameter",
              "example": "Beatae nulla molestiae."
            },
            "example": "var-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeInputParameterResult"
                },
                "example": {
                  "defaultValue": "true",
                  "dependentResourceId": "r-12345678",
                  "description": "Nihil qui ullam totam dolorem.",
                  "hasOptions": true,
                  "id": "var-12345678",
                  "isList": true,
                  "key": "qe",
                  "labeledOptions": {
                    "large": "t3.xlarge",
                    "medium": "t3.large",
                    "small": "t3.medium"
                  },
                  "limits": {
                    "max": "Blanditiis voluptas.",
                    "maxLength": "Et error sequi et dignissimos illo.",
                    "min": "Et consequatur dolor est saepe velit voluptas.",
                    "minLength": "Ad suscipit aut ut suscipit voluptatem."
                  },
                  "modifiable": false,
                  "name": "3p4",
                  "options": [
                    "true",
                    "false"
                  ],
                  "required": true,
                  "resourceId": "r-12345678",
                  "serviceId": "s-12345678",
                  "type": "Nemo libero doloremque velit et."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe an input parameter",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "input-parameter-api"
        ],
        "summary": "UpdateInputParameter input-parameter-api",
        "operationId": "input-parameter-api#UpdateInputParameter",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service that this output parameter belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the input parameter",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Input Parameter",
              "example": "Quia et commodi tenetur ea."
            },
            "example": "var-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInputParameterRequestBody"
              },
              "example": {
                "defaultValue": "[\"1\", \"2.8\", \"3\"]",
                "description": "Aut ipsum harum delectus aliquid.",
                "hasOptions": false,
                "labeledOptions": {
                  "large": "t3.xlarge",
                  "medium": "t3.large",
                  "small": "t3.medium"
                },
                "limits": {
                  "max": "Sit explicabo delectus aut nisi consequuntur.",
                  "maxLength": "Sunt amet provident.",
                  "min": "Cumque temporibus dolores vitae dolores doloremque illum.",
                  "minLength": "Qui odio laudantium illum."
                },
                "modifiable": true,
                "name": "y",
                "options": [
                  "[\"1\", \"2.8\", \"3\"]",
                  "[\"3.4\", \"4.5\"]"
                ],
                "required": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update an input parameter",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/model": {
      "post": {
        "tags": [
          "service-model-api"
        ],
        "summary": "CreateServiceModel service-model-api",
        "operationId": "service-model-api#CreateServiceModel",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service this model is for",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceModelRequestBody"
              },
              "example": {
                "accountConfigIds": [
                  "ac-12345678",
                  "ac-23456789"
                ],
                "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                "features": [
                  {
                    "configuration": {
                      "Sapiente ut.": "Ut qui eligendi odit."
                    },
                    "feature": "Quia quas saepe sequi quidem facere."
                  },
                  {
                    "configuration": {
                      "Sapiente ut.": "Ut qui eligendi odit."
                    },
                    "feature": "Quia quas saepe sequi quidem facere."
                  },
                  {
                    "configuration": {
                      "Sapiente ut.": "Ut qui eligendi odit."
                    },
                    "feature": "Quia quas saepe sequi quidem facere."
                  },
                  {
                    "configuration": {
                      "Sapiente ut.": "Ut qui eligendi odit."
                    },
                    "feature": "Quia quas saepe sequi quidem facere."
                  }
                ],
                "modelType": "CUSTOMER_HOSTED",
                "name": "MySQL multi-writer service hosted model",
                "serviceApiId": "sa-12345678"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Service Model ID created",
                  "example": "sm-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "sm-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a service model",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/model/{id}": {
      "delete": {
        "tags": [
          "service-model-api"
        ],
        "summary": "DeleteServiceModel service-model-api",
        "operationId": "service-model-api#DeleteServiceModel",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID this model belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service model ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Quae officia repellendus dolores expedita nostrum ut."
            },
            "example": "sm-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a service model",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "service-model-api"
        ],
        "summary": "DescribeServiceModel service-model-api",
        "operationId": "service-model-api#DescribeServiceModel",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID this model belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service model ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Iste vero quo reiciendis blanditiis."
            },
            "example": "sm-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeServiceModelResult"
                },
                "example": {
                  "accountConfigIds": [
                    "ac-12345678",
                    "ac-23456789"
                  ],
                  "activeAccountConfigIds": {
                    "aws": "ac-12345678",
                    "gcp": "ac-23456789"
                  },
                  "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                  "features": [
                    {
                      "configuration": {
                        "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                        "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                      },
                      "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                    },
                    {
                      "configuration": {
                        "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                        "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                      },
                      "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                    },
                    {
                      "configuration": {
                        "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                        "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                      },
                      "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                    },
                    {
                      "configuration": {
                        "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                        "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                      },
                      "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                    }
                  ],
                  "id": "sm-12345678",
                  "key": "mysql-multi-writer-service-hosted-model",
                  "modelType": "CUSTOMER_HOSTED",
                  "name": "MySQL multi-writer service hosted model",
                  "productTiers": [
                    "pt-12345678",
                    "pt-87654321"
                  ],
                  "serviceApiId": "sa-12345678",
                  "serviceId": "s-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a service model",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "service-model-api"
        ],
        "summary": "UpdateServiceModel service-model-api",
        "operationId": "service-model-api#UpdateServiceModel",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID this model belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service model ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Aperiam velit."
            },
            "example": "sm-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceModelRequestBody"
              },
              "example": {
                "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                "name": "MySQL multi-writer service hosted model"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update a service model",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/model/{id}/account-config": {
      "delete": {
        "tags": [
          "service-model-api"
        ],
        "summary": "RemoveAccountConfigFromServiceModel service-model-api",
        "operationId": "service-model-api#RemoveAccountConfigFromServiceModel",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID this model belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service model ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Nemo eum expedita qui iure occaecati qui."
            },
            "example": "sm-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAccountConfigToServiceModelRequestBody"
              },
              "example": {
                "accountConfigId": "ac-12345678"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to remove an account config from a service model",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "service-model-api"
        ],
        "summary": "AddAccountConfigToServiceModel service-model-api",
        "operationId": "service-model-api#AddAccountConfigToServiceModel",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID this model belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service model ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Ex quisquam est sed."
            },
            "example": "sm-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAccountConfigToServiceModelRequestBody"
              },
              "example": {
                "accountConfigId": "ac-12345678"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to add an account config to a service model",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/model/{id}/account-config/{accountConfigId}/active": {
      "post": {
        "tags": [
          "service-model-api"
        ],
        "summary": "SetActiveAccountConfig service-model-api",
        "operationId": "service-model-api#SetActiveAccountConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID this model belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service model ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Velit velit et."
            },
            "example": "sm-12345678"
          },
          {
            "name": "accountConfigId",
            "in": "path",
            "description": "The infrastructure account configuration ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Account Config",
              "example": "Sed aut corrupti commodi."
            },
            "example": "ac-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to set the active account config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/model/{id}/feature": {
      "delete": {
        "tags": [
          "service-model-api"
        ],
        "summary": "DisableServiceModelFeature service-model-api",
        "operationId": "service-model-api#DisableServiceModelFeature",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID this model belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service model ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Quis velit vel aut fuga fugiat saepe."
            },
            "example": "sm-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisableServiceModelFeatureRequestBody"
              },
              "example": {
                "feature": "Earum eum ab earum sed."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used when the service model feature could not be disabled",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "service-model-api"
        ],
        "summary": "EnableServiceModelFeature service-model-api",
        "operationId": "service-model-api#EnableServiceModelFeature",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID this model belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service model ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "At et consectetur."
            },
            "example": "sm-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceModelFeatureDetail"
              },
              "example": {
                "configuration": {
                  "Iste eaque consequuntur architecto minima.": "Natus voluptatum.",
                  "Similique temporibus.": "Repellat omnis dolores rem voluptas."
                },
                "feature": "Et nemo alias ad molestias odio."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used when the service model feature could not be enabled",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/model/{id}/release": {
      "get": {
        "tags": [
          "service-model-api"
        ],
        "summary": "ReleaseServiceModelStatus service-model-api",
        "operationId": "service-model-api#ReleaseServiceModelStatus",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID this model belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service model ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Excepturi blanditiis non ut accusamus nulla."
            },
            "example": "sm-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OmnistrateServiceHealthResult"
                },
                "example": {
                  "status": "READY"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to release a service model status",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/model/{serviceModelId}/product-tier": {
      "get": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "ListProductTier product-tier-api",
        "operationId": "product-tier-api#ListProductTier",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "serviceModelId",
            "in": "path",
            "description": "Service model ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Nobis rem et pariatur."
            },
            "example": "sm-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "Dolores repellat sit unde.",
                    "Fugit maxime pariatur iure non.",
                    "Vero ex sunt esse.",
                    "Exercitationem nobis."
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list product tiers",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/model/{serviceModelId}/vunit": {
      "get": {
        "tags": [
          "vunit-api"
        ],
        "summary": "ListVUnits vunit-api",
        "operationId": "vunit-api#ListVUnits",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID for the VUnit",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "serviceModelId",
            "in": "path",
            "description": "Service Model ID for the VUnit",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Et maiores voluptatem ut ea dolores."
            },
            "example": "sm-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListVUnitsRequestBody"
              },
              "example": {
                "cloudProvider": "aws",
                "region": "us-west-2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListVUnitsResult"
                },
                "example": {
                  "ids": {
                    "aws": [
                      "vu-12345678",
                      "vu-abcdefgh"
                    ],
                    "gcp": [
                      "vu-1234efgh"
                    ]
                  },
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list vunits",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/model/copy/{sourceId}": {
      "post": {
        "tags": [
          "service-model-api"
        ],
        "summary": "CopyServiceModel service-model-api",
        "operationId": "service-model-api#CopyServiceModel",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID this model belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "sourceId",
            "in": "path",
            "description": "The source service model ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Model",
              "example": "Ut neque similique maiores."
            },
            "example": "sm-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyServiceModelRequestBody"
              },
              "example": {
                "accountConfigIds": [
                  "ac-12345678",
                  "ac-23456789"
                ],
                "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                "features": [
                  {
                    "configuration": {
                      "Sapiente ut.": "Ut qui eligendi odit."
                    },
                    "feature": "Quia quas saepe sequi quidem facere."
                  },
                  {
                    "configuration": {
                      "Sapiente ut.": "Ut qui eligendi odit."
                    },
                    "feature": "Quia quas saepe sequi quidem facere."
                  },
                  {
                    "configuration": {
                      "Sapiente ut.": "Ut qui eligendi odit."
                    },
                    "feature": "Quia quas saepe sequi quidem facere."
                  },
                  {
                    "configuration": {
                      "Sapiente ut.": "Ut qui eligendi odit."
                    },
                    "feature": "Quia quas saepe sequi quidem facere."
                  }
                ],
                "name": "MySQL multi-writer service hosted model",
                "targetServiceModelType": "CUSTOMER_HOSTED",
                "targetTierType": "OMNISTRATE_DEDICATED_TENANCY"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "New Service Model ID",
                  "example": "sm-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "sm-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to copy a service model",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/network-config": {
      "get": {
        "tags": [
          "network-config-api"
        ],
        "summary": "ListNetworkConfig network-config-api",
        "operationId": "network-config-api#ListNetworkConfig",
        "parameters": [
          {
            "name": "managed",
            "in": "query",
            "description": "Is network config managed by omnistrate",
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "description": "Is network config managed by omnistrate",
              "example": false
            },
            "example": false
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID to list network configs for",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "Saepe consequatur dolor sequi rerum cum similique.",
                    "Numquam ut et ullam iusto sit ut."
                  ],
                  "nextPageToken": "token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list network configs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "network-config-api"
        ],
        "summary": "CreateNetworkConfig network-config-api",
        "operationId": "network-config-api#CreateNetworkConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNetworkConfigRequestBody"
              },
              "example": {
                "description": "A multi-zone HA network config",
                "endpointPerReplica": true,
                "internal": true,
                "name": "Multi-zone",
                "openPorts": [
                  1299,
                  3306
                ],
                "privateNetworkingConfiguration": {
                  "privateLinkConfiguration": {
                    "awsPrivateLinkConfigurations": [
                      {
                        "port": 80,
                        "targetGroupName": "my-target-group"
                      },
                      {
                        "port": 80,
                        "targetGroupName": "my-target-group"
                      },
                      {
                        "port": 80,
                        "targetGroupName": "my-target-group"
                      },
                      {
                        "port": 80,
                        "targetGroupName": "my-target-group"
                      }
                    ]
                  }
                },
                "publicNetworkingConfiguration": {
                  "enableClusterLoadBalancer": true,
                  "enableNodeLoadBalancer": true
                },
                "stableEgressIP": true,
                "tlsTerminationPort": 443,
                "zoneConfiguration": "Odio assumenda sunt."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Network Config ID created",
                  "example": "nc-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "nc-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create network config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/network-config/{id}": {
      "delete": {
        "tags": [
          "network-config-api"
        ],
        "summary": "DeleteNetworkConfig network-config-api",
        "operationId": "network-config-api#DeleteNetworkConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the network config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Network Config",
              "example": "Corrupti quasi in omnis autem iste consequuntur."
            },
            "example": "nc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a network config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "network-config-api"
        ],
        "summary": "DescribeNetworkConfig network-config-api",
        "operationId": "network-config-api#DescribeNetworkConfig",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the network config to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the network config to describe. If not specified, the latest version is described.",
              "example": "Aut atque doloremque dolorem commodi accusamus."
            },
            "example": "Nihil ad."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "ProductTierId of the network config to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Exercitationem est dolores eaque molestiae expedita exercitationem."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the network config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Network Config",
              "example": "Numquam neque quia dolorem ipsum ratione."
            },
            "example": "nc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeNetworkConfigResult"
                },
                "example": {
                  "description": "A multi-zone HA network config",
                  "endpointPerReplica": true,
                  "id": "nc-12345678",
                  "infraConfigIDs": [
                    "ic-12345678",
                    "ic-abcdefgh"
                  ],
                  "internal": true,
                  "name": "Multi-zone",
                  "openPorts": [
                    1299,
                    3306
                  ],
                  "privateNetworkingConfiguration": {
                    "privateLinkConfiguration": {
                      "awsPrivateLinkConfigurations": [
                        {
                          "port": 80,
                          "targetGroupName": "my-target-group"
                        },
                        {
                          "port": 80,
                          "targetGroupName": "my-target-group"
                        },
                        {
                          "port": 80,
                          "targetGroupName": "my-target-group"
                        }
                      ]
                    }
                  },
                  "publicNetworkingConfiguration": {
                    "enableClusterLoadBalancer": true,
                    "enableNodeLoadBalancer": true
                  },
                  "serviceId": "s-12345678",
                  "stableEgressIP": true,
                  "tlsTerminationPort": 443,
                  "zoneConfiguration": "Veniam soluta id."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe network config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "network-config-api"
        ],
        "summary": "UpdateNetworkConfig network-config-api",
        "operationId": "network-config-api#UpdateNetworkConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the network config",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Network Config",
              "example": "Maxime recusandae nihil occaecati assumenda."
            },
            "example": "nc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNetworkConfigRequestBody"
              },
              "example": {
                "description": "A multi-zone HA network config",
                "endpointPerReplica": true,
                "internal": true,
                "name": "Multi-zone",
                "openPorts": [
                  1299,
                  3306
                ],
                "privateNetworkingConfiguration": {
                  "privateLinkConfiguration": {
                    "awsPrivateLinkConfigurations": [
                      {
                        "port": 80,
                        "targetGroupName": "my-target-group"
                      },
                      {
                        "port": 80,
                        "targetGroupName": "my-target-group"
                      },
                      {
                        "port": 80,
                        "targetGroupName": "my-target-group"
                      },
                      {
                        "port": 80,
                        "targetGroupName": "my-target-group"
                      }
                    ]
                  }
                },
                "publicNetworkingConfiguration": {
                  "enableClusterLoadBalancer": true,
                  "enableNodeLoadBalancer": true
                },
                "stableEgressIP": true,
                "tlsTerminationPort": 443,
                "zoneConfiguration": "Natus est velit molestiae nisi sequi ipsum."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update network config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/network/{id}": {
      "get": {
        "tags": [
          "vunit-api"
        ],
        "summary": "DescribeNetwork vunit-api",
        "operationId": "vunit-api#DescribeNetwork",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID context",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Network to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Network",
              "example": "Ut in consequatur non praesentium."
            },
            "example": "n-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeNetworkResult"
                },
                "example": {
                  "cidr": "10.0.0.0/16",
                  "id": "n-12345678",
                  "networkConfigId": "nc-12345678",
                  "serviceId": "s-12345678",
                  "type": "PUBLIC",
                  "vunitId": "vu-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a network",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/output-parameter": {
      "post": {
        "tags": [
          "output-parameter-api"
        ],
        "summary": "CreateOutputParameter output-parameter-api",
        "operationId": "output-parameter-api#CreateOutputParameter",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service that this output parameter belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOutputParameterRequestBody"
              },
              "example": {
                "description": "Username of the user created in the target system",
                "key": "username",
                "name": "Username",
                "resourceId": "r-12345678",
                "value": "johndoe",
                "valueRef": "$var.username",
                "valueType": "Omnis molestias accusamus praesentium temporibus cum delectus."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Output Parameter ID created",
                  "example": "op-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "op-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create an output parameter",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/output-parameter/{id}": {
      "delete": {
        "tags": [
          "output-parameter-api"
        ],
        "summary": "DeleteOutputParameter output-parameter-api",
        "operationId": "output-parameter-api#DeleteOutputParameter",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service that this output parameter belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the output parameter",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Output Parameter",
              "example": "Rem consequatur doloribus sint."
            },
            "example": "op-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete an output parameter",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "output-parameter-api"
        ],
        "summary": "DescribeOutputParameter output-parameter-api",
        "operationId": "output-parameter-api#DescribeOutputParameter",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the resource to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the resource to describe. If not specified, the latest version is described.",
              "example": "Qui et."
            },
            "example": "Explicabo quaerat a qui nostrum."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "ProductTierId of the resource to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Ipsam praesentium ab repellat."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service that this output parameter belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the output parameter",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Output Parameter",
              "example": "Inventore temporibus perferendis occaecati expedita."
            },
            "example": "op-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeOutputParameterResult"
                },
                "example": {
                  "description": "Username of the user created in the target system",
                  "id": "op-12345678",
                  "key": "username",
                  "name": "Username",
                  "resourceId": "r-12345678",
                  "serviceId": "s-12345678",
                  "value": "johndoe",
                  "valueRef": "$var.username",
                  "valueType": "Sequi et corporis beatae voluptas dolorum."
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe an output parameter",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "output-parameter-api"
        ],
        "summary": "UpdateOutputParameter output-parameter-api",
        "operationId": "output-parameter-api#UpdateOutputParameter",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service that this output parameter belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the output parameter",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of an Output Parameter",
              "example": "Quam ipsam est quisquam nobis perspiciatis."
            },
            "example": "op-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOutputParameterRequestBody"
              },
              "example": {
                "description": "Username of the user created in the target system",
                "name": "Username",
                "value": "johndoe",
                "valueRef": "$var.username",
                "valueType": "Maiores temporibus pariatur praesentium expedita."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update an output parameter",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/product-tier": {
      "post": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "CreateProductTier product-tier-api",
        "operationId": "product-tier-api#CreateProductTier",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductTierRequestBody"
              },
              "example": {
                "autoApproveSubscription": false,
                "awsRegions": [
                  "us-east-2",
                  "ca-central-1"
                ],
                "description": "A premium product tier",
                "documentation": "Any documentation",
                "gcpRegions": [
                  "us-central1"
                ],
                "isDisabled": false,
                "name": "Premium",
                "planDescription": "A premium plan",
                "pricing": {
                  "price1": "value1"
                },
                "serviceModelId": "sm-12345678",
                "support": "Any support",
                "tierType": "OMNISTRATE_DEDICATED_TENANCY"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Product Tier ID created",
                  "example": "pt-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "pt-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a product tier",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/product-tier/{id}": {
      "delete": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "DeleteProductTier product-tier-api",
        "operationId": "product-tier-api#DeleteProductTier",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Nihil dicta."
            },
            "example": "pt-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a product tier",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "DescribeProductTier product-tier-api",
        "operationId": "product-tier-api#DescribeProductTier",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "description": "The version number for the specific version set",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The version number for the specific version set",
              "example": "3.0"
            },
            "example": "3.0"
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Est et sed similique."
            },
            "example": "pt-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeProductTierResult"
                },
                "example": {
                  "apiGroups": {
                    "r-12345678": "v1",
                    "r-23456789": "v2",
                    "r-34567890": "v3"
                  },
                  "autoApproveSubscription": false,
                  "awsRegions": [
                    "us-east-2",
                    "ca-central-1"
                  ],
                  "cloudProvidersConfigReadiness": {
                    "aws": {
                      "resourceA": "missing terraform configuration",
                      "resourceB": "missing cloudformation configuration"
                    }
                  },
                  "description": "A premium product tier",
                  "documentation": "Any documentation",
                  "enabledFeatures": [
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    },
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    },
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    }
                  ],
                  "features": {
                    "BILLING": false,
                    "LOGS": true,
                    "METRICS": false
                  },
                  "gcpRegions": [
                    "us-central1"
                  ],
                  "id": "pt-12345678",
                  "isDisabled": false,
                  "key": "premium",
                  "name": "Premium",
                  "planDescription": "A premium plan",
                  "pricing": {
                    "price1": "value1"
                  },
                  "serviceId": "s-12345678",
                  "serviceModelId": "sm-12345678",
                  "support": "Any support",
                  "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a product tier",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "UpdateProductTier product-tier-api",
        "operationId": "product-tier-api#UpdateProductTier",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Dolores illum nesciunt libero autem."
            },
            "example": "pt-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductTierRequestBody"
              },
              "example": {
                "autoApproveSubscription": false,
                "awsRegions": [
                  "us-east-2",
                  "ca-central-1"
                ],
                "description": "A premium product tier",
                "documentation": "Any documentation",
                "gcpRegions": [
                  "us-central1"
                ],
                "isDisabled": false,
                "name": "Premium",
                "planDescription": "A premium plan",
                "pricing": {
                  "price1": "value1"
                },
                "support": "Any support",
                "tierType": "OMNISTRATE_DEDICATED_TENANCY"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update a product tier",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/product-tier/{id}/billing-plan": {
      "get": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "ListProductTierBillingPlan product-tier-api",
        "operationId": "product-tier-api#ListProductTierBillingPlan",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Reiciendis quas delectus earum."
            },
            "example": "pt-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListProductTierBillingPlanResult"
                },
                "example": {
                  "billingPlans": [
                    {
                      "allowCreatesWhenPaymentNotConfigured": true,
                      "id": "bp-12345678",
                      "maxNumberofInstances": 5,
                      "planName": "STARTER",
                      "pricing": {
                        "cpuCoreHours": "0.001",
                        "memoryGiBHours": "0.0001",
                        "storageGiBHours": "0.0001"
                      },
                      "productTierId": "pt-12345678",
                      "serviceId": "s-12345678"
                    },
                    {
                      "allowCreatesWhenPaymentNotConfigured": true,
                      "id": "bp-12345678",
                      "maxNumberofInstances": 5,
                      "planName": "STARTER",
                      "pricing": {
                        "cpuCoreHours": "0.001",
                        "memoryGiBHours": "0.0001",
                        "storageGiBHours": "0.0001"
                      },
                      "productTierId": "pt-12345678",
                      "serviceId": "s-12345678"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used when the product tier pricing could not be described",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "CreateProductTierBillingPlan product-tier-api",
        "operationId": "product-tier-api#CreateProductTierBillingPlan",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Consequatur recusandae excepturi velit dolore minima qui."
            },
            "example": "pt-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductTierBillingPlanRequestBody"
              },
              "example": {
                "allowCreatesWhenPaymentNotConfigured": true,
                "maxNumberofInstances": 5,
                "planName": "STARTER",
                "pricing": {
                  "cpuCoreHours": "0.001",
                  "memoryGiBHours": "0.0001",
                  "storageGiBHours": "0.0001"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingPlan"
                },
                "example": {
                  "allowCreatesWhenPaymentNotConfigured": true,
                  "id": "bp-12345678",
                  "maxNumberofInstances": 5,
                  "planName": "STARTER",
                  "pricing": {
                    "cpuCoreHours": "0.001",
                    "memoryGiBHours": "0.0001",
                    "storageGiBHours": "0.0001"
                  },
                  "productTierId": "pt-12345678",
                  "serviceId": "s-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a product tier pricing",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/product-tier/{id}/feature": {
      "delete": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "DisableProductTierFeature product-tier-api",
        "operationId": "product-tier-api#DisableProductTierFeature",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Quia delectus sequi maiores veritatis harum animi."
            },
            "example": "pt-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisableProductTierFeatureRequestBody"
              },
              "example": {
                "feature": "BILLING",
                "scope": "INTERNAL"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used when the product tier feature could not be disabled",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "EnableProductTierFeature product-tier-api",
        "operationId": "product-tier-api#EnableProductTierFeature",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Quia minus cupiditate."
            },
            "example": "pt-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnableProductTierFeatureRequestBody"
              },
              "example": {
                "configuration": {
                  "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name"
                },
                "feature": "BILLING",
                "scope": "INTERNAL"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used when the product tier feature could not be enabled",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/product-tier/{productTierId}/billing-plan/{id}": {
      "delete": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "DeleteProductTierBillingPlan product-tier-api",
        "operationId": "product-tier-api#DeleteProductTierBillingPlan",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "productTierId",
            "in": "path",
            "description": "Product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Sit ullam."
            },
            "example": "pt-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Product tier billing plan ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier Billing Plan",
              "example": "Commodi aut omnis sit facilis debitis temporibus."
            },
            "example": "bp-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used when the product tier pricing could not be described",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "DescribeProductTierBillingPlan product-tier-api",
        "operationId": "product-tier-api#DescribeProductTierBillingPlan",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "productTierId",
            "in": "path",
            "description": "Product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Consectetur eum dolor."
            },
            "example": "pt-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Product tier billing plan ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier Billing Plan",
              "example": "Nostrum voluptatem eveniet officia."
            },
            "example": "bp-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingPlan"
                },
                "example": {
                  "allowCreatesWhenPaymentNotConfigured": true,
                  "id": "bp-12345678",
                  "maxNumberofInstances": 5,
                  "planName": "STARTER",
                  "pricing": {
                    "cpuCoreHours": "0.001",
                    "memoryGiBHours": "0.0001",
                    "storageGiBHours": "0.0001"
                  },
                  "productTierId": "pt-12345678",
                  "serviceId": "s-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used when the product tier pricing could not be described",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "UpdateProductTierBillingPlan product-tier-api",
        "operationId": "product-tier-api#UpdateProductTierBillingPlan",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "productTierId",
            "in": "path",
            "description": "Product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Voluptas vitae quae."
            },
            "example": "pt-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Product tier billing plan ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier Billing Plan",
              "example": "Est doloremque ut minus quidem."
            },
            "example": "bp-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductTierBillingPlanRequestBody"
              },
              "example": {
                "allowCreatesWhenPaymentNotConfigured": true,
                "maxNumberofInstances": 5,
                "planName": "STARTER",
                "pricing": {
                  "cpuCoreHours": "0.001",
                  "memoryGBHours": "0.0001"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingPlan"
                },
                "example": {
                  "allowCreatesWhenPaymentNotConfigured": true,
                  "id": "bp-12345678",
                  "maxNumberofInstances": 5,
                  "planName": "STARTER",
                  "pricing": {
                    "cpuCoreHours": "0.001",
                    "memoryGiBHours": "0.0001",
                    "storageGiBHours": "0.0001"
                  },
                  "productTierId": "pt-12345678",
                  "serviceId": "s-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update a product tier pricing",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/product-tier/{productTierId}/service-plan": {
      "get": {
        "tags": [
          "service-plan-api"
        ],
        "summary": "GetServicePlan service-plan-api",
        "operationId": "service-plan-api#GetServicePlan",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "productTierId",
            "in": "path",
            "description": "Product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Expedita sit ut sed sit exercitationem impedit."
            },
            "example": "pt-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServicePlanResult"
                },
                "example": {
                  "AutoApproveSubscription": false,
                  "accountConfigIds": [
                    "ac-12345678",
                    "ac-23456789"
                  ],
                  "activeAccountConfigIds": {
                    "aws": "ac-12345678",
                    "gcp": "ac-23456789"
                  },
                  "apiVersion": "v1",
                  "awsRegions": [
                    "us-east-2",
                    "ca-central-1"
                  ],
                  "deploymentConfigId": "dc-12345678",
                  "gcpRegions": [
                    "us-central1"
                  ],
                  "hasPendingChanges": true,
                  "isProductTierDisabled": true,
                  "latestMajorVersion": "3.0",
                  "modelType": "CUSTOMER_HOSTED",
                  "productTierDescription": "A premium product tier",
                  "productTierDocumentation": "Any documentation",
                  "productTierFeatures": {
                    "BILLING": false,
                    "LOGS": true,
                    "METRICS": false
                  },
                  "productTierId": "pt-12345678",
                  "productTierKey": "premium",
                  "productTierName": "Premium",
                  "productTierPlanDescription": "A premium plan",
                  "productTierPricing": {
                    "price1": "value1"
                  },
                  "productTierSupport": "Any support",
                  "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                  "serviceApiId": "sa-12345678",
                  "serviceEnvironmentId": "se-12345678",
                  "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                  "serviceModelFeatures": [
                    {
                      "configuration": {
                        "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                        "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                      },
                      "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                    },
                    {
                      "configuration": {
                        "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                        "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                      },
                      "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                    },
                    {
                      "configuration": {
                        "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                        "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                      },
                      "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                    },
                    {
                      "configuration": {
                        "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                        "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                      },
                      "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                    }
                  ],
                  "serviceModelId": "sm-12345678",
                  "serviceModelName": "MySQL multi-writer service hosted model",
                  "tierType": "OMNISTRATE_DEDICATED_TENANCY",
                  "versionSetStatus": "Preferred|Active|Deprecated|Pending"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list product tiers",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/product-tier/copy/{sourceId}": {
      "post": {
        "tags": [
          "product-tier-api"
        ],
        "summary": "CopyProductTier product-tier-api",
        "operationId": "product-tier-api#CopyProductTier",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "sourceId",
            "in": "path",
            "description": "The source product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Dolores voluptas."
            },
            "example": "pt-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyProductTierRequestBody"
              },
              "example": {
                "autoApproveSubscription": false,
                "awsRegions": [
                  "us-east-2",
                  "ca-central-1"
                ],
                "description": "A premium product tier",
                "documentation": "Any documentation",
                "gcpRegions": [
                  "us-central1"
                ],
                "name": "Premium",
                "planDescription": "A premium plan",
                "pricing": {
                  "price1": "value1"
                },
                "serviceModelId": "sm-12345678",
                "support": "Any support",
                "targetTierType": "OMNISTRATE_DEDICATED_TENANCY"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Product Tier ID created",
                  "example": "pt-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "pt-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a product tier",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set": {
      "get": {
        "tags": [
          "tier-version-set-api"
        ],
        "summary": "ListTierVersionSets tier-version-set-api",
        "operationId": "tier-version-set-api#ListTierVersionSets",
        "parameters": [
          {
            "name": "latestMajorVersionOnly",
            "in": "query",
            "description": "If true, the latest major version is returned. The parameter needs to be specified in isolation.",
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "description": "If true, the latest major version is returned. The parameter needs to be specified in isolation.",
              "example": true
            },
            "example": true
          },
          {
            "name": "latestIncrementalVersionForMajorVersion",
            "in": "query",
            "description": "Returns the latest incremental version for the given major version. The paramenter needs to be specified in isolation.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Returns the latest incremental version for the given major version. The paramenter needs to be specified in isolation.",
              "example": "3.0"
            },
            "example": "3.0"
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of the Service",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "productTierId",
            "in": "path",
            "description": "The product tier ID that this version set belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Nulla consequatur quis aliquid quia sunt est."
            },
            "example": "Beatae beatae."
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTierVersionSetsResult"
                },
                "example": {
                  "nextPageToken": "next-token",
                  "tierVersionSets": [
                    {
                      "autoApproveSubscription": false,
                      "baseVersion": "3.0",
                      "createdAt": "2020-01-01T00:00:00Z",
                      "createdBy": "John Doe",
                      "description": "Voluptas ipsum et consectetur maiores aliquid.",
                      "enabledFeatures": [
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        },
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        },
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        },
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        }
                      ],
                      "features": {
                        "BILLING": false,
                        "LOGS": true,
                        "METRICS": false
                      },
                      "instanceCount": 12,
                      "latestUpgradePathId": "upgrade-12345678",
                      "name": "Regular version set",
                      "parentVersion": "2.0",
                      "productTierId": "Nihil qui ex omnis repellat consectetur.",
                      "releasedAt": "2020-01-01T00:00:00Z",
                      "releasedBy": "John Doe",
                      "resources": [
                        {
                          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                          "id": "r-12345678",
                          "imageConfigId": "imgc-12345678",
                          "infraConfigId": "ic-12345678",
                          "isExternal": true,
                          "managedResourceType": "PortsBasedProxy",
                          "name": "MySQL multi-writer service"
                        },
                        {
                          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                          "id": "r-12345678",
                          "imageConfigId": "imgc-12345678",
                          "infraConfigId": "ic-12345678",
                          "isExternal": true,
                          "managedResourceType": "PortsBasedProxy",
                          "name": "MySQL multi-writer service"
                        }
                      ],
                      "serviceId": "s-12345678",
                      "serviceModelId": "Et ut error delectus quaerat placeat dolores.",
                      "status": "Preferred|Active|Deprecated|Pending",
                      "type": "Major|Incremental|UserDefined",
                      "updatedAt": "2020-01-01T00:00:00Z",
                      "version": "3.0"
                    },
                    {
                      "autoApproveSubscription": false,
                      "baseVersion": "3.0",
                      "createdAt": "2020-01-01T00:00:00Z",
                      "createdBy": "John Doe",
                      "description": "Voluptas ipsum et consectetur maiores aliquid.",
                      "enabledFeatures": [
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        },
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        },
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        },
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        }
                      ],
                      "features": {
                        "BILLING": false,
                        "LOGS": true,
                        "METRICS": false
                      },
                      "instanceCount": 12,
                      "latestUpgradePathId": "upgrade-12345678",
                      "name": "Regular version set",
                      "parentVersion": "2.0",
                      "productTierId": "Nihil qui ex omnis repellat consectetur.",
                      "releasedAt": "2020-01-01T00:00:00Z",
                      "releasedBy": "John Doe",
                      "resources": [
                        {
                          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                          "id": "r-12345678",
                          "imageConfigId": "imgc-12345678",
                          "infraConfigId": "ic-12345678",
                          "isExternal": true,
                          "managedResourceType": "PortsBasedProxy",
                          "name": "MySQL multi-writer service"
                        },
                        {
                          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                          "id": "r-12345678",
                          "imageConfigId": "imgc-12345678",
                          "infraConfigId": "ic-12345678",
                          "isExternal": true,
                          "managedResourceType": "PortsBasedProxy",
                          "name": "MySQL multi-writer service"
                        }
                      ],
                      "serviceId": "s-12345678",
                      "serviceModelId": "Et ut error delectus quaerat placeat dolores.",
                      "status": "Preferred|Active|Deprecated|Pending",
                      "type": "Major|Incremental|UserDefined",
                      "updatedAt": "2020-01-01T00:00:00Z",
                      "version": "3.0"
                    },
                    {
                      "autoApproveSubscription": false,
                      "baseVersion": "3.0",
                      "createdAt": "2020-01-01T00:00:00Z",
                      "createdBy": "John Doe",
                      "description": "Voluptas ipsum et consectetur maiores aliquid.",
                      "enabledFeatures": [
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        },
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        },
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        },
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        }
                      ],
                      "features": {
                        "BILLING": false,
                        "LOGS": true,
                        "METRICS": false
                      },
                      "instanceCount": 12,
                      "latestUpgradePathId": "upgrade-12345678",
                      "name": "Regular version set",
                      "parentVersion": "2.0",
                      "productTierId": "Nihil qui ex omnis repellat consectetur.",
                      "releasedAt": "2020-01-01T00:00:00Z",
                      "releasedBy": "John Doe",
                      "resources": [
                        {
                          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                          "id": "r-12345678",
                          "imageConfigId": "imgc-12345678",
                          "infraConfigId": "ic-12345678",
                          "isExternal": true,
                          "managedResourceType": "PortsBasedProxy",
                          "name": "MySQL multi-writer service"
                        },
                        {
                          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                          "id": "r-12345678",
                          "imageConfigId": "imgc-12345678",
                          "infraConfigId": "ic-12345678",
                          "isExternal": true,
                          "managedResourceType": "PortsBasedProxy",
                          "name": "MySQL multi-writer service"
                        }
                      ],
                      "serviceId": "s-12345678",
                      "serviceModelId": "Et ut error delectus quaerat placeat dolores.",
                      "status": "Preferred|Active|Deprecated|Pending",
                      "type": "Major|Incremental|UserDefined",
                      "updatedAt": "2020-01-01T00:00:00Z",
                      "version": "3.0"
                    },
                    {
                      "autoApproveSubscription": false,
                      "baseVersion": "3.0",
                      "createdAt": "2020-01-01T00:00:00Z",
                      "createdBy": "John Doe",
                      "description": "Voluptas ipsum et consectetur maiores aliquid.",
                      "enabledFeatures": [
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        },
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        },
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        },
                        {
                          "configuration": {
                            "provider": "native"
                          },
                          "feature": "LOGS",
                          "scope": "INTERNAL"
                        }
                      ],
                      "features": {
                        "BILLING": false,
                        "LOGS": true,
                        "METRICS": false
                      },
                      "instanceCount": 12,
                      "latestUpgradePathId": "upgrade-12345678",
                      "name": "Regular version set",
                      "parentVersion": "2.0",
                      "productTierId": "Nihil qui ex omnis repellat consectetur.",
                      "releasedAt": "2020-01-01T00:00:00Z",
                      "releasedBy": "John Doe",
                      "resources": [
                        {
                          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                          "id": "r-12345678",
                          "imageConfigId": "imgc-12345678",
                          "infraConfigId": "ic-12345678",
                          "isExternal": true,
                          "managedResourceType": "PortsBasedProxy",
                          "name": "MySQL multi-writer service"
                        },
                        {
                          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                          "id": "r-12345678",
                          "imageConfigId": "imgc-12345678",
                          "infraConfigId": "ic-12345678",
                          "isExternal": true,
                          "managedResourceType": "PortsBasedProxy",
                          "name": "MySQL multi-writer service"
                        }
                      ],
                      "serviceId": "s-12345678",
                      "serviceModelId": "Et ut error delectus quaerat placeat dolores.",
                      "status": "Preferred|Active|Deprecated|Pending",
                      "type": "Major|Incremental|UserDefined",
                      "updatedAt": "2020-01-01T00:00:00Z",
                      "version": "3.0"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used when a bad request is made",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used when authentication fails",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used when authorization fails",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used when a failure occurs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "tier-version-set-api"
        ],
        "summary": "CreateTierVersionSet tier-version-set-api",
        "operationId": "tier-version-set-api#CreateTierVersionSet",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of the Service",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "productTierId",
            "in": "path",
            "description": "The product tier ID that this version set belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Quia eos sed et quibusdam."
            },
            "example": "Beatae beatae."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTierVersionSetRequestBody"
              },
              "example": {
                "description": "Praesentium optio nesciunt.",
                "name": "Major version set",
                "parentVersion": "2.0",
                "type": "Major|Incremental|UserDefined"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTierVersionSetResult"
                },
                "example": {
                  "version": "3.0"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request.",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a version set.",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}": {
      "get": {
        "tags": [
          "tier-version-set-api"
        ],
        "summary": "DescribeTierVersionSet tier-version-set-api",
        "operationId": "tier-version-set-api#DescribeTierVersionSet",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of the Service",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "productTierId",
            "in": "path",
            "description": "The product tier ID that this version set belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Adipisci dolor."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version number for the specific version set.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The version number for the specific version set.",
              "example": "3.0"
            },
            "example": "3.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TierVersionSet"
                },
                "example": {
                  "autoApproveSubscription": false,
                  "baseVersion": "3.0",
                  "createdAt": "2020-01-01T00:00:00Z",
                  "createdBy": "John Doe",
                  "description": "Fugiat magni sapiente.",
                  "enabledFeatures": [
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    },
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    },
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    },
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    }
                  ],
                  "features": {
                    "BILLING": false,
                    "LOGS": true,
                    "METRICS": false
                  },
                  "instanceCount": 12,
                  "latestUpgradePathId": "upgrade-12345678",
                  "name": "Regular version set",
                  "parentVersion": "2.0",
                  "productTierId": "Labore iusto eos.",
                  "releasedAt": "2020-01-01T00:00:00Z",
                  "releasedBy": "John Doe",
                  "resources": [
                    {
                      "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "isExternal": true,
                      "managedResourceType": "PortsBasedProxy",
                      "name": "MySQL multi-writer service"
                    },
                    {
                      "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "isExternal": true,
                      "managedResourceType": "PortsBasedProxy",
                      "name": "MySQL multi-writer service"
                    },
                    {
                      "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "isExternal": true,
                      "managedResourceType": "PortsBasedProxy",
                      "name": "MySQL multi-writer service"
                    }
                  ],
                  "serviceId": "s-12345678",
                  "serviceModelId": "Rerum architecto incidunt quis iste commodi.",
                  "status": "Preferred|Active|Deprecated|Pending",
                  "type": "Major|Incremental|UserDefined",
                  "updatedAt": "2020-01-01T00:00:00Z",
                  "version": "3.0"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used when a bad request is made",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used when authentication fails",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used when authorization fails",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used when a failure occurs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/deprecate": {
      "patch": {
        "tags": [
          "tier-version-set-api"
        ],
        "summary": "DeprecateTierVersionSet tier-version-set-api",
        "operationId": "tier-version-set-api#DeprecateTierVersionSet",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of the Service",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "productTierId",
            "in": "path",
            "description": "The product tier ID that this version set belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Odit et velit nobis eos."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version number for the specific version set.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The version number for the specific version set.",
              "example": "3.0"
            },
            "example": "3.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TierVersionSet"
                },
                "example": {
                  "autoApproveSubscription": false,
                  "baseVersion": "3.0",
                  "createdAt": "2020-01-01T00:00:00Z",
                  "createdBy": "John Doe",
                  "description": "Odit ut doloremque sed voluptates dolorem possimus.",
                  "enabledFeatures": [
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    },
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    }
                  ],
                  "features": {
                    "BILLING": false,
                    "LOGS": true,
                    "METRICS": false
                  },
                  "instanceCount": 12,
                  "latestUpgradePathId": "upgrade-12345678",
                  "name": "Regular version set",
                  "parentVersion": "2.0",
                  "productTierId": "Quasi error laborum pariatur sed mollitia numquam.",
                  "releasedAt": "2020-01-01T00:00:00Z",
                  "releasedBy": "John Doe",
                  "resources": [
                    {
                      "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "isExternal": true,
                      "managedResourceType": "PortsBasedProxy",
                      "name": "MySQL multi-writer service"
                    },
                    {
                      "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "isExternal": true,
                      "managedResourceType": "PortsBasedProxy",
                      "name": "MySQL multi-writer service"
                    }
                  ],
                  "serviceId": "s-12345678",
                  "serviceModelId": "Quisquam quis ut sapiente.",
                  "status": "Preferred|Active|Deprecated|Pending",
                  "type": "Major|Incremental|UserDefined",
                  "updatedAt": "2020-01-01T00:00:00Z",
                  "version": "3.0"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used when a bad request is made",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used when authentication fails",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used when authorization fails",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used when a failure occurs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/diff/{anotherVersion}": {
      "get": {
        "tags": [
          "tier-version-set-api"
        ],
        "summary": "DiffTierVersionSets tier-version-set-api",
        "operationId": "tier-version-set-api#DiffTierVersionSets",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of the Service",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "productTierId",
            "in": "path",
            "description": "The product tier ID that this version set belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Corrupti omnis."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version number for the version set.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The version number for the version set.",
              "example": "3.0"
            },
            "example": "3.0"
          },
          {
            "name": "anotherVersion",
            "in": "path",
            "description": "The target version to compare against.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The target version to compare against.",
              "example": "3.1"
            },
            "example": "3.1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiffTierVersionSetsResult"
                },
                "example": {
                  "anotherVersion": "3.1",
                  "productTierId": "Ab omnis illum.",
                  "resourceChangeSets": {
                    "Dolor modi exercitationem et ut.": {
                      "categorizedResourceChanges": {
                        "Quo amet explicabo.": {
                          "changes": [
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            },
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            }
                          ],
                          "status": "PENDING_UPDATE"
                        },
                        "Ut deserunt voluptate vel necessitatibus.": {
                          "changes": [
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            },
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            }
                          ],
                          "status": "PENDING_UPDATE"
                        },
                        "Vitae omnis molestiae eaque id.": {
                          "changes": [
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            },
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            }
                          ],
                          "status": "PENDING_UPDATE"
                        }
                      },
                      "imageConfigChanges": {
                        "changeState": "PENDING_NEW",
                        "imageConfigId": "imgc-12345678",
                        "imageName": "mysql"
                      },
                      "infraConfigChanges": {
                        "changeState": "PENDING_NEW",
                        "infraConfigId": "ic-12345678",
                        "name": "MySQL Writer Infra Config"
                      },
                      "overallResourceStatus": "PENDING_UPDATE",
                      "productTierFeatureChanges": "PENDING_UPDATE",
                      "resourceChanges": "PENDING_DELETE",
                      "resourceName": "Inventore commodi quasi consequatur."
                    },
                    "Voluptatem provident laboriosam omnis sed.": {
                      "categorizedResourceChanges": {
                        "Quo amet explicabo.": {
                          "changes": [
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            },
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            }
                          ],
                          "status": "PENDING_UPDATE"
                        },
                        "Ut deserunt voluptate vel necessitatibus.": {
                          "changes": [
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            },
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            }
                          ],
                          "status": "PENDING_UPDATE"
                        },
                        "Vitae omnis molestiae eaque id.": {
                          "changes": [
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            },
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            }
                          ],
                          "status": "PENDING_UPDATE"
                        }
                      },
                      "imageConfigChanges": {
                        "changeState": "PENDING_NEW",
                        "imageConfigId": "imgc-12345678",
                        "imageName": "mysql"
                      },
                      "infraConfigChanges": {
                        "changeState": "PENDING_NEW",
                        "infraConfigId": "ic-12345678",
                        "name": "MySQL Writer Infra Config"
                      },
                      "overallResourceStatus": "PENDING_UPDATE",
                      "productTierFeatureChanges": "PENDING_UPDATE",
                      "resourceChanges": "PENDING_DELETE",
                      "resourceName": "Inventore commodi quasi consequatur."
                    }
                  },
                  "serviceId": "s-12345678",
                  "version": "3.0"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used when a bad request is made",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used when authentication fails",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used when authorization fails",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used when a failure occurs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/promote": {
      "patch": {
        "tags": [
          "tier-version-set-api"
        ],
        "summary": "PromoteTierVersionSet tier-version-set-api",
        "operationId": "tier-version-set-api#PromoteTierVersionSet",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of the Service",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "productTierId",
            "in": "path",
            "description": "The product tier ID that this version set belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Quia aperiam sit pariatur."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version number for the specific version set.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The version number for the specific version set.",
              "example": "3.0"
            },
            "example": "3.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TierVersionSet"
                },
                "example": {
                  "autoApproveSubscription": false,
                  "baseVersion": "3.0",
                  "createdAt": "2020-01-01T00:00:00Z",
                  "createdBy": "John Doe",
                  "description": "Ex consequuntur odio amet similique quia aliquid.",
                  "enabledFeatures": [
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    },
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    },
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    }
                  ],
                  "features": {
                    "BILLING": false,
                    "LOGS": true,
                    "METRICS": false
                  },
                  "instanceCount": 12,
                  "latestUpgradePathId": "upgrade-12345678",
                  "name": "Regular version set",
                  "parentVersion": "2.0",
                  "productTierId": "Aut dolorum aut molestiae.",
                  "releasedAt": "2020-01-01T00:00:00Z",
                  "releasedBy": "John Doe",
                  "resources": [
                    {
                      "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "isExternal": true,
                      "managedResourceType": "PortsBasedProxy",
                      "name": "MySQL multi-writer service"
                    },
                    {
                      "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "isExternal": true,
                      "managedResourceType": "PortsBasedProxy",
                      "name": "MySQL multi-writer service"
                    }
                  ],
                  "serviceId": "s-12345678",
                  "serviceModelId": "Qui quia eum itaque nesciunt sit.",
                  "status": "Preferred|Active|Deprecated|Pending",
                  "type": "Major|Incremental|UserDefined",
                  "updatedAt": "2020-01-01T00:00:00Z",
                  "version": "3.0"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used when a bad request is made",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used when authentication fails",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used when authorization fails",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used when a failure occurs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/release": {
      "patch": {
        "tags": [
          "tier-version-set-api"
        ],
        "summary": "ReleaseTierVersionSet tier-version-set-api",
        "operationId": "tier-version-set-api#ReleaseTierVersionSet",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of the Service",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "productTierId",
            "in": "path",
            "description": "The product tier ID that this version set belongs to.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Impedit soluta ab itaque nemo et."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version number for the specific version set.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The version number for the specific version set.",
              "example": "3.0"
            },
            "example": "3.0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseTierVersionSetRequestBody"
              },
              "example": {
                "isPreferred": true,
                "name": "Major version set"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TierVersionSet"
                },
                "example": {
                  "autoApproveSubscription": false,
                  "baseVersion": "3.0",
                  "createdAt": "2020-01-01T00:00:00Z",
                  "createdBy": "John Doe",
                  "description": "Dolorem nisi repellat aut sed commodi aut.",
                  "enabledFeatures": [
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    },
                    {
                      "configuration": {
                        "provider": "native"
                      },
                      "feature": "LOGS",
                      "scope": "INTERNAL"
                    }
                  ],
                  "features": {
                    "BILLING": false,
                    "LOGS": true,
                    "METRICS": false
                  },
                  "instanceCount": 12,
                  "latestUpgradePathId": "upgrade-12345678",
                  "name": "Regular version set",
                  "parentVersion": "2.0",
                  "productTierId": "Omnis alias.",
                  "releasedAt": "2020-01-01T00:00:00Z",
                  "releasedBy": "John Doe",
                  "resources": [
                    {
                      "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "isExternal": true,
                      "managedResourceType": "PortsBasedProxy",
                      "name": "MySQL multi-writer service"
                    },
                    {
                      "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "isExternal": true,
                      "managedResourceType": "PortsBasedProxy",
                      "name": "MySQL multi-writer service"
                    }
                  ],
                  "serviceId": "s-12345678",
                  "serviceModelId": "Nesciunt dolorem est quo dolorem omnis quas.",
                  "status": "Preferred|Active|Deprecated|Pending",
                  "type": "Major|Incremental|UserDefined",
                  "updatedAt": "2020-01-01T00:00:00Z",
                  "version": "3.0"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request.",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to release a version set.",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/producttier/{productTierId}/resource": {
      "get": {
        "tags": [
          "resource-api"
        ],
        "summary": "ListResources resource-api",
        "operationId": "resource-api#ListResources",
        "parameters": [
          {
            "name": "managed",
            "in": "query",
            "description": "Is resource managed by omnistrate",
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "description": "Is resource managed by omnistrate",
              "example": false
            },
            "example": false
          },
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the instance to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the instance to describe. If not specified, the latest version is described.",
              "example": "Optio eum soluta qui ullam et necessitatibus."
            },
            "example": "Reprehenderit error."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service to list resources for",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "si-12345678"
          },
          {
            "name": "productTierId",
            "in": "path",
            "description": "The product tier ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Rerum sunt."
            },
            "example": "pt-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResourcesResult"
                },
                "example": {
                  "ids": [
                    "r-12345678",
                    "r-abcdefgh",
                    "r-1234abcd"
                  ],
                  "nextPageToken": "next-token",
                  "resources": [
                    {
                      "actionHooks": [
                        {
                          "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                          "scope": "CLUSTER",
                          "type": "INIT"
                        }
                      ],
                      "additionalSecurityContext": {
                        "AddCapabilities": [
                          "CAP_NET_ADMIN",
                          "CAP_NET_RAW"
                        ],
                        "DropCapabilities": [
                          "CAP_NET_ADMIN",
                          "CAP_NET_RAW"
                        ],
                        "SupplementalGroupIDs": [
                          1001,
                          999
                        ]
                      },
                      "backupConfiguration": {
                        "backupPeriodInHours": 24,
                        "backupRetentionInDays": 7
                      },
                      "blobStorageConfiguration": {
                        "GCSConfiguration": {},
                        "S3Configuration": {}
                      },
                      "capabilities": [
                        {
                          "capability": "SERVERLESS",
                          "configuration": {
                            "EnableAutoStop": true,
                            "MinimumNodesInPool": 5,
                            "PortsMappingProxyConfig": {
                              "MaxNumberOfClustersPerProxyInstance": 50,
                              "NumberOfPortsPerCluster": 4
                            },
                            "ProxyId": "r-123456",
                            "ReferenceProxyKey": "resource-proxy",
                            "TargetPort": 5432
                          }
                        },
                        {
                          "capability": "SERVERLESS",
                          "configuration": {
                            "EnableAutoStop": true,
                            "MinimumNodesInPool": 5,
                            "PortsMappingProxyConfig": {
                              "MaxNumberOfClustersPerProxyInstance": 50,
                              "NumberOfPortsPerCluster": 4
                            },
                            "ProxyId": "r-123456",
                            "ReferenceProxyKey": "resource-proxy",
                            "TargetPort": 5432
                          }
                        },
                        {
                          "capability": "SERVERLESS",
                          "configuration": {
                            "EnableAutoStop": true,
                            "MinimumNodesInPool": 5,
                            "PortsMappingProxyConfig": {
                              "MaxNumberOfClustersPerProxyInstance": 50,
                              "NumberOfPortsPerCluster": 4
                            },
                            "ProxyId": "r-123456",
                            "ReferenceProxyKey": "resource-proxy",
                            "TargetPort": 5432
                          }
                        }
                      ],
                      "customLabels": {
                        "key": "value"
                      },
                      "customSysCTLs": {
                        "net.ipv4.tcp_syncookies": "1"
                      },
                      "customULimits": [
                        {
                          "ULimitsName": "NoProc",
                          "ULimitsType": "Soft",
                          "ULimitsValue": 1000
                        },
                        {
                          "ULimitsName": "NoFile",
                          "ULimitsType": "Hard",
                          "ULimitsValue": 2048
                        }
                      ],
                      "dependencies": [
                        {
                          "parameterMap": {
                            "clusterId": "writerId",
                            "clusterOrg": "userDatabase"
                          },
                          "resourceId": "r-12345678"
                        },
                        {
                          "parameterMap": {
                            "clusterId": "readerId",
                            "clusterOrg": "userDatabase"
                          },
                          "resourceId": "r-abcdef12"
                        }
                      ],
                      "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                      "environmentVariables": [
                        {
                          "name": "MYSQL_ROOT_PASSWORD",
                          "value": "password"
                        }
                      ],
                      "fileSystemConfiguration": {
                        "EFSFileSystemConfiguration": {
                          "PerformanceMode": "generalPurpose|maxIO",
                          "ProvisionedThroughputInMibps": 125,
                          "ThroughputMode": "provisioned|bursting|elastic"
                        }
                      },
                      "helmChartConfiguration": {
                        "chartName": "my-chart",
                        "chartRepoName": "my-repo",
                        "chartRepoUrl": "https://my-repo.com",
                        "chartValues": {
                          "key1": "value1",
                          "key2": 3,
                          "key3": {
                            "key4": "value4"
                          }
                        },
                        "chartVersion": "1.0.0",
                        "endpointConfiguration": {
                          "admin": {
                            "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                            "networkingType": "PRIVATE",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": false
                          },
                          "cluster": {
                            "host": "https://my-endpoint.com",
                            "networkingType": "PUBLIC",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": true
                          }
                        },
                        "password": "my-password",
                        "runtimeConfiguration": {
                          "disableHooks": true,
                          "recreate": true,
                          "resetThenReuseValues": true,
                          "resetValues": true,
                          "reuseValues": true,
                          "skipCRDs": true,
                          "timeoutNanos": 1000000000,
                          "upgradeCRDs": true,
                          "wait": true,
                          "waitForJobs": true
                        },
                        "username": "my-user"
                      },
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "internal": false,
                      "isDeprecated": false,
                      "key": "galera",
                      "kustomizeConfiguration": {
                        "endpointConfiguration": {
                          "admin": {
                            "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                            "networkingType": "PRIVATE",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": false
                          },
                          "cluster": {
                            "host": "https://my-endpoint.com",
                            "networkingType": "PUBLIC",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": true
                          }
                        },
                        "gitConfiguration": {
                          "accessToken": "my-token",
                          "referenceName": "tags/v1.0.0",
                          "repositoryUrl": "https://github.com/username/myrepo",
                          "userName": "my-user"
                        },
                        "helmChartDependencies": [
                          {
                            "chartName": "cert-manager",
                            "chartVersion": "v1.5.3"
                          },
                          {
                            "chartName": "nginx-ingress",
                            "chartVersion": "v0.48.1"
                          },
                          {
                            "chartName": "external-dns",
                            "chartVersion": "v0.7.0"
                          },
                          {
                            "chartName": "cnpg-operator",
                            "chartVersion": "v0.23.1"
                          }
                        ],
                        "kustomizePath": "/kustomize"
                      },
                      "l4LoadBalancerConfiguration": {
                        "ingressPortConfiguration": [
                          {
                            "associatedResourceIDs": [
                              "r-12345678",
                              "r-abcdef12"
                            ],
                            "backendPort": 8080,
                            "ingressPort": 1234
                          },
                          {
                            "associatedResourceIDs": [
                              "r-12345678",
                              "r-abcdef12"
                            ],
                            "backendPort": 8081,
                            "ingressPort": 5678
                          },
                          {
                            "associatedResourceIDs": [
                              "r-vwxybz12",
                              "r-poij122v"
                            ],
                            "backendPort": 8082,
                            "ingressPort": 9012
                          }
                        ]
                      },
                      "l7LoadBalancerConfiguration": {
                        "paths": [
                          {
                            "associatedResourceID": "r-12345678",
                            "path": "/path",
                            "port": 8080
                          }
                        ]
                      },
                      "name": "Galera",
                      "operatorCRDConfiguration": {
                        "endpointConfiguration": {
                          "admin": {
                            "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                            "networkingType": "PRIVATE",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": false
                          },
                          "cluster": {
                            "host": "https://my-endpoint.com",
                            "networkingType": "PUBLIC",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": true
                          }
                        },
                        "helmChartDependencies": [
                          {
                            "chartName": "cert-manager",
                            "chartVersion": "v1.5.3"
                          },
                          {
                            "chartName": "nginx-ingress",
                            "chartVersion": "v0.48.1"
                          },
                          {
                            "chartName": "external-dns",
                            "chartVersion": "v0.7.0"
                          },
                          {
                            "chartName": "cnpg-operator",
                            "chartVersion": "v0.23.1"
                          }
                        ],
                        "outputParameters": {
                          "expiresAt": "$out.status.notAfter",
                          "issuerName": "letsencrypt-prod"
                        },
                        "readinessConditions": {
                          "$out.status.conditions[?(@.type=='Ready')].status": true
                        },
                        "supplementalFiles": [
                          "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                          "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                        ],
                        "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                      },
                      "productTierId": "pt-12345678",
                      "proxyType": "PortsBasedProxy",
                      "resourceType": "Generic",
                      "serviceId": "s-12345678",
                      "terraformConfigurations": {
                        "Accusamus sed facere consectetur et qui.": {
                          "gitConfiguration": {
                            "accessToken": "my-token",
                            "referenceName": "tags/v1.0.0",
                            "repositoryUrl": "https://github.com/username/myrepo",
                            "userName": "my-user"
                          },
                          "privateModuleGitAccessTokens": {
                            "tokenName": "accessToken"
                          },
                          "requiredOutputKeys": [
                            "output1"
                          ],
                          "requiredOutputs": [
                            {
                              "exported": true,
                              "key": "output1"
                            }
                          ],
                          "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                          "terraformPath": "/project1/tf"
                        },
                        "Sequi asperiores.": {
                          "gitConfiguration": {
                            "accessToken": "my-token",
                            "referenceName": "tags/v1.0.0",
                            "repositoryUrl": "https://github.com/username/myrepo",
                            "userName": "my-user"
                          },
                          "privateModuleGitAccessTokens": {
                            "tokenName": "accessToken"
                          },
                          "requiredOutputKeys": [
                            "output1"
                          ],
                          "requiredOutputs": [
                            {
                              "exported": true,
                              "key": "output1"
                            }
                          ],
                          "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                          "terraformPath": "/project1/tf"
                        }
                      }
                    },
                    {
                      "actionHooks": [
                        {
                          "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                          "scope": "CLUSTER",
                          "type": "INIT"
                        }
                      ],
                      "additionalSecurityContext": {
                        "AddCapabilities": [
                          "CAP_NET_ADMIN",
                          "CAP_NET_RAW"
                        ],
                        "DropCapabilities": [
                          "CAP_NET_ADMIN",
                          "CAP_NET_RAW"
                        ],
                        "SupplementalGroupIDs": [
                          1001,
                          999
                        ]
                      },
                      "backupConfiguration": {
                        "backupPeriodInHours": 24,
                        "backupRetentionInDays": 7
                      },
                      "blobStorageConfiguration": {
                        "GCSConfiguration": {},
                        "S3Configuration": {}
                      },
                      "capabilities": [
                        {
                          "capability": "SERVERLESS",
                          "configuration": {
                            "EnableAutoStop": true,
                            "MinimumNodesInPool": 5,
                            "PortsMappingProxyConfig": {
                              "MaxNumberOfClustersPerProxyInstance": 50,
                              "NumberOfPortsPerCluster": 4
                            },
                            "ProxyId": "r-123456",
                            "ReferenceProxyKey": "resource-proxy",
                            "TargetPort": 5432
                          }
                        },
                        {
                          "capability": "SERVERLESS",
                          "configuration": {
                            "EnableAutoStop": true,
                            "MinimumNodesInPool": 5,
                            "PortsMappingProxyConfig": {
                              "MaxNumberOfClustersPerProxyInstance": 50,
                              "NumberOfPortsPerCluster": 4
                            },
                            "ProxyId": "r-123456",
                            "ReferenceProxyKey": "resource-proxy",
                            "TargetPort": 5432
                          }
                        },
                        {
                          "capability": "SERVERLESS",
                          "configuration": {
                            "EnableAutoStop": true,
                            "MinimumNodesInPool": 5,
                            "PortsMappingProxyConfig": {
                              "MaxNumberOfClustersPerProxyInstance": 50,
                              "NumberOfPortsPerCluster": 4
                            },
                            "ProxyId": "r-123456",
                            "ReferenceProxyKey": "resource-proxy",
                            "TargetPort": 5432
                          }
                        }
                      ],
                      "customLabels": {
                        "key": "value"
                      },
                      "customSysCTLs": {
                        "net.ipv4.tcp_syncookies": "1"
                      },
                      "customULimits": [
                        {
                          "ULimitsName": "NoProc",
                          "ULimitsType": "Soft",
                          "ULimitsValue": 1000
                        },
                        {
                          "ULimitsName": "NoFile",
                          "ULimitsType": "Hard",
                          "ULimitsValue": 2048
                        }
                      ],
                      "dependencies": [
                        {
                          "parameterMap": {
                            "clusterId": "writerId",
                            "clusterOrg": "userDatabase"
                          },
                          "resourceId": "r-12345678"
                        },
                        {
                          "parameterMap": {
                            "clusterId": "readerId",
                            "clusterOrg": "userDatabase"
                          },
                          "resourceId": "r-abcdef12"
                        }
                      ],
                      "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                      "environmentVariables": [
                        {
                          "name": "MYSQL_ROOT_PASSWORD",
                          "value": "password"
                        }
                      ],
                      "fileSystemConfiguration": {
                        "EFSFileSystemConfiguration": {
                          "PerformanceMode": "generalPurpose|maxIO",
                          "ProvisionedThroughputInMibps": 125,
                          "ThroughputMode": "provisioned|bursting|elastic"
                        }
                      },
                      "helmChartConfiguration": {
                        "chartName": "my-chart",
                        "chartRepoName": "my-repo",
                        "chartRepoUrl": "https://my-repo.com",
                        "chartValues": {
                          "key1": "value1",
                          "key2": 3,
                          "key3": {
                            "key4": "value4"
                          }
                        },
                        "chartVersion": "1.0.0",
                        "endpointConfiguration": {
                          "admin": {
                            "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                            "networkingType": "PRIVATE",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": false
                          },
                          "cluster": {
                            "host": "https://my-endpoint.com",
                            "networkingType": "PUBLIC",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": true
                          }
                        },
                        "password": "my-password",
                        "runtimeConfiguration": {
                          "disableHooks": true,
                          "recreate": true,
                          "resetThenReuseValues": true,
                          "resetValues": true,
                          "reuseValues": true,
                          "skipCRDs": true,
                          "timeoutNanos": 1000000000,
                          "upgradeCRDs": true,
                          "wait": true,
                          "waitForJobs": true
                        },
                        "username": "my-user"
                      },
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "internal": false,
                      "isDeprecated": false,
                      "key": "galera",
                      "kustomizeConfiguration": {
                        "endpointConfiguration": {
                          "admin": {
                            "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                            "networkingType": "PRIVATE",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": false
                          },
                          "cluster": {
                            "host": "https://my-endpoint.com",
                            "networkingType": "PUBLIC",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": true
                          }
                        },
                        "gitConfiguration": {
                          "accessToken": "my-token",
                          "referenceName": "tags/v1.0.0",
                          "repositoryUrl": "https://github.com/username/myrepo",
                          "userName": "my-user"
                        },
                        "helmChartDependencies": [
                          {
                            "chartName": "cert-manager",
                            "chartVersion": "v1.5.3"
                          },
                          {
                            "chartName": "nginx-ingress",
                            "chartVersion": "v0.48.1"
                          },
                          {
                            "chartName": "external-dns",
                            "chartVersion": "v0.7.0"
                          },
                          {
                            "chartName": "cnpg-operator",
                            "chartVersion": "v0.23.1"
                          }
                        ],
                        "kustomizePath": "/kustomize"
                      },
                      "l4LoadBalancerConfiguration": {
                        "ingressPortConfiguration": [
                          {
                            "associatedResourceIDs": [
                              "r-12345678",
                              "r-abcdef12"
                            ],
                            "backendPort": 8080,
                            "ingressPort": 1234
                          },
                          {
                            "associatedResourceIDs": [
                              "r-12345678",
                              "r-abcdef12"
                            ],
                            "backendPort": 8081,
                            "ingressPort": 5678
                          },
                          {
                            "associatedResourceIDs": [
                              "r-vwxybz12",
                              "r-poij122v"
                            ],
                            "backendPort": 8082,
                            "ingressPort": 9012
                          }
                        ]
                      },
                      "l7LoadBalancerConfiguration": {
                        "paths": [
                          {
                            "associatedResourceID": "r-12345678",
                            "path": "/path",
                            "port": 8080
                          }
                        ]
                      },
                      "name": "Galera",
                      "operatorCRDConfiguration": {
                        "endpointConfiguration": {
                          "admin": {
                            "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                            "networkingType": "PRIVATE",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": false
                          },
                          "cluster": {
                            "host": "https://my-endpoint.com",
                            "networkingType": "PUBLIC",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": true
                          }
                        },
                        "helmChartDependencies": [
                          {
                            "chartName": "cert-manager",
                            "chartVersion": "v1.5.3"
                          },
                          {
                            "chartName": "nginx-ingress",
                            "chartVersion": "v0.48.1"
                          },
                          {
                            "chartName": "external-dns",
                            "chartVersion": "v0.7.0"
                          },
                          {
                            "chartName": "cnpg-operator",
                            "chartVersion": "v0.23.1"
                          }
                        ],
                        "outputParameters": {
                          "expiresAt": "$out.status.notAfter",
                          "issuerName": "letsencrypt-prod"
                        },
                        "readinessConditions": {
                          "$out.status.conditions[?(@.type=='Ready')].status": true
                        },
                        "supplementalFiles": [
                          "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                          "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                        ],
                        "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                      },
                      "productTierId": "pt-12345678",
                      "proxyType": "PortsBasedProxy",
                      "resourceType": "Generic",
                      "serviceId": "s-12345678",
                      "terraformConfigurations": {
                        "Accusamus sed facere consectetur et qui.": {
                          "gitConfiguration": {
                            "accessToken": "my-token",
                            "referenceName": "tags/v1.0.0",
                            "repositoryUrl": "https://github.com/username/myrepo",
                            "userName": "my-user"
                          },
                          "privateModuleGitAccessTokens": {
                            "tokenName": "accessToken"
                          },
                          "requiredOutputKeys": [
                            "output1"
                          ],
                          "requiredOutputs": [
                            {
                              "exported": true,
                              "key": "output1"
                            }
                          ],
                          "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                          "terraformPath": "/project1/tf"
                        },
                        "Sequi asperiores.": {
                          "gitConfiguration": {
                            "accessToken": "my-token",
                            "referenceName": "tags/v1.0.0",
                            "repositoryUrl": "https://github.com/username/myrepo",
                            "userName": "my-user"
                          },
                          "privateModuleGitAccessTokens": {
                            "tokenName": "accessToken"
                          },
                          "requiredOutputKeys": [
                            "output1"
                          ],
                          "requiredOutputs": [
                            {
                              "exported": true,
                              "key": "output1"
                            }
                          ],
                          "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                          "terraformPath": "/project1/tf"
                        }
                      }
                    },
                    {
                      "actionHooks": [
                        {
                          "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                          "scope": "CLUSTER",
                          "type": "INIT"
                        }
                      ],
                      "additionalSecurityContext": {
                        "AddCapabilities": [
                          "CAP_NET_ADMIN",
                          "CAP_NET_RAW"
                        ],
                        "DropCapabilities": [
                          "CAP_NET_ADMIN",
                          "CAP_NET_RAW"
                        ],
                        "SupplementalGroupIDs": [
                          1001,
                          999
                        ]
                      },
                      "backupConfiguration": {
                        "backupPeriodInHours": 24,
                        "backupRetentionInDays": 7
                      },
                      "blobStorageConfiguration": {
                        "GCSConfiguration": {},
                        "S3Configuration": {}
                      },
                      "capabilities": [
                        {
                          "capability": "SERVERLESS",
                          "configuration": {
                            "EnableAutoStop": true,
                            "MinimumNodesInPool": 5,
                            "PortsMappingProxyConfig": {
                              "MaxNumberOfClustersPerProxyInstance": 50,
                              "NumberOfPortsPerCluster": 4
                            },
                            "ProxyId": "r-123456",
                            "ReferenceProxyKey": "resource-proxy",
                            "TargetPort": 5432
                          }
                        },
                        {
                          "capability": "SERVERLESS",
                          "configuration": {
                            "EnableAutoStop": true,
                            "MinimumNodesInPool": 5,
                            "PortsMappingProxyConfig": {
                              "MaxNumberOfClustersPerProxyInstance": 50,
                              "NumberOfPortsPerCluster": 4
                            },
                            "ProxyId": "r-123456",
                            "ReferenceProxyKey": "resource-proxy",
                            "TargetPort": 5432
                          }
                        },
                        {
                          "capability": "SERVERLESS",
                          "configuration": {
                            "EnableAutoStop": true,
                            "MinimumNodesInPool": 5,
                            "PortsMappingProxyConfig": {
                              "MaxNumberOfClustersPerProxyInstance": 50,
                              "NumberOfPortsPerCluster": 4
                            },
                            "ProxyId": "r-123456",
                            "ReferenceProxyKey": "resource-proxy",
                            "TargetPort": 5432
                          }
                        }
                      ],
                      "customLabels": {
                        "key": "value"
                      },
                      "customSysCTLs": {
                        "net.ipv4.tcp_syncookies": "1"
                      },
                      "customULimits": [
                        {
                          "ULimitsName": "NoProc",
                          "ULimitsType": "Soft",
                          "ULimitsValue": 1000
                        },
                        {
                          "ULimitsName": "NoFile",
                          "ULimitsType": "Hard",
                          "ULimitsValue": 2048
                        }
                      ],
                      "dependencies": [
                        {
                          "parameterMap": {
                            "clusterId": "writerId",
                            "clusterOrg": "userDatabase"
                          },
                          "resourceId": "r-12345678"
                        },
                        {
                          "parameterMap": {
                            "clusterId": "readerId",
                            "clusterOrg": "userDatabase"
                          },
                          "resourceId": "r-abcdef12"
                        }
                      ],
                      "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                      "environmentVariables": [
                        {
                          "name": "MYSQL_ROOT_PASSWORD",
                          "value": "password"
                        }
                      ],
                      "fileSystemConfiguration": {
                        "EFSFileSystemConfiguration": {
                          "PerformanceMode": "generalPurpose|maxIO",
                          "ProvisionedThroughputInMibps": 125,
                          "ThroughputMode": "provisioned|bursting|elastic"
                        }
                      },
                      "helmChartConfiguration": {
                        "chartName": "my-chart",
                        "chartRepoName": "my-repo",
                        "chartRepoUrl": "https://my-repo.com",
                        "chartValues": {
                          "key1": "value1",
                          "key2": 3,
                          "key3": {
                            "key4": "value4"
                          }
                        },
                        "chartVersion": "1.0.0",
                        "endpointConfiguration": {
                          "admin": {
                            "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                            "networkingType": "PRIVATE",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": false
                          },
                          "cluster": {
                            "host": "https://my-endpoint.com",
                            "networkingType": "PUBLIC",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": true
                          }
                        },
                        "password": "my-password",
                        "runtimeConfiguration": {
                          "disableHooks": true,
                          "recreate": true,
                          "resetThenReuseValues": true,
                          "resetValues": true,
                          "reuseValues": true,
                          "skipCRDs": true,
                          "timeoutNanos": 1000000000,
                          "upgradeCRDs": true,
                          "wait": true,
                          "waitForJobs": true
                        },
                        "username": "my-user"
                      },
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "internal": false,
                      "isDeprecated": false,
                      "key": "galera",
                      "kustomizeConfiguration": {
                        "endpointConfiguration": {
                          "admin": {
                            "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                            "networkingType": "PRIVATE",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": false
                          },
                          "cluster": {
                            "host": "https://my-endpoint.com",
                            "networkingType": "PUBLIC",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": true
                          }
                        },
                        "gitConfiguration": {
                          "accessToken": "my-token",
                          "referenceName": "tags/v1.0.0",
                          "repositoryUrl": "https://github.com/username/myrepo",
                          "userName": "my-user"
                        },
                        "helmChartDependencies": [
                          {
                            "chartName": "cert-manager",
                            "chartVersion": "v1.5.3"
                          },
                          {
                            "chartName": "nginx-ingress",
                            "chartVersion": "v0.48.1"
                          },
                          {
                            "chartName": "external-dns",
                            "chartVersion": "v0.7.0"
                          },
                          {
                            "chartName": "cnpg-operator",
                            "chartVersion": "v0.23.1"
                          }
                        ],
                        "kustomizePath": "/kustomize"
                      },
                      "l4LoadBalancerConfiguration": {
                        "ingressPortConfiguration": [
                          {
                            "associatedResourceIDs": [
                              "r-12345678",
                              "r-abcdef12"
                            ],
                            "backendPort": 8080,
                            "ingressPort": 1234
                          },
                          {
                            "associatedResourceIDs": [
                              "r-12345678",
                              "r-abcdef12"
                            ],
                            "backendPort": 8081,
                            "ingressPort": 5678
                          },
                          {
                            "associatedResourceIDs": [
                              "r-vwxybz12",
                              "r-poij122v"
                            ],
                            "backendPort": 8082,
                            "ingressPort": 9012
                          }
                        ]
                      },
                      "l7LoadBalancerConfiguration": {
                        "paths": [
                          {
                            "associatedResourceID": "r-12345678",
                            "path": "/path",
                            "port": 8080
                          }
                        ]
                      },
                      "name": "Galera",
                      "operatorCRDConfiguration": {
                        "endpointConfiguration": {
                          "admin": {
                            "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                            "networkingType": "PRIVATE",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": false
                          },
                          "cluster": {
                            "host": "https://my-endpoint.com",
                            "networkingType": "PUBLIC",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": true
                          }
                        },
                        "helmChartDependencies": [
                          {
                            "chartName": "cert-manager",
                            "chartVersion": "v1.5.3"
                          },
                          {
                            "chartName": "nginx-ingress",
                            "chartVersion": "v0.48.1"
                          },
                          {
                            "chartName": "external-dns",
                            "chartVersion": "v0.7.0"
                          },
                          {
                            "chartName": "cnpg-operator",
                            "chartVersion": "v0.23.1"
                          }
                        ],
                        "outputParameters": {
                          "expiresAt": "$out.status.notAfter",
                          "issuerName": "letsencrypt-prod"
                        },
                        "readinessConditions": {
                          "$out.status.conditions[?(@.type=='Ready')].status": true
                        },
                        "supplementalFiles": [
                          "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                          "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                        ],
                        "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                      },
                      "productTierId": "pt-12345678",
                      "proxyType": "PortsBasedProxy",
                      "resourceType": "Generic",
                      "serviceId": "s-12345678",
                      "terraformConfigurations": {
                        "Accusamus sed facere consectetur et qui.": {
                          "gitConfiguration": {
                            "accessToken": "my-token",
                            "referenceName": "tags/v1.0.0",
                            "repositoryUrl": "https://github.com/username/myrepo",
                            "userName": "my-user"
                          },
                          "privateModuleGitAccessTokens": {
                            "tokenName": "accessToken"
                          },
                          "requiredOutputKeys": [
                            "output1"
                          ],
                          "requiredOutputs": [
                            {
                              "exported": true,
                              "key": "output1"
                            }
                          ],
                          "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                          "terraformPath": "/project1/tf"
                        },
                        "Sequi asperiores.": {
                          "gitConfiguration": {
                            "accessToken": "my-token",
                            "referenceName": "tags/v1.0.0",
                            "repositoryUrl": "https://github.com/username/myrepo",
                            "userName": "my-user"
                          },
                          "privateModuleGitAccessTokens": {
                            "tokenName": "accessToken"
                          },
                          "requiredOutputKeys": [
                            "output1"
                          ],
                          "requiredOutputs": [
                            {
                              "exported": true,
                              "key": "output1"
                            }
                          ],
                          "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                          "terraformPath": "/project1/tf"
                        }
                      }
                    },
                    {
                      "actionHooks": [
                        {
                          "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                          "scope": "CLUSTER",
                          "type": "INIT"
                        }
                      ],
                      "additionalSecurityContext": {
                        "AddCapabilities": [
                          "CAP_NET_ADMIN",
                          "CAP_NET_RAW"
                        ],
                        "DropCapabilities": [
                          "CAP_NET_ADMIN",
                          "CAP_NET_RAW"
                        ],
                        "SupplementalGroupIDs": [
                          1001,
                          999
                        ]
                      },
                      "backupConfiguration": {
                        "backupPeriodInHours": 24,
                        "backupRetentionInDays": 7
                      },
                      "blobStorageConfiguration": {
                        "GCSConfiguration": {},
                        "S3Configuration": {}
                      },
                      "capabilities": [
                        {
                          "capability": "SERVERLESS",
                          "configuration": {
                            "EnableAutoStop": true,
                            "MinimumNodesInPool": 5,
                            "PortsMappingProxyConfig": {
                              "MaxNumberOfClustersPerProxyInstance": 50,
                              "NumberOfPortsPerCluster": 4
                            },
                            "ProxyId": "r-123456",
                            "ReferenceProxyKey": "resource-proxy",
                            "TargetPort": 5432
                          }
                        },
                        {
                          "capability": "SERVERLESS",
                          "configuration": {
                            "EnableAutoStop": true,
                            "MinimumNodesInPool": 5,
                            "PortsMappingProxyConfig": {
                              "MaxNumberOfClustersPerProxyInstance": 50,
                              "NumberOfPortsPerCluster": 4
                            },
                            "ProxyId": "r-123456",
                            "ReferenceProxyKey": "resource-proxy",
                            "TargetPort": 5432
                          }
                        },
                        {
                          "capability": "SERVERLESS",
                          "configuration": {
                            "EnableAutoStop": true,
                            "MinimumNodesInPool": 5,
                            "PortsMappingProxyConfig": {
                              "MaxNumberOfClustersPerProxyInstance": 50,
                              "NumberOfPortsPerCluster": 4
                            },
                            "ProxyId": "r-123456",
                            "ReferenceProxyKey": "resource-proxy",
                            "TargetPort": 5432
                          }
                        }
                      ],
                      "customLabels": {
                        "key": "value"
                      },
                      "customSysCTLs": {
                        "net.ipv4.tcp_syncookies": "1"
                      },
                      "customULimits": [
                        {
                          "ULimitsName": "NoProc",
                          "ULimitsType": "Soft",
                          "ULimitsValue": 1000
                        },
                        {
                          "ULimitsName": "NoFile",
                          "ULimitsType": "Hard",
                          "ULimitsValue": 2048
                        }
                      ],
                      "dependencies": [
                        {
                          "parameterMap": {
                            "clusterId": "writerId",
                            "clusterOrg": "userDatabase"
                          },
                          "resourceId": "r-12345678"
                        },
                        {
                          "parameterMap": {
                            "clusterId": "readerId",
                            "clusterOrg": "userDatabase"
                          },
                          "resourceId": "r-abcdef12"
                        }
                      ],
                      "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                      "environmentVariables": [
                        {
                          "name": "MYSQL_ROOT_PASSWORD",
                          "value": "password"
                        }
                      ],
                      "fileSystemConfiguration": {
                        "EFSFileSystemConfiguration": {
                          "PerformanceMode": "generalPurpose|maxIO",
                          "ProvisionedThroughputInMibps": 125,
                          "ThroughputMode": "provisioned|bursting|elastic"
                        }
                      },
                      "helmChartConfiguration": {
                        "chartName": "my-chart",
                        "chartRepoName": "my-repo",
                        "chartRepoUrl": "https://my-repo.com",
                        "chartValues": {
                          "key1": "value1",
                          "key2": 3,
                          "key3": {
                            "key4": "value4"
                          }
                        },
                        "chartVersion": "1.0.0",
                        "endpointConfiguration": {
                          "admin": {
                            "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                            "networkingType": "PRIVATE",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": false
                          },
                          "cluster": {
                            "host": "https://my-endpoint.com",
                            "networkingType": "PUBLIC",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": true
                          }
                        },
                        "password": "my-password",
                        "runtimeConfiguration": {
                          "disableHooks": true,
                          "recreate": true,
                          "resetThenReuseValues": true,
                          "resetValues": true,
                          "reuseValues": true,
                          "skipCRDs": true,
                          "timeoutNanos": 1000000000,
                          "upgradeCRDs": true,
                          "wait": true,
                          "waitForJobs": true
                        },
                        "username": "my-user"
                      },
                      "id": "r-12345678",
                      "imageConfigId": "imgc-12345678",
                      "infraConfigId": "ic-12345678",
                      "internal": false,
                      "isDeprecated": false,
                      "key": "galera",
                      "kustomizeConfiguration": {
                        "endpointConfiguration": {
                          "admin": {
                            "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                            "networkingType": "PRIVATE",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": false
                          },
                          "cluster": {
                            "host": "https://my-endpoint.com",
                            "networkingType": "PUBLIC",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": true
                          }
                        },
                        "gitConfiguration": {
                          "accessToken": "my-token",
                          "referenceName": "tags/v1.0.0",
                          "repositoryUrl": "https://github.com/username/myrepo",
                          "userName": "my-user"
                        },
                        "helmChartDependencies": [
                          {
                            "chartName": "cert-manager",
                            "chartVersion": "v1.5.3"
                          },
                          {
                            "chartName": "nginx-ingress",
                            "chartVersion": "v0.48.1"
                          },
                          {
                            "chartName": "external-dns",
                            "chartVersion": "v0.7.0"
                          },
                          {
                            "chartName": "cnpg-operator",
                            "chartVersion": "v0.23.1"
                          }
                        ],
                        "kustomizePath": "/kustomize"
                      },
                      "l4LoadBalancerConfiguration": {
                        "ingressPortConfiguration": [
                          {
                            "associatedResourceIDs": [
                              "r-12345678",
                              "r-abcdef12"
                            ],
                            "backendPort": 8080,
                            "ingressPort": 1234
                          },
                          {
                            "associatedResourceIDs": [
                              "r-12345678",
                              "r-abcdef12"
                            ],
                            "backendPort": 8081,
                            "ingressPort": 5678
                          },
                          {
                            "associatedResourceIDs": [
                              "r-vwxybz12",
                              "r-poij122v"
                            ],
                            "backendPort": 8082,
                            "ingressPort": 9012
                          }
                        ]
                      },
                      "l7LoadBalancerConfiguration": {
                        "paths": [
                          {
                            "associatedResourceID": "r-12345678",
                            "path": "/path",
                            "port": 8080
                          }
                        ]
                      },
                      "name": "Galera",
                      "operatorCRDConfiguration": {
                        "endpointConfiguration": {
                          "admin": {
                            "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                            "networkingType": "PRIVATE",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": false
                          },
                          "cluster": {
                            "host": "https://my-endpoint.com",
                            "networkingType": "PUBLIC",
                            "ports": [
                              8080,
                              8081
                            ],
                            "primary": true
                          }
                        },
                        "helmChartDependencies": [
                          {
                            "chartName": "cert-manager",
                            "chartVersion": "v1.5.3"
                          },
                          {
                            "chartName": "nginx-ingress",
                            "chartVersion": "v0.48.1"
                          },
                          {
                            "chartName": "external-dns",
                            "chartVersion": "v0.7.0"
                          },
                          {
                            "chartName": "cnpg-operator",
                            "chartVersion": "v0.23.1"
                          }
                        ],
                        "outputParameters": {
                          "expiresAt": "$out.status.notAfter",
                          "issuerName": "letsencrypt-prod"
                        },
                        "readinessConditions": {
                          "$out.status.conditions[?(@.type=='Ready')].status": true
                        },
                        "supplementalFiles": [
                          "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                          "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                        ],
                        "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                      },
                      "productTierId": "pt-12345678",
                      "proxyType": "PortsBasedProxy",
                      "resourceType": "Generic",
                      "serviceId": "s-12345678",
                      "terraformConfigurations": {
                        "Accusamus sed facere consectetur et qui.": {
                          "gitConfiguration": {
                            "accessToken": "my-token",
                            "referenceName": "tags/v1.0.0",
                            "repositoryUrl": "https://github.com/username/myrepo",
                            "userName": "my-user"
                          },
                          "privateModuleGitAccessTokens": {
                            "tokenName": "accessToken"
                          },
                          "requiredOutputKeys": [
                            "output1"
                          ],
                          "requiredOutputs": [
                            {
                              "exported": true,
                              "key": "output1"
                            }
                          ],
                          "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                          "terraformPath": "/project1/tf"
                        },
                        "Sequi asperiores.": {
                          "gitConfiguration": {
                            "accessToken": "my-token",
                            "referenceName": "tags/v1.0.0",
                            "repositoryUrl": "https://github.com/username/myrepo",
                            "userName": "my-user"
                          },
                          "privateModuleGitAccessTokens": {
                            "tokenName": "accessToken"
                          },
                          "requiredOutputKeys": [
                            "output1"
                          ],
                          "requiredOutputs": [
                            {
                              "exported": true,
                              "key": "output1"
                            }
                          ],
                          "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                          "terraformPath": "/project1/tf"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list resources",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource": {
      "post": {
        "tags": [
          "resource-api"
        ],
        "summary": "CreateResource resource-api",
        "operationId": "resource-api#CreateResource",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateResourceRequestBody"
              },
              "example": {
                "additionalSecurityContext": {
                  "AddCapabilities": [
                    "CAP_NET_ADMIN",
                    "CAP_NET_RAW"
                  ],
                  "DropCapabilities": [
                    "CAP_NET_ADMIN",
                    "CAP_NET_RAW"
                  ],
                  "SupplementalGroupIDs": [
                    1001,
                    999
                  ]
                },
                "backupConfiguration": {
                  "backupPeriodInHours": 24,
                  "backupRetentionInDays": 7
                },
                "blobStorageConfiguration": {
                  "GCSConfiguration": {},
                  "S3Configuration": {}
                },
                "customLabels": {
                  "key": "value"
                },
                "customSysCTLs": {
                  "net.ipv4.tcp_syncookies": "1"
                },
                "customULimits": [
                  {
                    "ULimitsName": "NoProc",
                    "ULimitsType": "Soft",
                    "ULimitsValue": 1000
                  },
                  {
                    "ULimitsName": "NoFile",
                    "ULimitsType": "Hard",
                    "ULimitsValue": 2048
                  }
                ],
                "description": "A resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                "environmentVariables": [
                  {
                    "key": "MYSQL_ROOT_PASSWORD",
                    "value": "password"
                  }
                ],
                "fileSystemConfiguration": {
                  "EFSFileSystemConfiguration": {
                    "PerformanceMode": "generalPurpose|maxIO",
                    "ProvisionedThroughputInMibps": 125,
                    "ThroughputMode": "provisioned|bursting|elastic"
                  }
                },
                "helmChartConfiguration": {
                  "chartName": "my-chart",
                  "chartRepoName": "my-repo",
                  "chartRepoUrl": "https://my-repo.com",
                  "chartValues": {
                    "key1": "value1",
                    "key2": 3,
                    "key3": {
                      "key4": "value4"
                    }
                  },
                  "chartVersion": "1.0.0",
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "password": "my-password",
                  "runtimeConfiguration": {
                    "disableHooks": true,
                    "recreate": true,
                    "resetThenReuseValues": true,
                    "resetValues": true,
                    "reuseValues": true,
                    "skipCRDs": true,
                    "timeoutNanos": 1000000000,
                    "upgradeCRDs": true,
                    "wait": true,
                    "waitForJobs": true
                  },
                  "username": "my-user"
                },
                "imageConfigId": "imgc-12345678",
                "infraConfigId": "ic-12345678",
                "internal": false,
                "isProxy": false,
                "key": "galera",
                "kustomizeConfiguration": {
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "gitConfiguration": {
                    "accessToken": "my-token",
                    "referenceName": "tags/v1.0.0",
                    "repositoryUrl": "https://github.com/username/myrepo",
                    "userName": "my-user"
                  },
                  "helmChartDependencies": [
                    {
                      "chartName": "cert-manager",
                      "chartVersion": "v1.5.3"
                    },
                    {
                      "chartName": "nginx-ingress",
                      "chartVersion": "v0.48.1"
                    },
                    {
                      "chartName": "external-dns",
                      "chartVersion": "v0.7.0"
                    },
                    {
                      "chartName": "cnpg-operator",
                      "chartVersion": "v0.23.1"
                    }
                  ],
                  "kustomizePath": "/kustomize"
                },
                "l4LoadBalancerConfiguration": {
                  "ingressPortConfiguration": [
                    {
                      "associatedResourceIDs": [
                        "r-12345678",
                        "r-abcdef12"
                      ],
                      "backendPort": 8080,
                      "ingressPort": 1234
                    },
                    {
                      "associatedResourceIDs": [
                        "r-12345678",
                        "r-abcdef12"
                      ],
                      "backendPort": 8081,
                      "ingressPort": 5678
                    },
                    {
                      "associatedResourceIDs": [
                        "r-vwxybz12",
                        "r-poij122v"
                      ],
                      "backendPort": 8082,
                      "ingressPort": 9012
                    }
                  ]
                },
                "l7LoadBalancerConfiguration": {
                  "paths": [
                    {
                      "associatedResourceID": "r-12345678",
                      "path": "/path",
                      "port": 8080
                    }
                  ]
                },
                "name": "Galera",
                "operatorCRDConfiguration": {
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "helmChartDependencies": [
                    {
                      "chartName": "cert-manager",
                      "chartVersion": "v1.5.3"
                    },
                    {
                      "chartName": "nginx-ingress",
                      "chartVersion": "v0.48.1"
                    },
                    {
                      "chartName": "external-dns",
                      "chartVersion": "v0.7.0"
                    },
                    {
                      "chartName": "cnpg-operator",
                      "chartVersion": "v0.23.1"
                    }
                  ],
                  "outputParameters": {
                    "expiresAt": "$out.status.notAfter",
                    "issuerName": "letsencrypt-prod"
                  },
                  "readinessConditions": {
                    "$out.status.conditions[?(@.type=='Ready')].status": true
                  },
                  "supplementalFiles": [
                    "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                    "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                  ],
                  "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                },
                "productTierId": "pt-12345678",
                "proxyType": "PortsBasedProxy",
                "resourceDependencies": [
                  {
                    "parameterMap": {
                      "userDatabase": "clusterOrg",
                      "writerId": "clusterWriterId"
                    },
                    "resourceId": "r-12345678"
                  },
                  {
                    "parameterMap": {
                      "readerId": "clusterReaderId",
                      "userDatabase": "clusterOrg"
                    },
                    "resourceId": "r-abcdef12"
                  }
                ],
                "resourceType": "Generic",
                "terraformConfigurations": {
                  "Officiis facilis impedit animi et.": {
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "privateModuleGitAccessTokens": {
                      "tokenName": "accessToken"
                    },
                    "requiredOutputKeys": [
                      "output1"
                    ],
                    "requiredOutputs": [
                      {
                        "exported": true,
                        "key": "output1"
                      }
                    ],
                    "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                    "terraformPath": "/project1/tf"
                  },
                  "Quis exercitationem dolor culpa perferendis et qui.": {
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "privateModuleGitAccessTokens": {
                      "tokenName": "accessToken"
                    },
                    "requiredOutputKeys": [
                      "output1"
                    ],
                    "requiredOutputs": [
                      {
                        "exported": true,
                        "key": "output1"
                      }
                    ],
                    "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                    "terraformPath": "/project1/tf"
                  },
                  "Sunt ea harum eum dignissimos incidunt.": {
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "privateModuleGitAccessTokens": {
                      "tokenName": "accessToken"
                    },
                    "requiredOutputKeys": [
                      "output1"
                    ],
                    "requiredOutputs": [
                      {
                        "exported": true,
                        "key": "output1"
                      }
                    ],
                    "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                    "terraformPath": "/project1/tf"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "resource ID created",
                  "example": "r-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "r-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create an resource",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{id}": {
      "delete": {
        "tags": [
          "resource-api"
        ],
        "summary": "DeleteResource resource-api",
        "operationId": "resource-api#DeleteResource",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Eos maiores totam quos debitis."
            },
            "example": "r-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete an resource",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "resource-api"
        ],
        "summary": "DescribeResource resource-api",
        "operationId": "resource-api#DescribeResource",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the resource to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the resource to describe. If not specified, the latest version is described.",
              "example": "Dolore veritatis dolor esse sit aut similique."
            },
            "example": "Iure quia qui iure dicta sint fugit."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "ProductTierId of the resource to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Facilis itaque aut aut."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Veniam earum maiores dolorem voluptas."
            },
            "example": "r-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeResourceResult"
                },
                "example": {
                  "actionHooks": [
                    {
                      "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                      "scope": "CLUSTER",
                      "type": "INIT"
                    }
                  ],
                  "additionalSecurityContext": {
                    "AddCapabilities": [
                      "CAP_NET_ADMIN",
                      "CAP_NET_RAW"
                    ],
                    "DropCapabilities": [
                      "CAP_NET_ADMIN",
                      "CAP_NET_RAW"
                    ],
                    "SupplementalGroupIDs": [
                      1001,
                      999
                    ]
                  },
                  "backupConfiguration": {
                    "backupPeriodInHours": 24,
                    "backupRetentionInDays": 7
                  },
                  "blobStorageConfiguration": {
                    "GCSConfiguration": {},
                    "S3Configuration": {}
                  },
                  "capabilities": [
                    {
                      "capability": "SERVERLESS",
                      "configuration": {
                        "EnableAutoStop": true,
                        "MinimumNodesInPool": 5,
                        "PortsMappingProxyConfig": {
                          "MaxNumberOfClustersPerProxyInstance": 50,
                          "NumberOfPortsPerCluster": 4
                        },
                        "ProxyId": "r-123456",
                        "ReferenceProxyKey": "resource-proxy",
                        "TargetPort": 5432
                      }
                    },
                    {
                      "capability": "SERVERLESS",
                      "configuration": {
                        "EnableAutoStop": true,
                        "MinimumNodesInPool": 5,
                        "PortsMappingProxyConfig": {
                          "MaxNumberOfClustersPerProxyInstance": 50,
                          "NumberOfPortsPerCluster": 4
                        },
                        "ProxyId": "r-123456",
                        "ReferenceProxyKey": "resource-proxy",
                        "TargetPort": 5432
                      }
                    },
                    {
                      "capability": "SERVERLESS",
                      "configuration": {
                        "EnableAutoStop": true,
                        "MinimumNodesInPool": 5,
                        "PortsMappingProxyConfig": {
                          "MaxNumberOfClustersPerProxyInstance": 50,
                          "NumberOfPortsPerCluster": 4
                        },
                        "ProxyId": "r-123456",
                        "ReferenceProxyKey": "resource-proxy",
                        "TargetPort": 5432
                      }
                    }
                  ],
                  "customLabels": {
                    "key": "value"
                  },
                  "customSysCTLs": {
                    "net.ipv4.tcp_syncookies": "1"
                  },
                  "customULimits": [
                    {
                      "ULimitsName": "NoProc",
                      "ULimitsType": "Soft",
                      "ULimitsValue": 1000
                    },
                    {
                      "ULimitsName": "NoFile",
                      "ULimitsType": "Hard",
                      "ULimitsValue": 2048
                    }
                  ],
                  "dependencies": [
                    {
                      "parameterMap": {
                        "clusterId": "writerId",
                        "clusterOrg": "userDatabase"
                      },
                      "resourceId": "r-12345678"
                    },
                    {
                      "parameterMap": {
                        "clusterId": "readerId",
                        "clusterOrg": "userDatabase"
                      },
                      "resourceId": "r-abcdef12"
                    }
                  ],
                  "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                  "environmentVariables": [
                    {
                      "name": "MYSQL_ROOT_PASSWORD",
                      "value": "password"
                    }
                  ],
                  "fileSystemConfiguration": {
                    "EFSFileSystemConfiguration": {
                      "PerformanceMode": "generalPurpose|maxIO",
                      "ProvisionedThroughputInMibps": 125,
                      "ThroughputMode": "provisioned|bursting|elastic"
                    }
                  },
                  "helmChartConfiguration": {
                    "chartName": "my-chart",
                    "chartRepoName": "my-repo",
                    "chartRepoUrl": "https://my-repo.com",
                    "chartValues": {
                      "key1": "value1",
                      "key2": 3,
                      "key3": {
                        "key4": "value4"
                      }
                    },
                    "chartVersion": "1.0.0",
                    "endpointConfiguration": {
                      "admin": {
                        "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                        "networkingType": "PRIVATE",
                        "ports": [
                          8080,
                          8081
                        ],
                        "primary": false
                      },
                      "cluster": {
                        "host": "https://my-endpoint.com",
                        "networkingType": "PUBLIC",
                        "ports": [
                          8080,
                          8081
                        ],
                        "primary": true
                      }
                    },
                    "password": "my-password",
                    "runtimeConfiguration": {
                      "disableHooks": true,
                      "recreate": true,
                      "resetThenReuseValues": true,
                      "resetValues": true,
                      "reuseValues": true,
                      "skipCRDs": true,
                      "timeoutNanos": 1000000000,
                      "upgradeCRDs": true,
                      "wait": true,
                      "waitForJobs": true
                    },
                    "username": "my-user"
                  },
                  "id": "r-12345678",
                  "imageConfigId": "imgc-12345678",
                  "infraConfigId": "ic-12345678",
                  "internal": true,
                  "isDeprecated": true,
                  "key": "galera",
                  "kustomizeConfiguration": {
                    "endpointConfiguration": {
                      "admin": {
                        "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                        "networkingType": "PRIVATE",
                        "ports": [
                          8080,
                          8081
                        ],
                        "primary": false
                      },
                      "cluster": {
                        "host": "https://my-endpoint.com",
                        "networkingType": "PUBLIC",
                        "ports": [
                          8080,
                          8081
                        ],
                        "primary": true
                      }
                    },
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "helmChartDependencies": [
                      {
                        "chartName": "cert-manager",
                        "chartVersion": "v1.5.3"
                      },
                      {
                        "chartName": "nginx-ingress",
                        "chartVersion": "v0.48.1"
                      },
                      {
                        "chartName": "external-dns",
                        "chartVersion": "v0.7.0"
                      },
                      {
                        "chartName": "cnpg-operator",
                        "chartVersion": "v0.23.1"
                      }
                    ],
                    "kustomizePath": "/kustomize"
                  },
                  "l4LoadBalancerConfiguration": {
                    "ingressPortConfiguration": [
                      {
                        "associatedResourceIDs": [
                          "r-12345678",
                          "r-abcdef12"
                        ],
                        "backendPort": 8080,
                        "ingressPort": 1234
                      },
                      {
                        "associatedResourceIDs": [
                          "r-12345678",
                          "r-abcdef12"
                        ],
                        "backendPort": 8081,
                        "ingressPort": 5678
                      },
                      {
                        "associatedResourceIDs": [
                          "r-vwxybz12",
                          "r-poij122v"
                        ],
                        "backendPort": 8082,
                        "ingressPort": 9012
                      }
                    ]
                  },
                  "l7LoadBalancerConfiguration": {
                    "paths": [
                      {
                        "associatedResourceID": "r-12345678",
                        "path": "/path",
                        "port": 8080
                      }
                    ]
                  },
                  "name": "Galera",
                  "operatorCRDConfiguration": {
                    "endpointConfiguration": {
                      "admin": {
                        "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                        "networkingType": "PRIVATE",
                        "ports": [
                          8080,
                          8081
                        ],
                        "primary": false
                      },
                      "cluster": {
                        "host": "https://my-endpoint.com",
                        "networkingType": "PUBLIC",
                        "ports": [
                          8080,
                          8081
                        ],
                        "primary": true
                      }
                    },
                    "helmChartDependencies": [
                      {
                        "chartName": "cert-manager",
                        "chartVersion": "v1.5.3"
                      },
                      {
                        "chartName": "nginx-ingress",
                        "chartVersion": "v0.48.1"
                      },
                      {
                        "chartName": "external-dns",
                        "chartVersion": "v0.7.0"
                      },
                      {
                        "chartName": "cnpg-operator",
                        "chartVersion": "v0.23.1"
                      }
                    ],
                    "outputParameters": {
                      "expiresAt": "$out.status.notAfter",
                      "issuerName": "letsencrypt-prod"
                    },
                    "readinessConditions": {
                      "$out.status.conditions[?(@.type=='Ready')].status": true
                    },
                    "supplementalFiles": [
                      "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                      "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                    ],
                    "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                  },
                  "productTierId": "pt-12345678",
                  "proxyType": "PortsBasedProxy",
                  "resourceType": "Generic",
                  "serviceId": "s-12345678",
                  "terraformConfigurations": {
                    "A et minima dolor.": {
                      "gitConfiguration": {
                        "accessToken": "my-token",
                        "referenceName": "tags/v1.0.0",
                        "repositoryUrl": "https://github.com/username/myrepo",
                        "userName": "my-user"
                      },
                      "privateModuleGitAccessTokens": {
                        "tokenName": "accessToken"
                      },
                      "requiredOutputKeys": [
                        "output1"
                      ],
                      "requiredOutputs": [
                        {
                          "exported": true,
                          "key": "output1"
                        }
                      ],
                      "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                      "terraformPath": "/project1/tf"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe an resource",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "resource-api"
        ],
        "summary": "UpdateResource resource-api",
        "operationId": "resource-api#UpdateResource",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Non sit."
            },
            "example": "r-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateResourceRequestBody"
              },
              "example": {
                "additionalSecurityContext": {
                  "AddCapabilities": [
                    "CAP_NET_ADMIN",
                    "CAP_NET_RAW"
                  ],
                  "DropCapabilities": [
                    "CAP_NET_ADMIN",
                    "CAP_NET_RAW"
                  ],
                  "SupplementalGroupIDs": [
                    1001,
                    999
                  ]
                },
                "backupConfiguration": {
                  "backupPeriodInHours": 24,
                  "backupRetentionInDays": 7
                },
                "customLabels": {
                  "key": "value"
                },
                "customSysCTLs": {
                  "net.ipv4.tcp_syncookies": "1"
                },
                "customULimits": [
                  {
                    "ULimitsName": "NoProc",
                    "ULimitsType": "Soft",
                    "ULimitsValue": 1000
                  },
                  {
                    "ULimitsName": "NoFile",
                    "ULimitsType": "Hard",
                    "ULimitsValue": 2048
                  }
                ],
                "dependencies": [
                  {
                    "parameterMap": {
                      "clusterId": "writerId",
                      "clusterOrg": "userDatabase"
                    },
                    "resourceId": "r-12345678"
                  },
                  {
                    "parameterMap": {
                      "clusterId": "readerId",
                      "clusterOrg": "userDatabase"
                    },
                    "resourceId": "r-abcdef12"
                  }
                ],
                "description": "A resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                "environmentVariables": [
                  {
                    "key": "MYSQL_ROOT_PASSWORD",
                    "value": "password"
                  }
                ],
                "helmChartConfiguration": {
                  "chartName": "my-chart",
                  "chartRepoName": "my-repo",
                  "chartRepoUrl": "https://my-repo.com",
                  "chartValues": {
                    "key1": "value1",
                    "key2": 3,
                    "key3": {
                      "key4": "value4"
                    }
                  },
                  "chartVersion": "1.0.0",
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "password": "my-password",
                  "runtimeConfiguration": {
                    "disableHooks": true,
                    "recreate": true,
                    "resetThenReuseValues": true,
                    "resetValues": true,
                    "reuseValues": true,
                    "skipCRDs": true,
                    "timeoutNanos": 1000000000,
                    "upgradeCRDs": true,
                    "wait": true,
                    "waitForJobs": true
                  },
                  "username": "my-user"
                },
                "imageConfigId": "imgc-12345678",
                "infraConfigId": "ic-12345678",
                "kustomizeConfiguration": {
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "gitConfiguration": {
                    "accessToken": "my-token",
                    "referenceName": "tags/v1.0.0",
                    "repositoryUrl": "https://github.com/username/myrepo",
                    "userName": "my-user"
                  },
                  "helmChartDependencies": [
                    {
                      "chartName": "cert-manager",
                      "chartVersion": "v1.5.3"
                    },
                    {
                      "chartName": "nginx-ingress",
                      "chartVersion": "v0.48.1"
                    },
                    {
                      "chartName": "external-dns",
                      "chartVersion": "v0.7.0"
                    },
                    {
                      "chartName": "cnpg-operator",
                      "chartVersion": "v0.23.1"
                    }
                  ],
                  "kustomizePath": "/kustomize"
                },
                "l4LoadBalancerConfiguration": {
                  "ingressPortConfiguration": [
                    {
                      "associatedResourceIDs": [
                        "r-12345678",
                        "r-abcdef12"
                      ],
                      "backendPort": 8080,
                      "ingressPort": 1234
                    },
                    {
                      "associatedResourceIDs": [
                        "r-12345678",
                        "r-abcdef12"
                      ],
                      "backendPort": 8081,
                      "ingressPort": 5678
                    },
                    {
                      "associatedResourceIDs": [
                        "r-vwxybz12",
                        "r-poij122v"
                      ],
                      "backendPort": 8082,
                      "ingressPort": 9012
                    }
                  ]
                },
                "l7LoadBalancerConfiguration": {
                  "paths": [
                    {
                      "associatedResourceID": "r-12345678",
                      "path": "/path",
                      "port": 8080
                    }
                  ]
                },
                "name": "Galera",
                "operatorCRDConfiguration": {
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "helmChartDependencies": [
                    {
                      "chartName": "cert-manager",
                      "chartVersion": "v1.5.3"
                    },
                    {
                      "chartName": "nginx-ingress",
                      "chartVersion": "v0.48.1"
                    },
                    {
                      "chartName": "external-dns",
                      "chartVersion": "v0.7.0"
                    },
                    {
                      "chartName": "cnpg-operator",
                      "chartVersion": "v0.23.1"
                    }
                  ],
                  "outputParameters": {
                    "expiresAt": "$out.status.notAfter",
                    "issuerName": "letsencrypt-prod"
                  },
                  "readinessConditions": {
                    "$out.status.conditions[?(@.type=='Ready')].status": true
                  },
                  "supplementalFiles": [
                    "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                    "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                  ],
                  "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                },
                "terraformConfigurations": {
                  "Iste praesentium optio consequuntur qui id.": {
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "privateModuleGitAccessTokens": {
                      "tokenName": "accessToken"
                    },
                    "requiredOutputKeys": [
                      "output1"
                    ],
                    "requiredOutputs": [
                      {
                        "exported": true,
                        "key": "output1"
                      }
                    ],
                    "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                    "terraformPath": "/project1/tf"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update an resource",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{id}/action-hook": {
      "delete": {
        "tags": [
          "resource-api"
        ],
        "summary": "DeregisterActionHook resource-api",
        "operationId": "resource-api#DeregisterActionHook",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service to which the hook belongs",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource to which the hook belongs",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Est nobis vitae quos."
            },
            "example": "r-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeregisterActionHookRequestBody"
              },
              "example": {
                "scope": "CLUSTER",
                "type": "ADD"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to deregister an action hook",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "resource-api"
        ],
        "summary": "ListActionHooks resource-api",
        "operationId": "resource-api#ListActionHooks",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service to which the hook belongs",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource to which the hook belongs",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Sed incidunt est aut aliquid."
            },
            "example": "r-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListActionHooksResult"
                },
                "example": {
                  "hooks": [
                    {
                      "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
                      "customCommand": [
                        "/bin/sh",
                        "-c"
                      ],
                      "customImage": "my-custom-image:latest",
                      "scope": "CLUSTER",
                      "type": "ADD"
                    },
                    {
                      "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
                      "customCommand": [
                        "/bin/sh",
                        "-c"
                      ],
                      "customImage": "my-custom-image:latest",
                      "scope": "CLUSTER",
                      "type": "ADD"
                    },
                    {
                      "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
                      "customCommand": [
                        "/bin/sh",
                        "-c"
                      ],
                      "customImage": "my-custom-image:latest",
                      "scope": "CLUSTER",
                      "type": "ADD"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list action hooks",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "resource-api"
        ],
        "summary": "RegisterActionHook resource-api",
        "operationId": "resource-api#RegisterActionHook",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service to which the hook belongs",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource to which the hook belongs",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Quis aspernatur natus consequatur tempora illo ex."
            },
            "example": "r-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterActionHookRequestBody"
              },
              "example": {
                "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
                "customCommand": [
                  "/bin/sh",
                  "-c"
                ],
                "customImage": "my-custom-image:latest",
                "scope": "CLUSTER",
                "type": "ADD"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to register an action hook",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{id}/capability": {
      "delete": {
        "tags": [
          "resource-api"
        ],
        "summary": "DisableResourceCapability resource-api",
        "operationId": "resource-api#DisableResourceCapability",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Voluptas accusantium."
            },
            "example": "r-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisableResourceCapabilityRequestBody"
              },
              "example": {
                "capability": "SERVERLESS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to disable resource capabilities",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "resource-api"
        ],
        "summary": "ListResourceCapabilities resource-api",
        "operationId": "resource-api#ListResourceCapabilities",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the instance to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the instance to describe. If not specified, the latest version is described.",
              "example": "Officia a qui possimus nostrum quod."
            },
            "example": "Id veniam voluptas."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "Product tier id of the instance to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Sit alias exercitationem."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Eos eaque fugit laudantium."
            },
            "example": "r-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResourceCapabilitiesResponse"
                },
                "example": {
                  "capabilities": [
                    {
                      "capability": "SERVERLESS",
                      "configuration": {
                        "EnableAutoStop": true,
                        "MinimumNodesInPool": 5,
                        "PortsMappingProxyConfig": {
                          "MaxNumberOfClustersPerProxyInstance": 50,
                          "NumberOfPortsPerCluster": 4
                        },
                        "ProxyId": "r-123456",
                        "ReferenceProxyKey": "resource-proxy",
                        "TargetPort": 5432
                      }
                    },
                    {
                      "capability": "SERVERLESS",
                      "configuration": {
                        "EnableAutoStop": true,
                        "MinimumNodesInPool": 5,
                        "PortsMappingProxyConfig": {
                          "MaxNumberOfClustersPerProxyInstance": 50,
                          "NumberOfPortsPerCluster": 4
                        },
                        "ProxyId": "r-123456",
                        "ReferenceProxyKey": "resource-proxy",
                        "TargetPort": 5432
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to disable resource capabilities",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "resource-api"
        ],
        "summary": "EnableResourceCapability resource-api",
        "operationId": "resource-api#EnableResourceCapability",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Magnam eum quo numquam nemo quia."
            },
            "example": "r-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnableResourceCapabilityRequestBody"
              },
              "example": {
                "capability": "SERVERLESS",
                "configuration": {
                  "EnableAutoStop": true,
                  "MinimumNodesInPool": 5,
                  "PortsMappingProxyConfig": {
                    "MaxNumberOfClustersPerProxyInstance": 50,
                    "NumberOfPortsPerCluster": 4
                  },
                  "ReferenceProxyKey": "resource-proxy",
                  "TargetPort": 5432
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to enable resource capabilities",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{id}/dependent-resource": {
      "get": {
        "tags": [
          "resource-api"
        ],
        "summary": "ListDependentResource resource-api",
        "operationId": "resource-api#ListDependentResource",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Numquam cumque at delectus."
            },
            "example": "r-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDependentResourcesResult"
                },
                "example": {
                  "id": "r-12345678",
                  "ids": [
                    "r-12345678",
                    "r-abcdefgh",
                    "r-1234abcd"
                  ],
                  "nextPageToken": "next-token",
                  "serviceId": "s-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list resources",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{id}/deprecate": {
      "patch": {
        "tags": [
          "resource-api"
        ],
        "summary": "DeprecateResource resource-api",
        "operationId": "resource-api#DeprecateResource",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Eos sapiente maxime ullam quaerat sapiente."
            },
            "example": "r-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to deprecate an resource",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{id}/environment-variables": {
      "delete": {
        "tags": [
          "resource-api"
        ],
        "summary": "UnsetEnvironmentVariables resource-api",
        "operationId": "resource-api#UnsetEnvironmentVariables",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Et qui quaerat ea et assumenda."
            },
            "example": "r-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetEnvironmentVariablesRequestBody"
              },
              "example": {
                "environmentVariables": [
                  {
                    "key": "MYSQL_ROOT_PASSWORD",
                    "value": "password"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to remove environment variables from a resource",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "resource-api"
        ],
        "summary": "SetEnvironmentVariables resource-api",
        "operationId": "resource-api#SetEnvironmentVariables",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Quo veritatis eum aperiam doloremque sed."
            },
            "example": "r-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetEnvironmentVariablesRequestBody"
              },
              "example": {
                "environmentVariables": [
                  {
                    "key": "MYSQL_ROOT_PASSWORD",
                    "value": "password"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to add environment variables to a resource",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{id}/file": {
      "get": {
        "tags": [
          "resource-api"
        ],
        "summary": "ListFiles resource-api",
        "operationId": "resource-api#ListFiles",
        "parameters": [
          {
            "name": "productTierId",
            "in": "query",
            "description": "ProductTierId of the config file to describe",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Provident nam voluptatibus quis eveniet."
            },
            "example": "pt-12345678"
          },
          {
            "name": "productTierVersion",
            "in": "query",
            "description": "Product tier version of the config file to describe. If missing, last version is described",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the config file to describe. If missing, last version is described",
              "example": "1.0"
            },
            "example": "1.0"
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Facere fugiat omnis."
            },
            "example": "r-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFilesResult"
                },
                "example": {
                  "files": [
                    {
                      "description": "A file to store the configuration for the resource",
                      "fileId": "f-12345678",
                      "mountPath": "/etc/config",
                      "name": "file.txt",
                      "size": 1234,
                      "type": "Config",
                      "uploadTime": "2023-01-10T00:00:00Z",
                      "uploadedBy": "user"
                    },
                    {
                      "description": "A file to store the configuration for the resource",
                      "fileId": "f-12345678",
                      "mountPath": "/etc/config",
                      "name": "file.txt",
                      "size": 1234,
                      "type": "Config",
                      "uploadTime": "2023-01-10T00:00:00Z",
                      "uploadedBy": "user"
                    },
                    {
                      "description": "A file to store the configuration for the resource",
                      "fileId": "f-12345678",
                      "mountPath": "/etc/config",
                      "name": "file.txt",
                      "size": 1234,
                      "type": "Config",
                      "uploadTime": "2023-01-10T00:00:00Z",
                      "uploadedBy": "user"
                    },
                    {
                      "description": "A file to store the configuration for the resource",
                      "fileId": "f-12345678",
                      "mountPath": "/etc/config",
                      "name": "file.txt",
                      "size": 1234,
                      "type": "Config",
                      "uploadTime": "2023-01-10T00:00:00Z",
                      "uploadedBy": "user"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list files",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "resource-api"
        ],
        "summary": "AddFile resource-api",
        "operationId": "resource-api#AddFile",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Magni porro."
            },
            "example": "r-12345678"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type header, must define value for multipart boundary.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Content-Type header, must define value for multipart boundary.",
              "default": "multipart/form-data; boundary=boundary",
              "example": "multipart/form-data; boundary=boundary",
              "pattern": "multipart/[^;]+; boundary=.+"
            },
            "example": "multipart/form-data; boundary=boundary"
          },
          {
            "name": "Name",
            "in": "header",
            "description": "The name of the file",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name of the file",
              "example": "file.txt"
            },
            "example": "file.txt"
          },
          {
            "name": "Description",
            "in": "header",
            "description": "The description of the file",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "The description of the file",
              "example": "A file to store the configuration for the resource"
            },
            "example": "A file to store the configuration for the resource"
          },
          {
            "name": "FileType",
            "in": "header",
            "description": "The type of the file",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "The type of the file",
              "example": "Config|Secret"
            },
            "example": "Config"
          },
          {
            "name": "MountPath",
            "in": "header",
            "description": "The mount path of the file",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "The mount path of the file",
              "example": "/etc/config"
            },
            "example": "/etc/config"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Unde reiciendis aspernatur necessitatibus maxime voluptatem sit."
                },
                "example": "Non repellendus officia."
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "415": {
            "description": "invalid_media_type: Error returned when the Content-Type header does not define a multipart request.",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}": {
      "delete": {
        "tags": [
          "resource-api"
        ],
        "summary": "RemoveFile resource-api",
        "operationId": "resource-api#RemoveFile",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Ea perferendis voluptatem labore sunt."
            },
            "example": "r-12345678"
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a File",
              "example": "Non veritatis veniam aut omnis iure."
            },
            "example": "file-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when the requested file is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a file",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "resource-api"
        ],
        "summary": "GetFile resource-api",
        "operationId": "resource-api#GetFile",
        "parameters": [
          {
            "name": "productTierId",
            "in": "query",
            "description": "Product Tier ID of the config files to list",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Aut sunt at rem est ullam."
            },
            "example": "pt-12345678"
          },
          {
            "name": "productTierVersion",
            "in": "query",
            "description": "Product Tier version of the config files to list. If missing, last version is used",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product Tier version of the config files to list. If missing, last version is used",
              "example": "1.0"
            },
            "example": "1.0"
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Beatae eos impedit maxime nihil nulla sit."
            },
            "example": "r-12345678"
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a File",
              "example": "Eum omnis quibusdam nam mollitia doloremque saepe."
            },
            "example": "f-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "headers": {
              "Content-Length": {
                "description": "Length is the downloaded content length in bytes.",
                "schema": {
                  "type": "integer",
                  "description": "Length is the downloaded content length in bytes.",
                  "example": 4194304,
                  "format": "int64"
                },
                "example": 4194304
              },
              "Content-Type": {
                "description": "Content-Type header, must define value for multipart boundary.",
                "schema": {
                  "type": "string",
                  "description": "Content-Type header, must define value for multipart boundary.",
                  "default": "multipart/form-data; boundary=boundary",
                  "example": "multipart/form-data; boundary=boundary"
                },
                "example": "multipart/form-data; boundary=boundary"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when the requested file is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a file",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}/content": {
      "put": {
        "tags": [
          "resource-api"
        ],
        "summary": "UpdateFileContent resource-api",
        "operationId": "resource-api#UpdateFileContent",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Molestiae maxime aut."
            },
            "example": "r-12345678"
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a File",
              "example": "Inventore iure quis."
            },
            "example": "f-12345678"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type header, must define value for multipart boundary.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Content-Type header, must define value for multipart boundary.",
              "default": "multipart/form-data; boundary=boundary",
              "example": "multipart/form-data; boundary=boundary",
              "pattern": "multipart/[^;]+; boundary=.+"
            },
            "example": "multipart/form-data; boundary=boundary"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}/metadata": {
      "patch": {
        "tags": [
          "resource-api"
        ],
        "summary": "UpdateFileMetadata resource-api",
        "operationId": "resource-api#UpdateFileMetadata",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Doloremque perferendis esse reiciendis quibusdam libero nihil."
            },
            "example": "r-12345678"
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a File",
              "example": "Rerum eligendi."
            },
            "example": "f-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFileMetadataRequestBody"
              },
              "example": {
                "description": "A file to store the configuration for the resource",
                "mountPath": "/etc/config",
                "name": "file.txt"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{id}/metrics": {
      "delete": {
        "tags": [
          "resource-api"
        ],
        "summary": "DeregisterResourceMetricsConfig resource-api",
        "operationId": "resource-api#DeregisterResourceMetricsConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Sint libero."
            },
            "example": "r-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response on failure to register resource metrics",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "resource-api"
        ],
        "summary": "DescribeResourceMetricsConfig resource-api",
        "operationId": "resource-api#DescribeResourceMetricsConfig",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the resource to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the resource to describe. If not specified, the latest version is described.",
              "example": "Sint accusamus non qui beatae eveniet exercitationem."
            },
            "example": "Deserunt quia praesentium perspiciatis."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "ProductTierId of the resource to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Assumenda delectus explicabo tempore est qui laborum."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Dolorum soluta quis non dolorum et."
            },
            "example": "r-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Describeresourcemetricsconfigresult"
                },
                "example": {
                  "id": "r-12345678",
                  "metricEndpoint": "http://localhost:9187/metrics",
                  "serviceId": "s-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response on failure to describe resource metrics",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "resource-api"
        ],
        "summary": "RegisterResourceMetricsConfig resource-api",
        "operationId": "resource-api#RegisterResourceMetricsConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Minima numquam id."
            },
            "example": "r-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterResourceMetricsConfigRequestBody"
              },
              "example": {
                "metricEndpoint": "http://localhost:9187/metrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response on failure to register resource metrics",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{id}/resource-dependency/{resourceDependencyId}": {
      "delete": {
        "tags": [
          "resource-api"
        ],
        "summary": "RemoveResourceDependency resource-api",
        "operationId": "resource-api#RemoveResourceDependency",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Est accusamus ratione excepturi."
            },
            "example": "r-12345678"
          },
          {
            "name": "resourceDependencyId",
            "in": "path",
            "description": "The ID of the resource dependency to remove",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Voluptatem fuga ullam accusantium vel illo veniam."
            },
            "example": "r-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to remove a resource dependency from a resource",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "resource-api"
        ],
        "summary": "AddResourceDependency resource-api",
        "operationId": "resource-api#AddResourceDependency",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Possimus ea distinctio rem nam adipisci."
            },
            "example": "r-12345678"
          },
          {
            "name": "resourceDependencyId",
            "in": "path",
            "description": "The ID of the resource to be added as a dependency",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Ratione ut veritatis tempora omnis voluptatem et."
            },
            "example": "r-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddResourceDependencyRequestBody"
              },
              "example": {
                "parameterMap": {
                  "clusterId": "writerId",
                  "clusterOrg": "userDatabase"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to add a resource dependency to a resource",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{resourceId}/input-parameter": {
      "get": {
        "tags": [
          "input-parameter-api"
        ],
        "summary": "ListInputParameter input-parameter-api",
        "operationId": "input-parameter-api#ListInputParameter",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the instance to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the instance to describe. If not specified, the latest version is described.",
              "example": "Consectetur quam necessitatibus."
            },
            "example": "Ut voluptas."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "Product tier id of the instance to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Velit eligendi."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service that this output parameter belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "The ID of the resource that this input parameter belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Sequi voluptatem."
            },
            "example": "r-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInputParametersResult"
                },
                "example": {
                  "ids": [
                    "ip-12345678",
                    "ip-12345679"
                  ],
                  "inputParameters": [
                    {
                      "defaultValue": "true",
                      "dependentResourceId": "r-12345678",
                      "description": "Non corporis ab id magnam.",
                      "hasOptions": true,
                      "id": "var-12345678",
                      "isList": true,
                      "key": "1",
                      "labeledOptions": {
                        "large": "t3.xlarge",
                        "medium": "t3.large",
                        "small": "t3.medium"
                      },
                      "limits": {
                        "max": "Blanditiis voluptas.",
                        "maxLength": "Et error sequi et dignissimos illo.",
                        "min": "Et consequatur dolor est saepe velit voluptas.",
                        "minLength": "Ad suscipit aut ut suscipit voluptatem."
                      },
                      "modifiable": true,
                      "name": "13k",
                      "options": [
                        "true",
                        "false"
                      ],
                      "required": true,
                      "resourceId": "r-12345678",
                      "serviceId": "s-12345678",
                      "type": "Aut vitae."
                    },
                    {
                      "defaultValue": "true",
                      "dependentResourceId": "r-12345678",
                      "description": "Non corporis ab id magnam.",
                      "hasOptions": true,
                      "id": "var-12345678",
                      "isList": true,
                      "key": "1",
                      "labeledOptions": {
                        "large": "t3.xlarge",
                        "medium": "t3.large",
                        "small": "t3.medium"
                      },
                      "limits": {
                        "max": "Blanditiis voluptas.",
                        "maxLength": "Et error sequi et dignissimos illo.",
                        "min": "Et consequatur dolor est saepe velit voluptas.",
                        "minLength": "Ad suscipit aut ut suscipit voluptatem."
                      },
                      "modifiable": true,
                      "name": "13k",
                      "options": [
                        "true",
                        "false"
                      ],
                      "required": true,
                      "resourceId": "r-12345678",
                      "serviceId": "s-12345678",
                      "type": "Aut vitae."
                    },
                    {
                      "defaultValue": "true",
                      "dependentResourceId": "r-12345678",
                      "description": "Non corporis ab id magnam.",
                      "hasOptions": true,
                      "id": "var-12345678",
                      "isList": true,
                      "key": "1",
                      "labeledOptions": {
                        "large": "t3.xlarge",
                        "medium": "t3.large",
                        "small": "t3.medium"
                      },
                      "limits": {
                        "max": "Blanditiis voluptas.",
                        "maxLength": "Et error sequi et dignissimos illo.",
                        "min": "Et consequatur dolor est saepe velit voluptas.",
                        "minLength": "Ad suscipit aut ut suscipit voluptatem."
                      },
                      "modifiable": true,
                      "name": "13k",
                      "options": [
                        "true",
                        "false"
                      ],
                      "required": true,
                      "resourceId": "r-12345678",
                      "serviceId": "s-12345678",
                      "type": "Aut vitae."
                    }
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list input parameters",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/resource/{resourceId}/output-parameter": {
      "get": {
        "tags": [
          "output-parameter-api"
        ],
        "summary": "ListOutputParameter output-parameter-api",
        "operationId": "output-parameter-api#ListOutputParameter",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the resource to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the resource to describe. If not specified, the latest version is described.",
              "example": "Atque cupiditate quibusdam saepe a tempora."
            },
            "example": "Aut sint ad ut totam quis dolores."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "ProductTierId of the resource to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Repellendus asperiores dolorem optio esse explicabo ullam."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service that this output parameter belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "The ID of the resource that this output parameter belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a resource",
              "example": "Ad voluptates molestias odio mollitia et omnis."
            },
            "example": "r-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOutputParametersResult"
                },
                "example": {
                  "ids": [
                    "op-12345678"
                  ],
                  "nextPageToken": "next-token",
                  "outputParameters": [
                    {
                      "description": "Username of the user created in the target system",
                      "id": "op-12345678",
                      "key": "username",
                      "name": "Username",
                      "resourceId": "r-12345678",
                      "serviceId": "s-12345678",
                      "value": "johndoe",
                      "valueRef": "$var.username",
                      "valueType": "Sit ab veritatis sed recusandae quo."
                    },
                    {
                      "description": "Username of the user created in the target system",
                      "id": "op-12345678",
                      "key": "username",
                      "name": "Username",
                      "resourceId": "r-12345678",
                      "serviceId": "s-12345678",
                      "value": "johndoe",
                      "valueRef": "$var.username",
                      "valueType": "Sit ab veritatis sed recusandae quo."
                    },
                    {
                      "description": "Username of the user created in the target system",
                      "id": "op-12345678",
                      "key": "username",
                      "name": "Username",
                      "resourceId": "r-12345678",
                      "serviceId": "s-12345678",
                      "value": "johndoe",
                      "valueRef": "$var.username",
                      "valueType": "Sit ab veritatis sed recusandae quo."
                    },
                    {
                      "description": "Username of the user created in the target system",
                      "id": "op-12345678",
                      "key": "username",
                      "name": "Username",
                      "resourceId": "r-12345678",
                      "serviceId": "s-12345678",
                      "value": "johndoe",
                      "valueRef": "$var.username",
                      "valueType": "Sit ab veritatis sed recusandae quo."
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list output parameters",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/service-api": {
      "post": {
        "tags": [
          "service-api-api"
        ],
        "summary": "CreateServiceAPI service-api-api",
        "operationId": "service-api-api#CreateServiceAPI",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceAPIRequestBody"
              },
              "example": {
                "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                "serviceEnvironmentId": "se-12345678"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Service API ID created",
                  "example": "sa-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "sa-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a service API",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/service-api/{id}": {
      "delete": {
        "tags": [
          "service-api-api"
        ],
        "summary": "DeleteServiceAPI service-api-api",
        "operationId": "service-api-api#DeleteServiceAPI",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service API ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service API",
              "example": "Aut necessitatibus quae esse."
            },
            "example": "sa-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a service API",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "service-api-api"
        ],
        "summary": "DescribeServiceAPI service-api-api",
        "operationId": "service-api-api#DescribeServiceAPI",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service API ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service API",
              "example": "Quia explicabo qui ut dicta omnis."
            },
            "example": "sa-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeServiceAPIResult"
                },
                "example": {
                  "apiVersion": "v1",
                  "deploymentConfigId": "dc-12345678",
                  "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                  "id": "sa-12345678",
                  "serviceEnvironmentId": "se-12345678",
                  "serviceId": "s-12345678",
                  "serviceName": "mysql"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a service API",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "service-api-api"
        ],
        "summary": "UpdateServiceAPI service-api-api",
        "operationId": "service-api-api#UpdateServiceAPI",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service API ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service API",
              "example": "Voluptatibus et aut."
            },
            "example": "sa-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceAPIRequestBody"
              },
              "example": {
                "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update a service API",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/service-api/{id}/all-pending-changes": {
      "delete": {
        "tags": [
          "service-api-api"
        ],
        "summary": "DiscardPendingChanges service-api-api",
        "operationId": "service-api-api#DiscardPendingChanges",
        "parameters": [
          {
            "name": "productTierId",
            "in": "query",
            "description": "ProductTierID of the resource to describe pending changes forNeeds to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Aliquid nostrum ipsa."
            },
            "example": "pt-12345678"
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service API ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service API",
              "example": "Impedit dignissimos excepturi commodi natus eligendi et."
            },
            "example": "sa-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe pending changes to a service API",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "service-api-api"
        ],
        "summary": "DescribePendingChanges service-api-api",
        "operationId": "service-api-api#DescribePendingChanges",
        "parameters": [
          {
            "name": "productTierId",
            "in": "query",
            "description": "ProductTierID of the resource to describe pending changes forNeeds to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Quo ipsam fugit perferendis commodi molestiae."
            },
            "example": "pt-12345678"
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service API ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service API",
              "example": "Voluptatum soluta inventore voluptas ipsam et ea."
            },
            "example": "sa-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribePendingChangesResult"
                },
                "example": {
                  "id": "sa-12345678",
                  "resourceChangeSets": {
                    "Est dolor reiciendis aut repudiandae doloremque sed.": {
                      "categorizedResourceChanges": {
                        "Quo amet explicabo.": {
                          "changes": [
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            },
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            }
                          ],
                          "status": "PENDING_UPDATE"
                        },
                        "Ut deserunt voluptate vel necessitatibus.": {
                          "changes": [
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            },
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            }
                          ],
                          "status": "PENDING_UPDATE"
                        },
                        "Vitae omnis molestiae eaque id.": {
                          "changes": [
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            },
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            }
                          ],
                          "status": "PENDING_UPDATE"
                        }
                      },
                      "imageConfigChanges": {
                        "changeState": "PENDING_NEW",
                        "imageConfigId": "imgc-12345678",
                        "imageName": "mysql"
                      },
                      "infraConfigChanges": {
                        "changeState": "PENDING_NEW",
                        "infraConfigId": "ic-12345678",
                        "name": "MySQL Writer Infra Config"
                      },
                      "overallResourceStatus": "PENDING_UPDATE",
                      "productTierFeatureChanges": "PENDING_UPDATE",
                      "resourceChanges": "PENDING_DELETE",
                      "resourceName": "Inventore commodi quasi consequatur."
                    },
                    "Velit velit aut voluptatem.": {
                      "categorizedResourceChanges": {
                        "Quo amet explicabo.": {
                          "changes": [
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            },
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            }
                          ],
                          "status": "PENDING_UPDATE"
                        },
                        "Ut deserunt voluptate vel necessitatibus.": {
                          "changes": [
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            },
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            }
                          ],
                          "status": "PENDING_UPDATE"
                        },
                        "Vitae omnis molestiae eaque id.": {
                          "changes": [
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            },
                            {
                              "attributes": {
                                "resourceId": "r-12345678"
                              },
                              "changeType": "PENDING_NEW",
                              "name": "Customer metrics"
                            }
                          ],
                          "status": "PENDING_UPDATE"
                        }
                      },
                      "imageConfigChanges": {
                        "changeState": "PENDING_NEW",
                        "imageConfigId": "imgc-12345678",
                        "imageName": "mysql"
                      },
                      "infraConfigChanges": {
                        "changeState": "PENDING_NEW",
                        "infraConfigId": "ic-12345678",
                        "name": "MySQL Writer Infra Config"
                      },
                      "overallResourceStatus": "PENDING_UPDATE",
                      "productTierFeatureChanges": "PENDING_UPDATE",
                      "resourceChanges": "PENDING_DELETE",
                      "resourceName": "Inventore commodi quasi consequatur."
                    }
                  },
                  "serviceId": "s-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe pending changes to a service API",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/service-api/{id}/deprecate": {
      "post": {
        "tags": [
          "service-api-api"
        ],
        "summary": "DeprecateServiceAPI service-api-api",
        "operationId": "service-api-api#DeprecateServiceAPI",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service API ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service API",
              "example": "Quaerat sunt dolor repellendus voluptatem vitae dolores."
            },
            "example": "sa-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to deprecate a service API",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/service-api/{id}/release": {
      "post": {
        "tags": [
          "service-api-api"
        ],
        "summary": "ReleaseServiceAPI service-api-api",
        "operationId": "service-api-api#ReleaseServiceAPI",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The service API ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service API",
              "example": "Quia molestiae."
            },
            "example": "sa-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseServiceAPIRequestBody"
              },
              "example": {
                "isPreferred": true,
                "productTierId": "pt-12345678",
                "versionSetName": "v1",
                "versionSetType": "Major|Incremental|UserDefined"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to release a service API",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/serviceapi/{serviceApiId}/model": {
      "get": {
        "tags": [
          "service-model-api"
        ],
        "summary": "ListServiceModel service-model-api",
        "operationId": "service-model-api#ListServiceModel",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "serviceApiId",
            "in": "path",
            "description": "The service API ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service API",
              "example": "Unde molestiae cupiditate."
            },
            "example": "sa-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "sm-12345678",
                    "sm-87654321"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list service models",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/image-config": {
      "get": {
        "tags": [
          "image-config-api"
        ],
        "summary": "ListImageConfigs image-config-api",
        "operationId": "image-config-api#ListImageConfigs",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID to use for the infra",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "serviceEnvironmentId",
            "in": "path",
            "description": "The service environment ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Environment",
              "example": "se-123456"
            },
            "example": "se-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "imgc-12345678",
                    "imgc-87654321"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list image configs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/infra-config": {
      "get": {
        "tags": [
          "infra-config-api"
        ],
        "summary": "ListInfraConfig infra-config-api",
        "operationId": "infra-config-api#ListInfraConfig",
        "parameters": [
          {
            "name": "managed",
            "in": "query",
            "description": "Is infra config managed by omnistrate",
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "description": "Is infra config managed by omnistrate",
              "example": false
            },
            "example": false
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "serviceEnvironmentId",
            "in": "path",
            "description": "The service environment ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Environment",
              "example": "se-123456"
            },
            "example": "se-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "ic-12345678",
                    "ic-abcdefgh",
                    "ic-1234efgh"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list infra configs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/service-api": {
      "get": {
        "tags": [
          "service-api-api"
        ],
        "summary": "ListServiceAPI service-api-api",
        "operationId": "service-api-api#ListServiceAPI",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID that this API bundle belongs to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "serviceEnvironmentId",
            "in": "path",
            "description": "The service environment ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service Environment",
              "example": "se-123456"
            },
            "example": "se-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "sa-12345678"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list service APIs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/storage-config": {
      "get": {
        "tags": [
          "storage-config-api"
        ],
        "summary": "ListStorageConfig storage-config-api",
        "operationId": "storage-config-api#ListStorageConfig",
        "parameters": [
          {
            "name": "managed",
            "in": "query",
            "description": "Is storage config managed by omnistrate",
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "description": "Is storage config managed by omnistrate",
              "example": false
            },
            "example": false
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service id to filter by",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "sc-12345678"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list storage configs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "storage-config-api"
        ],
        "summary": "CreateStorageConfig storage-config-api",
        "operationId": "storage-config-api#CreateStorageConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service to which this storage config belongs",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStorageConfigRequestBody"
              },
              "example": {
                "description": "my-storage-config-description",
                "name": "my-storage-config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Storage Config ID created",
                  "example": "sc-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "sc-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create storage config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/storage-config/{id}": {
      "delete": {
        "tags": [
          "storage-config-api"
        ],
        "summary": "DeleteStorageConfig storage-config-api",
        "operationId": "storage-config-api#DeleteStorageConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The storage config ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Storage Config",
              "example": "Quia inventore non quis est."
            },
            "example": "sc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a storage config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "storage-config-api"
        ],
        "summary": "DescribeStorageConfig storage-config-api",
        "operationId": "storage-config-api#DescribeStorageConfig",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the storage config to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the storage config to describe. If not specified, the latest version is described.",
              "example": "Sint ea."
            },
            "example": "Ducimus voluptatem iusto velit."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "ProductTierId of the storage config to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Hic quia non ad est."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The storage config ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Storage Config",
              "example": "Aliquam adipisci voluptatem vero molestiae doloribus omnis."
            },
            "example": "sc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeStorageConfigResult"
                },
                "example": {
                  "description": "my-storage-config-description",
                  "id": "sc-12345678",
                  "infraConfigIDs": [
                    "ic-12345678",
                    "ic-abcdefgh"
                  ],
                  "name": "my-storage-config",
                  "serviceId": "s-12345678",
                  "volumes": {
                    "svc-12345678": [
                      "/data",
                      "/mnt/logs"
                    ],
                    "svc-23456789": [
                      "/config"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe storage config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "storage-config-api"
        ],
        "summary": "UpdateStorageConfig storage-config-api",
        "operationId": "storage-config-api#UpdateStorageConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The storage config ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Storage Config",
              "example": "Est similique distinctio voluptatum beatae iste."
            },
            "example": "sc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceModelRequestBody"
              },
              "example": {
                "description": "my-storage-config-description",
                "name": "my-storage-config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update storage config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/storage-config/{id}/volume/{storageVolumeConfigId}": {
      "delete": {
        "tags": [
          "storage-config-api"
        ],
        "summary": "RemoveStorageVolumeConfig storage-config-api",
        "operationId": "storage-config-api#RemoveStorageVolumeConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The storage config ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Storage Config",
              "example": "Facilis deleniti distinctio hic sit."
            },
            "example": "sc-12345678"
          },
          {
            "name": "storageVolumeConfigId",
            "in": "path",
            "description": "The storage volume config ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Storage Volume Config",
              "example": "Nisi qui qui ex."
            },
            "example": "svc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStorageVolumeConfigRequestBody"
              },
              "example": {
                "mountPath": "/data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to remove storage volume config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "storage-config-api"
        ],
        "summary": "AddStorageVolumeConfig storage-config-api",
        "operationId": "storage-config-api#AddStorageVolumeConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The storage config ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Storage Config",
              "example": "Et aliquam."
            },
            "example": "sc-12345678"
          },
          {
            "name": "storageVolumeConfigId",
            "in": "path",
            "description": "The storage volume config ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Storage Volume Config",
              "example": "Voluptas inventore eos ut molestiae."
            },
            "example": "svc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStorageVolumeConfigRequestBody"
              },
              "example": {
                "mountPath": "/data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to add storage volume config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/storage-volume-config": {
      "get": {
        "tags": [
          "storage-volume-config-api"
        ],
        "summary": "ListStorageVolumeConfig storage-volume-config-api",
        "operationId": "storage-volume-config-api#ListStorageVolumeConfig",
        "parameters": [
          {
            "name": "managed",
            "in": "query",
            "description": "Is storage volume config managed by omnistrate",
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "description": "Is storage volume config managed by omnistrate",
              "example": false
            },
            "example": false
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service to list storage volume configs for",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServiceEnvironmentsResult"
                },
                "example": {
                  "ids": [
                    "svc-12345678"
                  ],
                  "nextPageToken": "next-token"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list storage volume configs",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "storage-volume-config-api"
        ],
        "summary": "CreateStorageVolumeConfig storage-volume-config-api",
        "operationId": "storage-volume-config-api#CreateStorageVolumeConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStorageVolumeConfigRequestBody"
              },
              "example": {
                "clusterStorageType": "S3|$var.storageType|AWS::EFS",
                "description": "A storage volume set to store the MySQL data directory",
                "disableBackup": false,
                "instanceStorageIops": "$var.storageIops",
                "instanceStorageSizeGi": "$var.storage_size",
                "instanceStorageThroughputMiBps": "128",
                "instanceStorageType": "$var.storageType",
                "name": "MySQL Data Volume",
                "storageResourceID": "r-12345678"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Storage Volume Config ID created",
                  "example": "svc-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "svc-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create storage volume config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/storage-volume-config/{id}": {
      "delete": {
        "tags": [
          "storage-volume-config-api"
        ],
        "summary": "DeleteStorageVolumeConfig storage-volume-config-api",
        "operationId": "storage-volume-config-api#DeleteStorageVolumeConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The storage volume config ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Storage Volume Config",
              "example": "Saepe quia."
            },
            "example": "svc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a storage volume config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "storage-volume-config-api"
        ],
        "summary": "DescribeStorageVolumeConfig storage-volume-config-api",
        "operationId": "storage-volume-config-api#DescribeStorageVolumeConfig",
        "parameters": [
          {
            "name": "ProductTierVersion",
            "in": "query",
            "description": "Product tier version of the network config to describe. If not specified, the latest version is described.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Product tier version of the network config to describe. If not specified, the latest version is described.",
              "example": "Aut optio sint."
            },
            "example": "Quas placeat ut esse similique."
          },
          {
            "name": "ProductTierId",
            "in": "query",
            "description": "ProductTierId of the network config to describe. Needs to specified in combination with the product tier version",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Product Tier",
              "example": "Aut aliquam rerum sed velit accusamus."
            },
            "example": "Beatae beatae."
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The storage volume config ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Storage Volume Config",
              "example": "Harum reiciendis ut a nostrum quis repellat."
            },
            "example": "svc-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeStorageVolumeConfigResult"
                },
                "example": {
                  "cloudProviderName": "aws",
                  "clusterStorageType": "S3|$var.storageType|AWS::EFS",
                  "description": "A storage volume set to store the MySQL data directory",
                  "disableBackup": false,
                  "id": "svc-12345678",
                  "instanceStorageIops": "7500",
                  "instanceStorageSizeGi": "128",
                  "instanceStorageThroughputMiBps": "128",
                  "instanceStorageType": "$var.storageType",
                  "name": "MySQL Data Volume",
                  "serviceId": "s-12345678",
                  "storageResourceID": "r-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe storage volume config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "storage-volume-config-api"
        ],
        "summary": "UpdateStorageVolumeConfig storage-volume-config-api",
        "operationId": "storage-volume-config-api#UpdateStorageVolumeConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The storage volume config ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Storage Volume Config",
              "example": "Esse perspiciatis sit."
            },
            "example": "svc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStorageVolumeConfigRequestBody"
              },
              "example": {
                "description": "A storage volume set to store the MySQL data directory",
                "disableBackup": false,
                "name": "MySQL Data Volume"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update storage volume config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/storage-volume-config/{id}/instance": {
      "patch": {
        "tags": [
          "storage-volume-config-api"
        ],
        "summary": "UpdateInstanceStorageVolumeConfig storage-volume-config-api",
        "operationId": "storage-volume-config-api#UpdateInstanceStorageVolumeConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The storage volume config ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Storage Volume Config",
              "example": "Maxime aut provident est necessitatibus."
            },
            "example": "svc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInstanceStorageVolumeConfigRequestBody"
              },
              "example": {
                "instanceStorageIops": "7500",
                "instanceStorageThroughputMiBps": "128",
                "instanceStorageType": "AWS::EBS_GP2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update instance storage volume type config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/storage-volume-config/{id}/size": {
      "patch": {
        "tags": [
          "storage-volume-config-api"
        ],
        "summary": "UpdateStorageVolumeSizeConfig storage-volume-config-api",
        "operationId": "storage-volume-config-api#UpdateStorageVolumeSizeConfig",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The service ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The storage volume config ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Storage Volume Config",
              "example": "Quo nesciunt."
            },
            "example": "svc-12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStorageVolumeSizeConfigRequestBody"
              },
              "example": {
                "instanceStorageSizeGi": "$var.storage_size"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update storage volume size config",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/{serviceId}/vunit/{id}": {
      "get": {
        "tags": [
          "vunit-api"
        ],
        "summary": "DescribeVUnit vunit-api",
        "operationId": "vunit-api#DescribeVUnit",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service ID for the VUnit",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "s-12345678"
          },
          {
            "name": "id",
            "in": "path",
            "description": "VUnit to operate on",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a VUnit",
              "example": "Hic et ex illo nam cupiditate."
            },
            "example": "vu-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeVUnitResult"
                },
                "example": {
                  "cloudProvider": "aws",
                  "id": "vu-12345678",
                  "networkIds": [
                    "n-12345678",
                    "n-abcdefgh",
                    "n-1234efgh"
                  ],
                  "region": "us-west-2",
                  "serviceId": "s-12345678",
                  "serviceModelId": "sm-12345678"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a vunit",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/composespec": {
      "post": {
        "tags": [
          "service-api"
        ],
        "summary": "CreateServiceFromComposeSpec service-api",
        "operationId": "service-api#CreateServiceFromComposeSpec",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceFromComposeSpecRequestBody"
              },
              "example": {
                "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                "fileContent": "Sed laudantium quasi accusantium harum sit.",
                "fileFormat": "text/plain",
                "fileName": "mysql.yaml",
                "name": "MySQL multi-writer service",
                "serviceLogoURL": "http://ledner.com/mandy.bechtelar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Service ID created",
                  "example": "s-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "s-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a service",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "service-api"
        ],
        "summary": "BuildServiceFromComposeSpec service-api",
        "operationId": "service-api#BuildServiceFromComposeSpec",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildServiceFromComposeSpecRequestBody"
              },
              "example": {
                "configs": {
                  "Est aliquam.": "Quae et id qui possimus."
                },
                "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                "environment": "dev",
                "environmentType": "DEV",
                "fileContent": "Magni eaque dolore et.",
                "name": "MySQL multi-writer service",
                "release": true,
                "releaseAsPreferred": true,
                "releaseVersionName": "mysql",
                "secrets": {
                  "Minima magnam occaecati.": "Maxime iusto dolorum odio.",
                  "Quae beatae eius.": "Amet doloremque."
                },
                "serviceLogoURL": "http://gusikowski.biz/keeley"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildServiceFromServicePlanSpecResult"
                },
                "example": {
                  "productTierID": "pt-12345678",
                  "serviceEnvironmentID": "se-12345678",
                  "serviceID": "s-12345678",
                  "undefinedResources": {
                    "mysql": "r-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to build a service from compose spec",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/service/serviceplanspec": {
      "put": {
        "tags": [
          "service-api"
        ],
        "summary": "BuildServiceFromServicePlanSpec service-api",
        "operationId": "service-api#BuildServiceFromServicePlanSpec",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildServiceFromServicePlanSpecRequestBody"
              },
              "example": {
                "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                "environment": "dev",
                "environmentType": "DEV",
                "fileContent": "Quo harum dolorum consequatur ut.",
                "name": "MySQL multi-writer service",
                "release": true,
                "releaseAsPreferred": true,
                "releaseVersionName": "mysql",
                "serviceLogoURL": "http://morissette.net/webster.grimes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildServiceFromServicePlanSpecResult"
                },
                "example": {
                  "productTierID": "pt-12345678",
                  "serviceEnvironmentID": "se-12345678",
                  "serviceID": "s-12345678",
                  "undefinedResources": {
                    "mysql": "r-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to build a service from compose spec",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/signin": {
      "post": {
        "tags": [
          "signin-api"
        ],
        "summary": "Signin signin-api",
        "operationId": "signin-api#Signin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequestBody"
              },
              "example": {
                "email": "abc@gmail.com",
                "hashedPassword": "deprecated",
                "password": "password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResult"
                },
                "example": {
                  "jwtToken": ""
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to signin",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/2022-09-01-00/signup": {
      "post": {
        "tags": [
          "signup-api"
        ],
        "summary": "Signup signup-api",
        "operationId": "signup-api#Signup",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequestBody"
              },
              "example": {
                "companyDescription": "We sell xyz database software",
                "companyUrl": "https://www.mywebsite.com",
                "email": "abc@gmail.com",
                "legalCompanyName": "mywebsite",
                "name": "John Doe",
                "password": "password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to signup",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/2022-09-01-00/subscription": {
      "get": {
        "tags": [
          "subscription-api"
        ],
        "summary": "ListSubscriptions subscription-api",
        "operationId": "subscription-api#ListSubscriptions",
        "parameters": [
          {
            "name": "serviceId",
            "in": "query",
            "description": "Service Id",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of a Service",
              "example": "s-123456"
            },
            "example": "service-12345678"
          },
          {
            "name": "environmentType",
            "in": "query",
            "description": "The environment type to filter by",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The type of service environment",
              "example": "PROD|PRIVATE|CANARY|STAGING|QA|DEV"
            },
            "example": "DEV"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSubscriptionsResult"
                },
                "example": {
                  "ids": [
                    "sub-12345678",
                    "sub-abcdefgh",
                    "sub-1234efgh"
                  ],
                  "nextPageToken": "next-token",
                  "subscriptions": [
                    {
                      "accountConfigIdentityId": "org-12345678",
                      "cloudProviderNames": [
                        "aws",
                        "gcp"
                      ],
                      "createdAt": "2019-01-01T00:00:00Z",
                      "defaultSubscription": true,
                      "id": "sub-12345678",
                      "productTierId": "pt-12345678",
                      "productTierName": "Omnistrate Multi Tenancy",
                      "roleType": "root",
                      "rootUserId": "user-12345678",
                      "serviceId": "s-12345678",
                      "serviceLogoURL": "Eum beatae asperiores.",
                      "serviceName": "MySQL multi-writer service",
                      "serviceOrgId": "org-12345678",
                      "serviceOrgName": "Omnistrate",
                      "status": "ACTIVE",
                      "subscriptionOwnerName": "John Doe"
                    },
                    {
                      "accountConfigIdentityId": "org-12345678",
                      "cloudProviderNames": [
                        "aws",
                        "gcp"
                      ],
                      "createdAt": "2019-01-01T00:00:00Z",
                      "defaultSubscription": true,
                      "id": "sub-12345678",
                      "productTierId": "pt-12345678",
                      "productTierName": "Omnistrate Multi Tenancy",
                      "roleType": "root",
                      "rootUserId": "user-12345678",
                      "serviceId": "s-12345678",
                      "serviceLogoURL": "Eum beatae asperiores.",
                      "serviceName": "MySQL multi-writer service",
                      "serviceOrgId": "org-12345678",
                      "serviceOrgName": "Omnistrate",
                      "status": "ACTIVE",
                      "subscriptionOwnerName": "John Doe"
                    },
                    {
                      "accountConfigIdentityId": "org-12345678",
                      "cloudProviderNames": [
                        "aws",
                        "gcp"
                      ],
                      "createdAt": "2019-01-01T00:00:00Z",
                      "defaultSubscription": true,
                      "id": "sub-12345678",
                      "productTierId": "pt-12345678",
                      "productTierName": "Omnistrate Multi Tenancy",
                      "roleType": "root",
                      "rootUserId": "user-12345678",
                      "serviceId": "s-12345678",
                      "serviceLogoURL": "Eum beatae asperiores.",
                      "serviceName": "MySQL multi-writer service",
                      "serviceOrgId": "org-12345678",
                      "serviceOrgName": "Omnistrate",
                      "status": "ACTIVE",
                      "subscriptionOwnerName": "John Doe"
                    },
                    {
                      "accountConfigIdentityId": "org-12345678",
                      "cloudProviderNames": [
                        "aws",
                        "gcp"
                      ],
                      "createdAt": "2019-01-01T00:00:00Z",
                      "defaultSubscription": true,
                      "id": "sub-12345678",
                      "productTierId": "pt-12345678",
                      "productTierName": "Omnistrate Multi Tenancy",
                      "roleType": "root",
                      "rootUserId": "user-12345678",
                      "serviceId": "s-12345678",
                      "serviceLogoURL": "Eum beatae asperiores.",
                      "serviceName": "MySQL multi-writer service",
                      "serviceOrgId": "org-12345678",
                      "serviceOrgName": "Omnistrate",
                      "status": "ACTIVE",
                      "subscriptionOwnerName": "John Doe"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to list subscriptions",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "subscription-api"
        ],
        "summary": "CreateSubscription subscription-api",
        "operationId": "subscription-api#CreateSubscription",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequestBody"
              },
              "example": {
                "productTierId": "pt-12345678",
                "serviceId": "s-12345678"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Subscription ID created",
                  "example": "sub-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "sub-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a subscription",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/subscription/{id}": {
      "delete": {
        "tags": [
          "subscription-api"
        ],
        "summary": "DeleteSubscription subscription-api",
        "operationId": "subscription-api#DeleteSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The subscription ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Subscription",
              "example": "Enim sunt."
            },
            "example": "sub-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete a subscription",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "subscription-api"
        ],
        "summary": "DescribeSubscription subscription-api",
        "operationId": "subscription-api#DescribeSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The subscription ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Subscription",
              "example": "Consequatur nihil nostrum rerum doloremque."
            },
            "example": "sub-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeSubscriptionResult"
                },
                "example": {
                  "accountConfigIdentityId": "org-12345678",
                  "cloudProviderNames": [
                    "aws",
                    "gcp"
                  ],
                  "createdAt": "2019-01-01T00:00:00Z",
                  "defaultSubscription": true,
                  "id": "sub-12345678",
                  "productTierId": "pt-12345678",
                  "productTierName": "Omnistrate Multi Tenancy",
                  "roleType": "root",
                  "rootUserId": "user-12345678",
                  "serviceId": "s-12345678",
                  "serviceLogoURL": "Ex laboriosam ipsam quis numquam.",
                  "serviceName": "MySQL multi-writer service",
                  "serviceOrgId": "org-12345678",
                  "serviceOrgName": "Omnistrate",
                  "status": "ACTIVE",
                  "subscriptionOwnerName": "John Doe"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a subscription",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/subscription/request": {
      "get": {
        "tags": [
          "subscription-request-api"
        ],
        "summary": "ListSubscriptionRequests subscription-request-api",
        "operationId": "subscription-request-api#ListSubscriptionRequests",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "The status of the subscription request to filter by",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The status of the subscription request",
              "example": "PENDING|APPROVED|DENIED|CANCELLED"
            },
            "example": "PENDING"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSubscriptionRequestsResult"
                },
                "example": {
                  "ids": [
                    "subr-12345678",
                    "subr-abcdefgh",
                    "subr-1234efgh"
                  ],
                  "nextPageToken": "next-token",
                  "subscriptionRequests": [
                    {
                      "createdAt": "2019-01-01T00:00:00Z",
                      "id": "subr-12345678",
                      "productTierId": "pt-12345678",
                      "productTierName": "Omnistrate Multi Tenancy",
                      "rootUserEmail": "abc@gmail.com",
                      "rootUserId": "org-12345678",
                      "rootUserName": "John Doe",
                      "serviceId": "s-12345678",
                      "serviceLogoURL": "Mollitia sunt commodi.",
                      "serviceName": "MySQL multi-writer service",
                      "status": "PENDING",
                      "updatedAt": "2019-01-01T00:00:00Z",
                      "updatedByUserId": "user-12345678",
                      "updatedByUserName": "John Doe"
                    },
                    {
                      "createdAt": "2019-01-01T00:00:00Z",
                      "id": "subr-12345678",
                      "productTierId": "pt-12345678",
                      "productTierName": "Omnistrate Multi Tenancy",
                      "rootUserEmail": "abc@gmail.com",
                      "rootUserId": "org-12345678",
                      "rootUserName": "John Doe",
                      "serviceId": "s-12345678",
                      "serviceLogoURL": "Mollitia sunt commodi.",
                      "serviceName": "MySQL multi-writer service",
                      "status": "PENDING",
                      "updatedAt": "2019-01-01T00:00:00Z",
                      "updatedByUserId": "user-12345678",
                      "updatedByUserName": "John Doe"
                    },
                    {
                      "createdAt": "2019-01-01T00:00:00Z",
                      "id": "subr-12345678",
                      "productTierId": "pt-12345678",
                      "productTierName": "Omnistrate Multi Tenancy",
                      "rootUserEmail": "abc@gmail.com",
                      "rootUserId": "org-12345678",
                      "rootUserName": "John Doe",
                      "serviceId": "s-12345678",
                      "serviceLogoURL": "Mollitia sunt commodi.",
                      "serviceName": "MySQL multi-writer service",
                      "status": "PENDING",
                      "updatedAt": "2019-01-01T00:00:00Z",
                      "updatedByUserId": "user-12345678",
                      "updatedByUserName": "John Doe"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a subscription",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "subscription-request-api"
        ],
        "summary": "CreateSubscriptionRequest subscription-request-api",
        "operationId": "subscription-request-api#CreateSubscriptionRequest",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequestBody"
              },
              "example": {
                "productTierId": "pt-12345678",
                "serviceId": "s-12345678"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Subscription request ID created",
                  "example": "subr-12345678"
                },
                "examples": {
                  "default": {
                    "summary": "default",
                    "value": "subr-12345678"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a subscription",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/subscription/request/{id}": {
      "delete": {
        "tags": [
          "subscription-request-api"
        ],
        "summary": "CancelSubscriptionRequest subscription-request-api",
        "operationId": "subscription-request-api#CancelSubscriptionRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The subscription ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Subscription Request",
              "example": "Rem aperiam quos enim vero."
            },
            "example": "subr-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a subscription",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "subscription-request-api"
        ],
        "summary": "DescribeSubscriptionRequest subscription-request-api",
        "operationId": "subscription-request-api#DescribeSubscriptionRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The subscription ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of a Subscription Request",
              "example": "Rerum ex."
            },
            "example": "subr-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeSubscriptionRequestResult"
                },
                "example": {
                  "createdAt": "2019-01-01T00:00:00Z",
                  "id": "subr-12345678",
                  "productTierId": "pt-12345678",
                  "productTierName": "Omnistrate Multi Tenancy",
                  "rootUserEmail": "abc@gmail.com",
                  "rootUserId": "org-12345678",
                  "rootUserName": "John Doe",
                  "serviceId": "s-12345678",
                  "serviceLogoURL": "Dolorem quam.",
                  "serviceName": "MySQL multi-writer service",
                  "status": "PENDING",
                  "updatedAt": "2019-01-01T00:00:00Z",
                  "updatedByUserId": "user-12345678",
                  "updatedByUserName": "John Doe"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to create a subscription",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/update-password": {
      "post": {
        "tags": [
          "users-api"
        ],
        "summary": "UpdatePassword users-api",
        "operationId": "users-api#UpdatePassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequestBody"
              },
              "example": {
                "currentPassword": "currentPassword",
                "currentPasswordHash": "currentPasswordHash",
                "password": "password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to update password",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/usage": {
      "get": {
        "tags": [
          "usage-api"
        ],
        "summary": "GetCurrentPlanUsage usage-api",
        "operationId": "usage-api#GetCurrentPlanUsage",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentUsageResult"
                },
                "example": {
                  "endTime": "2021-01-01T00:00:00.000Z",
                  "planName": "STARTER",
                  "startTime": "2021-01-01T00:00:00.000Z",
                  "usage": [
                    {
                      "dimension": "core/hours",
                      "total": 0.67
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to get usage",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/user": {
      "delete": {
        "tags": [
          "users-api"
        ],
        "summary": "DeleteUser users-api",
        "operationId": "users-api#DeleteUser",
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to delete user",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "users-api"
        ],
        "summary": "DescribeUser users-api",
        "operationId": "users-api#DescribeUser",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeUserResult"
                },
                "example": {
                  "address": {
                    "addressLine1": "1234 Main St",
                    "addressLine2": "Apt 123",
                    "addressLine3": "Building 123",
                    "city": "San Francisco",
                    "country": "US",
                    "state": "CA",
                    "zip": "94123"
                  },
                  "createdAt": "2023-01-10T00:00:00Z",
                  "email": "abc@gmail.com",
                  "id": "user-abcd1234",
                  "lastModifiedAt": "2023-01-20T00:00:00Z",
                  "name": "John Dae",
                  "orgDescription": "ACME Inc.",
                  "orgFavIconURL": "Ut exercitationem neque occaecati explicabo.",
                  "orgId": "org-aKQ8G13QeR",
                  "orgLogoURL": "Aut itaque minus sint esse.",
                  "orgName": "ACME",
                  "orgPrivacyPolicy": "Eos fuga ut quae possimus.",
                  "orgSupportEmail": "support@example.com",
                  "orgTermsOfUse": "In nobis necessitatibus.",
                  "orgURL": "something.acme",
                  "planName": "STARTER",
                  "roleType": "reader"
                }
              }
            }
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a user",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/user/{id}": {
      "patch": {
        "tags": [
          "users-api"
        ],
        "summary": "UpdateUser users-api",
        "operationId": "users-api#UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The User ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The User ID",
              "example": "user-abcd1234"
            },
            "example": "user-abcd1234"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequestBody"
              },
              "example": {
                "address": {
                  "addressLine1": "1234 Main St",
                  "addressLine2": "Apt 123",
                  "addressLine3": "Building 123",
                  "city": "San Francisco",
                  "country": "US",
                  "state": "CA",
                  "zip": "94123"
                },
                "name": "John Dae",
                "orgDescription": "ACME Inc.",
                "orgFavIconURL": "http://kunze.info/retha",
                "orgLogoURL": "http://fritsch.org/marlene_hand",
                "orgName": "ACME",
                "orgPrivacyPolicy": "Magni qui.",
                "orgSupportEmail": "support@example.com",
                "orgTermsOfUse": "Rerum vel vero aut tempore aut dolor.",
                "orgURL": "something.acme"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to describe a user",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key_header_Authorization": []
          }
        ]
      }
    },
    "/2022-09-01-00/users/{id}/regenerate-token": {
      "post": {
        "tags": [
          "signup-api"
        ],
        "summary": "RegenerateToken signup-api",
        "operationId": "signup-api#RegenerateToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "user-abcd1234",
              "minLength": 1
            },
            "example": "user-abcd1234"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to regenerate token",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/2022-09-01-00/validate-token": {
      "post": {
        "tags": [
          "signup-api"
        ],
        "summary": "ValidateToken signup-api",
        "operationId": "signup-api#ValidateToken",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateTokenRequestBody"
              },
              "example": {
                "email": "abc@gmail.com",
                "token": "fc7b8dea-a50b-4c9a-8864-fc3d845a2be6"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "bad_request: Response used on a bad request",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "auth_failure: Response used on authentication failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Response used on authorization failure",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "not_found: Response used when the requested resource is not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "invalid_state: Response used when requested resource is in an invalid state for this operation",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "failed_request: Response used on failure to validate the token",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/2022-09-01-00/version": {
      "get": {
        "tags": [
          "global-api"
        ],
        "summary": "registrationServiceVersion global-api",
        "description": "Registration service version endpoint",
        "operationId": "global-api#registrationServiceVersion",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OmnistrateServiceVersionResult"
                },
                "example": {
                  "apiVersion": "1",
                  "buildCommitSHA": "1234567890abcdef1234567890abcdef12345678",
                  "buildTimestamp": "2020-01-01T00:00:00Z"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIEntity": {
        "type": "object",
        "properties": {
          "inputParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputParameterEntity"
            },
            "description": "The input parameters",
            "example": [
              {
                "defaultValue": null,
                "description": "The name of the server",
                "displayName": "Server Name",
                "isList": false,
                "key": "serverName",
                "modifiable": true,
                "options": null,
                "required": true,
                "type": "string"
              },
              {
                "defaultValue": "option1",
                "description": "The type of the server",
                "displayName": "Server Type",
                "isList": false,
                "key": "serverType",
                "modifiable": true,
                "options": [
                  "option1",
                  "option2"
                ],
                "required": true,
                "type": "string"
              }
            ]
          },
          "outputParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputParameterEntity"
            },
            "description": "The output parameters",
            "example": [
              {
                "description": "The name of the server",
                "displayName": "Server Name",
                "isList": false,
                "key": "serverName",
                "type": "string"
              },
              {
                "description": "The type of the server",
                "displayName": "Server Type",
                "isList": false,
                "key": "serverType",
                "type": "string"
              }
            ]
          },
          "verb": {
            "type": "string",
            "description": "The API verb",
            "example": "CREATE|DESCRIBE|LIST|UPDATE|DELETE"
          }
        },
        "example": {
          "inputParameters": [
            {
              "defaultValue": null,
              "description": "The name of the server",
              "displayName": "Server Name",
              "isList": false,
              "key": "serverName",
              "modifiable": true,
              "options": null,
              "required": true,
              "type": "string"
            },
            {
              "defaultValue": "option1",
              "description": "The type of the server",
              "displayName": "Server Type",
              "isList": false,
              "key": "serverType",
              "modifiable": true,
              "options": [
                "option1",
                "option2"
              ],
              "required": true,
              "type": "string"
            }
          ],
          "outputParameters": [
            {
              "description": "The name of the server",
              "displayName": "Server Name",
              "isList": false,
              "key": "serverName",
              "type": "string"
            },
            {
              "description": "The type of the server",
              "displayName": "Server Type",
              "isList": false,
              "key": "serverType",
              "type": "string"
            }
          ],
          "verb": "CREATE|DESCRIBE|LIST|UPDATE|DELETE"
        },
        "required": [
          "verb",
          "inputParameters",
          "outputParameters"
        ]
      },
      "AWSPrivateLinkConfiguration": {
        "type": "object",
        "properties": {
          "port": {
            "type": "integer",
            "description": "The port of the target group",
            "example": 80,
            "format": "int64"
          },
          "targetGroupName": {
            "type": "string",
            "description": "The target group name",
            "example": "my-target-group"
          }
        },
        "example": {
          "port": 80,
          "targetGroupName": "my-target-group"
        },
        "required": [
          "targetGroupName",
          "port"
        ]
      },
      "AccountConfigIdentityIDResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "org-12345678"
          }
        },
        "example": {
          "id": "org-12345678"
        },
        "required": [
          "id"
        ]
      },
      "AddAccountConfigToServiceModelRequestBody": {
        "type": "object",
        "properties": {
          "accountConfigId": {
            "type": "string",
            "description": "The infrastructure account configuration ID",
            "example": "ac-12345678"
          }
        },
        "example": {
          "accountConfigId": "ac-12345678"
        },
        "required": [
          "accountConfigId"
        ]
      },
      "AddCapacityToResourceInstanceRequestBody": {
        "type": "object",
        "properties": {
          "capacityToBeAdded": {
            "type": "integer",
            "description": "Number of replicas to be added",
            "example": 3,
            "format": "int64"
          }
        },
        "example": {
          "capacityToBeAdded": 3
        },
        "required": [
          "capacityToBeAdded"
        ]
      },
      "AddComputeInstanceTypeRequestBody": {
        "type": "object",
        "properties": {
          "cloudProviderName": {
            "type": "string",
            "description": "The cloud provider for this compute instance type config",
            "example": "aws"
          },
          "instanceType": {
            "type": "string",
            "description": "The instance type for this compute instance type config",
            "example": "t3.micro"
          }
        },
        "example": {
          "cloudProviderName": "aws",
          "instanceType": "t3.micro"
        },
        "required": [
          "cloudProviderName",
          "instanceType"
        ]
      },
      "AddCustomDNSToResourceInstanceRequestBody": {
        "type": "object",
        "properties": {
          "customDNS": {
            "type": "string",
            "description": "The custom DNS to add",
            "example": "my-custom-dns.com"
          },
          "targetPort": {
            "type": "integer",
            "description": "The target port",
            "example": 8080,
            "format": "int64"
          }
        },
        "example": {
          "customDNS": "my-custom-dns.com",
          "targetPort": 8080
        },
        "required": [
          "customDNS"
        ]
      },
      "AddResourceDependencyRequestBody": {
        "type": "object",
        "properties": {
          "parameterMap": {
            "type": "object",
            "description": "A map of the source parameter to the dependency resource parameter",
            "example": {
              "clusterId": "writerId",
              "clusterOrg": "userDatabase"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Nostrum laborum."
            }
          }
        },
        "example": {
          "parameterMap": {
            "clusterId": "writerId",
            "clusterOrg": "userDatabase"
          }
        }
      },
      "AddStorageVolumeConfigRequestBody": {
        "type": "object",
        "properties": {
          "mountPath": {
            "type": "string",
            "description": "The path where the storage volume will be mounted",
            "example": "/data"
          }
        },
        "example": {
          "mountPath": "/data"
        }
      },
      "AdditionalSecurityContext": {
        "type": "object",
        "properties": {
          "AddCapabilities": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Molestiae maxime."
            },
            "description": "Capabilities to add",
            "example": [
              "CAP_NET_ADMIN",
              "CAP_NET_RAW"
            ]
          },
          "DropCapabilities": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Id a occaecati quisquam voluptas ipsam ut."
            },
            "description": "Capabilities to drop",
            "example": [
              "CAP_NET_ADMIN",
              "CAP_NET_RAW"
            ]
          },
          "SupplementalGroupIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 8421458780743113000,
              "format": "int64"
            },
            "description": "Supplemental group IDs",
            "example": [
              1001,
              999
            ]
          }
        },
        "example": {
          "AddCapabilities": [
            "CAP_NET_ADMIN",
            "CAP_NET_RAW"
          ],
          "DropCapabilities": [
            "CAP_NET_ADMIN",
            "CAP_NET_RAW"
          ],
          "SupplementalGroupIDs": [
            1001,
            999
          ]
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "The street address",
            "example": "1234 Main St"
          },
          "addressLine2": {
            "type": "string",
            "description": "Address Line 2",
            "example": "Apt 123"
          },
          "addressLine3": {
            "type": "string",
            "description": "Address Line 3",
            "example": "Building 123"
          },
          "city": {
            "type": "string",
            "description": "Name of the City",
            "example": "San Francisco"
          },
          "country": {
            "type": "string",
            "description": "Name of the Country",
            "example": "US"
          },
          "state": {
            "type": "string",
            "description": "Name of the State/Province/Region",
            "example": "CA"
          },
          "zip": {
            "type": "string",
            "description": "Zip code",
            "example": "94123"
          }
        },
        "example": {
          "addressLine1": "1234 Main St",
          "addressLine2": "Apt 123",
          "addressLine3": "Building 123",
          "city": "San Francisco",
          "country": "US",
          "state": "CA",
          "zip": "94123"
        },
        "required": [
          "addressLine1",
          "city",
          "state",
          "zip",
          "country"
        ]
      },
      "AutoScalingMetricSpec": {
        "type": "object",
        "properties": {
          "metricEndpoint": {
            "type": "string",
            "description": "The local host endpoint to supply prometheus metric",
            "example": "http://localhost:9187/metrics"
          },
          "metricLabelName": {
            "type": "string",
            "description": "The prometheus metric label name for scaling",
            "example": "label"
          },
          "metricLabelValue": {
            "type": "string",
            "description": "The prometheus metric label value for scaling",
            "example": "value"
          },
          "metricName": {
            "type": "string",
            "description": "The prometheus metric name for scaling",
            "example": "metric_name"
          }
        },
        "example": {
          "metricEndpoint": "http://localhost:9187/metrics",
          "metricLabelName": "label",
          "metricLabelValue": "value",
          "metricName": "metric_name"
        },
        "required": [
          "metricEndpoint",
          "metricName",
          "metricLabelName",
          "metricLabelValue"
        ]
      },
      "AutoscalingPolicy": {
        "type": "object",
        "properties": {
          "idleMinutesBeforeScalingDown": {
            "type": "integer",
            "description": "Minutes before scaling down the compute nodes in idle state",
            "default": 5,
            "example": 1,
            "format": "int64"
          },
          "idleThreshold": {
            "type": "integer",
            "description": "Metric value below threshold will be considered to be idle",
            "default": 20,
            "example": 1,
            "format": "int64"
          },
          "maxReplicas": {
            "type": "string",
            "description": "Maximum number of compute nodes to provision",
            "example": "4"
          },
          "minReplicas": {
            "type": "string",
            "description": "Minimum number of compute nodes to provision",
            "example": "1"
          },
          "overUtilizedMinutesBeforeScalingUp": {
            "type": "integer",
            "description": "Minutes before scaling up the compute nodes in overUtilized state",
            "default": 5,
            "example": 1,
            "format": "int64"
          },
          "overUtilizedThreshold": {
            "type": "integer",
            "description": "Metric value beyond threshold will be considered to be overUtilized",
            "default": 80,
            "example": 1,
            "format": "int64"
          },
          "scalingMetric": {
            "$ref": "#/components/schemas/AutoScalingMetricSpec"
          }
        },
        "description": "Autoscaling policy for compute nodes",
        "example": {
          "idleMinutesBeforeScalingDown": 1,
          "idleThreshold": 1,
          "maxReplicas": "4",
          "minReplicas": "1",
          "overUtilizedMinutesBeforeScalingUp": 1,
          "overUtilizedThreshold": 1,
          "scalingMetric": {
            "metricEndpoint": "http://localhost:9187/metrics",
            "metricLabelName": "label",
            "metricLabelValue": "value",
            "metricName": "metric_name"
          }
        },
        "required": [
          "minReplicas",
          "maxReplicas"
        ]
      },
      "BackendPortConfiguration": {
        "type": "object",
        "properties": {
          "associatedResourceIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Voluptates accusamus illo iure quo."
            },
            "description": "The IDs of the resource associated with the backend port",
            "example": [
              "r-12345678",
              "r-abcdef12"
            ]
          },
          "backendPort": {
            "type": "integer",
            "description": "The port to forward traffic to",
            "example": 8080,
            "format": "int64"
          },
          "ingressPort": {
            "type": "integer",
            "description": "The ingress port to configure on the load balancer",
            "example": 1234,
            "format": "int64"
          }
        },
        "example": {
          "associatedResourceIDs": [
            "r-12345678",
            "r-abcdef12"
          ],
          "backendPort": 8080,
          "ingressPort": 1234
        },
        "required": [
          "ingressPort",
          "backendPort",
          "associatedResourceIDs"
        ]
      },
      "BackupConfiguration": {
        "type": "object",
        "properties": {
          "backupPeriodInHours": {
            "type": "integer",
            "description": "The period in hours to take backups",
            "example": 24,
            "format": "int64"
          },
          "backupRetentionInDays": {
            "type": "integer",
            "description": "The number of days to retain backups",
            "example": 7,
            "format": "int64"
          }
        },
        "example": {
          "backupPeriodInHours": 24,
          "backupRetentionInDays": 7
        },
        "required": [
          "backupRetentionInDays",
          "backupPeriodInHours"
        ]
      },
      "BackupStatus": {
        "type": "object",
        "properties": {
          "backupPeriodInHours": {
            "type": "integer",
            "description": "The backup period in hours",
            "example": 2,
            "format": "int64"
          },
          "backupRetentionInDays": {
            "type": "integer",
            "description": "The backup retention in days",
            "example": 7,
            "format": "int64"
          },
          "earliestRestoreTime": {
            "type": "string",
            "description": "The earliest restore time",
            "example": "2021-09-01T00:00:00Z"
          },
          "lastBackupTime": {
            "type": "string",
            "description": "The last backup time",
            "example": "2021-09-01T00:00:00Z"
          }
        },
        "example": {
          "backupPeriodInHours": 2,
          "backupRetentionInDays": 7,
          "earliestRestoreTime": "2021-09-01T00:00:00Z",
          "lastBackupTime": "2021-09-01T00:00:00Z"
        },
        "required": [
          "backupRetentionInDays",
          "backupPeriodInHours"
        ]
      },
      "BillingPlan": {
        "type": "object",
        "properties": {
          "allowCreatesWhenPaymentNotConfigured": {
            "type": "boolean",
            "description": "Allow creates when payment not configured",
            "example": true
          },
          "id": {
            "type": "string",
            "description": "Product tier billing plan ID",
            "example": "bp-12345678"
          },
          "maxNumberofInstances": {
            "type": "integer",
            "description": "Maximum number of instances",
            "example": 5,
            "format": "int64"
          },
          "planName": {
            "type": "string",
            "description": "Plan name",
            "example": "STARTER"
          },
          "pricing": {
            "description": "Pricing in dollars.",
            "example": {
              "cpuCoreHours": "0.001",
              "memoryGiBHours": "0.0001",
              "storageGiBHours": "0.0001"
            }
          },
          "productTierId": {
            "type": "string",
            "description": "Product tier ID",
            "example": "pt-12345678"
          },
          "serviceId": {
            "type": "string",
            "description": "Service ID",
            "example": "s-12345678"
          }
        },
        "example": {
          "allowCreatesWhenPaymentNotConfigured": true,
          "id": "bp-12345678",
          "maxNumberofInstances": 5,
          "planName": "STARTER",
          "pricing": {
            "cpuCoreHours": "0.001",
            "memoryGiBHours": "0.0001",
            "storageGiBHours": "0.0001"
          },
          "productTierId": "pt-12345678",
          "serviceId": "s-12345678"
        },
        "required": [
          "id",
          "serviceId",
          "productTierId",
          "planName",
          "pricing",
          "allowCreatesWhenPaymentNotConfigured",
          "maxNumberofInstances"
        ]
      },
      "BlobStorageConfiguration": {
        "type": "object",
        "properties": {
          "GCSConfiguration": {
            "$ref": "#/components/schemas/GCSConfiguration"
          },
          "S3Configuration": {
            "$ref": "#/components/schemas/GCSConfiguration"
          }
        },
        "example": {
          "GCSConfiguration": {},
          "S3Configuration": {}
        }
      },
      "BuildServiceFromComposeSpecRequestBody": {
        "type": "object",
        "properties": {
          "configs": {
            "type": "object",
            "description": "Configs for the service. Key is the compose spec name of the config and value is base64 encoded config content",
            "example": {
              "Aut deserunt.": "Dolor ut ipsa debitis consequatur vel.",
              "Qui dolores aspernatur omnis rem qui.": "Repellendus minima eum quidem non.",
              "Quia hic qui aliquid voluptas repellat hic.": "Quod vel eum eos commodi."
            },
            "additionalProperties": {
              "type": "string",
              "example": "Cumque error."
            }
          },
          "description": {
            "type": "string",
            "description": "A brief description of the service",
            "example": "A MySQL SaaS specializing in multi-writer clusters for high availability"
          },
          "environment": {
            "type": "string",
            "description": "The environment to build the service in",
            "example": "dev"
          },
          "environmentType": {
            "type": "string",
            "description": "The type of the environment",
            "example": "DEV"
          },
          "fileContent": {
            "type": "string",
            "description": "Base64 encoded Compose Spec YAML in docker compose format",
            "example": "Quia omnis facilis voluptate voluptas."
          },
          "name": {
            "type": "string",
            "description": "Name of the Service",
            "example": "MySQL multi-writer service"
          },
          "release": {
            "type": "boolean",
            "description": "Release the service after building",
            "example": true
          },
          "releaseAsPreferred": {
            "type": "boolean",
            "description": "Release the service as preferred",
            "example": true
          },
          "releaseVersionName": {
            "type": "string",
            "description": "Release version name",
            "example": "mysql"
          },
          "secrets": {
            "type": "object",
            "description": "Secrets for the service. Key is the compose spec name of the secret and value is base64 encoded secret content",
            "example": {
              "Culpa dignissimos.": "Occaecati nisi deserunt molestiae.",
              "Est dolore sunt voluptas.": "Non ratione qui odio et laboriosam rerum.",
              "Vero deleniti eum.": "Et neque cum deleniti aliquid ducimus."
            },
            "additionalProperties": {
              "type": "string",
              "example": "Cumque voluptates ut quam recusandae."
            }
          },
          "serviceLogoURL": {
            "type": "string",
            "description": "The logo for the service",
            "example": "http://spinkarau.org/nyasia",
            "format": "uri"
          }
        },
        "example": {
          "configs": {
            "Eligendi excepturi modi ut deserunt odit.": "Autem eius eveniet.",
            "Non omnis temporibus veniam.": "Quae blanditiis nam tenetur aut labore quia.",
            "Provident omnis et iste.": "Consequuntur consequatur."
          },
          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
          "environment": "dev",
          "environmentType": "DEV",
          "fileContent": "Ipsa aut voluptatum asperiores itaque.",
          "name": "MySQL multi-writer service",
          "release": true,
          "releaseAsPreferred": true,
          "releaseVersionName": "mysql",
          "secrets": {
            "Repudiandae velit id.": "Explicabo fuga sapiente magni in molestiae asperiores."
          },
          "serviceLogoURL": "http://abernathy.org/kacey"
        },
        "required": [
          "name",
          "fileContent"
        ]
      },
      "BuildServiceFromServicePlanSpecRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the service",
            "example": "A MySQL SaaS specializing in multi-writer clusters for high availability"
          },
          "environment": {
            "type": "string",
            "description": "The environment to build the service in",
            "example": "dev"
          },
          "environmentType": {
            "type": "string",
            "description": "The type of the environment",
            "example": "DEV"
          },
          "fileContent": {
            "type": "string",
            "description": "Base64 encoded Compose Spec YAML in service plan configuration format",
            "example": "Nisi accusantium ipsa eligendi sunt."
          },
          "name": {
            "type": "string",
            "description": "Name of the Service",
            "example": "MySQL multi-writer service"
          },
          "release": {
            "type": "boolean",
            "description": "Release the service after building",
            "example": true
          },
          "releaseAsPreferred": {
            "type": "boolean",
            "description": "Release the service as preferred",
            "example": true
          },
          "releaseVersionName": {
            "type": "string",
            "description": "Release version name",
            "example": "mysql"
          },
          "serviceLogoURL": {
            "type": "string",
            "description": "The logo for the service",
            "example": "http://mcclurewilliamson.org/luther",
            "format": "uri"
          }
        },
        "example": {
          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
          "environment": "dev",
          "environmentType": "DEV",
          "fileContent": "Reiciendis amet ut.",
          "name": "MySQL multi-writer service",
          "release": true,
          "releaseAsPreferred": true,
          "releaseVersionName": "mysql",
          "serviceLogoURL": "http://donnelly.net/caden"
        },
        "required": [
          "name",
          "fileContent"
        ]
      },
      "BuildServiceFromServicePlanSpecResult": {
        "type": "object",
        "properties": {
          "productTierID": {
            "type": "string",
            "description": "The product tier ID of the built service plan",
            "example": "pt-12345678"
          },
          "serviceEnvironmentID": {
            "type": "string",
            "description": "The service environment ID of the built service",
            "example": "se-12345678"
          },
          "serviceID": {
            "type": "string",
            "description": "The service ID of the built service",
            "example": "s-12345678"
          },
          "undefinedResources": {
            "type": "object",
            "description": "Resources that appear in the service plan but were not defined in the spec. These resources were not processed during the build.",
            "example": {
              "mysql": "r-12345678"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Cupiditate consequatur."
            }
          }
        },
        "example": {
          "productTierID": "pt-12345678",
          "serviceEnvironmentID": "se-12345678",
          "serviceID": "s-12345678",
          "undefinedResources": {
            "mysql": "r-12345678"
          }
        },
        "required": [
          "serviceID",
          "productTierID",
          "serviceEnvironmentID"
        ]
      },
      "Change": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "description": "Additional setting/component attributes",
            "example": {
              "resourceId": "r-12345678"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Velit atque neque ut."
            }
          },
          "changeType": {
            "type": "string",
            "description": "Type of the pending change",
            "example": "PENDING_NEW"
          },
          "name": {
            "type": "string",
            "description": "The name of the setting/component that changed",
            "example": "Customer metrics"
          }
        },
        "example": {
          "attributes": {
            "resourceId": "r-12345678"
          },
          "changeType": "PENDING_NEW",
          "name": "Customer metrics"
        },
        "required": [
          "changeType",
          "name",
          "attributes"
        ]
      },
      "ChangePasswordRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "abc@gmail.com",
            "format": "email",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "example": "password",
            "minLength": 1
          },
          "token": {
            "type": "string",
            "example": "fc7b8dea-a50b-4c9a-8864-fc3d845a2be6",
            "minLength": 1
          }
        },
        "example": {
          "email": "abc@gmail.com",
          "password": "password",
          "token": "fc7b8dea-a50b-4c9a-8864-fc3d845a2be6"
        },
        "required": [
          "password",
          "token",
          "email"
        ]
      },
      "ChangePlanRequestBody": {
        "type": "object",
        "properties": {
          "planName": {
            "type": "string",
            "description": "The name of the plan this user is changing to",
            "example": "STARTER"
          }
        },
        "example": {
          "planName": "STARTER"
        },
        "required": [
          "planName"
        ]
      },
      "ChangeSet": {
        "type": "object",
        "properties": {
          "categorizedResourceChanges": {
            "type": "object",
            "description": "Summary of all changes within a resource for each category (ie. image, infra, product tier feature, etc.)",
            "example": {
              "Vero eos.": {
                "changes": [
                  {
                    "attributes": {
                      "resourceId": "r-12345678"
                    },
                    "changeType": "PENDING_NEW",
                    "name": "Customer metrics"
                  },
                  {
                    "attributes": {
                      "resourceId": "r-12345678"
                    },
                    "changeType": "PENDING_NEW",
                    "name": "Customer metrics"
                  }
                ],
                "status": "PENDING_UPDATE"
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/ChangeSummary"
            }
          },
          "imageConfigChanges": {
            "$ref": "#/components/schemas/ImageConfigChangeSummary"
          },
          "infraConfigChanges": {
            "$ref": "#/components/schemas/InfraConfigChangeSummary"
          },
          "overallResourceStatus": {
            "type": "string",
            "description": "The overall resource change status across all change categories",
            "example": "PENDING_UPDATE"
          },
          "productTierFeatureChanges": {
            "type": "string",
            "description": "The product tier feature changes for the resource.",
            "example": "PENDING_UPDATE"
          },
          "resourceChanges": {
            "type": "string",
            "description": "The service api changes for the resource.",
            "example": "PENDING_DELETE"
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the resource",
            "example": "Eos cumque."
          }
        },
        "example": {
          "categorizedResourceChanges": {
            "Qui quis doloribus excepturi.": {
              "changes": [
                {
                  "attributes": {
                    "resourceId": "r-12345678"
                  },
                  "changeType": "PENDING_NEW",
                  "name": "Customer metrics"
                },
                {
                  "attributes": {
                    "resourceId": "r-12345678"
                  },
                  "changeType": "PENDING_NEW",
                  "name": "Customer metrics"
                }
              ],
              "status": "PENDING_UPDATE"
            }
          },
          "imageConfigChanges": {
            "changeState": "PENDING_NEW",
            "imageConfigId": "imgc-12345678",
            "imageName": "mysql"
          },
          "infraConfigChanges": {
            "changeState": "PENDING_NEW",
            "infraConfigId": "ic-12345678",
            "name": "MySQL Writer Infra Config"
          },
          "overallResourceStatus": "PENDING_UPDATE",
          "productTierFeatureChanges": "PENDING_UPDATE",
          "resourceChanges": "PENDING_DELETE",
          "resourceName": "Beatae atque tenetur voluptatem."
        },
        "required": [
          "overallResourceStatus",
          "categorizedResourceChanges"
        ]
      },
      "ChangeSummary": {
        "type": "object",
        "properties": {
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Change"
            },
            "description": "List of individual changes",
            "example": [
              {
                "attributes": {
                  "resourceId": "r-12345678"
                },
                "changeType": "PENDING_NEW",
                "name": "Customer metrics"
              },
              {
                "attributes": {
                  "resourceId": "r-12345678"
                },
                "changeType": "PENDING_NEW",
                "name": "Customer metrics"
              }
            ]
          },
          "status": {
            "type": "string",
            "description": "The product tier feature changes for the resource.",
            "example": "PENDING_UPDATE"
          }
        },
        "example": {
          "changes": [
            {
              "attributes": {
                "resourceId": "r-12345678"
              },
              "changeType": "PENDING_NEW",
              "name": "Customer metrics"
            },
            {
              "attributes": {
                "resourceId": "r-12345678"
              },
              "changeType": "PENDING_NEW",
              "name": "Customer metrics"
            },
            {
              "attributes": {
                "resourceId": "r-12345678"
              },
              "changeType": "PENDING_NEW",
              "name": "Customer metrics"
            },
            {
              "attributes": {
                "resourceId": "r-12345678"
              },
              "changeType": "PENDING_NEW",
              "name": "Customer metrics"
            }
          ],
          "status": "PENDING_UPDATE"
        },
        "required": [
          "status",
          "changes"
        ]
      },
      "CheckIfContainerImageAccessibleResult": {
        "type": "object",
        "properties": {
          "errorMsg": {
            "type": "string",
            "description": "Error message if the image is not accessible",
            "example": "Unde tempora."
          },
          "imageAccessible": {
            "type": "boolean",
            "description": "Indicates if the image is accessible",
            "example": true
          }
        },
        "example": {
          "errorMsg": "Aliquid consequatur dolores nostrum quia qui architecto.",
          "imageAccessible": false
        },
        "required": [
          "imageAccessible"
        ]
      },
      "ClusterEndpoint": {
        "type": "object",
        "properties": {
          "endpoint": {
            "type": "string",
            "description": "The endpoint",
            "default": "",
            "example": "https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud"
          },
          "networkingType": {
            "type": "string",
            "description": "The networking type for this resource",
            "example": "PUBLIC"
          },
          "openPorts": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 3525800820282545000,
              "format": "int64"
            },
            "description": "The open ports",
            "example": [
              30000,
              30001
            ]
          },
          "primary": {
            "type": "boolean",
            "description": "Whether this is the primary endpoint",
            "default": false,
            "example": true
          }
        },
        "example": {
          "endpoint": "https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud",
          "networkingType": "PUBLIC",
          "openPorts": [
            30000,
            30001
          ],
          "primary": true
        }
      },
      "ConsumptionServiceAuthResult": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token used to perform authorization",
            "example": "qf8",
            "minLength": 1
          }
        },
        "example": {
          "token": "eo"
        },
        "required": [
          "token"
        ]
      },
      "ContactusRequestBody": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "example": "ABC",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "example": "abc@gmail.com",
            "format": "email",
            "minLength": 1
          },
          "message": {
            "type": "string",
            "example": "this is a test",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe",
            "minLength": 1
          }
        },
        "example": {
          "company": "ABC",
          "email": "abc@gmail.com",
          "message": "this is a test",
          "name": "John Doe"
        },
        "required": [
          "name",
          "email",
          "company",
          "message"
        ]
      },
      "CopyProductTierRequestBody": {
        "type": "object",
        "properties": {
          "autoApproveSubscription": {
            "type": "boolean",
            "description": "Auto approve subscription or not",
            "example": false
          },
          "awsRegions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Magni voluptatem pariatur cum."
            },
            "description": "The AWS regions that this product tier is available on",
            "example": [
              "us-east-2",
              "ca-central-1"
            ]
          },
          "description": {
            "type": "string",
            "description": "A brief description of the product tier",
            "example": "A premium product tier"
          },
          "documentation": {
            "type": "string",
            "description": "Documentation",
            "example": "Any documentation"
          },
          "gcpRegions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Dolores temporibus cumque odit est sit."
            },
            "description": "The GCP regions that this product tier is available on",
            "example": [
              "us-central1"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name of the product tier",
            "example": "Premium"
          },
          "planDescription": {
            "type": "string",
            "description": "A brief description for the end user of the product tier",
            "example": "A premium plan"
          },
          "pricing": {
            "description": "Pricing",
            "example": {
              "price1": "value1"
            }
          },
          "serviceModelId": {
            "type": "string",
            "description": "Service model ID",
            "example": "sm-12345678"
          },
          "support": {
            "type": "string",
            "description": "Support",
            "example": "Any support"
          },
          "targetTierType": {
            "type": "string",
            "description": "Tier type",
            "example": "OMNISTRATE_DEDICATED_TENANCY"
          }
        },
        "example": {
          "autoApproveSubscription": false,
          "awsRegions": [
            "us-east-2",
            "ca-central-1"
          ],
          "description": "A premium product tier",
          "documentation": "Any documentation",
          "gcpRegions": [
            "us-central1"
          ],
          "name": "Premium",
          "planDescription": "A premium plan",
          "pricing": {
            "price1": "value1"
          },
          "serviceModelId": "sm-12345678",
          "support": "Any support",
          "targetTierType": "OMNISTRATE_DEDICATED_TENANCY"
        },
        "required": [
          "name",
          "description",
          "serviceModelId"
        ]
      },
      "CopyServiceModelRequestBody": {
        "type": "object",
        "properties": {
          "accountConfigIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Itaque aliquam occaecati nostrum occaecati."
            },
            "description": "The infrastructure account configuration ID list",
            "example": [
              "ac-12345678",
              "ac-23456789"
            ]
          },
          "description": {
            "type": "string",
            "description": "A brief description of the service model",
            "example": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceModelFeatureDetail"
            },
            "description": "Enabled service model features",
            "example": [
              {
                "configuration": {
                  "Sapiente ut.": "Ut qui eligendi odit."
                },
                "feature": "Quia quas saepe sequi quidem facere."
              },
              {
                "configuration": {
                  "Sapiente ut.": "Ut qui eligendi odit."
                },
                "feature": "Quia quas saepe sequi quidem facere."
              },
              {
                "configuration": {
                  "Sapiente ut.": "Ut qui eligendi odit."
                },
                "feature": "Quia quas saepe sequi quidem facere."
              },
              {
                "configuration": {
                  "Sapiente ut.": "Ut qui eligendi odit."
                },
                "feature": "Quia quas saepe sequi quidem facere."
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Name of the Service Model",
            "example": "MySQL multi-writer service hosted model"
          },
          "targetServiceModelType": {
            "type": "string",
            "description": "The model type encapsulating this service",
            "example": "CUSTOMER_HOSTED"
          },
          "targetTierType": {
            "type": "string",
            "description": "Target product tier type",
            "example": "OMNISTRATE_DEDICATED_TENANCY"
          }
        },
        "example": {
          "accountConfigIds": [
            "ac-12345678",
            "ac-23456789"
          ],
          "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
          "features": [
            {
              "configuration": {
                "Sapiente ut.": "Ut qui eligendi odit."
              },
              "feature": "Quia quas saepe sequi quidem facere."
            },
            {
              "configuration": {
                "Sapiente ut.": "Ut qui eligendi odit."
              },
              "feature": "Quia quas saepe sequi quidem facere."
            },
            {
              "configuration": {
                "Sapiente ut.": "Ut qui eligendi odit."
              },
              "feature": "Quia quas saepe sequi quidem facere."
            },
            {
              "configuration": {
                "Sapiente ut.": "Ut qui eligendi odit."
              },
              "feature": "Quia quas saepe sequi quidem facere."
            }
          ],
          "name": "MySQL multi-writer service hosted model",
          "targetServiceModelType": "CUSTOMER_HOSTED",
          "targetTierType": "OMNISTRATE_DEDICATED_TENANCY"
        },
        "required": [
          "name",
          "description",
          "targetServiceModelType"
        ]
      },
      "CreateAccountConfigRequestBody": {
        "type": "object",
        "properties": {
          "awsAccessKey": {
            "type": "string",
            "description": "The AWS access key",
            "example": "Aut et perferendis dolor numquam nulla."
          },
          "awsAccountID": {
            "type": "string",
            "description": "The AWS account ID",
            "example": "123456789012"
          },
          "awsBootstrapRoleARN": {
            "type": "string",
            "description": "The security role ARN or service account ARN that grants access to operate the infra",
            "example": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>"
          },
          "awsSecretKey": {
            "type": "string",
            "description": "The AWS secret key",
            "example": "Qui quaerat quia itaque sint."
          },
          "byoaInstanceID": {
            "type": "string",
            "description": "The BYOA instance ID that this account config is tied to",
            "example": "instance-12345678"
          },
          "cloudProviderId": {
            "type": "string",
            "description": "Cloud Provider ID to operate on",
            "example": "infra-12345678"
          },
          "description": {
            "type": "string",
            "description": "The description for the account",
            "example": "An AWS account hosting multiple dev environments"
          },
          "gcpProjectID": {
            "type": "string",
            "description": "The GCP project ID",
            "example": "my-project"
          },
          "gcpProjectNumber": {
            "type": "string",
            "description": "The GCP project number",
            "example": "123456789012"
          },
          "gcpServiceAccountEmail": {
            "type": "string",
            "description": "The GCP service account email",
            "example": "bootstrap@my-project.iam.gserviceaccount.com"
          },
          "gcpServiceAccountKey": {
            "type": "string",
            "description": "The GCP service account key",
            "example": "Ut molestiae."
          },
          "name": {
            "type": "string",
            "description": "The name of the account",
            "example": "Dev AWS account"
          }
        },
        "example": {
          "awsAccessKey": "Qui dignissimos dolore in excepturi ipsa voluptas.",
          "awsAccountID": "123456789012",
          "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
          "awsSecretKey": "Temporibus non in placeat autem vel.",
          "byoaInstanceID": "instance-12345678",
          "cloudProviderId": "infra-12345678",
          "description": "An AWS account hosting multiple dev environments",
          "gcpProjectID": "my-project",
          "gcpProjectNumber": "123456789012",
          "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
          "gcpServiceAccountKey": "Quam ullam fuga sit magni veritatis.",
          "name": "Dev AWS account"
        },
        "required": [
          "name",
          "description",
          "cloudProviderId"
        ]
      },
      "CreateComputeConfigRequestBody": {
        "type": "object",
        "properties": {
          "autoscalingPolicy": {
            "$ref": "#/components/schemas/AutoscalingPolicy"
          },
          "cpuArchitecture": {
            "type": "string",
            "description": "Processor architecture",
            "example": "X86_64|ARM64"
          },
          "description": {
            "type": "string",
            "description": "Description of the compute config",
            "example": "my compute config description",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the compute config",
            "example": "my compute config",
            "minLength": 1
          },
          "replicaCount": {
            "type": "string",
            "description": "Number of replicas to provision for this logical pool of nodes per instance of the resource",
            "example": "3"
          },
          "resources": {
            "$ref": "#/components/schemas/ResourceSpec"
          },
          "rootVolumeSizeGi": {
            "type": "integer",
            "description": "Size of the root volume in Gi",
            "example": 10,
            "format": "int64"
          },
          "warmPoolConfiguration": {
            "$ref": "#/components/schemas/WarmPoolConfiguration"
          }
        },
        "example": {
          "autoscalingPolicy": {
            "maxReplicas": 4,
            "minReplicas": 1
          },
          "cpuArchitecture": "X86_64|ARM64",
          "description": "my compute config description",
          "name": "my compute config",
          "replicaCount": "3",
          "resources": {
            "limits": {
              "cpu": "1",
              "memory": "500Mi"
            },
            "requests": {
              "cpu": "0.5",
              "memory": "200Mi"
            }
          },
          "rootVolumeSizeGi": 10,
          "warmPoolConfiguration": {
            "minimumNodesInPool": 1
          }
        },
        "required": [
          "name",
          "description"
        ]
      },
      "CreateCustomDomainRequestBody": {
        "type": "object",
        "properties": {
          "customDomain": {
            "type": "string",
            "description": "The root domain of the domain to use as suffix",
            "example": "mydomain.dev"
          },
          "description": {
            "type": "string",
            "description": "The description for the domain",
            "example": "Description of the domain"
          },
          "name": {
            "type": "string",
            "description": "The name of the custom domain",
            "example": "Dev domain"
          },
          "route53Configuration": {
            "$ref": "#/components/schemas/Route53Configuration"
          }
        },
        "example": {
          "customDomain": "mydomain.dev",
          "description": "Description of the domain",
          "name": "Dev domain",
          "route53Configuration": {
            "awsAccountID": "123456789012"
          }
        },
        "required": [
          "name",
          "description",
          "customDomain",
          "route53Configuration"
        ]
      },
      "CreateCustomNetworkRequestBody": {
        "type": "object",
        "properties": {
          "cidr": {
            "type": "string",
            "description": "CIDR block for the network",
            "default": "10.0.0.0/16",
            "example": "10.0.0.0/16",
            "format": "cidr"
          },
          "cloudProviderName": {
            "type": "string",
            "description": "The name of the cloud provider that the instance is running on.",
            "example": "aws"
          },
          "cloudProviderRegion": {
            "type": "string",
            "description": "The region of the cloud provider that the instance is running in.",
            "example": "us-east-1"
          },
          "name": {
            "type": "string",
            "description": "User friendly network name to help distinguish networks with same CIDRs",
            "example": "Prod us-east-1"
          },
          "networkFeaturesConfiguration": {
            "$ref": "#/components/schemas/NetworkFeaturesConfiguration"
          }
        },
        "example": {
          "cidr": "10.0.0.0/16",
          "cloudProviderName": "aws",
          "cloudProviderRegion": "us-east-1",
          "name": "Prod us-east-1",
          "networkFeaturesConfiguration": {
            "isPrivateLinkEnabled": false
          }
        },
        "required": [
          "cloudProviderName",
          "cloudProviderRegion"
        ]
      },
      "CreateDeploymentConfigRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the deployment config",
            "example": "A production deployment config"
          },
          "infraRollConfiguration": {
            "$ref": "#/components/schemas/InfraRollConfiguration"
          },
          "name": {
            "type": "string",
            "description": "Name of the deployment config",
            "example": "Production"
          },
          "rolloutPriorityList": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Cumque non pariatur rerum porro praesentium nesciunt."
            },
            "example": [
              "region-12345678",
              "region-abcd1234",
              "region-3c3c3c3c"
            ]
          }
        },
        "example": {
          "description": "A production deployment config",
          "infraRollConfiguration": {
            "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
            "maximumNumberOfResourceInstancesPerBatch": 1,
            "maximumUnavailableReplicas": 1
          },
          "name": "Production",
          "rolloutPriorityList": [
            "region-12345678",
            "region-abcd1234",
            "region-3c3c3c3c"
          ]
        },
        "required": [
          "name",
          "description"
        ]
      },
      "CreateIdentityProviderRequestBody": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "description": "The Client ID of the Identity Provider",
            "example": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com"
          },
          "clientSecret": {
            "type": "string",
            "description": "The Client Secret of the Identity Provider",
            "example": "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"
          },
          "identityProviderName": {
            "type": "string",
            "description": "The name of the Identity Provider",
            "example": "Google"
          }
        },
        "example": {
          "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
          "clientSecret": "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",
          "identityProviderName": "Google"
        },
        "required": [
          "identityProviderName",
          "clientId",
          "clientSecret"
        ]
      },
      "CreateImageConfigRequestBody": {
        "type": "object",
        "properties": {
          "customImageCommandsAndArgs": {
            "$ref": "#/components/schemas/CustomImageCommandsAndArgs"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the image configuration",
            "example": "A image configuration for my new entity"
          },
          "imageName": {
            "type": "string",
            "description": "Name of the container image",
            "example": "mysql",
            "minLength": 1
          },
          "imageRegistryId": {
            "type": "string",
            "description": "The image registry ID to use for the infra",
            "example": "ir-12345678"
          },
          "imageSignaturePublicKeyPEM": {
            "type": "string",
            "description": "PEM-encoded Public key part of the key used to sign the container image",
            "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n"
          },
          "imageTag": {
            "type": "string",
            "description": "Tag representing the specific software image version",
            "default": "latest",
            "example": "latest"
          },
          "serviceEnvironmentId": {
            "type": "string",
            "description": "The service environment ID",
            "example": "se-12345678"
          }
        },
        "example": {
          "customImageCommandsAndArgs": {
            "args": [
              "-d",
              "mysql"
            ],
            "commands": [
              "echo",
              "Hello, World!"
            ]
          },
          "description": "A image configuration for my new entity",
          "imageName": "mysql",
          "imageRegistryId": "ir-12345678",
          "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
          "imageTag": "latest",
          "serviceEnvironmentId": "se-12345678"
        },
        "required": [
          "imageName",
          "serviceEnvironmentId",
          "description"
        ]
      },
      "CreateImageRegistryRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the Image Registry",
            "example": "DockerHub is a public Docker Image Registry"
          },
          "host": {
            "type": "string",
            "description": "The Image Registry host",
            "example": "docker.io"
          },
          "name": {
            "type": "string",
            "description": "Name of the Image Registry",
            "example": "DockerHub"
          },
          "password": {
            "type": "string",
            "description": "The password to use when authenticating to the Image Registry",
            "example": "mypassword"
          },
          "username": {
            "type": "string",
            "description": "The username to use when authenticating to the Image Registry",
            "example": "myusername"
          }
        },
        "example": {
          "description": "DockerHub is a public Docker Image Registry",
          "host": "docker.io",
          "name": "DockerHub",
          "password": "mypassword",
          "username": "myusername"
        },
        "required": [
          "name",
          "description",
          "host"
        ]
      },
      "CreateInfraConfigRequestBody": {
        "type": "object",
        "properties": {
          "computeConfigId": {
            "type": "string",
            "description": "The compute config ID",
            "example": "cc-12345678"
          },
          "customTag": {
            "$ref": "#/components/schemas/EnvironmentVariable"
          },
          "description": {
            "type": "string",
            "description": "The description for the infra config",
            "example": "Infra config used for the base tier MySQL service"
          },
          "name": {
            "type": "string",
            "description": "The name of the infra config",
            "example": "MySQL Writer Infra Config"
          },
          "networkConfigId": {
            "type": "string",
            "description": "The network config ID",
            "example": "nc-12345678"
          },
          "serviceEnvironmentId": {
            "type": "string",
            "description": "The service environment ID",
            "example": "se-12345678"
          },
          "storageConfigId": {
            "type": "string",
            "description": "The storage config ID",
            "example": "sc-12345678"
          }
        },
        "example": {
          "computeConfigId": "cc-12345678",
          "customTag": {
            "key": "customKey",
            "value": "customValue"
          },
          "description": "Infra config used for the base tier MySQL service",
          "name": "MySQL Writer Infra Config",
          "networkConfigId": "nc-12345678",
          "serviceEnvironmentId": "se-12345678",
          "storageConfigId": "sc-12345678"
        },
        "required": [
          "name",
          "description",
          "serviceEnvironmentId"
        ]
      },
      "CreateInputParameterRequestBody": {
        "type": "object",
        "properties": {
          "defaultValue": {
            "type": "string",
            "description": "Default value to use for an optional input parameter represented as a string",
            "example": "default value"
          },
          "dependentResourceId": {
            "type": "string",
            "description": "The ID of the resource whose instance this input parameter depends on",
            "example": "r-12345678"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the input parameter",
            "example": "Quibusdam nihil fugiat laborum optio."
          },
          "hasOptions": {
            "type": "boolean",
            "description": "Marks the input parameter to be selectable from a list of values",
            "default": false,
            "example": false
          },
          "isList": {
            "type": "boolean",
            "description": "Marks the input parameter as a list of values",
            "default": false,
            "example": false
          },
          "key": {
            "type": "string",
            "description": "Key of the input parameter",
            "example": "c3",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "minLength": 1
          },
          "labeledOptions": {
            "type": "object",
            "description": "A map for labeled options. The key is the label and the value is the option. When the option is selected, the label will be displayed to the end customer. Specify either options or labeledOptions when defining the input parameter.",
            "example": {
              "large": "t3.xlarge",
              "medium": "t3.large",
              "small": "t3.medium"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Minus magni placeat cumque voluptatum."
            }
          },
          "limits": {
            "$ref": "#/components/schemas/Limits"
          },
          "modifiable": {
            "type": "boolean",
            "description": "Marks the input parameter as immutable",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "External name for the input parameter",
            "example": "o72",
            "minLength": 1
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Similique necessitatibus consequatur aperiam."
            },
            "description": "A list of options to restrict the value of the input parameter to (represented as a string)",
            "example": [
              "a",
              "b",
              "c",
              "default value"
            ]
          },
          "required": {
            "type": "boolean",
            "description": "Enforces the input parameter as a required parameter",
            "example": true
          },
          "resourceId": {
            "type": "string",
            "description": "The ID of the resource that this input parameter belongs to",
            "example": "r-12345678"
          },
          "type": {
            "type": "string",
            "example": "Voluptatibus consequatur vel doloribus omnis."
          }
        },
        "example": {
          "defaultValue": "default value",
          "dependentResourceId": "r-12345678",
          "description": "Sit non aspernatur.",
          "hasOptions": false,
          "isList": false,
          "key": "g",
          "labeledOptions": {
            "large": "t3.xlarge",
            "medium": "t3.large",
            "small": "t3.medium"
          },
          "limits": {
            "max": "Sit explicabo delectus aut nisi consequuntur.",
            "maxLength": "Sunt amet provident.",
            "min": "Cumque temporibus dolores vitae dolores doloremque illum.",
            "minLength": "Qui odio laudantium illum."
          },
          "modifiable": false,
          "name": "q",
          "options": [
            "a",
            "b",
            "c",
            "default value"
          ],
          "required": false,
          "resourceId": "r-12345678",
          "type": "Ratione veniam ullam ullam ut quia."
        },
        "required": [
          "key",
          "description",
          "resourceId",
          "type",
          "name",
          "required",
          "modifiable"
        ]
      },
      "CreateNetworkConfigRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the network config",
            "example": "A multi-zone HA network config"
          },
          "endpointPerReplica": {
            "type": "boolean",
            "description": "Generates a DNS endpoint per-replica for this network config",
            "example": true
          },
          "internal": {
            "type": "boolean",
            "description": "Restrict access to this network config to the internal network",
            "default": false,
            "example": true
          },
          "name": {
            "type": "string",
            "description": "Name of the network config",
            "example": "Multi-zone"
          },
          "openPorts": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 311172033276891300,
              "format": "int64"
            },
            "description": "Ports to map to the generated DNS endpoint",
            "example": [
              1299,
              3306
            ]
          },
          "privateNetworkingConfiguration": {
            "$ref": "#/components/schemas/PrivateNetworkingConfiguration"
          },
          "publicNetworkingConfiguration": {
            "$ref": "#/components/schemas/PublicNetworkingConfiguration"
          },
          "stableEgressIP": {
            "type": "boolean",
            "description": "Enable stable egress IP",
            "example": true
          },
          "tlsTerminationPort": {
            "type": "integer",
            "description": "The port that hosts the reverse proxy for TLS termination",
            "example": 443,
            "format": "int64"
          },
          "zoneConfiguration": {
            "type": "string",
            "description": "The preferred type of zonal availability for this resource and the specific zone(s) to deploy in",
            "example": "Quia tempore."
          }
        },
        "example": {
          "description": "A multi-zone HA network config",
          "endpointPerReplica": true,
          "internal": true,
          "name": "Multi-zone",
          "openPorts": [
            1299,
            3306
          ],
          "privateNetworkingConfiguration": {
            "privateLinkConfiguration": {
              "awsPrivateLinkConfigurations": [
                {
                  "port": 80,
                  "targetGroupName": "my-target-group"
                },
                {
                  "port": 80,
                  "targetGroupName": "my-target-group"
                },
                {
                  "port": 80,
                  "targetGroupName": "my-target-group"
                },
                {
                  "port": 80,
                  "targetGroupName": "my-target-group"
                }
              ]
            }
          },
          "publicNetworkingConfiguration": {
            "enableClusterLoadBalancer": true,
            "enableNodeLoadBalancer": true
          },
          "stableEgressIP": true,
          "tlsTerminationPort": 443,
          "zoneConfiguration": "Iure tempora tenetur."
        },
        "required": [
          "name",
          "description",
          "endpointPerReplica"
        ]
      },
      "CreateOutputParameterRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the output variable being exported",
            "example": "Username of the user created in the target system",
            "minLength": 1
          },
          "key": {
            "type": "string",
            "description": "Key of the output variable being exported",
            "example": "username",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "External name of the output variable being exported",
            "example": "Username",
            "minLength": 1
          },
          "resourceId": {
            "type": "string",
            "description": "The ID of the resource that this output parameter belongs to",
            "example": "r-12345678"
          },
          "value": {
            "type": "string",
            "description": "Value of the output variable being exported",
            "example": "johndoe"
          },
          "valueRef": {
            "type": "string",
            "description": "Reference to another variable that will be used to set the value of the output variable being exported",
            "example": "$var.username"
          },
          "valueType": {
            "type": "string",
            "example": "Et quas porro consequuntur fugit quae repudiandae."
          }
        },
        "example": {
          "description": "Username of the user created in the target system",
          "key": "username",
          "name": "Username",
          "resourceId": "r-12345678",
          "value": "johndoe",
          "valueRef": "$var.username",
          "valueType": "Nam omnis libero quia quaerat."
        },
        "required": [
          "key",
          "description",
          "name",
          "resourceId"
        ]
      },
      "CreateProductTierBillingPlanRequestBody": {
        "type": "object",
        "properties": {
          "allowCreatesWhenPaymentNotConfigured": {
            "type": "boolean",
            "description": "Allow creates when payment not configured",
            "example": true
          },
          "maxNumberofInstances": {
            "type": "integer",
            "description": "Maximum number of instances",
            "example": 5,
            "format": "int64"
          },
          "planName": {
            "type": "string",
            "description": "Plan name",
            "example": "STARTER"
          },
          "pricing": {
            "description": "Pricing in dollars.",
            "example": {
              "cpuCoreHours": "0.001",
              "memoryGiBHours": "0.0001",
              "storageGiBHours": "0.0001"
            }
          }
        },
        "example": {
          "allowCreatesWhenPaymentNotConfigured": true,
          "maxNumberofInstances": 5,
          "planName": "STARTER",
          "pricing": {
            "cpuCoreHours": "0.001",
            "memoryGiBHours": "0.0001",
            "storageGiBHours": "0.0001"
          }
        },
        "required": [
          "planName",
          "pricing",
          "allowCreatesWhenPaymentNotConfigured",
          "maxNumberofInstances"
        ]
      },
      "CreateProductTierRequestBody": {
        "type": "object",
        "properties": {
          "autoApproveSubscription": {
            "type": "boolean",
            "description": "Auto approve subscription or not",
            "example": false
          },
          "awsRegions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Expedita dolorem ex rerum pariatur alias."
            },
            "description": "The AWS regions that this product tier is available on",
            "example": [
              "us-east-2",
              "ca-central-1"
            ]
          },
          "description": {
            "type": "string",
            "description": "A brief description of the product tier",
            "example": "A premium product tier"
          },
          "documentation": {
            "type": "string",
            "description": "Documentation",
            "example": "Any documentation"
          },
          "gcpRegions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Tenetur blanditiis a harum incidunt qui sit."
            },
            "description": "The GCP regions that this product tier is available on",
            "example": [
              "us-central1"
            ]
          },
          "isDisabled": {
            "type": "boolean",
            "description": "Create the product tier in a disabled state. Enabling the product tier will let end-customers subscribe and use the service plan.",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Name of the product tier",
            "example": "Premium"
          },
          "planDescription": {
            "type": "string",
            "description": "A brief description for the end user of the product tier",
            "example": "A premium plan"
          },
          "pricing": {
            "description": "Pricing",
            "example": {
              "price1": "value1"
            }
          },
          "serviceModelId": {
            "type": "string",
            "description": "Service model ID",
            "example": "sm-12345678"
          },
          "support": {
            "type": "string",
            "description": "Support",
            "example": "Any support"
          },
          "tierType": {
            "type": "string",
            "description": "Tier type",
            "example": "OMNISTRATE_DEDICATED_TENANCY"
          }
        },
        "example": {
          "autoApproveSubscription": false,
          "awsRegions": [
            "us-east-2",
            "ca-central-1"
          ],
          "description": "A premium product tier",
          "documentation": "Any documentation",
          "gcpRegions": [
            "us-central1"
          ],
          "isDisabled": false,
          "name": "Premium",
          "planDescription": "A premium plan",
          "pricing": {
            "price1": "value1"
          },
          "serviceModelId": "sm-12345678",
          "support": "Any support",
          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
        },
        "required": [
          "name",
          "description",
          "planDescription",
          "tierType",
          "serviceModelId"
        ]
      },
      "CreateResourceInstanceRequestBody": {
        "type": "object",
        "properties": {
          "cloud_provider": {
            "type": "string",
            "description": "The cloud provider name",
            "example": "aws"
          },
          "custom_network_id": {
            "type": "string",
            "description": "Custom network for resource",
            "example": "n-1234567890"
          },
          "externalBillingId": {
            "type": "string",
            "description": "The external billing id to record which customer should pay for this resource instance",
            "example": "external-billing-id-1234"
          },
          "network_type": {
            "type": "string",
            "description": "The network type",
            "example": "PUBLIC"
          },
          "region": {
            "type": "string",
            "description": "The region code",
            "example": "us-east-1"
          },
          "requestParams": {
            "description": "The request parameters",
            "example": {
              "param1": "value1",
              "param2": "value2"
            }
          }
        },
        "example": {
          "cloud_provider": "aws",
          "custom_network_id": "n-1234567890",
          "externalBillingId": "external-billing-id-1234",
          "network_type": "PUBLIC",
          "region": "us-east-1",
          "requestParams": {
            "param1": "value1",
            "param2": "value2"
          }
        }
      },
      "CreateResourceRequestBody": {
        "type": "object",
        "properties": {
          "additionalSecurityContext": {
            "$ref": "#/components/schemas/AdditionalSecurityContext"
          },
          "backupConfiguration": {
            "$ref": "#/components/schemas/BackupConfiguration"
          },
          "blobStorageConfiguration": {
            "$ref": "#/components/schemas/BlobStorageConfiguration"
          },
          "customLabels": {
            "type": "object",
            "description": "Custom labels for the resource",
            "example": {
              "key": "value"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Optio reprehenderit incidunt sequi voluptatem temporibus."
            }
          },
          "customSysCTLs": {
            "type": "object",
            "description": "Custom sysctl settings for the resource",
            "example": {
              "net.ipv4.tcp_syncookies": "1"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Est hic deleniti ipsa laudantium."
            }
          },
          "customULimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomULimits"
            },
            "description": "Custom ulimits for the resource",
            "example": [
              {
                "ULimitsName": "NoProc",
                "ULimitsType": "Soft",
                "ULimitsValue": 1000
              },
              {
                "ULimitsName": "NoFile",
                "ULimitsType": "Hard",
                "ULimitsValue": 2048
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "A brief description of the resource",
            "example": "A resource to manage a hosted public SaaS offering of a multi-writer MySQL service"
          },
          "environmentVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            },
            "description": "The environment variables that this resource requires",
            "example": [
              {
                "key": "MYSQL_ROOT_PASSWORD",
                "value": "password"
              }
            ]
          },
          "fileSystemConfiguration": {
            "$ref": "#/components/schemas/FileSystemConfiguration"
          },
          "helmChartConfiguration": {
            "$ref": "#/components/schemas/HelmChartConfiguration"
          },
          "imageConfigId": {
            "type": "string",
            "description": "The ID of the image configuration that this resource refers to",
            "example": "imgc-12345678"
          },
          "infraConfigId": {
            "type": "string",
            "description": "The ID of the infrastructure configuration that this resource refers to",
            "example": "ic-12345678"
          },
          "internal": {
            "type": "boolean",
            "description": "Whether this resource is internal or not",
            "default": false,
            "example": true
          },
          "isProxy": {
            "type": "boolean",
            "description": "Whether this resource is a proxy or not",
            "default": false,
            "example": false
          },
          "key": {
            "type": "string",
            "description": "The key of the resource",
            "example": "galera"
          },
          "kustomizeConfiguration": {
            "$ref": "#/components/schemas/KustomizeConfiguration"
          },
          "l4LoadBalancerConfiguration": {
            "$ref": "#/components/schemas/L4LoadBalancerConfiguration"
          },
          "l7LoadBalancerConfiguration": {
            "$ref": "#/components/schemas/L7LoadBalancerConfiguration"
          },
          "name": {
            "type": "string",
            "description": "Name of the resource",
            "example": "Galera"
          },
          "operatorCRDConfiguration": {
            "$ref": "#/components/schemas/OperatorCRDConfiguration"
          },
          "productTierId": {
            "type": "string",
            "description": "The product tier ID",
            "example": "pt-12345678"
          },
          "proxyType": {
            "type": "string",
            "description": "A proxy type of resource",
            "default": "PortsBasedProxy",
            "example": "PortsBasedProxy"
          },
          "resourceDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceDependency"
            },
            "example": [
              {
                "parameterMap": {
                  "userDatabase": "clusterOrg",
                  "writerId": "clusterWriterId"
                },
                "resourceId": "r-12345678"
              },
              {
                "parameterMap": {
                  "readerId": "clusterReaderId",
                  "userDatabase": "clusterOrg"
                },
                "resourceId": "r-abcdef12"
              }
            ]
          },
          "resourceType": {
            "type": "string",
            "description": "The type of the resource",
            "example": "Generic"
          },
          "terraformConfigurations": {
            "type": "object",
            "description": "The Terraform configurations for various cloud providers",
            "example": {
              "Ex consequatur quia maiores quis.": {
                "gitConfiguration": {
                  "accessToken": "my-token",
                  "referenceName": "tags/v1.0.0",
                  "repositoryUrl": "https://github.com/username/myrepo",
                  "userName": "my-user"
                },
                "privateModuleGitAccessTokens": {
                  "tokenName": "accessToken"
                },
                "requiredOutputKeys": [
                  "output1"
                ],
                "requiredOutputs": [
                  {
                    "exported": true,
                    "key": "output1"
                  }
                ],
                "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                "terraformPath": "/project1/tf"
              },
              "Quaerat temporibus cupiditate sed doloribus accusantium officiis.": {
                "gitConfiguration": {
                  "accessToken": "my-token",
                  "referenceName": "tags/v1.0.0",
                  "repositoryUrl": "https://github.com/username/myrepo",
                  "userName": "my-user"
                },
                "privateModuleGitAccessTokens": {
                  "tokenName": "accessToken"
                },
                "requiredOutputKeys": [
                  "output1"
                ],
                "requiredOutputs": [
                  {
                    "exported": true,
                    "key": "output1"
                  }
                ],
                "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                "terraformPath": "/project1/tf"
              },
              "Quidem dolor quo ea et molestiae quisquam.": {
                "gitConfiguration": {
                  "accessToken": "my-token",
                  "referenceName": "tags/v1.0.0",
                  "repositoryUrl": "https://github.com/username/myrepo",
                  "userName": "my-user"
                },
                "privateModuleGitAccessTokens": {
                  "tokenName": "accessToken"
                },
                "requiredOutputKeys": [
                  "output1"
                ],
                "requiredOutputs": [
                  {
                    "exported": true,
                    "key": "output1"
                  }
                ],
                "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                "terraformPath": "/project1/tf"
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/TerraformConfiguration"
            }
          }
        },
        "example": {
          "additionalSecurityContext": {
            "AddCapabilities": [
              "CAP_NET_ADMIN",
              "CAP_NET_RAW"
            ],
            "DropCapabilities": [
              "CAP_NET_ADMIN",
              "CAP_NET_RAW"
            ],
            "SupplementalGroupIDs": [
              1001,
              999
            ]
          },
          "backupConfiguration": {
            "backupPeriodInHours": 24,
            "backupRetentionInDays": 7
          },
          "blobStorageConfiguration": {
            "GCSConfiguration": {},
            "S3Configuration": {}
          },
          "customLabels": {
            "key": "value"
          },
          "customSysCTLs": {
            "net.ipv4.tcp_syncookies": "1"
          },
          "customULimits": [
            {
              "ULimitsName": "NoProc",
              "ULimitsType": "Soft",
              "ULimitsValue": 1000
            },
            {
              "ULimitsName": "NoFile",
              "ULimitsType": "Hard",
              "ULimitsValue": 2048
            }
          ],
          "description": "A resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
          "environmentVariables": [
            {
              "key": "MYSQL_ROOT_PASSWORD",
              "value": "password"
            }
          ],
          "fileSystemConfiguration": {
            "EFSFileSystemConfiguration": {
              "PerformanceMode": "generalPurpose|maxIO",
              "ProvisionedThroughputInMibps": 125,
              "ThroughputMode": "provisioned|bursting|elastic"
            }
          },
          "helmChartConfiguration": {
            "chartName": "my-chart",
            "chartRepoName": "my-repo",
            "chartRepoUrl": "https://my-repo.com",
            "chartValues": {
              "key1": "value1",
              "key2": 3,
              "key3": {
                "key4": "value4"
              }
            },
            "chartVersion": "1.0.0",
            "endpointConfiguration": {
              "admin": {
                "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                "networkingType": "PRIVATE",
                "ports": [
                  8080,
                  8081
                ],
                "primary": false
              },
              "cluster": {
                "host": "https://my-endpoint.com",
                "networkingType": "PUBLIC",
                "ports": [
                  8080,
                  8081
                ],
                "primary": true
              }
            },
            "password": "my-password",
            "runtimeConfiguration": {
              "disableHooks": true,
              "recreate": true,
              "resetThenReuseValues": true,
              "resetValues": true,
              "reuseValues": true,
              "skipCRDs": true,
              "timeoutNanos": 1000000000,
              "upgradeCRDs": true,
              "wait": true,
              "waitForJobs": true
            },
            "username": "my-user"
          },
          "imageConfigId": "imgc-12345678",
          "infraConfigId": "ic-12345678",
          "internal": false,
          "isProxy": true,
          "key": "galera",
          "kustomizeConfiguration": {
            "endpointConfiguration": {
              "admin": {
                "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                "networkingType": "PRIVATE",
                "ports": [
                  8080,
                  8081
                ],
                "primary": false
              },
              "cluster": {
                "host": "https://my-endpoint.com",
                "networkingType": "PUBLIC",
                "ports": [
                  8080,
                  8081
                ],
                "primary": true
              }
            },
            "gitConfiguration": {
              "accessToken": "my-token",
              "referenceName": "tags/v1.0.0",
              "repositoryUrl": "https://github.com/username/myrepo",
              "userName": "my-user"
            },
            "helmChartDependencies": [
              {
                "chartName": "cert-manager",
                "chartVersion": "v1.5.3"
              },
              {
                "chartName": "nginx-ingress",
                "chartVersion": "v0.48.1"
              },
              {
                "chartName": "external-dns",
                "chartVersion": "v0.7.0"
              },
              {
                "chartName": "cnpg-operator",
                "chartVersion": "v0.23.1"
              }
            ],
            "kustomizePath": "/kustomize"
          },
          "l4LoadBalancerConfiguration": {
            "ingressPortConfiguration": [
              {
                "associatedResourceIDs": [
                  "r-12345678",
                  "r-abcdef12"
                ],
                "backendPort": 8080,
                "ingressPort": 1234
              },
              {
                "associatedResourceIDs": [
                  "r-12345678",
                  "r-abcdef12"
                ],
                "backendPort": 8081,
                "ingressPort": 5678
              },
              {
                "associatedResourceIDs": [
                  "r-vwxybz12",
                  "r-poij122v"
                ],
                "backendPort": 8082,
                "ingressPort": 9012
              }
            ]
          },
          "l7LoadBalancerConfiguration": {
            "paths": [
              {
                "associatedResourceID": "r-12345678",
                "path": "/path",
                "port": 8080
              }
            ]
          },
          "name": "Galera",
          "operatorCRDConfiguration": {
            "endpointConfiguration": {
              "admin": {
                "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                "networkingType": "PRIVATE",
                "ports": [
                  8080,
                  8081
                ],
                "primary": false
              },
              "cluster": {
                "host": "https://my-endpoint.com",
                "networkingType": "PUBLIC",
                "ports": [
                  8080,
                  8081
                ],
                "primary": true
              }
            },
            "helmChartDependencies": [
              {
                "chartName": "cert-manager",
                "chartVersion": "v1.5.3"
              },
              {
                "chartName": "nginx-ingress",
                "chartVersion": "v0.48.1"
              },
              {
                "chartName": "external-dns",
                "chartVersion": "v0.7.0"
              },
              {
                "chartName": "cnpg-operator",
                "chartVersion": "v0.23.1"
              }
            ],
            "outputParameters": {
              "expiresAt": "$out.status.notAfter",
              "issuerName": "letsencrypt-prod"
            },
            "readinessConditions": {
              "$out.status.conditions[?(@.type=='Ready')].status": true
            },
            "supplementalFiles": [
              "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
              "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
            ],
            "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
          },
          "productTierId": "pt-12345678",
          "proxyType": "PortsBasedProxy",
          "resourceDependencies": [
            {
              "parameterMap": {
                "userDatabase": "clusterOrg",
                "writerId": "clusterWriterId"
              },
              "resourceId": "r-12345678"
            },
            {
              "parameterMap": {
                "readerId": "clusterReaderId",
                "userDatabase": "clusterOrg"
              },
              "resourceId": "r-abcdef12"
            }
          ],
          "resourceType": "Generic",
          "terraformConfigurations": {
            "Doloremque ipsa qui deleniti labore soluta.": {
              "gitConfiguration": {
                "accessToken": "my-token",
                "referenceName": "tags/v1.0.0",
                "repositoryUrl": "https://github.com/username/myrepo",
                "userName": "my-user"
              },
              "privateModuleGitAccessTokens": {
                "tokenName": "accessToken"
              },
              "requiredOutputKeys": [
                "output1"
              ],
              "requiredOutputs": [
                {
                  "exported": true,
                  "key": "output1"
                }
              ],
              "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
              "terraformPath": "/project1/tf"
            },
            "Ea vitae.": {
              "gitConfiguration": {
                "accessToken": "my-token",
                "referenceName": "tags/v1.0.0",
                "repositoryUrl": "https://github.com/username/myrepo",
                "userName": "my-user"
              },
              "privateModuleGitAccessTokens": {
                "tokenName": "accessToken"
              },
              "requiredOutputKeys": [
                "output1"
              ],
              "requiredOutputs": [
                {
                  "exported": true,
                  "key": "output1"
                }
              ],
              "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
              "terraformPath": "/project1/tf"
            },
            "Id placeat dolorem explicabo dolor est.": {
              "gitConfiguration": {
                "accessToken": "my-token",
                "referenceName": "tags/v1.0.0",
                "repositoryUrl": "https://github.com/username/myrepo",
                "userName": "my-user"
              },
              "privateModuleGitAccessTokens": {
                "tokenName": "accessToken"
              },
              "requiredOutputKeys": [
                "output1"
              ],
              "requiredOutputs": [
                {
                  "exported": true,
                  "key": "output1"
                }
              ],
              "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
              "terraformPath": "/project1/tf"
            }
          }
        },
        "required": [
          "name",
          "description",
          "productTierId"
        ]
      },
      "CreateSaaSPortalCustomDomainRequestBody": {
        "type": "object",
        "properties": {
          "customDomain": {
            "type": "string",
            "description": "The custom domain",
            "example": "mycustomdomain.com"
          },
          "description": {
            "type": "string",
            "description": "The custom domain description",
            "example": "My custom domain description"
          },
          "environmentType": {
            "type": "string",
            "description": "The environment type for the custom domain",
            "example": "DEV"
          },
          "name": {
            "type": "string",
            "description": "The custom domain name",
            "example": "MyCustomDomain"
          }
        },
        "example": {
          "customDomain": "mycustomdomain.com",
          "description": "My custom domain description",
          "environmentType": "DEV",
          "name": "MyCustomDomain"
        },
        "required": [
          "environmentType",
          "name",
          "description",
          "customDomain"
        ]
      },
      "CreateServiceAPIRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the service API bundle",
            "example": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability"
          },
          "serviceEnvironmentId": {
            "type": "string",
            "description": "The service environment ID",
            "example": "se-12345678"
          }
        },
        "example": {
          "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
          "serviceEnvironmentId": "se-12345678"
        },
        "required": [
          "description",
          "serviceEnvironmentId"
        ]
      },
      "CreateServiceEnvironmentRequestBody": {
        "type": "object",
        "properties": {
          "autoApproveSubscription": {
            "type": "boolean",
            "description": "Auto approve subscription or not",
            "example": false
          },
          "deploymentConfigId": {
            "type": "string",
            "description": "The deployment configuration ID",
            "example": "dc-12345678"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the service environment",
            "example": "The production environment for the MySQL multi-writer service"
          },
          "name": {
            "type": "string",
            "description": "Name of the Service Environment",
            "example": "Production"
          },
          "serviceAuthPublicKey": {
            "type": "string",
            "description": "PEM-encoded Public key part of the key used to sign the JWT tokens for the service control plane APIs",
            "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n"
          },
          "sourceEnvironmentId": {
            "type": "string",
            "description": "The ID of the service environment to use for promoting changes to this environment",
            "example": "se-12345678"
          },
          "type": {
            "type": "string",
            "example": "DEV"
          },
          "visibility": {
            "type": "string",
            "description": "This parameter is used to configure the visibility of the service control-plane APIs",
            "example": "Harum voluptas explicabo sint molestias."
          }
        },
        "example": {
          "autoApproveSubscription": false,
          "deploymentConfigId": "dc-12345678",
          "description": "The production environment for the MySQL multi-writer service",
          "name": "Production",
          "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
          "sourceEnvironmentId": "se-12345678",
          "type": "DEV",
          "visibility": "Mollitia consectetur dolore ullam debitis maiores molestias."
        },
        "required": [
          "name",
          "description",
          "deploymentConfigId"
        ]
      },
      "CreateServiceFromComposeSpecRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the service",
            "example": "A MySQL SaaS specializing in multi-writer clusters for high availability"
          },
          "fileContent": {
            "type": "string",
            "description": "Base64 encoded Compose Spec YAML in docker compose format",
            "example": "Dolorem impedit in enim."
          },
          "fileFormat": {
            "type": "string",
            "description": "MIME type of file format",
            "example": "text/plain"
          },
          "fileName": {
            "type": "string",
            "description": "Name of compose spec YAML file that is uploaded",
            "example": "mysql.yaml"
          },
          "name": {
            "type": "string",
            "description": "Name of the Service",
            "example": "MySQL multi-writer service"
          },
          "serviceLogoURL": {
            "type": "string",
            "description": "The logo for the service",
            "example": "http://emard.info/max",
            "format": "uri"
          }
        },
        "example": {
          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
          "fileContent": "Dolor neque omnis quos odio eius.",
          "fileFormat": "text/plain",
          "fileName": "mysql.yaml",
          "name": "MySQL multi-writer service",
          "serviceLogoURL": "http://eberthaley.name/verner_koepp"
        },
        "required": [
          "name",
          "description",
          "fileName",
          "fileContent",
          "fileFormat"
        ]
      },
      "CreateServiceModelRequestBody": {
        "type": "object",
        "properties": {
          "accountConfigIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Molestiae vitae fuga perspiciatis dolor consequatur ipsam."
            },
            "description": "The infrastructure account configuration ID list",
            "example": [
              "ac-12345678",
              "ac-23456789"
            ]
          },
          "description": {
            "type": "string",
            "description": "A brief description of the service model",
            "example": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceModelFeatureDetail"
            },
            "description": "Enabled service model features",
            "example": [
              {
                "configuration": {
                  "Sapiente ut.": "Ut qui eligendi odit."
                },
                "feature": "Quia quas saepe sequi quidem facere."
              },
              {
                "configuration": {
                  "Sapiente ut.": "Ut qui eligendi odit."
                },
                "feature": "Quia quas saepe sequi quidem facere."
              }
            ]
          },
          "modelType": {
            "type": "string",
            "description": "The model type encapsulating this service",
            "example": "CUSTOMER_HOSTED"
          },
          "name": {
            "type": "string",
            "description": "Name of the Service Model",
            "example": "MySQL multi-writer service hosted model"
          },
          "serviceApiId": {
            "type": "string",
            "description": "The service API this model is for",
            "example": "sa-12345678"
          }
        },
        "example": {
          "accountConfigIds": [
            "ac-12345678",
            "ac-23456789"
          ],
          "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
          "features": [
            {
              "configuration": {
                "Sapiente ut.": "Ut qui eligendi odit."
              },
              "feature": "Quia quas saepe sequi quidem facere."
            },
            {
              "configuration": {
                "Sapiente ut.": "Ut qui eligendi odit."
              },
              "feature": "Quia quas saepe sequi quidem facere."
            }
          ],
          "modelType": "CUSTOMER_HOSTED",
          "name": "MySQL multi-writer service hosted model",
          "serviceApiId": "sa-12345678"
        },
        "required": [
          "name",
          "description",
          "modelType",
          "serviceApiId"
        ]
      },
      "CreateServiceRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the service",
            "example": "A MySQL SaaS specializing in multi-writer clusters for high availability"
          },
          "name": {
            "type": "string",
            "description": "Name of the Service",
            "example": "MySQL multi-writer service"
          },
          "serviceLogoURL": {
            "type": "string",
            "description": "The logo for the service",
            "example": "http://gutmannsporer.net/rogelio_hudson",
            "format": "uri"
          }
        },
        "example": {
          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
          "name": "MySQL multi-writer service",
          "serviceLogoURL": "http://shanahan.info/theron"
        },
        "required": [
          "name",
          "description"
        ]
      },
      "CreateServicesOrchestrationRequestBody": {
        "type": "object",
        "properties": {
          "orchestrationCreateDSL": {
            "type": "string",
            "description": "base64 encoded content of service orchestration create DSL",
            "example": "In ut id ut soluta."
          }
        },
        "example": {
          "orchestrationCreateDSL": "Commodi sunt accusantium et voluptatum dolore."
        },
        "required": [
          "orchestrationCreateDSL"
        ]
      },
      "CreateServicesOrchestrationResponseBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Services Orchestration Id",
            "example": "Eum totam quam a."
          }
        },
        "example": {
          "id": "Unde accusamus est deserunt soluta."
        }
      },
      "CreateStorageConfigRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the storage config",
            "example": "my-storage-config-description",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the storage config",
            "example": "my-storage-config",
            "minLength": 1
          }
        },
        "example": {
          "description": "my-storage-config-description",
          "name": "my-storage-config"
        },
        "required": [
          "name",
          "description"
        ]
      },
      "CreateStorageVolumeConfigRequestBody": {
        "type": "object",
        "properties": {
          "clusterStorageType": {
            "type": "string",
            "description": "The type of the fixed storage for the cluster",
            "example": "S3|$var.storageType|AWS::EFS"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the context for the storage volume pool",
            "example": "A storage volume set to store the MySQL data directory"
          },
          "disableBackup": {
            "type": "boolean",
            "description": "Disable backup for the storage volume",
            "example": false
          },
          "instanceStorageIops": {
            "type": "string",
            "description": "The IOPS provisioned for the configured instance storage type",
            "example": "$var.storageIops"
          },
          "instanceStorageSizeGi": {
            "type": "string",
            "description": "The storage size (in Gi) provisioned for the configured instance storage type",
            "example": "$var.storage_size"
          },
          "instanceStorageThroughputMiBps": {
            "type": "string",
            "description": "The throughput (in MiBps) provisioned for the configured instance storage type",
            "example": "128"
          },
          "instanceStorageType": {
            "type": "string",
            "description": "The type of the storage for a compute instance",
            "example": "$var.storageType"
          },
          "name": {
            "type": "string",
            "description": "Name of the storage volume pool",
            "example": "MySQL Data Volume"
          },
          "storageResourceID": {
            "type": "string",
            "description": "The storage resource ID",
            "example": "r-12345678"
          }
        },
        "example": {
          "clusterStorageType": "S3|$var.storageType|AWS::EFS",
          "description": "A storage volume set to store the MySQL data directory",
          "disableBackup": false,
          "instanceStorageIops": "$var.storageIops",
          "instanceStorageSizeGi": "$var.storage_size",
          "instanceStorageThroughputMiBps": "128",
          "instanceStorageType": "$var.storageType",
          "name": "MySQL Data Volume",
          "storageResourceID": "r-12345678"
        },
        "required": [
          "name",
          "description"
        ]
      },
      "CreateSubscriptionRequestBody": {
        "type": "object",
        "properties": {
          "productTierId": {
            "type": "string",
            "description": "The product tier ID",
            "example": "pt-12345678"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID",
            "example": "s-12345678"
          }
        },
        "example": {
          "productTierId": "pt-12345678",
          "serviceId": "s-12345678"
        },
        "required": [
          "serviceId",
          "productTierId"
        ]
      },
      "CreateTierVersionSetRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the product-tier version set.",
            "example": "Minima id possimus quasi."
          },
          "name": {
            "type": "string",
            "description": "The name of the product-tier version set.",
            "example": "Major version set"
          },
          "parentVersion": {
            "type": "string",
            "description": "The parent version of this version set.",
            "example": "2.0"
          },
          "type": {
            "type": "string",
            "description": "The version-set type of the product-tier.",
            "example": "Major|Incremental|UserDefined"
          }
        },
        "example": {
          "description": "Quo eum inventore qui.",
          "name": "Major version set",
          "parentVersion": "2.0",
          "type": "Major|Incremental|UserDefined"
        },
        "required": [
          "type"
        ]
      },
      "CreateTierVersionSetResult": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "The version number for the specific version set.",
            "example": "3.0"
          }
        },
        "example": {
          "version": "3.0"
        },
        "required": [
          "version"
        ]
      },
      "CustomDNSEndpoint": {
        "type": "object",
        "properties": {
          "aRecordTarget": {
            "type": "string",
            "example": "1.1.1.1"
          },
          "cnameTarget": {
            "type": "string",
            "example": "cname-target.com"
          },
          "dnsHost": {
            "type": "string",
            "example": "https://my-custom-endpoint.com"
          },
          "dnsName": {
            "type": "string",
            "description": "DEPRECATED: Use dnsHost instead",
            "example": "https://my-custom-endpoint.com"
          },
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "name": {
            "type": "string",
            "example": "DNS to access the dashboard"
          },
          "status": {
            "type": "string",
            "example": "READY"
          }
        },
        "example": {
          "aRecordTarget": "1.1.1.1",
          "cnameTarget": "cname-target.com",
          "dnsHost": "https://my-custom-endpoint.com",
          "dnsName": "https://my-custom-endpoint.com",
          "enabled": true,
          "name": "DNS to access the dashboard",
          "status": "READY"
        },
        "required": [
          "enabled"
        ]
      },
      "CustomDomain": {
        "type": "object",
        "properties": {
          "clusterEndpoint": {
            "type": "string",
            "description": "The cluster endpoint for the saas portal instance",
            "example": "example.com"
          },
          "customDomain": {
            "type": "string",
            "description": "The custom domain",
            "example": "mycustomdomain.com"
          },
          "description": {
            "type": "string",
            "description": "The custom domain description",
            "example": "My custom domain description"
          },
          "environmentType": {
            "type": "string",
            "description": "The environment type for the custom domain",
            "example": "DEV"
          },
          "name": {
            "type": "string",
            "description": "The custom domain name",
            "example": "MyCustomDomain"
          },
          "status": {
            "type": "string",
            "description": "The custom domain status",
            "example": "READY"
          }
        },
        "example": {
          "clusterEndpoint": "example.com",
          "customDomain": "mycustomdomain.com",
          "description": "My custom domain description",
          "environmentType": "DEV",
          "name": "MyCustomDomain",
          "status": "READY"
        },
        "required": [
          "environmentType",
          "name",
          "description",
          "customDomain",
          "status",
          "clusterEndpoint"
        ]
      },
      "CustomImageCommandsAndArgs": {
        "type": "object",
        "properties": {
          "args": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Aspernatur sint voluptates."
            },
            "description": "Arguments to pass to the container",
            "example": [
              "-d",
              "mysql"
            ]
          },
          "commands": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Et pariatur praesentium ex qui in."
            },
            "description": "Commands to run in the container",
            "example": [
              "echo",
              "Hello, World!"
            ]
          }
        },
        "description": "Commands and arguments to run in the container",
        "example": {
          "args": [
            "-d",
            "mysql"
          ],
          "commands": [
            "echo",
            "Hello, World!"
          ]
        }
      },
      "CustomNetwork": {
        "type": "object",
        "properties": {
          "cidr": {
            "type": "string",
            "description": "CIDR block for the network",
            "default": "10.0.0.0/16",
            "example": "10.0.0.0/16"
          },
          "cloudProviderName": {
            "type": "string",
            "description": "The name of the cloud provider that the instance is running on.",
            "example": "aws"
          },
          "cloudProviderRegion": {
            "type": "string",
            "description": "The region of the cloud provider that the instance is running in.",
            "example": "us-east-1"
          },
          "id": {
            "type": "string",
            "description": "ID of a custom network",
            "example": "n-12345678"
          },
          "name": {
            "type": "string",
            "description": "User friendly network name to help distinguish networks with same CIDRs",
            "example": "Prod us-east-1"
          },
          "networkDefinitionType": {
            "type": "string",
            "description": "Type of the network definition",
            "example": "Custom"
          },
          "networkFeaturesConfiguration": {
            "$ref": "#/components/schemas/NetworkFeaturesConfiguration"
          },
          "networkInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomNetworkInstance"
            },
            "description": "List of network instances created within this custom network",
            "example": [
              {
                "awsAccountID": "123456789012",
                "cloudProviderNativeNetworkId": "vpc-12345678",
                "gcpProjectID": "my-project",
                "gcpProjectNumber": "123456789012",
                "hostClusterID": "hc-12345678"
              },
              {
                "awsAccountID": "123456789012",
                "cloudProviderNativeNetworkId": "vpc-12345678",
                "gcpProjectID": "my-project",
                "gcpProjectNumber": "123456789012",
                "hostClusterID": "hc-12345678"
              },
              {
                "awsAccountID": "123456789012",
                "cloudProviderNativeNetworkId": "vpc-12345678",
                "gcpProjectID": "my-project",
                "gcpProjectNumber": "123456789012",
                "hostClusterID": "hc-12345678"
              },
              {
                "awsAccountID": "123456789012",
                "cloudProviderNativeNetworkId": "vpc-12345678",
                "gcpProjectID": "my-project",
                "gcpProjectNumber": "123456789012",
                "hostClusterID": "hc-12345678"
              }
            ]
          }
        },
        "example": {
          "cidr": "10.0.0.0/16",
          "cloudProviderName": "aws",
          "cloudProviderRegion": "us-east-1",
          "id": "n-12345678",
          "name": "Prod us-east-1",
          "networkDefinitionType": "Custom",
          "networkFeaturesConfiguration": {
            "isPrivateLinkEnabled": true
          },
          "networkInstances": [
            {
              "awsAccountID": "123456789012",
              "cloudProviderNativeNetworkId": "vpc-12345678",
              "gcpProjectID": "my-project",
              "gcpProjectNumber": "123456789012",
              "hostClusterID": "hc-12345678"
            },
            {
              "awsAccountID": "123456789012",
              "cloudProviderNativeNetworkId": "vpc-12345678",
              "gcpProjectID": "my-project",
              "gcpProjectNumber": "123456789012",
              "hostClusterID": "hc-12345678"
            },
            {
              "awsAccountID": "123456789012",
              "cloudProviderNativeNetworkId": "vpc-12345678",
              "gcpProjectID": "my-project",
              "gcpProjectNumber": "123456789012",
              "hostClusterID": "hc-12345678"
            }
          ]
        },
        "required": [
          "id",
          "cloudProviderName",
          "cloudProviderRegion"
        ]
      },
      "CustomNetworkInstance": {
        "type": "object",
        "properties": {
          "awsAccountID": {
            "type": "string",
            "description": "The AWS account ID",
            "example": "123456789012"
          },
          "cloudProviderNativeNetworkId": {
            "type": "string",
            "description": "The ID of the network within cloud provider account",
            "example": "vpc-12345678"
          },
          "gcpProjectID": {
            "type": "string",
            "description": "The GCP project ID",
            "example": "my-project"
          },
          "gcpProjectNumber": {
            "type": "string",
            "description": "The GCP project number",
            "example": "123456789012"
          },
          "hostClusterID": {
            "type": "string",
            "description": "The ID of the host cluster within the network",
            "example": "hc-12345678"
          }
        },
        "example": {
          "awsAccountID": "123456789012",
          "cloudProviderNativeNetworkId": "vpc-12345678",
          "gcpProjectID": "my-project",
          "gcpProjectNumber": "123456789012",
          "hostClusterID": "hc-12345678"
        }
      },
      "CustomNetworkResourceDetail": {
        "type": "object",
        "properties": {
          "cidr": {
            "type": "string",
            "description": "CIDR block of the network",
            "example": "10.177.0.0/16"
          },
          "id": {
            "type": "string",
            "description": "ID of a custom network",
            "example": "n-12345678"
          },
          "name": {
            "type": "string",
            "description": "User friendly network name",
            "example": "Prod us-east-1"
          }
        },
        "description": "Details of custom network used for instance",
        "example": {
          "cidr": "10.177.0.0/16",
          "id": "n-12345678",
          "name": "Prod us-east-1"
        }
      },
      "CustomULimits": {
        "type": "object",
        "properties": {
          "ULimitsName": {
            "type": "string",
            "description": "The name of the ulimit",
            "example": "nofile"
          },
          "ULimitsType": {
            "type": "string",
            "description": "The type of the ulimit",
            "example": "Soft"
          },
          "ULimitsValue": {
            "type": "integer",
            "description": "The value of the ulimit",
            "example": 1000,
            "format": "int64"
          }
        },
        "example": {
          "ULimitsName": "nofile",
          "ULimitsType": "Soft",
          "ULimitsValue": 1000
        },
        "required": [
          "ULimitsName",
          "ULimitsType",
          "ULimitsValue"
        ]
      },
      "CustomerLoginWithIdentityProviderRequestBody": {
        "type": "object",
        "properties": {
          "authorizationCode": {
            "type": "string",
            "description": "The authorization code from the Identity Provider",
            "example": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&"
          },
          "companyDescription": {
            "type": "string",
            "example": "We sell xyz database software",
            "minLength": 1
          },
          "companyUrl": {
            "type": "string",
            "example": "https://www.mywebsite.com",
            "minLength": 1
          },
          "environmentType": {
            "type": "string",
            "description": "The environment type of the portal that the customer is signing in to",
            "example": "DEV"
          },
          "identityProviderName": {
            "type": "string",
            "description": "The name of the Identity Provider",
            "example": "Google"
          },
          "invitedEmail": {
            "type": "string",
            "description": "Email address that the user was invited with",
            "example": "abc@gmail.com",
            "format": "email"
          },
          "legalCompanyName": {
            "type": "string",
            "example": "mywebsite",
            "minLength": 1
          },
          "redirectUri": {
            "type": "string",
            "description": "The redirect URI used to get the authorization code",
            "example": "https://www.example/redirect"
          }
        },
        "example": {
          "authorizationCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
          "companyDescription": "We sell xyz database software",
          "companyUrl": "https://www.mywebsite.com",
          "environmentType": "DEV",
          "identityProviderName": "Google",
          "invitedEmail": "abc@gmail.com",
          "legalCompanyName": "mywebsite",
          "redirectUri": "https://www.example/redirect"
        },
        "required": [
          "identityProviderName",
          "authorizationCode"
        ]
      },
      "CustomerSigninRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "abc@gmail.com",
            "format": "email",
            "minLength": 1
          },
          "environmentType": {
            "type": "string",
            "description": "The environment type of the portal that the customer is signing in to",
            "example": "DEV"
          },
          "hashedPassword": {
            "type": "string",
            "example": "deprecated",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "example": "password",
            "minLength": 1
          }
        },
        "example": {
          "email": "abc@gmail.com",
          "environmentType": "DEV",
          "hashedPassword": "deprecated",
          "password": "password"
        },
        "required": [
          "email"
        ]
      },
      "DemoRequestBody": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "example": "ABC",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "example": "abc@gmail.com",
            "format": "email",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe",
            "minLength": 1
          },
          "phone": {
            "type": "string",
            "example": "+1-234567890"
          }
        },
        "example": {
          "company": "ABC",
          "email": "abc@gmail.com",
          "name": "John Doe",
          "phone": "+1-234567890"
        },
        "required": [
          "name",
          "email",
          "company"
        ]
      },
      "DeregisterActionHookRequestBody": {
        "type": "object",
        "properties": {
          "scope": {
            "type": "string",
            "description": "The scope of the hook",
            "example": "CLUSTER"
          },
          "type": {
            "type": "string",
            "description": "The type of hook to execute",
            "example": "ADD"
          }
        },
        "example": {
          "scope": "CLUSTER",
          "type": "ADD"
        },
        "required": [
          "type",
          "scope"
        ]
      },
      "DescribeAccountConfigByAWSAccountIDResult": {
        "type": "object",
        "properties": {
          "awsAccountID": {
            "type": "string",
            "description": "The AWS account ID",
            "example": "123456789012"
          },
          "awsBootstrapRoleARN": {
            "type": "string",
            "description": "The security role ARN or service account ARN that grants access to operate the infra",
            "example": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>"
          },
          "awsCloudFormationNoLBTemplateURL": {
            "type": "string",
            "description": "The URL to the CloudFormation template (no LoadBalancer policy version)",
            "example": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml"
          },
          "awsCloudFormationTemplateURL": {
            "type": "string",
            "description": "The URL to the CloudFormation template",
            "example": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml"
          },
          "byoaInstanceIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Ea iure pariatur dolore recusandae."
            },
            "description": "The BYOA instance IDs that this account config is tied to",
            "example": [
              "instance-12345678",
              "instance-abcdefgh"
            ]
          },
          "cloudProviderId": {
            "type": "string",
            "description": "Cloud Provider ID to operate on",
            "example": "infra-12345678"
          },
          "description": {
            "type": "string",
            "description": "The description for the account",
            "example": "An AWS account hosting multiple dev environments"
          },
          "id": {
            "type": "string",
            "description": "Account Config ID to operate on",
            "example": "ac-12345678"
          },
          "name": {
            "type": "string",
            "description": "The name of the account",
            "example": "Dev AWS account"
          },
          "status": {
            "type": "string",
            "description": "The status of the account",
            "example": "READY"
          },
          "statusMessage": {
            "type": "string",
            "description": "The status message of the account",
            "example": "Account is ready"
          }
        },
        "example": {
          "awsAccountID": "123456789012",
          "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
          "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
          "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
          "byoaInstanceIDs": [
            "instance-12345678",
            "instance-abcdefgh"
          ],
          "cloudProviderId": "infra-12345678",
          "description": "An AWS account hosting multiple dev environments",
          "id": "ac-12345678",
          "name": "Dev AWS account",
          "status": "READY",
          "statusMessage": "Account is ready"
        },
        "required": [
          "id",
          "name",
          "description",
          "awsAccountID",
          "awsBootstrapRoleARN",
          "cloudProviderId",
          "status",
          "statusMessage"
        ]
      },
      "DescribeAccountConfigByGCPProjectIDResult": {
        "type": "object",
        "properties": {
          "byoaInstanceIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Enim aut culpa magnam."
            },
            "description": "The BYOA instance IDs that this account config is tied to",
            "example": [
              "instance-12345678",
              "instance-abcdefgh"
            ]
          },
          "cloudProviderId": {
            "type": "string",
            "description": "Cloud Provider ID to operate on",
            "example": "infra-12345678"
          },
          "description": {
            "type": "string",
            "description": "The description for the account",
            "example": "An AWS account hosting multiple dev environments"
          },
          "gcpProjectID": {
            "type": "string",
            "description": "The GCP project ID",
            "example": "my-project"
          },
          "gcpProjectNumber": {
            "type": "string",
            "description": "The GCP project number",
            "example": "123456789012"
          },
          "gcpServiceAccountEmail": {
            "type": "string",
            "description": "The GCP service account email",
            "example": "bootstrap@my-project.iam.gserviceaccount.com"
          },
          "id": {
            "type": "string",
            "description": "Account Config ID to operate on",
            "example": "ac-12345678"
          },
          "name": {
            "type": "string",
            "description": "The name of the account",
            "example": "Dev AWS account"
          },
          "status": {
            "type": "string",
            "description": "The status of the account",
            "example": "READY"
          },
          "statusMessage": {
            "type": "string",
            "description": "The status message of the account",
            "example": "Account is ready"
          }
        },
        "example": {
          "byoaInstanceIDs": [
            "instance-12345678",
            "instance-abcdefgh"
          ],
          "cloudProviderId": "infra-12345678",
          "description": "An AWS account hosting multiple dev environments",
          "gcpProjectID": "my-project",
          "gcpProjectNumber": "123456789012",
          "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
          "id": "ac-12345678",
          "name": "Dev AWS account",
          "status": "READY",
          "statusMessage": "Account is ready"
        },
        "required": [
          "id",
          "name",
          "description",
          "gcpProjectID",
          "gcpProjectNumber",
          "gcpServiceAccountEmail",
          "cloudProviderId",
          "status",
          "statusMessage"
        ]
      },
      "DescribeAccountConfigResult": {
        "type": "object",
        "properties": {
          "awsAccountID": {
            "type": "string",
            "description": "The AWS account ID",
            "example": "123456789012"
          },
          "awsBootstrapRoleARN": {
            "type": "string",
            "description": "The security role ARN or service account ARN that grants access to operate the infra",
            "example": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>"
          },
          "awsCloudFormationNoLBTemplateURL": {
            "type": "string",
            "description": "The URL to the CloudFormation template (no LoadBalancer policy version)",
            "example": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml"
          },
          "awsCloudFormationTemplateURL": {
            "type": "string",
            "description": "The URL to the CloudFormation template",
            "example": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml"
          },
          "byoaInstanceIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Ducimus voluptas neque officia sed."
            },
            "description": "The BYOA instance IDs that this account config is tied to",
            "example": [
              "instance-12345678",
              "instance-abcdefgh"
            ]
          },
          "cloudProviderId": {
            "type": "string",
            "description": "Cloud Provider ID to operate on",
            "example": "infra-12345678"
          },
          "description": {
            "type": "string",
            "description": "The description for the account",
            "example": "An AWS account hosting multiple dev environments"
          },
          "gcpProjectID": {
            "type": "string",
            "description": "The GCP project ID",
            "example": "my-project"
          },
          "gcpProjectNumber": {
            "type": "string",
            "description": "The GCP project number",
            "example": "123456789012"
          },
          "gcpServiceAccountEmail": {
            "type": "string",
            "description": "The GCP service account email",
            "example": "bootstrap@my-project.iam.gserviceaccount.com"
          },
          "id": {
            "type": "string",
            "description": "Account Config ID to operate on",
            "example": "ac-12345678"
          },
          "name": {
            "type": "string",
            "description": "The name of the account",
            "example": "Dev AWS account"
          },
          "status": {
            "type": "string",
            "description": "The status of the account",
            "example": "READY"
          },
          "statusMessage": {
            "type": "string",
            "description": "The status message of the account",
            "example": "Account is ready"
          }
        },
        "example": {
          "awsAccountID": "123456789012",
          "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
          "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
          "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
          "byoaInstanceIDs": [
            "instance-12345678",
            "instance-abcdefgh"
          ],
          "cloudProviderId": "infra-12345678",
          "description": "An AWS account hosting multiple dev environments",
          "gcpProjectID": "my-project",
          "gcpProjectNumber": "123456789012",
          "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
          "id": "ac-12345678",
          "name": "Dev AWS account",
          "status": "READY",
          "statusMessage": "Account is ready"
        },
        "required": [
          "id",
          "name",
          "description",
          "cloudProviderId",
          "status",
          "statusMessage"
        ]
      },
      "DescribeAuditEventResult": {
        "type": "object",
        "properties": {
          "eventSource": {
            "type": "string",
            "description": "The event source",
            "example": "Customer, Infra or Maintenance"
          },
          "id": {
            "type": "string",
            "description": "The ID of the event",
            "example": "event-12345678"
          },
          "message": {
            "type": "string",
            "description": "Resource Instance of message",
            "example": "instance-abcd1234 created"
          },
          "orgId": {
            "type": "string",
            "description": "The organization ID of the user that caused the event",
            "example": "org-12345678"
          },
          "orgName": {
            "type": "string",
            "description": "The organization name of the user that caused the event",
            "example": "Acme Corporation"
          },
          "resourceInstanceId": {
            "type": "string",
            "description": "Instance Id of the resource instance",
            "example": "instance-abcd1234"
          },
          "resourceName": {
            "type": "string",
            "description": "Name of the resource",
            "example": "Galera"
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID",
            "example": "sub-abcd1234"
          },
          "time": {
            "type": "string",
            "description": "The event time",
            "example": "2023-01-10T00:00:00Z"
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user that caused the event",
            "example": "user-12345678"
          },
          "userName": {
            "type": "string",
            "description": "The user name of the user that caused the event",
            "example": "John Doe"
          },
          "workflowFailures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowFailure"
            },
            "description": "The list of workflow events that indicate failures",
            "example": [
              {
                "eventTime": "2020-01-01T00:00:00Z",
                "message": "Bootstrap failed for reason X"
              },
              {
                "eventTime": "2020-01-01T00:01:00Z",
                "message": "Compute failed for reason Y"
              }
            ]
          }
        },
        "example": {
          "eventSource": "Customer, Infra or Maintenance",
          "id": "event-12345678",
          "message": "instance-abcd1234 created",
          "orgId": "org-12345678",
          "orgName": "Acme Corporation",
          "resourceInstanceId": "instance-abcd1234",
          "resourceName": "Galera",
          "subscriptionId": "sub-abcd1234",
          "time": "2023-01-10T00:00:00Z",
          "userId": "user-12345678",
          "userName": "John Doe",
          "workflowFailures": [
            {
              "eventTime": "2020-01-01T00:00:00Z",
              "message": "Bootstrap failed for reason X"
            },
            {
              "eventTime": "2020-01-01T00:01:00Z",
              "message": "Compute failed for reason Y"
            }
          ]
        },
        "required": [
          "id",
          "resourceName",
          "resourceInstanceId",
          "subscriptionId",
          "time",
          "message"
        ]
      },
      "DescribeAvailabilityZoneResult": {
        "type": "object",
        "properties": {
          "cloudProviderName": {
            "type": "string",
            "description": "The cloud provider for this compute instance type config",
            "example": "aws"
          },
          "code": {
            "type": "string",
            "description": "Cloud-provider native availability zone code",
            "example": "us-east-1a"
          },
          "description": {
            "type": "string",
            "description": "Description of the AvailabilityZone",
            "example": "US East (N. Virginia) Availability Zone A"
          },
          "id": {
            "type": "string",
            "example": "az-12345678"
          },
          "regionCode": {
            "type": "string",
            "description": "Cloud-provider native region code",
            "example": "us-east-1"
          }
        },
        "example": {
          "cloudProviderName": "aws",
          "code": "us-east-1a",
          "description": "US East (N. Virginia) Availability Zone A",
          "id": "az-12345678",
          "regionCode": "us-east-1"
        },
        "required": [
          "id",
          "code",
          "description",
          "regionCode",
          "cloudProviderName"
        ]
      },
      "DescribeCloudProviderResult": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the CloudProvider",
            "example": "Amazon Web Services"
          },
          "id": {
            "type": "string",
            "description": "ID of the CloudProvider",
            "example": "infra-12345678"
          },
          "name": {
            "type": "string",
            "description": "Name of the CloudProvider",
            "example": "aws"
          }
        },
        "example": {
          "description": "Amazon Web Services",
          "id": "infra-12345678",
          "name": "aws"
        },
        "required": [
          "id",
          "name",
          "description"
        ]
      },
      "DescribeComputeConfigResult": {
        "type": "object",
        "properties": {
          "autoscalingPolicy": {
            "$ref": "#/components/schemas/AutoscalingPolicy"
          },
          "cpuArchitecture": {
            "type": "string",
            "description": "Processor architecture",
            "example": "X86_64|ARM64"
          },
          "description": {
            "type": "string",
            "description": "Description of the compute config",
            "example": "my compute config description"
          },
          "id": {
            "type": "string",
            "description": "ID of the compute config",
            "example": "cc-12345678"
          },
          "infraConfigIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Sit asperiores dicta recusandae laborum occaecati suscipit."
            },
            "description": "The list of infra config IDs associated with the compute config.",
            "example": [
              "ic-12345678",
              "ic-abcdefgh"
            ]
          },
          "instanceTypes": {
            "type": "object",
            "description": "The instance types for this compute config",
            "example": {
              "aws": [
                "t3.micro",
                "t3.small"
              ],
              "azure": [
                "Standard_B1ls",
                "Standard_B1ms"
              ],
              "gcp": [
                "$var.instance_type"
              ]
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Vel veritatis quasi at."
              },
              "example": [
                "Omnis dolores eaque exercitationem et illo.",
                "Voluptatibus explicabo.",
                "Autem incidunt.",
                "Non laudantium facere eos non voluptatum necessitatibus."
              ]
            }
          },
          "name": {
            "type": "string",
            "description": "Name of the compute config",
            "example": "my compute config"
          },
          "replicaCount": {
            "type": "string",
            "description": "Number of replicas to provision for this logical pool of nodes per instance of the resource",
            "example": "3"
          },
          "resources": {
            "$ref": "#/components/schemas/ResourceSpec"
          },
          "rootVolumeSizeGi": {
            "type": "integer",
            "description": "Size of the root volume in Gi",
            "example": 10,
            "format": "int64"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID",
            "example": "s-12345678"
          },
          "warmPoolConfiguration": {
            "$ref": "#/components/schemas/WarmPoolConfiguration"
          }
        },
        "example": {
          "autoscalingPolicy": {
            "maxReplicas": 4,
            "minReplicas": 1
          },
          "cpuArchitecture": "X86_64|ARM64",
          "description": "my compute config description",
          "id": "cc-12345678",
          "infraConfigIDs": [
            "ic-12345678",
            "ic-abcdefgh"
          ],
          "instanceTypes": {
            "aws": [
              "t3.micro",
              "t3.small"
            ],
            "azure": [
              "Standard_B1ls",
              "Standard_B1ms"
            ],
            "gcp": [
              "$var.instance_type"
            ]
          },
          "name": "my compute config",
          "replicaCount": "3",
          "resources": {
            "limits": {
              "cpu": "1",
              "memory": "500Mi"
            },
            "requests": {
              "cpu": "0.5",
              "memory": "200Mi"
            }
          },
          "rootVolumeSizeGi": 10,
          "serviceId": "s-12345678",
          "warmPoolConfiguration": {
            "minimumNodesInPool": 1
          }
        },
        "required": [
          "id",
          "serviceId",
          "name",
          "description",
          "replicaCount"
        ]
      },
      "DescribeCustomDomainResult": {
        "type": "object",
        "properties": {
          "customDomain": {
            "type": "string",
            "description": "The root domain of the domain to use as suffix",
            "example": "mydomain.dev"
          },
          "description": {
            "type": "string",
            "description": "The description for the domain",
            "example": "Description of the domain"
          },
          "id": {
            "type": "string",
            "description": "custom domain ID to operate on",
            "example": "cd-12345678"
          },
          "name": {
            "type": "string",
            "description": "The name of the custom domain",
            "example": "Dev domain"
          },
          "route53Configuration": {
            "$ref": "#/components/schemas/Route53ConfigurationDescription"
          },
          "status": {
            "type": "string",
            "description": "The status of the custom domain",
            "example": "READY"
          },
          "statusMessage": {
            "type": "string",
            "description": "The status message of the custom domain",
            "example": "Account is ready"
          }
        },
        "example": {
          "customDomain": "mydomain.dev",
          "description": "Description of the domain",
          "id": "cd-12345678",
          "name": "Dev domain",
          "route53Configuration": {
            "awsAccountID": "123456789012",
            "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
          },
          "status": "READY",
          "statusMessage": "Account is ready"
        },
        "required": [
          "id",
          "name",
          "description",
          "customDomain",
          "route53Configuration"
        ]
      },
      "DescribeDeploymentConfigResult": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the deployment config",
            "example": "A production deployment config"
          },
          "id": {
            "type": "string",
            "description": "The deployment configuration ID",
            "example": "dc-12345678"
          },
          "infraRollConfiguration": {
            "$ref": "#/components/schemas/InfraRollConfiguration"
          },
          "name": {
            "type": "string",
            "description": "Name of the deployment config",
            "example": "Production"
          },
          "rolloutPriorityList": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Placeat id voluptas asperiores quia inventore."
            },
            "example": [
              "region-12345678",
              "region-abcd1234",
              "region-3c3c3c3c"
            ]
          }
        },
        "example": {
          "description": "A production deployment config",
          "id": "dc-12345678",
          "infraRollConfiguration": {
            "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
            "maximumNumberOfResourceInstancesPerBatch": 1,
            "maximumUnavailableReplicas": 1
          },
          "name": "Production",
          "rolloutPriorityList": [
            "region-12345678",
            "region-abcd1234",
            "region-3c3c3c3c"
          ]
        },
        "required": [
          "id",
          "name",
          "description",
          "infraRollConfiguration",
          "rolloutPriorityList"
        ]
      },
      "DescribeIdentityProviderResult": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "description": "The Client ID of the Identity Provider",
            "example": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com"
          },
          "clientSecret": {
            "type": "string",
            "description": "The Client Secret of the Identity Provider",
            "example": "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"
          },
          "id": {
            "type": "string",
            "description": "The Identity Provider ID",
            "example": "idp-12345678"
          },
          "identityProviderName": {
            "type": "string",
            "description": "The name of the Identity Provider",
            "example": "Google"
          },
          "status": {
            "type": "string",
            "description": "The status of the Identity Provider",
            "example": "Ready"
          }
        },
        "example": {
          "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
          "clientSecret": "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",
          "id": "idp-12345678",
          "identityProviderName": "Google",
          "status": "Ready"
        },
        "required": [
          "id",
          "identityProviderName",
          "clientId",
          "status"
        ]
      },
      "DescribeImageConfigResult": {
        "type": "object",
        "properties": {
          "customImageCommandsAndArgs": {
            "$ref": "#/components/schemas/CustomImageCommandsAndArgs"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the image configuration",
            "example": "An image configuration for my new entity"
          },
          "id": {
            "type": "string",
            "description": "The image configuration ID",
            "example": "imgc-12345678"
          },
          "imageName": {
            "type": "string",
            "description": "Name of the container image",
            "example": "mysql",
            "minLength": 1
          },
          "imageRegistryId": {
            "type": "string",
            "description": "The image registry ID to use for the infra",
            "example": "ir-12345678"
          },
          "imageSignaturePublicKeyPEM": {
            "type": "string",
            "description": "PEM-encoded Public key part of the key used to sign the container image",
            "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n"
          },
          "imageTag": {
            "type": "string",
            "description": "Tag representing the software image version that is currently preferred",
            "default": "latest",
            "example": "v1"
          },
          "serviceEnvironmentId": {
            "type": "string",
            "description": "The service environment ID",
            "example": "se-12345678"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID",
            "example": "s-12345678"
          }
        },
        "example": {
          "customImageCommandsAndArgs": {
            "args": [
              "-d",
              "mysql"
            ],
            "commands": [
              "echo",
              "Hello, World!"
            ]
          },
          "description": "An image configuration for my new entity",
          "id": "imgc-12345678",
          "imageName": "mysql",
          "imageRegistryId": "ir-12345678",
          "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
          "imageTag": "v1",
          "serviceEnvironmentId": "se-12345678",
          "serviceId": "s-12345678"
        },
        "required": [
          "id",
          "serviceId",
          "serviceEnvironmentId",
          "imageRegistryId",
          "imageName",
          "imageTag",
          "description"
        ]
      },
      "DescribeImageRegistryResult": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the Image Registry",
            "example": "DockerHub is a public Docker Image Registry"
          },
          "host": {
            "type": "string",
            "description": "The Image Registry host",
            "example": "docker.io"
          },
          "id": {
            "type": "string",
            "description": "The ID of the Image Registry",
            "example": "ir-12345678"
          },
          "name": {
            "type": "string",
            "description": "Name of the Image Registry",
            "example": "DockerHub"
          },
          "password": {
            "type": "string",
            "description": "The password to use when authenticating to the Image Registry",
            "example": "mypassword"
          },
          "username": {
            "type": "string",
            "description": "The username to use when authenticating to the Image Registry",
            "example": "myusername"
          }
        },
        "example": {
          "description": "DockerHub is a public Docker Image Registry",
          "host": "docker.io",
          "id": "ir-12345678",
          "name": "DockerHub",
          "password": "mypassword",
          "username": "myusername"
        },
        "required": [
          "id",
          "name",
          "description",
          "host"
        ]
      },
      "DescribeInfraConfigResult": {
        "type": "object",
        "properties": {
          "computeConfigId": {
            "type": "string",
            "description": "The compute config ID",
            "example": "cc-12345678"
          },
          "customTag": {
            "$ref": "#/components/schemas/EnvironmentVariable"
          },
          "description": {
            "type": "string",
            "description": "The description for the infra config",
            "example": "Infra config used for the base tier MySQL service"
          },
          "id": {
            "type": "string",
            "description": "Infra Config ID to operate on",
            "example": "ic-12345678"
          },
          "name": {
            "type": "string",
            "description": "The name of the infra config",
            "example": "MySQL Writer Infra Config"
          },
          "networkConfigId": {
            "type": "string",
            "description": "The network config ID",
            "example": "nc-12345678"
          },
          "serviceEnvironmentId": {
            "type": "string",
            "description": "The service environment ID",
            "example": "se-12345678"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID",
            "example": "s-12345678"
          },
          "storageConfigId": {
            "type": "string",
            "description": "The storage config ID",
            "example": "sc-12345678"
          }
        },
        "example": {
          "computeConfigId": "cc-12345678",
          "customTag": {
            "key": "customKey",
            "value": "customValue"
          },
          "description": "Infra config used for the base tier MySQL service",
          "id": "ic-12345678",
          "name": "MySQL Writer Infra Config",
          "networkConfigId": "nc-12345678",
          "serviceEnvironmentId": "se-12345678",
          "serviceId": "s-12345678",
          "storageConfigId": "sc-12345678"
        },
        "required": [
          "id",
          "serviceId",
          "name",
          "description",
          "serviceEnvironmentId"
        ]
      },
      "DescribeInputParameterResult": {
        "type": "object",
        "properties": {
          "defaultValue": {
            "type": "string",
            "description": "Default value to use for an optional input parameter represented as a string",
            "example": "true"
          },
          "dependentResourceId": {
            "type": "string",
            "description": "The ID of the resource whose instance this input parameter depends on",
            "example": "r-12345678"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the input parameter",
            "example": "Omnis rerum magnam minima."
          },
          "hasOptions": {
            "type": "boolean",
            "description": "Marks the input parameter to be selectable from a list of values",
            "default": false,
            "example": true
          },
          "id": {
            "type": "string",
            "description": "ID of the input parameter",
            "example": "var-12345678"
          },
          "isList": {
            "type": "boolean",
            "description": "Marks the input parameter as a list of values",
            "default": false,
            "example": false
          },
          "key": {
            "type": "string",
            "description": "Key of the input parameter",
            "example": "95l",
            "minLength": 1
          },
          "labeledOptions": {
            "type": "object",
            "description": "A map for labeled options. The key is the label and the value is the option. When the option is selected, the label will be displayed to the end customer.",
            "example": {
              "large": "t3.xlarge",
              "medium": "t3.large",
              "small": "t3.medium"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Ipsam repellendus quasi minima."
            }
          },
          "limits": {
            "$ref": "#/components/schemas/Limits"
          },
          "modifiable": {
            "type": "boolean",
            "description": "Marks the input parameter as immutable",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "External name for the input parameter",
            "example": "z",
            "minLength": 1
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Tempore repellat praesentium voluptas."
            },
            "description": "A list of options to restrict the value of the input parameter to (represented as a string)",
            "example": [
              "true",
              "false"
            ]
          },
          "required": {
            "type": "boolean",
            "description": "Enforces the input parameter as a required parameter",
            "example": false
          },
          "resourceId": {
            "type": "string",
            "description": "The ID of the resource that this input parameter belongs to",
            "example": "r-12345678"
          },
          "serviceId": {
            "type": "string",
            "description": "The ID of the service that this output parameter belongs to",
            "example": "s-12345678"
          },
          "type": {
            "type": "string",
            "example": "Accusantium vel et temporibus quibusdam possimus."
          }
        },
        "example": {
          "defaultValue": "true",
          "dependentResourceId": "r-12345678",
          "description": "Sint consequatur consequuntur consequatur.",
          "hasOptions": false,
          "id": "var-12345678",
          "isList": true,
          "key": "kxl",
          "labeledOptions": {
            "large": "t3.xlarge",
            "medium": "t3.large",
            "small": "t3.medium"
          },
          "limits": {
            "max": "Blanditiis voluptas.",
            "maxLength": "Et error sequi et dignissimos illo.",
            "min": "Et consequatur dolor est saepe velit voluptas.",
            "minLength": "Ad suscipit aut ut suscipit voluptatem."
          },
          "modifiable": false,
          "name": "k3",
          "options": [
            "true",
            "false"
          ],
          "required": true,
          "resourceId": "r-12345678",
          "serviceId": "s-12345678",
          "type": "Officia distinctio quia nulla assumenda occaecati."
        },
        "required": [
          "id",
          "key",
          "description",
          "resourceId",
          "type",
          "isList",
          "name",
          "required",
          "modifiable",
          "serviceId"
        ]
      },
      "DescribeLimitResult": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the limit",
            "example": "A premium limit"
          },
          "family": {
            "type": "string",
            "description": "Limit family",
            "example": "COMPUTE_INFRA"
          },
          "key": {
            "type": "string",
            "description": "Unique key to identify the limit",
            "example": "MAX_VIRTUAL_CORES_PER_RESOURCE"
          },
          "modifiable": {
            "type": "boolean",
            "description": "Whether the limit can be modified",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "Name of the limit",
            "example": "Premium Tier"
          },
          "value": {
            "type": "integer",
            "description": "Value of the limit being enforced",
            "example": 4,
            "format": "int64"
          }
        },
        "example": {
          "description": "A premium limit",
          "family": "COMPUTE_INFRA",
          "key": "MAX_VIRTUAL_CORES_PER_RESOURCE",
          "modifiable": true,
          "name": "Premium Tier",
          "value": 4
        },
        "required": [
          "name",
          "key",
          "description",
          "value",
          "family",
          "modifiable"
        ]
      },
      "DescribeNetworkConfigResult": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the network config",
            "example": "A multi-zone HA network config"
          },
          "endpointPerReplica": {
            "type": "boolean",
            "description": "Generates a DNS endpoint per-replica for this network config",
            "example": true
          },
          "id": {
            "type": "string",
            "description": "The ID of the network config",
            "example": "nc-12345678"
          },
          "infraConfigIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Provident in ullam et."
            },
            "description": "The list of infra config IDs associated with the compute config.",
            "example": [
              "ic-12345678",
              "ic-abcdefgh"
            ]
          },
          "internal": {
            "type": "boolean",
            "description": "Restrict access to this network config to the internal network",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "Name of the network config",
            "example": "Multi-zone"
          },
          "openPorts": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 4916660054794260000,
              "format": "int64"
            },
            "description": "Ports to map to the generated DNS endpoint",
            "example": [
              1299,
              3306
            ]
          },
          "privateNetworkingConfiguration": {
            "$ref": "#/components/schemas/PrivateNetworkingConfiguration"
          },
          "publicNetworkingConfiguration": {
            "$ref": "#/components/schemas/PublicNetworkingConfiguration"
          },
          "serviceId": {
            "type": "string",
            "description": "The ID of the service",
            "example": "s-12345678"
          },
          "stableEgressIP": {
            "type": "boolean",
            "description": "Create an external node load balancer per node rather than expose the node ip directly",
            "example": true
          },
          "tlsTerminationPort": {
            "type": "integer",
            "description": "The port that hosts the reverse proxy for TLS termination",
            "example": 443,
            "format": "int64"
          },
          "zoneConfiguration": {
            "type": "string",
            "example": "Accusantium possimus commodi."
          }
        },
        "example": {
          "description": "A multi-zone HA network config",
          "endpointPerReplica": true,
          "id": "nc-12345678",
          "infraConfigIDs": [
            "ic-12345678",
            "ic-abcdefgh"
          ],
          "internal": true,
          "name": "Multi-zone",
          "openPorts": [
            1299,
            3306
          ],
          "privateNetworkingConfiguration": {
            "privateLinkConfiguration": {
              "awsPrivateLinkConfigurations": [
                {
                  "port": 80,
                  "targetGroupName": "my-target-group"
                },
                {
                  "port": 80,
                  "targetGroupName": "my-target-group"
                },
                {
                  "port": 80,
                  "targetGroupName": "my-target-group"
                }
              ]
            }
          },
          "publicNetworkingConfiguration": {
            "enableClusterLoadBalancer": true,
            "enableNodeLoadBalancer": true
          },
          "serviceId": "s-12345678",
          "stableEgressIP": true,
          "tlsTerminationPort": 443,
          "zoneConfiguration": "Exercitationem et rem et cupiditate."
        },
        "required": [
          "id",
          "serviceId",
          "name",
          "description",
          "zoneConfiguration",
          "endpointPerReplica",
          "stableEgressIP",
          "openPorts",
          "internal"
        ]
      },
      "DescribeNetworkResult": {
        "type": "object",
        "properties": {
          "cidr": {
            "type": "string",
            "description": "CIDR block for the network",
            "example": "10.0.0.0/16"
          },
          "id": {
            "type": "string",
            "description": "Network to operate on",
            "example": "n-12345678"
          },
          "networkConfigId": {
            "type": "string",
            "description": "Network config ID for the network",
            "example": "nc-12345678"
          },
          "serviceId": {
            "type": "string",
            "description": "Service ID context",
            "example": "s-12345678"
          },
          "type": {
            "type": "string",
            "description": "The type of network",
            "example": "PUBLIC"
          },
          "vunitId": {
            "type": "string",
            "description": "VUnit ID for the Network",
            "example": "vu-12345678"
          }
        },
        "example": {
          "cidr": "10.0.0.0/16",
          "id": "n-12345678",
          "networkConfigId": "nc-12345678",
          "serviceId": "s-12345678",
          "type": "PUBLIC",
          "vunitId": "vu-12345678"
        }
      },
      "DescribeOutputParameterResult": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the output variable being exported",
            "example": "Username of the user created in the target system",
            "minLength": 1
          },
          "id": {
            "type": "string",
            "description": "The ID of the output parameter",
            "example": "op-12345678"
          },
          "key": {
            "type": "string",
            "description": "Key of the output variable being exported",
            "example": "username",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "External name of the output variable being exported",
            "example": "Username",
            "minLength": 1
          },
          "resourceId": {
            "type": "string",
            "description": "The ID of the resource that this input parameter belongs to",
            "example": "r-12345678"
          },
          "serviceId": {
            "type": "string",
            "description": "The ID of the service that this output parameter belongs to",
            "example": "s-12345678"
          },
          "value": {
            "type": "string",
            "description": "Value of the output variable being exported",
            "example": "johndoe",
            "minLength": 1
          },
          "valueRef": {
            "type": "string",
            "description": "Reference to an input variable that will be used to set the value of the output variable being exported",
            "example": "$var.username"
          },
          "valueType": {
            "type": "string",
            "example": "Ipsa dolores sint."
          }
        },
        "example": {
          "description": "Username of the user created in the target system",
          "id": "op-12345678",
          "key": "username",
          "name": "Username",
          "resourceId": "r-12345678",
          "serviceId": "s-12345678",
          "value": "johndoe",
          "valueRef": "$var.username",
          "valueType": "Velit tempora at ex."
        },
        "required": [
          "id",
          "serviceId",
          "resourceId",
          "key",
          "description",
          "name"
        ]
      },
      "DescribePendingChangesResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The service API ID",
            "example": "sa-12345678"
          },
          "resourceChangeSets": {
            "type": "object",
            "description": "The difference for the service API configuration per resource",
            "example": {
              "In fuga laborum alias et nostrum inventore.": {
                "categorizedResourceChanges": {
                  "Quo amet explicabo.": {
                    "changes": [
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      },
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      }
                    ],
                    "status": "PENDING_UPDATE"
                  },
                  "Ut deserunt voluptate vel necessitatibus.": {
                    "changes": [
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      },
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      }
                    ],
                    "status": "PENDING_UPDATE"
                  },
                  "Vitae omnis molestiae eaque id.": {
                    "changes": [
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      },
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      }
                    ],
                    "status": "PENDING_UPDATE"
                  }
                },
                "imageConfigChanges": {
                  "changeState": "PENDING_NEW",
                  "imageConfigId": "imgc-12345678",
                  "imageName": "mysql"
                },
                "infraConfigChanges": {
                  "changeState": "PENDING_NEW",
                  "infraConfigId": "ic-12345678",
                  "name": "MySQL Writer Infra Config"
                },
                "overallResourceStatus": "PENDING_UPDATE",
                "productTierFeatureChanges": "PENDING_UPDATE",
                "resourceChanges": "PENDING_DELETE",
                "resourceName": "Inventore commodi quasi consequatur."
              },
              "Saepe officiis deleniti unde id commodi et.": {
                "categorizedResourceChanges": {
                  "Quo amet explicabo.": {
                    "changes": [
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      },
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      }
                    ],
                    "status": "PENDING_UPDATE"
                  },
                  "Ut deserunt voluptate vel necessitatibus.": {
                    "changes": [
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      },
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      }
                    ],
                    "status": "PENDING_UPDATE"
                  },
                  "Vitae omnis molestiae eaque id.": {
                    "changes": [
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      },
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      }
                    ],
                    "status": "PENDING_UPDATE"
                  }
                },
                "imageConfigChanges": {
                  "changeState": "PENDING_NEW",
                  "imageConfigId": "imgc-12345678",
                  "imageName": "mysql"
                },
                "infraConfigChanges": {
                  "changeState": "PENDING_NEW",
                  "infraConfigId": "ic-12345678",
                  "name": "MySQL Writer Infra Config"
                },
                "overallResourceStatus": "PENDING_UPDATE",
                "productTierFeatureChanges": "PENDING_UPDATE",
                "resourceChanges": "PENDING_DELETE",
                "resourceName": "Inventore commodi quasi consequatur."
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/ChangeSet"
            }
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID that this API bundle belongs to",
            "example": "s-12345678"
          }
        },
        "example": {
          "id": "sa-12345678",
          "resourceChangeSets": {
            "Ad commodi ducimus eligendi inventore ea tenetur.": {
              "categorizedResourceChanges": {
                "Quo amet explicabo.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                },
                "Ut deserunt voluptate vel necessitatibus.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                },
                "Vitae omnis molestiae eaque id.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                }
              },
              "imageConfigChanges": {
                "changeState": "PENDING_NEW",
                "imageConfigId": "imgc-12345678",
                "imageName": "mysql"
              },
              "infraConfigChanges": {
                "changeState": "PENDING_NEW",
                "infraConfigId": "ic-12345678",
                "name": "MySQL Writer Infra Config"
              },
              "overallResourceStatus": "PENDING_UPDATE",
              "productTierFeatureChanges": "PENDING_UPDATE",
              "resourceChanges": "PENDING_DELETE",
              "resourceName": "Inventore commodi quasi consequatur."
            },
            "Autem dolorem molestiae numquam eius consectetur.": {
              "categorizedResourceChanges": {
                "Quo amet explicabo.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                },
                "Ut deserunt voluptate vel necessitatibus.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                },
                "Vitae omnis molestiae eaque id.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                }
              },
              "imageConfigChanges": {
                "changeState": "PENDING_NEW",
                "imageConfigId": "imgc-12345678",
                "imageName": "mysql"
              },
              "infraConfigChanges": {
                "changeState": "PENDING_NEW",
                "infraConfigId": "ic-12345678",
                "name": "MySQL Writer Infra Config"
              },
              "overallResourceStatus": "PENDING_UPDATE",
              "productTierFeatureChanges": "PENDING_UPDATE",
              "resourceChanges": "PENDING_DELETE",
              "resourceName": "Inventore commodi quasi consequatur."
            },
            "Modi provident.": {
              "categorizedResourceChanges": {
                "Quo amet explicabo.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                },
                "Ut deserunt voluptate vel necessitatibus.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                },
                "Vitae omnis molestiae eaque id.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                }
              },
              "imageConfigChanges": {
                "changeState": "PENDING_NEW",
                "imageConfigId": "imgc-12345678",
                "imageName": "mysql"
              },
              "infraConfigChanges": {
                "changeState": "PENDING_NEW",
                "infraConfigId": "ic-12345678",
                "name": "MySQL Writer Infra Config"
              },
              "overallResourceStatus": "PENDING_UPDATE",
              "productTierFeatureChanges": "PENDING_UPDATE",
              "resourceChanges": "PENDING_DELETE",
              "resourceName": "Inventore commodi quasi consequatur."
            }
          },
          "serviceId": "s-12345678"
        },
        "required": [
          "id",
          "serviceId",
          "resourceChangeSets"
        ]
      },
      "DescribePlanResult": {
        "type": "object",
        "properties": {
          "modifiedAt": {
            "type": "string",
            "description": "The time the plan was last modified",
            "example": "2023-01-01T00:00:00Z"
          },
          "nextChargeDate": {
            "type": "string",
            "description": "The next day stripe will process a charge for this plan",
            "example": "2023-02-01"
          },
          "paymentConfigured": {
            "type": "boolean",
            "description": "Whether the customer has configured their payment information.",
            "example": true
          },
          "paymentInfoPortalURL": {
            "type": "string",
            "description": "The URL from Paigo to redirect users to so they can enter their payment information.  Only present when first adding payment information",
            "example": "https://billing.paigo.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx"
          },
          "planCoreHourCost": {
            "type": "number",
            "description": "The cost per core hour of this plan",
            "example": 0.05,
            "format": "double"
          },
          "planDescription": {
            "type": "string",
            "description": "The description of the plan",
            "example": "The starter plan is priced at 'X' units"
          },
          "planFrequency": {
            "type": "string",
            "description": "Whether the plan is charged monthly or yearly",
            "example": "MONTHLY"
          },
          "planMonthlyCost": {
            "type": "number",
            "description": "The minimum monthly cost of this plan",
            "example": 49,
            "format": "double"
          },
          "planName": {
            "type": "string",
            "description": "The name of the plan this user is changing to",
            "example": "STARTER"
          },
          "remainingCredits": {
            "type": "string",
            "description": "The credits remaining for the customer for the customer in Paigo",
            "example": "100"
          },
          "startDate": {
            "type": "string",
            "description": "The date that the plan starts",
            "example": "2023-01-01"
          }
        },
        "example": {
          "modifiedAt": "2023-01-01T00:00:00Z",
          "nextChargeDate": "2023-02-01",
          "paymentConfigured": true,
          "paymentInfoPortalURL": "https://billing.paigo.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx",
          "planCoreHourCost": 0.05,
          "planDescription": "The starter plan is priced at 'X' units",
          "planFrequency": "MONTHLY",
          "planMonthlyCost": 49,
          "planName": "STARTER",
          "remainingCredits": "100",
          "startDate": "2023-01-01"
        },
        "required": [
          "planName"
        ]
      },
      "DescribeProductTierResult": {
        "type": "object",
        "properties": {
          "apiGroups": {
            "type": "object",
            "description": "The resources that belong to this service API bundle and their active versions",
            "example": {
              "r-12345678": "v1",
              "r-23456789": "v2",
              "r-34567890": "v3"
            },
            "additionalProperties": {
              "type": "string",
              "example": "5pb",
              "minLength": 1
            }
          },
          "autoApproveSubscription": {
            "type": "boolean",
            "description": "Auto approve subscription or not",
            "example": false
          },
          "awsRegions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Earum sed voluptatem quia qui pariatur suscipit."
            },
            "description": "The AWS regions that this product tier is available on",
            "example": [
              "us-east-2",
              "ca-central-1"
            ]
          },
          "cloudProvidersConfigReadiness": {
            "type": "object",
            "description": "The readiness of the cloud providers configurations",
            "example": {
              "aws": {
                "resourceA": "missing terraform configuration",
                "resourceB": "missing cloudformation configuration"
              }
            },
            "additionalProperties": {
              "type": "object",
              "example": {
                "Accusamus sed fugiat est asperiores.": "Facere aperiam nisi nam consequatur.",
                "Aut id rerum aut in.": "Exercitationem distinctio distinctio.",
                "Natus voluptatem pariatur nam est similique.": "Dolore occaecati est voluptas voluptas."
              },
              "additionalProperties": {
                "type": "string",
                "example": "Commodi porro tempora et architecto."
              }
            }
          },
          "description": {
            "type": "string",
            "description": "A brief description of the product tier",
            "example": "A premium product tier"
          },
          "documentation": {
            "type": "string",
            "description": "Documentation",
            "example": "Any documentation"
          },
          "enabledFeatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTierFeatureDetail"
            },
            "description": "The features that are enabled for this product tier, including scope details and configuration",
            "example": [
              {
                "configuration": {
                  "provider": "native"
                },
                "feature": "LOGS",
                "scope": "INTERNAL"
              },
              {
                "configuration": {
                  "provider": "native"
                },
                "feature": "LOGS",
                "scope": "INTERNAL"
              },
              {
                "configuration": {
                  "provider": "native"
                },
                "feature": "LOGS",
                "scope": "INTERNAL"
              },
              {
                "configuration": {
                  "provider": "native"
                },
                "feature": "LOGS",
                "scope": "INTERNAL"
              }
            ]
          },
          "features": {
            "type": "object",
            "description": "The features that are enabled / disabled for this product tier",
            "example": {
              "BILLING": false,
              "LOGS": true,
              "METRICS": false
            },
            "additionalProperties": {
              "type": "boolean",
              "example": true
            }
          },
          "gcpRegions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Tempore tempora non sed dolor rerum voluptatibus."
            },
            "description": "The GCP regions that this product tier is available on",
            "example": [
              "us-central1"
            ]
          },
          "id": {
            "type": "string",
            "description": "Product tier ID",
            "example": "pt-12345678"
          },
          "isDisabled": {
            "type": "boolean",
            "description": "Flag to indicate if the product tier is disabled.",
            "example": false
          },
          "key": {
            "type": "string",
            "description": "Unique Key of the product tier",
            "example": "premium"
          },
          "name": {
            "type": "string",
            "description": "Name of the product tier",
            "example": "Premium"
          },
          "planDescription": {
            "type": "string",
            "description": "A brief description for the end user of the product tier",
            "example": "A premium plan"
          },
          "pricing": {
            "description": "Pricing",
            "example": {
              "price1": "value1"
            }
          },
          "serviceId": {
            "type": "string",
            "description": "Service ID",
            "example": "s-12345678"
          },
          "serviceModelId": {
            "type": "string",
            "description": "Service model ID",
            "example": "sm-12345678"
          },
          "support": {
            "type": "string",
            "description": "Support",
            "example": "Any support"
          },
          "tierType": {
            "type": "string",
            "description": "Tier type",
            "example": "OMNISTRATE_DEDICATED_TENANCY"
          }
        },
        "example": {
          "apiGroups": {
            "r-12345678": "v1",
            "r-23456789": "v2",
            "r-34567890": "v3"
          },
          "autoApproveSubscription": false,
          "awsRegions": [
            "us-east-2",
            "ca-central-1"
          ],
          "cloudProvidersConfigReadiness": {
            "aws": {
              "resourceA": "missing terraform configuration",
              "resourceB": "missing cloudformation configuration"
            }
          },
          "description": "A premium product tier",
          "documentation": "Any documentation",
          "enabledFeatures": [
            {
              "configuration": {
                "provider": "native"
              },
              "feature": "LOGS",
              "scope": "INTERNAL"
            },
            {
              "configuration": {
                "provider": "native"
              },
              "feature": "LOGS",
              "scope": "INTERNAL"
            },
            {
              "configuration": {
                "provider": "native"
              },
              "feature": "LOGS",
              "scope": "INTERNAL"
            }
          ],
          "features": {
            "BILLING": false,
            "LOGS": true,
            "METRICS": false
          },
          "gcpRegions": [
            "us-central1"
          ],
          "id": "pt-12345678",
          "isDisabled": false,
          "key": "premium",
          "name": "Premium",
          "planDescription": "A premium plan",
          "pricing": {
            "price1": "value1"
          },
          "serviceId": "s-12345678",
          "serviceModelId": "sm-12345678",
          "support": "Any support",
          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
        },
        "required": [
          "serviceId",
          "id",
          "name",
          "key",
          "description",
          "planDescription",
          "tierType",
          "serviceModelId",
          "documentation",
          "support",
          "pricing",
          "isDisabled"
        ]
      },
      "DescribeRegionResult": {
        "type": "object",
        "properties": {
          "cloudProviderId": {
            "type": "string",
            "example": "infra-12345678"
          },
          "cloudProviderName": {
            "type": "string",
            "description": "The cloud provider for this compute instance type config",
            "example": "aws"
          },
          "code": {
            "type": "string",
            "description": "Cloud-provider native region code",
            "example": "us-east-1",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "description": "Description of the Region",
            "example": "US East (N. Virginia)",
            "minLength": 1
          },
          "id": {
            "type": "string",
            "description": "ID of the Region",
            "example": "region-12345678"
          }
        },
        "example": {
          "cloudProviderId": "infra-12345678",
          "cloudProviderName": "aws",
          "code": "us-east-1",
          "description": "US East (N. Virginia)",
          "id": "region-12345678"
        },
        "required": [
          "id",
          "code",
          "description",
          "cloudProviderId",
          "cloudProviderName"
        ]
      },
      "DescribeResourceInstanceResult": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "True if this resource instance has associated infrastructure deployed",
            "example": true
          },
          "autoscalingEnabled": {
            "type": "boolean",
            "description": "Whether the instance has autoscaling enabled",
            "example": true
          },
          "awsAccountID": {
            "type": "string",
            "description": "The AWS account ID",
            "example": "123456789012"
          },
          "backupStatus": {
            "$ref": "#/components/schemas/BackupStatus"
          },
          "cloud_provider": {
            "type": "string",
            "description": "The cloud provider name",
            "example": "aws"
          },
          "created_at": {
            "type": "string",
            "description": "The instance creation time",
            "example": "2023-01-10T00:00:00Z"
          },
          "createdByUserId": {
            "type": "string",
            "description": "The user ID that created the resource instance",
            "example": "user-12345678"
          },
          "createdByUserName": {
            "type": "string",
            "description": "The name of the user that created the resource instance",
            "example": "John Doe"
          },
          "currentReplicas": {
            "type": "string",
            "description": "The current number of replicas",
            "example": "2"
          },
          "customNetworkDetail": {
            "$ref": "#/components/schemas/CustomNetworkResourceDetail"
          },
          "detailedNetworkTopology": {
            "type": "object",
            "description": "The detailed network topology",
            "example": {
              "r-abcd1234": {
                "allowedIPRanges": [
                  "0.0.0.0/0"
                ],
                "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                "clusterPorts": [
                  3306
                ],
                "main": true,
                "networkingType": "PUBLIC",
                "nodes": [
                  {
                    "availabilityZone": "us-east-2a",
                    "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                    "healthStatus": "healthy",
                    "id": "primary-0",
                    "ports": [
                      3306
                    ],
                    "status": "RUNNING"
                  }
                ],
                "privateNetworkCIDR": "10.0.0.2/24",
                "privateNetworkID": "n-1234abcd",
                "publiclyAccessible": true,
                "resourceKey": "primary",
                "resourceName": "Primary MySQL Instance"
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/ResourceNetworkTopologyResult"
            }
          },
          "externalPayerId": {
            "type": "string",
            "description": "The external payer id to record which customer should pay for this resource instance",
            "example": "external-payer-id-1234"
          },
          "gcpProjectID": {
            "type": "string",
            "description": "The GCP project ID",
            "example": "my-project"
          },
          "highAvailability": {
            "type": "boolean",
            "description": "Whether the instance is High Availability",
            "example": true
          },
          "id": {
            "type": "string",
            "description": "The instance ID",
            "example": "instance-abcd1234"
          },
          "instanceLoadStatus": {
            "type": "string",
            "description": "The instance load status",
            "example": "Sint veritatis."
          },
          "kubernetesDashboardEndpoint": {
            "$ref": "#/components/schemas/KubernetesDashboardEndpoint"
          },
          "last_modified_at": {
            "type": "string",
            "description": "The instance update time",
            "example": "2023-01-20T00:00:00Z"
          },
          "maxReplicas": {
            "type": "string",
            "description": "The maximum number of replicas",
            "example": "1"
          },
          "minReplicas": {
            "type": "string",
            "description": "The minimum number of replicas",
            "example": "1"
          },
          "network_type": {
            "type": "string",
            "description": "The network type",
            "example": "PUBLIC"
          },
          "productTierFeatures": {
            "type": "object",
            "description": "The product tier features",
            "example": {
              "BILLING": {
                "enabled": false
              },
              "LOGS": {
                "auth": {
                  "password": "px3c4d5f6g7h8i",
                  "username": "abcd1234"
                },
                "enabled": true,
                "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
              },
              "METRICS": {
                "enabled": false
              }
            },
            "additionalProperties": true
          },
          "region": {
            "type": "string",
            "description": "The region code",
            "example": "us-east-1"
          },
          "result_params": {
            "description": "Custom result parameters",
            "example": {
              "param1": "value1",
              "param2": "value2"
            }
          },
          "serverlessEnabled": {
            "type": "boolean",
            "description": "Whether the instance has serverless enabled",
            "example": true
          },
          "status": {
            "type": "string",
            "description": "The instance status",
            "example": "RUNNING"
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID",
            "example": "sub-abcd1234"
          }
        },
        "example": {
          "active": true,
          "autoscalingEnabled": true,
          "awsAccountID": "123456789012",
          "backupStatus": {
            "backupPeriodInHours": 2,
            "backupRetentionInDays": 7,
            "earliestRestoreTime": "2021-09-01T00:00:00Z",
            "lastBackupTime": "2021-09-01T00:00:00Z"
          },
          "cloud_provider": "aws",
          "created_at": "2023-01-10T00:00:00Z",
          "createdByUserId": "user-12345678",
          "createdByUserName": "John Doe",
          "currentReplicas": "2",
          "customNetworkDetail": {
            "cidr": "10.177.0.0/16",
            "id": "n-12345678",
            "name": "Prod us-east-1"
          },
          "detailedNetworkTopology": {
            "r-abcd1234": {
              "allowedIPRanges": [
                "0.0.0.0/0"
              ],
              "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
              "clusterPorts": [
                3306
              ],
              "main": true,
              "networkingType": "PUBLIC",
              "nodes": [
                {
                  "availabilityZone": "us-east-2a",
                  "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                  "healthStatus": "healthy",
                  "id": "primary-0",
                  "ports": [
                    3306
                  ],
                  "status": "RUNNING"
                }
              ],
              "privateNetworkCIDR": "10.0.0.2/24",
              "privateNetworkID": "n-1234abcd",
              "publiclyAccessible": true,
              "resourceKey": "primary",
              "resourceName": "Primary MySQL Instance"
            }
          },
          "externalPayerId": "external-payer-id-1234",
          "gcpProjectID": "my-project",
          "highAvailability": true,
          "id": "instance-abcd1234",
          "instanceLoadStatus": "Impedit ea error ut et.",
          "kubernetesDashboardEndpoint": {
            "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
            "deploymentCellID": "hc-12345678"
          },
          "last_modified_at": "2023-01-20T00:00:00Z",
          "maxReplicas": "1",
          "minReplicas": "1",
          "network_type": "PUBLIC",
          "productTierFeatures": {
            "BILLING": {
              "enabled": false
            },
            "LOGS": {
              "auth": {
                "password": "px3c4d5f6g7h8i",
                "username": "abcd1234"
              },
              "enabled": true,
              "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
            },
            "METRICS": {
              "enabled": false
            }
          },
          "region": "us-east-1",
          "result_params": {
            "param1": "value1",
            "param2": "value2"
          },
          "serverlessEnabled": true,
          "status": "RUNNING",
          "subscriptionId": "sub-abcd1234"
        }
      },
      "DescribeResourceResult": {
        "type": "object",
        "properties": {
          "actionHooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterActionHookRequestBody"
            },
            "description": "The action hooks that this resource supports",
            "example": [
              {
                "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                "scope": "CLUSTER",
                "type": "INIT"
              }
            ]
          },
          "additionalSecurityContext": {
            "$ref": "#/components/schemas/AdditionalSecurityContext"
          },
          "backupConfiguration": {
            "$ref": "#/components/schemas/BackupConfiguration"
          },
          "blobStorageConfiguration": {
            "$ref": "#/components/schemas/BlobStorageConfiguration"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCapability"
            },
            "description": "The capabilities enabled for the resource",
            "example": [
              {
                "capability": "SERVERLESS",
                "configuration": {
                  "EnableAutoStop": true,
                  "MinimumNodesInPool": 5,
                  "PortsMappingProxyConfig": {
                    "MaxNumberOfClustersPerProxyInstance": 50,
                    "NumberOfPortsPerCluster": 4
                  },
                  "ProxyId": "r-123456",
                  "ReferenceProxyKey": "resource-proxy",
                  "TargetPort": 5432
                }
              },
              {
                "capability": "SERVERLESS",
                "configuration": {
                  "EnableAutoStop": true,
                  "MinimumNodesInPool": 5,
                  "PortsMappingProxyConfig": {
                    "MaxNumberOfClustersPerProxyInstance": 50,
                    "NumberOfPortsPerCluster": 4
                  },
                  "ProxyId": "r-123456",
                  "ReferenceProxyKey": "resource-proxy",
                  "TargetPort": 5432
                }
              },
              {
                "capability": "SERVERLESS",
                "configuration": {
                  "EnableAutoStop": true,
                  "MinimumNodesInPool": 5,
                  "PortsMappingProxyConfig": {
                    "MaxNumberOfClustersPerProxyInstance": 50,
                    "NumberOfPortsPerCluster": 4
                  },
                  "ProxyId": "r-123456",
                  "ReferenceProxyKey": "resource-proxy",
                  "TargetPort": 5432
                }
              }
            ]
          },
          "customLabels": {
            "type": "object",
            "description": "Custom labels for the resource",
            "example": {
              "key": "value"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Ut vero vel harum sed fugit."
            }
          },
          "customSysCTLs": {
            "type": "object",
            "description": "Custom sysctl settings for the resource",
            "example": {
              "net.ipv4.tcp_syncookies": "1"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Quaerat amet sed mollitia."
            }
          },
          "customULimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomULimits"
            },
            "description": "Custom ulimits for the resource",
            "example": [
              {
                "ULimitsName": "NoProc",
                "ULimitsType": "Soft",
                "ULimitsValue": 1000
              },
              {
                "ULimitsName": "NoFile",
                "ULimitsType": "Hard",
                "ULimitsValue": 2048
              }
            ]
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceDependency"
            },
            "example": [
              {
                "parameterMap": {
                  "clusterId": "writerId",
                  "clusterOrg": "userDatabase"
                },
                "resourceId": "r-12345678"
              },
              {
                "parameterMap": {
                  "clusterId": "readerId",
                  "clusterOrg": "userDatabase"
                },
                "resourceId": "r-abcdef12"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "A brief description of the resource",
            "example": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service"
          },
          "environmentVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            },
            "description": "The environment variables that this resource requires",
            "example": [
              {
                "name": "MYSQL_ROOT_PASSWORD",
                "value": "password"
              }
            ]
          },
          "fileSystemConfiguration": {
            "$ref": "#/components/schemas/FileSystemConfiguration"
          },
          "helmChartConfiguration": {
            "$ref": "#/components/schemas/HelmChartConfiguration"
          },
          "id": {
            "type": "string",
            "description": "The ID of the resource",
            "example": "r-12345678"
          },
          "imageConfigId": {
            "type": "string",
            "description": "The ID of the image configuration that this resource refers to",
            "example": "imgc-12345678"
          },
          "infraConfigId": {
            "type": "string",
            "description": "The ID of the infrastructure configuration that this resource refers to",
            "example": "ic-12345678"
          },
          "internal": {
            "type": "boolean",
            "description": "Whether this resource is internal or not",
            "default": false,
            "example": true
          },
          "isDeprecated": {
            "type": "boolean",
            "description": "Whether this resource is deprecated or not",
            "default": false,
            "example": true
          },
          "key": {
            "type": "string",
            "description": "The key of the resource",
            "example": "galera"
          },
          "kustomizeConfiguration": {
            "$ref": "#/components/schemas/KustomizeConfiguration"
          },
          "l4LoadBalancerConfiguration": {
            "$ref": "#/components/schemas/L4LoadBalancerConfiguration"
          },
          "l7LoadBalancerConfiguration": {
            "$ref": "#/components/schemas/L7LoadBalancerConfiguration"
          },
          "name": {
            "type": "string",
            "description": "Name of the resource",
            "example": "Galera"
          },
          "operatorCRDConfiguration": {
            "$ref": "#/components/schemas/OperatorCRDConfiguration"
          },
          "productTierId": {
            "type": "string",
            "description": "The product tier ID",
            "example": "pt-12345678"
          },
          "proxyType": {
            "type": "string",
            "description": "The proxy type of instance",
            "example": "PortsBasedProxy"
          },
          "resourceType": {
            "type": "string",
            "description": "The type of the resource",
            "example": "Generic"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID that this API bundle belongs to",
            "example": "s-12345678"
          },
          "terraformConfigurations": {
            "type": "object",
            "description": "The Terraform configurations for various cloud providers",
            "example": {
              "Earum aut facere itaque quo ut.": {
                "gitConfiguration": {
                  "accessToken": "my-token",
                  "referenceName": "tags/v1.0.0",
                  "repositoryUrl": "https://github.com/username/myrepo",
                  "userName": "my-user"
                },
                "privateModuleGitAccessTokens": {
                  "tokenName": "accessToken"
                },
                "requiredOutputKeys": [
                  "output1"
                ],
                "requiredOutputs": [
                  {
                    "exported": true,
                    "key": "output1"
                  }
                ],
                "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                "terraformPath": "/project1/tf"
              },
              "Est hic nam earum iusto.": {
                "gitConfiguration": {
                  "accessToken": "my-token",
                  "referenceName": "tags/v1.0.0",
                  "repositoryUrl": "https://github.com/username/myrepo",
                  "userName": "my-user"
                },
                "privateModuleGitAccessTokens": {
                  "tokenName": "accessToken"
                },
                "requiredOutputKeys": [
                  "output1"
                ],
                "requiredOutputs": [
                  {
                    "exported": true,
                    "key": "output1"
                  }
                ],
                "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                "terraformPath": "/project1/tf"
              },
              "Vel ea eveniet esse magni et eaque.": {
                "gitConfiguration": {
                  "accessToken": "my-token",
                  "referenceName": "tags/v1.0.0",
                  "repositoryUrl": "https://github.com/username/myrepo",
                  "userName": "my-user"
                },
                "privateModuleGitAccessTokens": {
                  "tokenName": "accessToken"
                },
                "requiredOutputKeys": [
                  "output1"
                ],
                "requiredOutputs": [
                  {
                    "exported": true,
                    "key": "output1"
                  }
                ],
                "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                "terraformPath": "/project1/tf"
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/TerraformConfiguration"
            }
          }
        },
        "example": {
          "actionHooks": [
            {
              "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
              "scope": "CLUSTER",
              "type": "INIT"
            }
          ],
          "additionalSecurityContext": {
            "AddCapabilities": [
              "CAP_NET_ADMIN",
              "CAP_NET_RAW"
            ],
            "DropCapabilities": [
              "CAP_NET_ADMIN",
              "CAP_NET_RAW"
            ],
            "SupplementalGroupIDs": [
              1001,
              999
            ]
          },
          "backupConfiguration": {
            "backupPeriodInHours": 24,
            "backupRetentionInDays": 7
          },
          "blobStorageConfiguration": {
            "GCSConfiguration": {},
            "S3Configuration": {}
          },
          "capabilities": [
            {
              "capability": "SERVERLESS",
              "configuration": {
                "EnableAutoStop": true,
                "MinimumNodesInPool": 5,
                "PortsMappingProxyConfig": {
                  "MaxNumberOfClustersPerProxyInstance": 50,
                  "NumberOfPortsPerCluster": 4
                },
                "ProxyId": "r-123456",
                "ReferenceProxyKey": "resource-proxy",
                "TargetPort": 5432
              }
            },
            {
              "capability": "SERVERLESS",
              "configuration": {
                "EnableAutoStop": true,
                "MinimumNodesInPool": 5,
                "PortsMappingProxyConfig": {
                  "MaxNumberOfClustersPerProxyInstance": 50,
                  "NumberOfPortsPerCluster": 4
                },
                "ProxyId": "r-123456",
                "ReferenceProxyKey": "resource-proxy",
                "TargetPort": 5432
              }
            },
            {
              "capability": "SERVERLESS",
              "configuration": {
                "EnableAutoStop": true,
                "MinimumNodesInPool": 5,
                "PortsMappingProxyConfig": {
                  "MaxNumberOfClustersPerProxyInstance": 50,
                  "NumberOfPortsPerCluster": 4
                },
                "ProxyId": "r-123456",
                "ReferenceProxyKey": "resource-proxy",
                "TargetPort": 5432
              }
            },
            {
              "capability": "SERVERLESS",
              "configuration": {
                "EnableAutoStop": true,
                "MinimumNodesInPool": 5,
                "PortsMappingProxyConfig": {
                  "MaxNumberOfClustersPerProxyInstance": 50,
                  "NumberOfPortsPerCluster": 4
                },
                "ProxyId": "r-123456",
                "ReferenceProxyKey": "resource-proxy",
                "TargetPort": 5432
              }
            }
          ],
          "customLabels": {
            "key": "value"
          },
          "customSysCTLs": {
            "net.ipv4.tcp_syncookies": "1"
          },
          "customULimits": [
            {
              "ULimitsName": "NoProc",
              "ULimitsType": "Soft",
              "ULimitsValue": 1000
            },
            {
              "ULimitsName": "NoFile",
              "ULimitsType": "Hard",
              "ULimitsValue": 2048
            }
          ],
          "dependencies": [
            {
              "parameterMap": {
                "clusterId": "writerId",
                "clusterOrg": "userDatabase"
              },
              "resourceId": "r-12345678"
            },
            {
              "parameterMap": {
                "clusterId": "readerId",
                "clusterOrg": "userDatabase"
              },
              "resourceId": "r-abcdef12"
            }
          ],
          "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
          "environmentVariables": [
            {
              "name": "MYSQL_ROOT_PASSWORD",
              "value": "password"
            }
          ],
          "fileSystemConfiguration": {
            "EFSFileSystemConfiguration": {
              "PerformanceMode": "generalPurpose|maxIO",
              "ProvisionedThroughputInMibps": 125,
              "ThroughputMode": "provisioned|bursting|elastic"
            }
          },
          "helmChartConfiguration": {
            "chartName": "my-chart",
            "chartRepoName": "my-repo",
            "chartRepoUrl": "https://my-repo.com",
            "chartValues": {
              "key1": "value1",
              "key2": 3,
              "key3": {
                "key4": "value4"
              }
            },
            "chartVersion": "1.0.0",
            "endpointConfiguration": {
              "admin": {
                "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                "networkingType": "PRIVATE",
                "ports": [
                  8080,
                  8081
                ],
                "primary": false
              },
              "cluster": {
                "host": "https://my-endpoint.com",
                "networkingType": "PUBLIC",
                "ports": [
                  8080,
                  8081
                ],
                "primary": true
              }
            },
            "password": "my-password",
            "runtimeConfiguration": {
              "disableHooks": true,
              "recreate": true,
              "resetThenReuseValues": true,
              "resetValues": true,
              "reuseValues": true,
              "skipCRDs": true,
              "timeoutNanos": 1000000000,
              "upgradeCRDs": true,
              "wait": true,
              "waitForJobs": true
            },
            "username": "my-user"
          },
          "id": "r-12345678",
          "imageConfigId": "imgc-12345678",
          "infraConfigId": "ic-12345678",
          "internal": false,
          "isDeprecated": false,
          "key": "galera",
          "kustomizeConfiguration": {
            "endpointConfiguration": {
              "admin": {
                "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                "networkingType": "PRIVATE",
                "ports": [
                  8080,
                  8081
                ],
                "primary": false
              },
              "cluster": {
                "host": "https://my-endpoint.com",
                "networkingType": "PUBLIC",
                "ports": [
                  8080,
                  8081
                ],
                "primary": true
              }
            },
            "gitConfiguration": {
              "accessToken": "my-token",
              "referenceName": "tags/v1.0.0",
              "repositoryUrl": "https://github.com/username/myrepo",
              "userName": "my-user"
            },
            "helmChartDependencies": [
              {
                "chartName": "cert-manager",
                "chartVersion": "v1.5.3"
              },
              {
                "chartName": "nginx-ingress",
                "chartVersion": "v0.48.1"
              },
              {
                "chartName": "external-dns",
                "chartVersion": "v0.7.0"
              },
              {
                "chartName": "cnpg-operator",
                "chartVersion": "v0.23.1"
              }
            ],
            "kustomizePath": "/kustomize"
          },
          "l4LoadBalancerConfiguration": {
            "ingressPortConfiguration": [
              {
                "associatedResourceIDs": [
                  "r-12345678",
                  "r-abcdef12"
                ],
                "backendPort": 8080,
                "ingressPort": 1234
              },
              {
                "associatedResourceIDs": [
                  "r-12345678",
                  "r-abcdef12"
                ],
                "backendPort": 8081,
                "ingressPort": 5678
              },
              {
                "associatedResourceIDs": [
                  "r-vwxybz12",
                  "r-poij122v"
                ],
                "backendPort": 8082,
                "ingressPort": 9012
              }
            ]
          },
          "l7LoadBalancerConfiguration": {
            "paths": [
              {
                "associatedResourceID": "r-12345678",
                "path": "/path",
                "port": 8080
              }
            ]
          },
          "name": "Galera",
          "operatorCRDConfiguration": {
            "endpointConfiguration": {
              "admin": {
                "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                "networkingType": "PRIVATE",
                "ports": [
                  8080,
                  8081
                ],
                "primary": false
              },
              "cluster": {
                "host": "https://my-endpoint.com",
                "networkingType": "PUBLIC",
                "ports": [
                  8080,
                  8081
                ],
                "primary": true
              }
            },
            "helmChartDependencies": [
              {
                "chartName": "cert-manager",
                "chartVersion": "v1.5.3"
              },
              {
                "chartName": "nginx-ingress",
                "chartVersion": "v0.48.1"
              },
              {
                "chartName": "external-dns",
                "chartVersion": "v0.7.0"
              },
              {
                "chartName": "cnpg-operator",
                "chartVersion": "v0.23.1"
              }
            ],
            "outputParameters": {
              "expiresAt": "$out.status.notAfter",
              "issuerName": "letsencrypt-prod"
            },
            "readinessConditions": {
              "$out.status.conditions[?(@.type=='Ready')].status": true
            },
            "supplementalFiles": [
              "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
              "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
            ],
            "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
          },
          "productTierId": "pt-12345678",
          "proxyType": "PortsBasedProxy",
          "resourceType": "Generic",
          "serviceId": "s-12345678",
          "terraformConfigurations": {
            "Consequatur necessitatibus odio perferendis sequi.": {
              "gitConfiguration": {
                "accessToken": "my-token",
                "referenceName": "tags/v1.0.0",
                "repositoryUrl": "https://github.com/username/myrepo",
                "userName": "my-user"
              },
              "privateModuleGitAccessTokens": {
                "tokenName": "accessToken"
              },
              "requiredOutputKeys": [
                "output1"
              ],
              "requiredOutputs": [
                {
                  "exported": true,
                  "key": "output1"
                }
              ],
              "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
              "terraformPath": "/project1/tf"
            },
            "Ullam est nostrum.": {
              "gitConfiguration": {
                "accessToken": "my-token",
                "referenceName": "tags/v1.0.0",
                "repositoryUrl": "https://github.com/username/myrepo",
                "userName": "my-user"
              },
              "privateModuleGitAccessTokens": {
                "tokenName": "accessToken"
              },
              "requiredOutputKeys": [
                "output1"
              ],
              "requiredOutputs": [
                {
                  "exported": true,
                  "key": "output1"
                }
              ],
              "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
              "terraformPath": "/project1/tf"
            }
          }
        },
        "required": [
          "id",
          "key",
          "name",
          "description",
          "serviceId",
          "productTierId",
          "internal",
          "isDeprecated",
          "resourceType"
        ]
      },
      "DescribeServiceAPIResult": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "The external version of the API",
            "example": "v1"
          },
          "deploymentConfigId": {
            "type": "string",
            "description": "The deployment configuration ID",
            "example": "dc-12345678"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the service API bundle",
            "example": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability"
          },
          "id": {
            "type": "string",
            "description": "The service API ID",
            "example": "sa-12345678"
          },
          "serviceEnvironmentId": {
            "type": "string",
            "description": "The service environment ID",
            "example": "se-12345678"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID that this API bundle belongs to",
            "example": "s-12345678"
          },
          "serviceName": {
            "type": "string",
            "description": "The name of the service",
            "example": "mysql"
          }
        },
        "example": {
          "apiVersion": "v1",
          "deploymentConfigId": "dc-12345678",
          "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
          "id": "sa-12345678",
          "serviceEnvironmentId": "se-12345678",
          "serviceId": "s-12345678",
          "serviceName": "mysql"
        },
        "required": [
          "id",
          "serviceName",
          "serviceId",
          "description",
          "apiVersion",
          "serviceEnvironmentId",
          "deploymentConfigId"
        ]
      },
      "DescribeServiceEnvironmentResult": {
        "type": "object",
        "properties": {
          "autoApproveSubscription": {
            "type": "boolean",
            "description": "Auto approve subscription or not",
            "example": false
          },
          "deploymentConfigId": {
            "type": "string",
            "description": "The deployment configuration ID",
            "example": "dc-12345678"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the service environment",
            "example": "The production environment for the MySQL multi-writer service"
          },
          "id": {
            "type": "string",
            "description": "The ID of the service environment",
            "example": "se-12345678"
          },
          "key": {
            "type": "string",
            "description": "Unique Key of the Service Environment",
            "example": "production"
          },
          "name": {
            "type": "string",
            "description": "Name of the Service Environment",
            "example": "Production"
          },
          "roleType": {
            "type": "string",
            "description": "The role type of the caller user",
            "example": "admin"
          },
          "saasPortalStatus": {
            "type": "string",
            "description": "The status of the SaaS portal for this environment type",
            "example": "READY"
          },
          "saasPortalUrl": {
            "type": "string",
            "description": "The URL of the SaaS portal for this environment type",
            "example": "https://saas-portal.example.com"
          },
          "serviceAuthPublicKey": {
            "type": "string",
            "description": "PEM-encoded Public key part of the key used to sign the JWT tokens for the service control plane APIs",
            "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n"
          },
          "serviceId": {
            "type": "string",
            "description": "The ID of the service this environment belongs to",
            "example": "s-12345678"
          },
          "sourceEnvironmentId": {
            "type": "string",
            "description": "The ID of the service environment to use for promoting changes to this environment",
            "example": "se-12345678"
          },
          "type": {
            "type": "string",
            "example": "DEV"
          },
          "visibility": {
            "type": "string",
            "description": "This parameter is used to configure the visibility of the service control-plane APIs",
            "example": "Provident dignissimos."
          }
        },
        "example": {
          "autoApproveSubscription": false,
          "deploymentConfigId": "dc-12345678",
          "description": "The production environment for the MySQL multi-writer service",
          "id": "se-12345678",
          "key": "production",
          "name": "Production",
          "roleType": "admin",
          "saasPortalStatus": "READY",
          "saasPortalUrl": "https://saas-portal.example.com",
          "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
          "serviceId": "s-12345678",
          "sourceEnvironmentId": "se-12345678",
          "type": "DEV",
          "visibility": "Nihil quia neque."
        },
        "required": [
          "id",
          "key",
          "serviceId",
          "visibility",
          "type",
          "name",
          "description",
          "deploymentConfigId"
        ]
      },
      "DescribeServiceModelResult": {
        "type": "object",
        "properties": {
          "accountConfigIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Esse deleniti illum dolor."
            },
            "description": "The infrastructure account configuration ID list",
            "example": [
              "ac-12345678",
              "ac-23456789"
            ]
          },
          "activeAccountConfigIds": {
            "type": "object",
            "description": "The active infrastructure account configuration IDs per cloud provider",
            "example": {
              "aws": "ac-12345678",
              "gcp": "ac-23456789"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Atque assumenda occaecati consequatur quaerat."
            }
          },
          "description": {
            "type": "string",
            "description": "A brief description of the service model",
            "example": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceModelFeatureDetail"
            },
            "description": "Enabled service model features",
            "example": [
              {
                "configuration": {
                  "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                  "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                },
                "feature": "Eum temporibus voluptate inventore est consectetur omnis."
              },
              {
                "configuration": {
                  "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                  "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                },
                "feature": "Eum temporibus voluptate inventore est consectetur omnis."
              },
              {
                "configuration": {
                  "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                  "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                },
                "feature": "Eum temporibus voluptate inventore est consectetur omnis."
              },
              {
                "configuration": {
                  "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                  "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                },
                "feature": "Eum temporibus voluptate inventore est consectetur omnis."
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The service model ID",
            "example": "sm-12345678"
          },
          "key": {
            "type": "string",
            "description": "The unique key for this service model",
            "example": "mysql-multi-writer-service-hosted-model"
          },
          "modelType": {
            "type": "string",
            "description": "The model type encapsulating this service",
            "example": "CUSTOMER_HOSTED"
          },
          "name": {
            "type": "string",
            "description": "Name of the Service Model",
            "example": "MySQL multi-writer service hosted model"
          },
          "productTiers": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Quia sed ut sequi sit est perspiciatis."
            },
            "description": "The product tiers associated with this service model",
            "example": [
              "pt-12345678",
              "pt-87654321"
            ]
          },
          "serviceApiId": {
            "type": "string",
            "description": "The service API this model is for",
            "example": "sa-12345678"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID this model belongs to",
            "example": "s-12345678"
          }
        },
        "example": {
          "accountConfigIds": [
            "ac-12345678",
            "ac-23456789"
          ],
          "activeAccountConfigIds": {
            "aws": "ac-12345678",
            "gcp": "ac-23456789"
          },
          "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
          "features": [
            {
              "configuration": {
                "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
              },
              "feature": "Eum temporibus voluptate inventore est consectetur omnis."
            },
            {
              "configuration": {
                "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
              },
              "feature": "Eum temporibus voluptate inventore est consectetur omnis."
            },
            {
              "configuration": {
                "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
              },
              "feature": "Eum temporibus voluptate inventore est consectetur omnis."
            }
          ],
          "id": "sm-12345678",
          "key": "mysql-multi-writer-service-hosted-model",
          "modelType": "CUSTOMER_HOSTED",
          "name": "MySQL multi-writer service hosted model",
          "productTiers": [
            "pt-12345678",
            "pt-87654321"
          ],
          "serviceApiId": "sa-12345678",
          "serviceId": "s-12345678"
        },
        "required": [
          "id",
          "key",
          "serviceId",
          "serviceApiId",
          "modelType",
          "name",
          "description"
        ]
      },
      "DescribeServiceOfferingResourceResult": {
        "type": "object",
        "properties": {
          "apis": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APIEntity"
            },
            "description": "The APIs",
            "example": [
              {
                "inputParameters": [
                  {
                    "defaultValue": null,
                    "description": "The name of the server",
                    "displayName": "Server Name",
                    "isList": false,
                    "key": "serverName",
                    "modifiable": true,
                    "options": null,
                    "required": true,
                    "type": "string"
                  },
                  {
                    "defaultValue": "option1",
                    "description": "The type of the server",
                    "displayName": "Server Type",
                    "isList": false,
                    "key": "serverType",
                    "modifiable": true,
                    "options": [
                      "option1",
                      "option2"
                    ],
                    "required": true,
                    "type": "string"
                  }
                ],
                "outputParameters": [
                  {
                    "description": "The name of the server",
                    "displayName": "Server Name",
                    "isList": false,
                    "key": "serverName",
                    "type": "string"
                  },
                  {
                    "description": "The type of the server",
                    "displayName": "Server Type",
                    "isList": false,
                    "key": "serverType",
                    "type": "string"
                  }
                ],
                "verb": "create"
              },
              {
                "inputParameters": [
                  {
                    "defaultValue": null,
                    "description": "The name of the server",
                    "displayName": "Server Name",
                    "isList": false,
                    "key": "serverName",
                    "modifiable": true,
                    "options": null,
                    "required": true,
                    "type": "string"
                  }
                ],
                "outputParameters": [
                  {
                    "description": "The name of the server",
                    "displayName": "Server Name",
                    "isList": false,
                    "key": "serverName",
                    "type": "string"
                  },
                  {
                    "description": "The type of the server",
                    "displayName": "Server Type",
                    "isList": false,
                    "key": "serverType",
                    "type": "string"
                  }
                ],
                "verb": "describe"
              }
            ]
          }
        },
        "example": {
          "apis": [
            {
              "inputParameters": [
                {
                  "defaultValue": null,
                  "description": "The name of the server",
                  "displayName": "Server Name",
                  "isList": false,
                  "key": "serverName",
                  "modifiable": true,
                  "options": null,
                  "required": true,
                  "type": "string"
                },
                {
                  "defaultValue": "option1",
                  "description": "The type of the server",
                  "displayName": "Server Type",
                  "isList": false,
                  "key": "serverType",
                  "modifiable": true,
                  "options": [
                    "option1",
                    "option2"
                  ],
                  "required": true,
                  "type": "string"
                }
              ],
              "outputParameters": [
                {
                  "description": "The name of the server",
                  "displayName": "Server Name",
                  "isList": false,
                  "key": "serverName",
                  "type": "string"
                },
                {
                  "description": "The type of the server",
                  "displayName": "Server Type",
                  "isList": false,
                  "key": "serverType",
                  "type": "string"
                }
              ],
              "verb": "create"
            },
            {
              "inputParameters": [
                {
                  "defaultValue": null,
                  "description": "The name of the server",
                  "displayName": "Server Name",
                  "isList": false,
                  "key": "serverName",
                  "modifiable": true,
                  "options": null,
                  "required": true,
                  "type": "string"
                }
              ],
              "outputParameters": [
                {
                  "description": "The name of the server",
                  "displayName": "Server Name",
                  "isList": false,
                  "key": "serverName",
                  "type": "string"
                },
                {
                  "description": "The type of the server",
                  "displayName": "Server Type",
                  "isList": false,
                  "key": "serverType",
                  "type": "string"
                }
              ],
              "verb": "describe"
            }
          ]
        }
      },
      "DescribeServiceOfferingResult": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The time the service was created",
            "example": "2019-01-01T00:00:00Z"
          },
          "isDeprecated": {
            "type": "boolean",
            "description": "Whether the service offering is deprecated",
            "default": false,
            "example": false
          },
          "offerings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceOffering"
            },
            "description": "The service offerings",
            "example": [
              {
                "assets": {
                  "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                  "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                },
                "billingPlans": [
                  {
                    "maxNumberofInstances": 4
                  }
                ],
                "productTierName": "Premium",
                "productTierURLKey": "premium",
                "resourceParameters": [
                  {
                    "name": "MySQL",
                    "urlKey": "mysql"
                  },
                  {
                    "name": "Redis",
                    "urlKey": "redis"
                  }
                ],
                "serviceAPIID": "sa-12345678",
                "serviceAPIVersion": "v1",
                "serviceEnvironmentName": "Production",
                "serviceEnvironmentURLKey": "prod",
                "serviceEnvironmentVisibility": "PRIVATE",
                "serviceModelName": "Bring Your Own Account",
                "serviceModelURLKey": "byoa"
              },
              {
                "productTierName": "Basic",
                "productTierURLKey": "basic",
                "resourceParameters": [
                  {
                    "name": "MySQL",
                    "urlKey": "mysql"
                  },
                  {
                    "name": "Redis",
                    "urlKey": "redis"
                  }
                ],
                "serviceAPIID": "sa-abcdefgh",
                "serviceAPIVersion": "v1",
                "serviceEnvironmentName": "Production",
                "serviceEnvironmentURLKey": "prod",
                "serviceEnvironmentVisibility": "PUBLIC",
                "serviceModelName": "Hosted",
                "serviceModelURLKey": "hosted"
              }
            ]
          },
          "serviceDescription": {
            "type": "string",
            "description": "The service description",
            "example": "MySQL is a relational database"
          },
          "serviceId": {
            "type": "string",
            "description": "The service id",
            "example": "s-12345678"
          },
          "serviceName": {
            "type": "string",
            "description": "The service name",
            "example": "MySQL"
          },
          "serviceOrgId": {
            "type": "string",
            "description": "The org id of the service",
            "example": "org-12345678"
          },
          "serviceProviderId": {
            "type": "string",
            "description": "The id of the service provider",
            "example": "sp-9zrg9W8Are"
          },
          "serviceProviderName": {
            "type": "string",
            "description": "The name of the service provider",
            "example": "Omnistrate, Inc."
          },
          "serviceURLKey": {
            "type": "string",
            "description": "The service URL key",
            "example": "mysql"
          }
        },
        "example": {
          "createdAt": "2019-01-01T00:00:00Z",
          "isDeprecated": false,
          "offerings": [
            {
              "assets": {
                "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
              },
              "billingPlans": [
                {
                  "maxNumberofInstances": 4
                }
              ],
              "productTierName": "Premium",
              "productTierURLKey": "premium",
              "resourceParameters": [
                {
                  "name": "MySQL",
                  "urlKey": "mysql"
                },
                {
                  "name": "Redis",
                  "urlKey": "redis"
                }
              ],
              "serviceAPIID": "sa-12345678",
              "serviceAPIVersion": "v1",
              "serviceEnvironmentName": "Production",
              "serviceEnvironmentURLKey": "prod",
              "serviceEnvironmentVisibility": "PRIVATE",
              "serviceModelName": "Bring Your Own Account",
              "serviceModelURLKey": "byoa"
            },
            {
              "productTierName": "Basic",
              "productTierURLKey": "basic",
              "resourceParameters": [
                {
                  "name": "MySQL",
                  "urlKey": "mysql"
                },
                {
                  "name": "Redis",
                  "urlKey": "redis"
                }
              ],
              "serviceAPIID": "sa-abcdefgh",
              "serviceAPIVersion": "v1",
              "serviceEnvironmentName": "Production",
              "serviceEnvironmentURLKey": "prod",
              "serviceEnvironmentVisibility": "PUBLIC",
              "serviceModelName": "Hosted",
              "serviceModelURLKey": "hosted"
            }
          ],
          "serviceDescription": "MySQL is a relational database",
          "serviceId": "s-12345678",
          "serviceName": "MySQL",
          "serviceOrgId": "org-12345678",
          "serviceProviderId": "sp-9zrg9W8Are",
          "serviceProviderName": "Omnistrate, Inc.",
          "serviceURLKey": "mysql"
        },
        "required": [
          "createdAt",
          "serviceId",
          "serviceName",
          "serviceURLKey",
          "serviceDescription",
          "serviceProviderName",
          "serviceProviderId",
          "offerings",
          "isDeprecated",
          "serviceOrgId"
        ]
      },
      "DescribeServiceResult": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The time the service was created",
            "example": "2019-01-01T00:00:00Z"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the service",
            "example": "A MySQL SaaS specializing in multi-writer clusters for high availability"
          },
          "id": {
            "type": "string",
            "description": "The service ID to operate on",
            "example": "s-12345678"
          },
          "key": {
            "type": "string",
            "description": "Unique key of the service",
            "example": "mysql"
          },
          "name": {
            "type": "string",
            "description": "Name of the Service",
            "example": "MySQL multi-writer service"
          },
          "roleType": {
            "type": "string",
            "description": "The role type of the caller user",
            "example": "admin"
          },
          "serviceEnvironments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceEnvironment"
            },
            "description": "List of service environments",
            "example": [
              {
                "id": "se-12345678",
                "name": "dev",
                "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                "saasPortalStatus": "READY",
                "saasPortalUrl": "https://saas-portal.example.com",
                "servicePlans": [
                  {
                    "description": "A Basic product tier",
                    "modelType": "CUSTOMER_HOSTED",
                    "name": "Basic",
                    "productTierID": "pt-12345678",
                    "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                  },
                  {
                    "description": "A Basic product tier",
                    "modelType": "CUSTOMER_HOSTED",
                    "name": "Basic",
                    "productTierID": "pt-12345678",
                    "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                  },
                  {
                    "description": "A Basic product tier",
                    "modelType": "CUSTOMER_HOSTED",
                    "name": "Basic",
                    "productTierID": "pt-12345678",
                    "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                  }
                ],
                "sourceEnvironmentID": "se-12345678",
                "sourceEnvironmentName": "dev",
                "type": "DEV",
                "visibility": "private"
              },
              {
                "id": "se-12345678",
                "name": "dev",
                "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                "saasPortalStatus": "READY",
                "saasPortalUrl": "https://saas-portal.example.com",
                "servicePlans": [
                  {
                    "description": "A Basic product tier",
                    "modelType": "CUSTOMER_HOSTED",
                    "name": "Basic",
                    "productTierID": "pt-12345678",
                    "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                  },
                  {
                    "description": "A Basic product tier",
                    "modelType": "CUSTOMER_HOSTED",
                    "name": "Basic",
                    "productTierID": "pt-12345678",
                    "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                  },
                  {
                    "description": "A Basic product tier",
                    "modelType": "CUSTOMER_HOSTED",
                    "name": "Basic",
                    "productTierID": "pt-12345678",
                    "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                  }
                ],
                "sourceEnvironmentID": "se-12345678",
                "sourceEnvironmentName": "dev",
                "type": "DEV",
                "visibility": "private"
              },
              {
                "id": "se-12345678",
                "name": "dev",
                "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                "saasPortalStatus": "READY",
                "saasPortalUrl": "https://saas-portal.example.com",
                "servicePlans": [
                  {
                    "description": "A Basic product tier",
                    "modelType": "CUSTOMER_HOSTED",
                    "name": "Basic",
                    "productTierID": "pt-12345678",
                    "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                  },
                  {
                    "description": "A Basic product tier",
                    "modelType": "CUSTOMER_HOSTED",
                    "name": "Basic",
                    "productTierID": "pt-12345678",
                    "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                  },
                  {
                    "description": "A Basic product tier",
                    "modelType": "CUSTOMER_HOSTED",
                    "name": "Basic",
                    "productTierID": "pt-12345678",
                    "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                  }
                ],
                "sourceEnvironmentID": "se-12345678",
                "sourceEnvironmentName": "dev",
                "type": "DEV",
                "visibility": "private"
              }
            ]
          },
          "serviceLogoURL": {
            "type": "string",
            "description": "The logo for the service",
            "example": "Perferendis ad quam aut."
          },
          "serviceProviderID": {
            "type": "string",
            "description": "The ID of the service provider owning the service",
            "example": "sp-12345678"
          },
          "serviceProviderName": {
            "type": "string",
            "description": "The name of the service provider",
            "example": "Omnistrate, Inc."
          }
        },
        "example": {
          "createdAt": "2019-01-01T00:00:00Z",
          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
          "id": "s-12345678",
          "key": "mysql",
          "name": "MySQL multi-writer service",
          "roleType": "admin",
          "serviceEnvironments": [
            {
              "id": "se-12345678",
              "name": "dev",
              "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
              "saasPortalStatus": "READY",
              "saasPortalUrl": "https://saas-portal.example.com",
              "servicePlans": [
                {
                  "description": "A Basic product tier",
                  "modelType": "CUSTOMER_HOSTED",
                  "name": "Basic",
                  "productTierID": "pt-12345678",
                  "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                },
                {
                  "description": "A Basic product tier",
                  "modelType": "CUSTOMER_HOSTED",
                  "name": "Basic",
                  "productTierID": "pt-12345678",
                  "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                },
                {
                  "description": "A Basic product tier",
                  "modelType": "CUSTOMER_HOSTED",
                  "name": "Basic",
                  "productTierID": "pt-12345678",
                  "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                }
              ],
              "sourceEnvironmentID": "se-12345678",
              "sourceEnvironmentName": "dev",
              "type": "DEV",
              "visibility": "private"
            },
            {
              "id": "se-12345678",
              "name": "dev",
              "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
              "saasPortalStatus": "READY",
              "saasPortalUrl": "https://saas-portal.example.com",
              "servicePlans": [
                {
                  "description": "A Basic product tier",
                  "modelType": "CUSTOMER_HOSTED",
                  "name": "Basic",
                  "productTierID": "pt-12345678",
                  "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                },
                {
                  "description": "A Basic product tier",
                  "modelType": "CUSTOMER_HOSTED",
                  "name": "Basic",
                  "productTierID": "pt-12345678",
                  "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                },
                {
                  "description": "A Basic product tier",
                  "modelType": "CUSTOMER_HOSTED",
                  "name": "Basic",
                  "productTierID": "pt-12345678",
                  "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                }
              ],
              "sourceEnvironmentID": "se-12345678",
              "sourceEnvironmentName": "dev",
              "type": "DEV",
              "visibility": "private"
            },
            {
              "id": "se-12345678",
              "name": "dev",
              "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
              "saasPortalStatus": "READY",
              "saasPortalUrl": "https://saas-portal.example.com",
              "servicePlans": [
                {
                  "description": "A Basic product tier",
                  "modelType": "CUSTOMER_HOSTED",
                  "name": "Basic",
                  "productTierID": "pt-12345678",
                  "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                },
                {
                  "description": "A Basic product tier",
                  "modelType": "CUSTOMER_HOSTED",
                  "name": "Basic",
                  "productTierID": "pt-12345678",
                  "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                },
                {
                  "description": "A Basic product tier",
                  "modelType": "CUSTOMER_HOSTED",
                  "name": "Basic",
                  "productTierID": "pt-12345678",
                  "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                }
              ],
              "sourceEnvironmentID": "se-12345678",
              "sourceEnvironmentName": "dev",
              "type": "DEV",
              "visibility": "private"
            }
          ],
          "serviceLogoURL": "Minima vel enim.",
          "serviceProviderID": "sp-12345678",
          "serviceProviderName": "Omnistrate, Inc."
        },
        "required": [
          "id",
          "createdAt",
          "name",
          "key",
          "description",
          "serviceEnvironments",
          "serviceProviderName",
          "serviceProviderID"
        ]
      },
      "DescribeServicesOrchestrationResult": {
        "type": "object",
        "properties": {
          "ServicesTopology": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceDeploymentDetails"
            },
            "description": "The services deployment details",
            "example": [
              {
                "dependsOnDeployment": [
                  "instanceDeploymentAlias1",
                  "instanceDeploymentAlias2"
                ],
                "instanceDeploymentAlias": "instanceDeploymentAlias",
                "instanceId": "i-12345678",
                "serviceId": "s-12345678",
                "status": "PENDING",
                "statusMessage": "Creating deployment",
                "subscriptionId": "Officia adipisci mollitia et."
              },
              {
                "dependsOnDeployment": [
                  "instanceDeploymentAlias1",
                  "instanceDeploymentAlias2"
                ],
                "instanceDeploymentAlias": "instanceDeploymentAlias",
                "instanceId": "i-12345678",
                "serviceId": "s-12345678",
                "status": "PENDING",
                "statusMessage": "Creating deployment",
                "subscriptionId": "Officia adipisci mollitia et."
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "description": "The time the services orchestration was created",
            "example": "2021-01-01T00:00:00Z"
          },
          "id": {
            "type": "string",
            "description": "The ID of the services orchestration",
            "example": "so-12345678"
          },
          "orchestrationFailedReason": {
            "type": "string",
            "description": "The reason why the orchestration failed",
            "example": "Invalid DSL"
          },
          "resultParams": {
            "description": "Custom result parameters of the services orchestration",
            "example": {
              "param1": "value1",
              "param2": "value2"
            }
          },
          "status": {
            "type": "string",
            "description": "The status of the services orchestration",
            "example": "PENDING"
          },
          "updatedAt": {
            "type": "string",
            "description": "The time the services orchestration was last updated",
            "example": "2021-01-01T00:00:00Z"
          }
        },
        "example": {
          "ServicesTopology": [
            {
              "dependsOnDeployment": [
                "instanceDeploymentAlias1",
                "instanceDeploymentAlias2"
              ],
              "instanceDeploymentAlias": "instanceDeploymentAlias",
              "instanceId": "i-12345678",
              "serviceId": "s-12345678",
              "status": "PENDING",
              "statusMessage": "Creating deployment",
              "subscriptionId": "Officia adipisci mollitia et."
            },
            {
              "dependsOnDeployment": [
                "instanceDeploymentAlias1",
                "instanceDeploymentAlias2"
              ],
              "instanceDeploymentAlias": "instanceDeploymentAlias",
              "instanceId": "i-12345678",
              "serviceId": "s-12345678",
              "status": "PENDING",
              "statusMessage": "Creating deployment",
              "subscriptionId": "Officia adipisci mollitia et."
            },
            {
              "dependsOnDeployment": [
                "instanceDeploymentAlias1",
                "instanceDeploymentAlias2"
              ],
              "instanceDeploymentAlias": "instanceDeploymentAlias",
              "instanceId": "i-12345678",
              "serviceId": "s-12345678",
              "status": "PENDING",
              "statusMessage": "Creating deployment",
              "subscriptionId": "Officia adipisci mollitia et."
            }
          ],
          "createdAt": "2021-01-01T00:00:00Z",
          "id": "so-12345678",
          "orchestrationFailedReason": "Invalid DSL",
          "resultParams": {
            "param1": "value1",
            "param2": "value2"
          },
          "status": "PENDING",
          "updatedAt": "2021-01-01T00:00:00Z"
        },
        "required": [
          "id",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "DescribeStorageConfigResult": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the storage config",
            "example": "my-storage-config-description"
          },
          "id": {
            "type": "string",
            "description": "The storage config ID",
            "example": "sc-12345678"
          },
          "infraConfigIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Non a itaque."
            },
            "description": "The list of infra config IDs associated with the compute config.",
            "example": [
              "ic-12345678",
              "ic-abcdefgh"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name of the storage config",
            "example": "my-storage-config"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID",
            "example": "s-12345678"
          },
          "volumes": {
            "type": "object",
            "description": "The storage volume config IDs and the corresponding mount path",
            "example": {
              "svc-12345678": [
                "/data",
                "/mnt/logs"
              ],
              "svc-23456789": [
                "/config"
              ]
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Hic similique."
              },
              "example": [
                "Optio maxime.",
                "Nam ducimus ut et ea.",
                "Aliquam qui voluptas dolor debitis eveniet."
              ]
            }
          }
        },
        "example": {
          "description": "my-storage-config-description",
          "id": "sc-12345678",
          "infraConfigIDs": [
            "ic-12345678",
            "ic-abcdefgh"
          ],
          "name": "my-storage-config",
          "serviceId": "s-12345678",
          "volumes": {
            "svc-12345678": [
              "/data",
              "/mnt/logs"
            ],
            "svc-23456789": [
              "/config"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "volumes",
          "serviceId"
        ]
      },
      "DescribeStorageVolumeConfigResult": {
        "type": "object",
        "properties": {
          "cloudProviderName": {
            "type": "string",
            "description": "The cloud provider name for fixed storage types",
            "example": "aws"
          },
          "clusterStorageType": {
            "type": "string",
            "description": "The type of the fixed storage for the cluster",
            "example": "S3|$var.storageType|AWS::EFS"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the context for the storage volume pool",
            "example": "A storage volume set to store the MySQL data directory"
          },
          "disableBackup": {
            "type": "boolean",
            "description": "Disable backup for the storage volume",
            "example": false
          },
          "id": {
            "type": "string",
            "description": "The storage volume config ID",
            "example": "svc-12345678"
          },
          "instanceStorageIops": {
            "type": "string",
            "description": "The IOPS provisioned for the configured instance storage type",
            "example": "7500"
          },
          "instanceStorageSizeGi": {
            "type": "string",
            "description": "The fixed storage size (in Gi) provisioned for the configured instance storage type",
            "example": "128"
          },
          "instanceStorageThroughputMiBps": {
            "type": "string",
            "description": "The throughput (in MiBps) provisioned for the configured instance storage type",
            "example": "128"
          },
          "instanceStorageType": {
            "type": "string",
            "description": "The type of the fixed storage for a compute instance",
            "example": "$var.storageType"
          },
          "name": {
            "type": "string",
            "description": "Name of the storage volume pool",
            "example": "MySQL Data Volume"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID",
            "example": "s-12345678"
          },
          "storageResourceID": {
            "type": "string",
            "description": "The storage resource ID",
            "example": "r-12345678"
          }
        },
        "example": {
          "cloudProviderName": "aws",
          "clusterStorageType": "S3|$var.storageType|AWS::EFS",
          "description": "A storage volume set to store the MySQL data directory",
          "disableBackup": false,
          "id": "svc-12345678",
          "instanceStorageIops": "7500",
          "instanceStorageSizeGi": "128",
          "instanceStorageThroughputMiBps": "128",
          "instanceStorageType": "$var.storageType",
          "name": "MySQL Data Volume",
          "serviceId": "s-12345678",
          "storageResourceID": "r-12345678"
        },
        "required": [
          "serviceId",
          "id",
          "name",
          "description"
        ]
      },
      "DescribeSubscriptionRequestResult": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The time that this subscription request was issued",
            "example": "2019-01-01T00:00:00Z"
          },
          "id": {
            "type": "string",
            "description": "The subscription ID",
            "example": "subr-12345678"
          },
          "productTierId": {
            "type": "string",
            "description": "The product tier ID that this subscription is tied to",
            "example": "pt-12345678"
          },
          "productTierName": {
            "type": "string",
            "description": "The name of the product tier",
            "example": "Omnistrate Multi Tenancy"
          },
          "rootUserEmail": {
            "type": "string",
            "description": "The email of the user that issued the subscription request",
            "example": "abc@gmail.com"
          },
          "rootUserId": {
            "type": "string",
            "description": "The ID of the user that issued the subscription request",
            "example": "org-12345678"
          },
          "rootUserName": {
            "type": "string",
            "description": "The name of the user that issued the subscription request",
            "example": "John Doe"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID that this subscription is tied to",
            "example": "s-12345678"
          },
          "serviceLogoURL": {
            "type": "string",
            "description": "The logo for the service",
            "example": "Fugit sint ea."
          },
          "serviceName": {
            "type": "string",
            "description": "The name of the service",
            "example": "MySQL multi-writer service"
          },
          "status": {
            "type": "string",
            "description": "The status of the subscription request",
            "example": "PENDING"
          },
          "updatedAt": {
            "type": "string",
            "description": "The time that this subscription request was issued",
            "example": "2019-01-01T00:00:00Z"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "The user ID that last updated the subscription request",
            "example": "user-12345678"
          },
          "updatedByUserName": {
            "type": "string",
            "description": "The user that last updated the subscription request",
            "example": "John Doe"
          }
        },
        "example": {
          "createdAt": "2019-01-01T00:00:00Z",
          "id": "subr-12345678",
          "productTierId": "pt-12345678",
          "productTierName": "Omnistrate Multi Tenancy",
          "rootUserEmail": "abc@gmail.com",
          "rootUserId": "org-12345678",
          "rootUserName": "John Doe",
          "serviceId": "s-12345678",
          "serviceLogoURL": "Error fugiat.",
          "serviceName": "MySQL multi-writer service",
          "status": "PENDING",
          "updatedAt": "2019-01-01T00:00:00Z",
          "updatedByUserId": "user-12345678",
          "updatedByUserName": "John Doe"
        },
        "required": [
          "id",
          "rootUserId",
          "rootUserName",
          "rootUserEmail",
          "serviceId",
          "serviceName",
          "productTierId",
          "productTierName",
          "status",
          "createdAt",
          "updatedAt",
          "updatedByUserId",
          "updatedByUserName"
        ]
      },
      "DescribeSubscriptionResult": {
        "type": "object",
        "properties": {
          "accountConfigIdentityId": {
            "type": "string",
            "description": "The org ID of the account config identity",
            "example": "org-12345678"
          },
          "cloudProviderNames": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Quis corrupti."
            },
            "description": "List of cloud provider names",
            "example": [
              "aws",
              "gcp"
            ]
          },
          "createdAt": {
            "type": "string",
            "description": "The time that this subscription was created",
            "example": "2019-01-01T00:00:00Z"
          },
          "defaultSubscription": {
            "type": "boolean",
            "description": "Whether this is the default subscription for the user",
            "example": true
          },
          "id": {
            "type": "string",
            "description": "The subscription ID",
            "example": "sub-12345678"
          },
          "productTierId": {
            "type": "string",
            "description": "The product tier ID that this subscription is tied to",
            "example": "pt-12345678"
          },
          "productTierName": {
            "type": "string",
            "description": "The name of the product tier",
            "example": "Omnistrate Multi Tenancy"
          },
          "roleType": {
            "type": "string",
            "description": "The role type of the caller user in this subscription",
            "example": "root"
          },
          "rootUserId": {
            "type": "string",
            "description": "The user ID that this subscription belong to",
            "example": "user-12345678"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID that this subscription is tied to",
            "example": "s-12345678"
          },
          "serviceLogoURL": {
            "type": "string",
            "description": "The logo for the service",
            "example": "Non molestiae omnis et dolorum voluptas dolor."
          },
          "serviceName": {
            "type": "string",
            "description": "The name of the service",
            "example": "MySQL multi-writer service"
          },
          "serviceOrgId": {
            "type": "string",
            "description": "The org ID of the org that owns the service",
            "example": "org-12345678"
          },
          "serviceOrgName": {
            "type": "string",
            "description": "The name of the org that owns the service",
            "example": "Omnistrate"
          },
          "status": {
            "type": "string",
            "description": "The status of the subscription",
            "example": "ACTIVE"
          },
          "subscriptionOwnerName": {
            "type": "string",
            "description": "The name of the subscription owner user",
            "example": "John Doe"
          }
        },
        "example": {
          "accountConfigIdentityId": "org-12345678",
          "cloudProviderNames": [
            "aws",
            "gcp"
          ],
          "createdAt": "2019-01-01T00:00:00Z",
          "defaultSubscription": true,
          "id": "sub-12345678",
          "productTierId": "pt-12345678",
          "productTierName": "Omnistrate Multi Tenancy",
          "roleType": "root",
          "rootUserId": "user-12345678",
          "serviceId": "s-12345678",
          "serviceLogoURL": "Quae quis est est.",
          "serviceName": "MySQL multi-writer service",
          "serviceOrgId": "org-12345678",
          "serviceOrgName": "Omnistrate",
          "status": "ACTIVE",
          "subscriptionOwnerName": "John Doe"
        },
        "required": [
          "id",
          "rootUserId",
          "serviceId",
          "productTierId",
          "serviceOrgId",
          "serviceOrgName",
          "roleType",
          "createdAt",
          "subscriptionOwnerName",
          "serviceName",
          "serviceLogoURL",
          "cloudProviderNames",
          "defaultSubscription",
          "productTierName",
          "accountConfigIdentityId",
          "status"
        ]
      },
      "DescribeUserBillingDetailsResult": {
        "type": "object",
        "properties": {
          "billingEmbedURL": {
            "type": "string",
            "description": "The URL from the billing provider to embed in an iframe to show the user's billing information",
            "example": "https://billing.provider.com/embed?customerId=cus_xxxxxxxxxxxxxx"
          },
          "name": {
            "type": "string",
            "description": "The name of the user",
            "example": "John Dae"
          },
          "paymentConfigured": {
            "type": "boolean",
            "description": "Whether the customer has configured their payment information.",
            "example": true
          },
          "paymentInfoPortalURL": {
            "type": "string",
            "description": "The URL from the billing provide to redirect users to so they can enter their payment information.  Only present when first adding payment information",
            "example": "https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx"
          },
          "userId": {
            "type": "string",
            "description": "The User ID",
            "example": "user-abcd1234"
          }
        },
        "example": {
          "billingEmbedURL": "https://billing.provider.com/embed?customerId=cus_xxxxxxxxxxxxxx",
          "name": "John Dae",
          "paymentConfigured": true,
          "paymentInfoPortalURL": "https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx",
          "userId": "user-abcd1234"
        },
        "required": [
          "userId",
          "name",
          "billingEmbedURL",
          "paymentConfigured"
        ]
      },
      "DescribeUserResult": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "createdAt": {
            "type": "string",
            "description": "The user creation time",
            "example": "2023-01-10T00:00:00Z"
          },
          "email": {
            "type": "string",
            "description": "The email of the user",
            "example": "abc@gmail.com"
          },
          "id": {
            "type": "string",
            "description": "The User ID",
            "example": "user-abcd1234"
          },
          "lastModifiedAt": {
            "type": "string",
            "description": "The user update time",
            "example": "2023-01-20T00:00:00Z"
          },
          "name": {
            "type": "string",
            "description": "The name of the user",
            "example": "John Dae"
          },
          "orgDescription": {
            "type": "string",
            "description": "The description of the org that this user owns",
            "example": "ACME Inc."
          },
          "orgFavIconURL": {
            "type": "string",
            "description": "The favicon of the org that this user owns",
            "example": "Temporibus officia."
          },
          "orgId": {
            "type": "string",
            "description": "The ID of the org that this user owns",
            "example": "org-aKQ8G13QeR"
          },
          "orgLogoURL": {
            "type": "string",
            "description": "The logo of the org that this user owns",
            "example": "Molestias quia itaque."
          },
          "orgName": {
            "type": "string",
            "description": "The org name that this user owns",
            "example": "ACME"
          },
          "orgPrivacyPolicy": {
            "type": "string",
            "description": "The privacy policy for the org that this user owns",
            "example": "Est dicta harum omnis deserunt."
          },
          "orgSupportEmail": {
            "type": "string",
            "description": "The support email of the org that this user owns",
            "example": "support@example.com"
          },
          "orgTermsOfUse": {
            "type": "string",
            "description": "The terms of use for the org that this user owns",
            "example": "Quia quia."
          },
          "orgURL": {
            "type": "string",
            "description": "The url of the org that this user owns",
            "example": "something.acme"
          },
          "planName": {
            "type": "string",
            "description": "The name of the plan of the user",
            "example": "STARTER"
          },
          "roleType": {
            "type": "string",
            "description": "The role type of the user",
            "example": "reader"
          }
        },
        "example": {
          "address": {
            "addressLine1": "1234 Main St",
            "addressLine2": "Apt 123",
            "addressLine3": "Building 123",
            "city": "San Francisco",
            "country": "US",
            "state": "CA",
            "zip": "94123"
          },
          "createdAt": "2023-01-10T00:00:00Z",
          "email": "abc@gmail.com",
          "id": "user-abcd1234",
          "lastModifiedAt": "2023-01-20T00:00:00Z",
          "name": "John Dae",
          "orgDescription": "ACME Inc.",
          "orgFavIconURL": "Suscipit earum illum.",
          "orgId": "org-aKQ8G13QeR",
          "orgLogoURL": "Et ut illum quia et.",
          "orgName": "ACME",
          "orgPrivacyPolicy": "Enim nemo optio possimus omnis voluptatem et.",
          "orgSupportEmail": "support@example.com",
          "orgTermsOfUse": "Mollitia tenetur id.",
          "orgURL": "something.acme",
          "planName": "STARTER",
          "roleType": "reader"
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "lastModifiedAt",
          "email",
          "orgName",
          "orgDescription",
          "orgURL",
          "orgId",
          "roleType",
          "orgSupportEmail",
          "orgLogoURL",
          "orgFavIconURL",
          "orgTermsOfUse",
          "orgPrivacyPolicy"
        ]
      },
      "DescribeUsersByOrgResult": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "The ID of the org",
            "example": "org-aKQ8G13QeR"
          },
          "orgUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgUsers"
            },
            "description": "The users associated with the corresponding org",
            "example": [
              {
                "email": "abc@gmail.com",
                "invitedAt": "2023-01-10T00:00:00Z",
                "name": "John Doe",
                "roleType": "reader",
                "userId": "user-abcd1234"
              }
            ]
          }
        },
        "example": {
          "Id": "org-aKQ8G13QeR",
          "orgUsers": [
            {
              "email": "abc@gmail.com",
              "invitedAt": "2023-01-10T00:00:00Z",
              "name": "John Doe",
              "roleType": "reader",
              "userId": "user-abcd1234"
            }
          ]
        },
        "required": [
          "Id",
          "orgUsers"
        ]
      },
      "DescribeUsersBySubscriptionResult": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "The ID of the subscription",
            "example": "sub-abcd1234"
          },
          "subscriptionUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionUsers"
            },
            "description": "The users associated with the corresponding subscription",
            "example": [
              {
                "email": "abc@gmail.com",
                "name": "John Doe",
                "roleType": "reader",
                "subscriptionId": "sub-abcd1234",
                "userId": "user-abcd1234"
              }
            ]
          }
        },
        "example": {
          "Id": "sub-abcd1234",
          "subscriptionUsers": [
            {
              "email": "abc@gmail.com",
              "name": "John Doe",
              "roleType": "reader",
              "subscriptionId": "sub-abcd1234",
              "userId": "user-abcd1234"
            }
          ]
        },
        "required": [
          "Id",
          "subscriptionUsers"
        ]
      },
      "DescribeVUnitResult": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "The infra / cloud provider name",
            "example": "aws"
          },
          "id": {
            "type": "string",
            "description": "VUnit to operate on",
            "example": "vu-12345678"
          },
          "networkIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Aut aut sed ut impedit error qui."
            },
            "description": "List of network IDs in the given context",
            "example": [
              "n-12345678",
              "n-abcdefgh",
              "n-1234efgh"
            ]
          },
          "region": {
            "type": "string",
            "description": "Region code specific to the cloud-provider",
            "example": "us-west-2"
          },
          "serviceId": {
            "type": "string",
            "description": "Service ID for the VUnit",
            "example": "s-12345678"
          },
          "serviceModelId": {
            "type": "string",
            "description": "Service Model ID for the VUnit",
            "example": "sm-12345678"
          }
        },
        "example": {
          "cloudProvider": "aws",
          "id": "vu-12345678",
          "networkIds": [
            "n-12345678",
            "n-abcdefgh",
            "n-1234efgh"
          ],
          "region": "us-west-2",
          "serviceId": "s-12345678",
          "serviceModelId": "sm-12345678"
        },
        "required": [
          "serviceModelId",
          "cloudProvider",
          "region",
          "networkIds"
        ]
      },
      "Describeresourcemetricsconfigresult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the resource",
            "example": "r-12345678"
          },
          "metricEndpoint": {
            "type": "string",
            "description": "The local host endpoint to supply prometheus metric",
            "example": "http://localhost:9187/metrics"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID that this API bundle belongs to",
            "example": "s-12345678"
          }
        },
        "example": {
          "id": "r-12345678",
          "metricEndpoint": "http://localhost:9187/metrics",
          "serviceId": "s-12345678"
        },
        "required": [
          "serviceId",
          "id",
          "metricEndpoint"
        ]
      },
      "DetailedNodeHealthResult": {
        "type": "object",
        "properties": {
          "ConnectivityStatus": {
            "type": "string",
            "description": "The health status of the network endpoints",
            "example": "HEALTHY"
          },
          "DiskHealth": {
            "type": "string",
            "description": "The health status of the disk",
            "example": "HEALTHY"
          },
          "IntegrationsHealth": {
            "$ref": "#/components/schemas/IntegrationsHealth"
          },
          "LoadHealth": {
            "type": "string",
            "description": "(deprecated) The load status of the pod",
            "example": "LOAD_NORMAL"
          },
          "LoadStatus": {
            "type": "string",
            "description": "The load status of the pod",
            "example": "LOAD_NORMAL"
          },
          "NodeHealth": {
            "type": "string",
            "description": "The health status of the machine hosting the service",
            "example": "HEALTHY"
          },
          "ProcessHealth": {
            "type": "string",
            "description": "The health status of the process",
            "example": "HEALTHY"
          },
          "ProcessLiveness": {
            "type": "string",
            "description": "The liveness status of the process",
            "example": "HEALTHY"
          }
        },
        "example": {
          "ConnectivityStatus": "HEALTHY",
          "DiskHealth": "HEALTHY",
          "IntegrationsHealth": {
            "CustomerObservabilityHealth": "HEALTHY",
            "InternalObservabilityHealth": "HEALTHY"
          },
          "LoadHealth": "LOAD_NORMAL",
          "LoadStatus": "LOAD_NORMAL",
          "NodeHealth": "HEALTHY",
          "ProcessHealth": "HEALTHY",
          "ProcessLiveness": "HEALTHY"
        }
      },
      "DiffTierVersionSetsResult": {
        "type": "object",
        "properties": {
          "anotherVersion": {
            "type": "string",
            "description": "The target version to compare against.",
            "example": "3.1"
          },
          "productTierId": {
            "type": "string",
            "description": "The product tier ID that this version set belongs to.",
            "example": "Non quos tempore."
          },
          "resourceChangeSets": {
            "type": "object",
            "description": "The difference for the service API configuration per resource",
            "example": {
              "Et accusamus voluptatem consectetur iure.": {
                "categorizedResourceChanges": {
                  "Quo amet explicabo.": {
                    "changes": [
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      },
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      }
                    ],
                    "status": "PENDING_UPDATE"
                  },
                  "Ut deserunt voluptate vel necessitatibus.": {
                    "changes": [
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      },
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      }
                    ],
                    "status": "PENDING_UPDATE"
                  },
                  "Vitae omnis molestiae eaque id.": {
                    "changes": [
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      },
                      {
                        "attributes": {
                          "resourceId": "r-12345678"
                        },
                        "changeType": "PENDING_NEW",
                        "name": "Customer metrics"
                      }
                    ],
                    "status": "PENDING_UPDATE"
                  }
                },
                "imageConfigChanges": {
                  "changeState": "PENDING_NEW",
                  "imageConfigId": "imgc-12345678",
                  "imageName": "mysql"
                },
                "infraConfigChanges": {
                  "changeState": "PENDING_NEW",
                  "infraConfigId": "ic-12345678",
                  "name": "MySQL Writer Infra Config"
                },
                "overallResourceStatus": "PENDING_UPDATE",
                "productTierFeatureChanges": "PENDING_UPDATE",
                "resourceChanges": "PENDING_DELETE",
                "resourceName": "Inventore commodi quasi consequatur."
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/ChangeSet"
            }
          },
          "serviceId": {
            "type": "string",
            "description": "ID of the Service",
            "example": "s-12345678"
          },
          "version": {
            "type": "string",
            "description": "The version number for the version set.",
            "example": "3.0"
          }
        },
        "example": {
          "anotherVersion": "3.1",
          "productTierId": "Possimus sit numquam at.",
          "resourceChangeSets": {
            "Laboriosam dolores a veritatis laboriosam pariatur accusantium.": {
              "categorizedResourceChanges": {
                "Quo amet explicabo.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                },
                "Ut deserunt voluptate vel necessitatibus.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                },
                "Vitae omnis molestiae eaque id.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                }
              },
              "imageConfigChanges": {
                "changeState": "PENDING_NEW",
                "imageConfigId": "imgc-12345678",
                "imageName": "mysql"
              },
              "infraConfigChanges": {
                "changeState": "PENDING_NEW",
                "infraConfigId": "ic-12345678",
                "name": "MySQL Writer Infra Config"
              },
              "overallResourceStatus": "PENDING_UPDATE",
              "productTierFeatureChanges": "PENDING_UPDATE",
              "resourceChanges": "PENDING_DELETE",
              "resourceName": "Inventore commodi quasi consequatur."
            },
            "Qui vitae.": {
              "categorizedResourceChanges": {
                "Quo amet explicabo.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                },
                "Ut deserunt voluptate vel necessitatibus.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                },
                "Vitae omnis molestiae eaque id.": {
                  "changes": [
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    },
                    {
                      "attributes": {
                        "resourceId": "r-12345678"
                      },
                      "changeType": "PENDING_NEW",
                      "name": "Customer metrics"
                    }
                  ],
                  "status": "PENDING_UPDATE"
                }
              },
              "imageConfigChanges": {
                "changeState": "PENDING_NEW",
                "imageConfigId": "imgc-12345678",
                "imageName": "mysql"
              },
              "infraConfigChanges": {
                "changeState": "PENDING_NEW",
                "infraConfigId": "ic-12345678",
                "name": "MySQL Writer Infra Config"
              },
              "overallResourceStatus": "PENDING_UPDATE",
              "productTierFeatureChanges": "PENDING_UPDATE",
              "resourceChanges": "PENDING_DELETE",
              "resourceName": "Inventore commodi quasi consequatur."
            }
          },
          "serviceId": "s-12345678",
          "version": "3.0"
        },
        "required": [
          "version",
          "anotherVersion",
          "serviceId",
          "productTierId",
          "resourceChangeSets"
        ]
      },
      "DisableProductTierFeatureRequestBody": {
        "type": "object",
        "properties": {
          "feature": {
            "type": "string",
            "description": "Feature to disable",
            "example": "BILLING"
          },
          "scope": {
            "type": "string",
            "description": "Feature scope",
            "example": "INTERNAL"
          }
        },
        "example": {
          "feature": "BILLING",
          "scope": "INTERNAL"
        },
        "required": [
          "feature"
        ]
      },
      "DisableResourceCapabilityRequestBody": {
        "type": "object",
        "properties": {
          "capability": {
            "type": "string",
            "description": "The capability to disable",
            "example": "SERVERLESS"
          }
        },
        "example": {
          "capability": "SERVERLESS"
        },
        "required": [
          "capability"
        ]
      },
      "DisableServiceModelFeatureRequestBody": {
        "type": "object",
        "properties": {
          "feature": {
            "type": "string",
            "example": "Illo esse similique maxime."
          }
        },
        "example": {
          "feature": "Doloribus nisi."
        },
        "required": [
          "feature"
        ]
      },
      "EFSFileSystemConfiguration": {
        "type": "object",
        "properties": {
          "PerformanceMode": {
            "type": "string",
            "description": "The performance mode of the EFS file system",
            "example": "generalPurpose|maxIO"
          },
          "ProvisionedThroughputInMibps": {
            "type": "number",
            "description": "The throughput, measured in MiBps, that you want to provision for the EFS file system, if throughput mode if provisioned",
            "example": 125,
            "format": "double"
          },
          "ThroughputMode": {
            "type": "string",
            "description": "The throughput mode of the EFS file system",
            "example": "provisioned|bursting|elastic"
          }
        },
        "example": {
          "PerformanceMode": "generalPurpose|maxIO",
          "ProvisionedThroughputInMibps": 125,
          "ThroughputMode": "provisioned|bursting|elastic"
        },
        "required": [
          "ThroughputMode",
          "PerformanceMode"
        ]
      },
      "EnableProductTierFeatureRequestBody": {
        "type": "object",
        "properties": {
          "configuration": {
            "type": "object",
            "description": "The configuration parameters of the product tier feature",
            "example": {
              "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name"
            },
            "additionalProperties": true
          },
          "feature": {
            "type": "string",
            "description": "Feature to enable",
            "example": "BILLING"
          },
          "scope": {
            "type": "string",
            "description": "Feature scope",
            "example": "INTERNAL"
          }
        },
        "example": {
          "configuration": {
            "S3BucketArn": "arn:aws:s3:::my_billing_bucket_name"
          },
          "feature": "BILLING",
          "scope": "INTERNAL"
        },
        "required": [
          "feature"
        ]
      },
      "EnableResourceCapabilityRequestBody": {
        "type": "object",
        "properties": {
          "capability": {
            "type": "string",
            "description": "The type of capability of a resource",
            "example": "SERVERLESS"
          },
          "configuration": {
            "type": "object",
            "description": "The configuration parameters of a capability of a resource",
            "example": {
              "EnableAutoStop": true,
              "MinimumNodesInPool": 5,
              "PortsMappingProxyConfig": {
                "MaxNumberOfClustersPerProxyInstance": 50,
                "NumberOfPortsPerCluster": 4
              },
              "ReferenceProxyKey": "resource-proxy",
              "TargetPort": 5432
            },
            "additionalProperties": true
          }
        },
        "example": {
          "capability": "SERVERLESS",
          "configuration": {
            "EnableAutoStop": true,
            "MinimumNodesInPool": 5,
            "PortsMappingProxyConfig": {
              "MaxNumberOfClustersPerProxyInstance": 50,
              "NumberOfPortsPerCluster": 4
            },
            "ReferenceProxyKey": "resource-proxy",
            "TargetPort": 5432
          }
        },
        "required": [
          "capability"
        ]
      },
      "Endpoint": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "The host of the endpoint",
            "default": "",
            "example": "https://my-endpoint.com"
          },
          "networkingType": {
            "type": "string",
            "description": "The networking type of the endpoint",
            "default": "PUBLIC",
            "example": "PUBLIC|PRIVATE"
          },
          "ports": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 2782489188633766400,
              "format": "int64"
            },
            "description": "The ports of the endpoint",
            "example": [
              8080,
              8081
            ]
          },
          "primary": {
            "type": "boolean",
            "description": "Whether this is the primary endpoint to highlight",
            "default": false,
            "example": true
          }
        },
        "example": {
          "host": "https://my-endpoint.com",
          "networkingType": "PUBLIC|PRIVATE",
          "ports": [
            8080,
            8081
          ],
          "primary": false
        }
      },
      "EnvironmentHealthReport": {
        "type": "object",
        "properties": {
          "models": {
            "type": "object",
            "description": "Health report for each model in the environment",
            "example": {
              "sm-12345678": {
                "vu-11111111": "UNKNOWN",
                "vu-12345678": "UP",
                "vu-87654321": "DOWN"
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/VUnitHealthReport"
            }
          }
        },
        "example": {
          "models": {
            "sm-12345678": {
              "vu-11111111": "UNKNOWN",
              "vu-12345678": "UP",
              "vu-87654321": "DOWN"
            }
          }
        }
      },
      "EnvironmentPromotionStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the promotion",
            "example": "IN_SYNC|OUT_OF_SYNC|UNKNOWN"
          },
          "targetEnvironmentID": {
            "type": "string",
            "description": "The ID of the target environment",
            "example": "se-12345678"
          }
        },
        "example": {
          "status": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
          "targetEnvironmentID": "se-12345678"
        },
        "required": [
          "targetEnvironmentID",
          "status"
        ]
      },
      "EnvironmentVariable": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the environment variable",
            "example": "MYSQL_ROOT_PASSWORD"
          },
          "value": {
            "type": "string",
            "description": "The value of the environment variable",
            "example": "password"
          }
        },
        "description": "A service environment variable",
        "example": {
          "key": "MYSQL_ROOT_PASSWORD",
          "value": "password"
        },
        "required": [
          "key",
          "value"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "boolean",
            "description": "Is the error a server-side fault?",
            "example": false
          },
          "id": {
            "type": "string",
            "description": "ID is a unique identifier for this particular occurrence of the problem.",
            "example": "123abc"
          },
          "message": {
            "type": "string",
            "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
            "example": "parameter 'p' must be an integer"
          },
          "name": {
            "type": "string",
            "description": "Name is the name of this class of errors.",
            "example": "bad_request"
          },
          "temporary": {
            "type": "boolean",
            "description": "Is the error temporary?",
            "example": false
          },
          "timeout": {
            "type": "boolean",
            "description": "Is the error a timeout?",
            "example": false
          }
        },
        "example": {
          "fault": true,
          "id": "123abc",
          "message": "parameter 'p' must be an integer",
          "name": "bad_request",
          "temporary": true,
          "timeout": true
        },
        "required": [
          "name",
          "id",
          "message",
          "temporary",
          "timeout",
          "fault"
        ]
      },
      "FailoverResourceInstanceRequestBody": {
        "type": "object",
        "properties": {
          "failedReplicaAction": {
            "type": "string",
            "description": "The failed replica action",
            "example": "FAILOVER_AND_RESTART"
          },
          "failedReplicaID": {
            "type": "string",
            "description": "The failed replica ID",
            "example": "db-0"
          }
        },
        "example": {
          "failedReplicaAction": "FAILOVER_AND_RESTART",
          "failedReplicaID": "db-0"
        },
        "required": [
          "failedReplicaID"
        ]
      },
      "FileMetadata": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of the file",
            "example": "A file to store the configuration for the resource"
          },
          "fileId": {
            "type": "string",
            "description": "The ID of the file",
            "example": "f-12345678"
          },
          "mountPath": {
            "type": "string",
            "description": "The mount path of the file",
            "example": "/etc/config"
          },
          "name": {
            "type": "string",
            "description": "The name of the file",
            "example": "file.txt"
          },
          "size": {
            "type": "integer",
            "description": "The size of the file",
            "example": 1234,
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "The type of the file",
            "example": "Config"
          },
          "uploadTime": {
            "type": "string",
            "description": "The time the file was uploaded",
            "example": "2023-01-10T00:00:00Z"
          },
          "uploadedBy": {
            "type": "string",
            "description": "The user who uploaded the file",
            "example": "user"
          }
        },
        "example": {
          "description": "A file to store the configuration for the resource",
          "fileId": "f-12345678",
          "mountPath": "/etc/config",
          "name": "file.txt",
          "size": 1234,
          "type": "Config",
          "uploadTime": "2023-01-10T00:00:00Z",
          "uploadedBy": "user"
        },
        "required": [
          "fileId",
          "name",
          "description",
          "size",
          "uploadTime",
          "uploadedBy",
          "type",
          "mountPath"
        ]
      },
      "FileSystemConfiguration": {
        "type": "object",
        "properties": {
          "EFSFileSystemConfiguration": {
            "$ref": "#/components/schemas/EFSFileSystemConfiguration"
          }
        },
        "example": {
          "EFSFileSystemConfiguration": {
            "PerformanceMode": "generalPurpose|maxIO",
            "ProvisionedThroughputInMibps": 125,
            "ThroughputMode": "provisioned|bursting|elastic"
          }
        }
      },
      "GCSConfiguration": {
        "type": "object",
        "example": {}
      },
      "GenerateComposeSpecFromContainerImageRequestBody": {
        "type": "object",
        "properties": {
          "environmentVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            },
            "description": "Runtime environment variables needed to run the image",
            "example": [
              {
                "key": "MYSQL_ROOT_PASSWORD",
                "value": "password"
              }
            ]
          },
          "image": {
            "type": "string",
            "description": "Name of the image along with the tag. Include the repository name if the image is not from the official repository",
            "example": "library/mysql:5.7"
          },
          "imageRegistry": {
            "type": "string",
            "description": "Registry where the image is stored",
            "example": "docker.io"
          },
          "password": {
            "type": "string",
            "description": "Password to access the image registry",
            "example": "password"
          },
          "username": {
            "type": "string",
            "description": "Username to access the image registry",
            "example": "username"
          }
        },
        "example": {
          "environmentVariables": [
            {
              "key": "MYSQL_ROOT_PASSWORD",
              "value": "password"
            }
          ],
          "image": "library/mysql:5.7",
          "imageRegistry": "docker.io",
          "password": "password",
          "username": "username"
        },
        "required": [
          "imageRegistry",
          "image"
        ]
      },
      "GenerateComposeSpecFromContainerImageResult": {
        "type": "object",
        "properties": {
          "fileContent": {
            "type": "string",
            "description": "Base64 encoded Compose Spec YAML in docker compose format",
            "example": "Assumenda qui libero rerum similique."
          }
        },
        "example": {
          "fileContent": "Hic dolore."
        },
        "required": [
          "fileContent"
        ]
      },
      "GenerateTokenForDeploymentCellDashboardResult": {
        "type": "object",
        "properties": {
          "deploymentCellID": {
            "type": "string",
            "description": "The deployment cell ID",
            "example": "hc-12345678"
          },
          "expirationTimestamp": {
            "type": "string",
            "description": "The timestamp when the token expires",
            "example": "2021-01-01T00:00:00Z"
          },
          "token": {
            "type": "string",
            "description": "The token to access the dashboard",
            "example": "token"
          }
        },
        "example": {
          "deploymentCellID": "hc-12345678",
          "expirationTimestamp": "2021-01-01T00:00:00Z",
          "token": "token"
        },
        "required": [
          "token",
          "expirationTimestamp",
          "deploymentCellID"
        ]
      },
      "GetCurrentUsageResult": {
        "type": "object",
        "properties": {
          "endTime": {
            "type": "string",
            "description": "End timestamp of usage",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "planName": {
            "type": "string",
            "description": "The name of the current plan",
            "example": "STARTER"
          },
          "startTime": {
            "type": "string",
            "description": "Start timestamp of usage",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "usage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsagePerDimension"
            },
            "description": "Usage for the current plan",
            "example": [
              {
                "dimension": "core/hours",
                "total": 0.67
              }
            ]
          }
        },
        "example": {
          "endTime": "2021-01-01T00:00:00.000Z",
          "planName": "STARTER",
          "startTime": "2021-01-01T00:00:00.000Z",
          "usage": [
            {
              "dimension": "core/hours",
              "total": 0.67
            }
          ]
        }
      },
      "GetServicePlanResult": {
        "type": "object",
        "properties": {
          "AutoApproveSubscription": {
            "type": "boolean",
            "description": "Auto approve subscription or not",
            "example": false
          },
          "accountConfigIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Eum id qui."
            },
            "description": "The infrastructure account configuration ID list",
            "example": [
              "ac-12345678",
              "ac-23456789"
            ]
          },
          "activeAccountConfigIds": {
            "type": "object",
            "description": "The active infrastructure account configuration IDs per cloud provider",
            "example": {
              "aws": "ac-12345678",
              "gcp": "ac-23456789"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Enim quo reiciendis sed magnam perferendis alias."
            }
          },
          "apiVersion": {
            "type": "string",
            "description": "The external version of the API",
            "example": "v1"
          },
          "awsRegions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Quis quis iure."
            },
            "description": "The AWS regions that this service plan is available on",
            "example": [
              "us-east-2",
              "ca-central-1"
            ]
          },
          "deploymentConfigId": {
            "type": "string",
            "description": "The deployment configuration ID",
            "example": "dc-12345678"
          },
          "gcpRegions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Et harum aspernatur incidunt perferendis consequatur."
            },
            "description": "The GCP regions that this service plan is available on",
            "example": [
              "us-central1"
            ]
          },
          "hasPendingChanges": {
            "type": "boolean",
            "description": "Whether there are any pending changes for the product tier configuration",
            "example": true
          },
          "isProductTierDisabled": {
            "type": "boolean",
            "description": "Whether the product tier is disabled",
            "example": true
          },
          "latestMajorVersion": {
            "type": "string",
            "description": "The version number for the latest major version set.",
            "example": "3.0"
          },
          "modelType": {
            "type": "string",
            "description": "The model type encapsulating this service",
            "example": "CUSTOMER_HOSTED"
          },
          "productTierDescription": {
            "type": "string",
            "description": "A brief description of the product tier",
            "example": "A premium product tier"
          },
          "productTierDocumentation": {
            "type": "string",
            "description": "Documentation",
            "example": "Any documentation"
          },
          "productTierFeatures": {
            "type": "object",
            "description": "The features that are enabled / disabled for this product tier",
            "example": {
              "BILLING": false,
              "LOGS": true,
              "METRICS": false
            },
            "additionalProperties": {
              "type": "boolean",
              "example": false
            }
          },
          "productTierId": {
            "type": "string",
            "description": "Product tier ID",
            "example": "pt-12345678"
          },
          "productTierKey": {
            "type": "string",
            "description": "Unique Key of the product tier",
            "example": "premium"
          },
          "productTierName": {
            "type": "string",
            "description": "Name of the product tier",
            "example": "Premium"
          },
          "productTierPlanDescription": {
            "type": "string",
            "description": "A brief description for the end user of the product tier",
            "example": "A premium plan"
          },
          "productTierPricing": {
            "description": "Pricing",
            "example": {
              "price1": "value1"
            }
          },
          "productTierSupport": {
            "type": "string",
            "description": "Support",
            "example": "Any support"
          },
          "serviceApiDescription": {
            "type": "string",
            "description": "A brief description of the service API bundle",
            "example": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability"
          },
          "serviceApiId": {
            "type": "string",
            "description": "The service API ID",
            "example": "sa-12345678"
          },
          "serviceEnvironmentId": {
            "type": "string",
            "description": "The service environment ID",
            "example": "se-12345678"
          },
          "serviceModelDescription": {
            "type": "string",
            "description": "A brief description of the service model",
            "example": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability"
          },
          "serviceModelFeatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceModelFeatureDetail"
            },
            "description": "Enabled service model features",
            "example": [
              {
                "configuration": {
                  "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                  "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                },
                "feature": "Eum temporibus voluptate inventore est consectetur omnis."
              },
              {
                "configuration": {
                  "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                  "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                },
                "feature": "Eum temporibus voluptate inventore est consectetur omnis."
              }
            ]
          },
          "serviceModelId": {
            "type": "string",
            "description": "The service model ID",
            "example": "sm-12345678"
          },
          "serviceModelName": {
            "type": "string",
            "description": "Name of the Service Model",
            "example": "MySQL multi-writer service hosted model"
          },
          "tierType": {
            "type": "string",
            "description": "Tier type",
            "example": "OMNISTRATE_DEDICATED_TENANCY"
          },
          "versionSetStatus": {
            "type": "string",
            "description": "The tier version set status.",
            "example": "Preferred|Active|Deprecated|Pending"
          }
        },
        "example": {
          "AutoApproveSubscription": false,
          "accountConfigIds": [
            "ac-12345678",
            "ac-23456789"
          ],
          "activeAccountConfigIds": {
            "aws": "ac-12345678",
            "gcp": "ac-23456789"
          },
          "apiVersion": "v1",
          "awsRegions": [
            "us-east-2",
            "ca-central-1"
          ],
          "deploymentConfigId": "dc-12345678",
          "gcpRegions": [
            "us-central1"
          ],
          "hasPendingChanges": true,
          "isProductTierDisabled": true,
          "latestMajorVersion": "3.0",
          "modelType": "CUSTOMER_HOSTED",
          "productTierDescription": "A premium product tier",
          "productTierDocumentation": "Any documentation",
          "productTierFeatures": {
            "BILLING": false,
            "LOGS": true,
            "METRICS": false
          },
          "productTierId": "pt-12345678",
          "productTierKey": "premium",
          "productTierName": "Premium",
          "productTierPlanDescription": "A premium plan",
          "productTierPricing": {
            "price1": "value1"
          },
          "productTierSupport": "Any support",
          "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
          "serviceApiId": "sa-12345678",
          "serviceEnvironmentId": "se-12345678",
          "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
          "serviceModelFeatures": [
            {
              "configuration": {
                "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
              },
              "feature": "Eum temporibus voluptate inventore est consectetur omnis."
            },
            {
              "configuration": {
                "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
              },
              "feature": "Eum temporibus voluptate inventore est consectetur omnis."
            }
          ],
          "serviceModelId": "sm-12345678",
          "serviceModelName": "MySQL multi-writer service hosted model",
          "tierType": "OMNISTRATE_DEDICATED_TENANCY",
          "versionSetStatus": "Preferred|Active|Deprecated|Pending"
        },
        "required": [
          "apiVersion",
          "deploymentConfigId",
          "serviceEnvironmentId",
          "serviceApiDescription",
          "serviceApiId",
          "serviceModelDescription",
          "serviceModelId",
          "modelType",
          "serviceModelName",
          "productTierId",
          "productTierName",
          "productTierKey",
          "productTierDescription",
          "productTierPlanDescription",
          "tierType",
          "productTierDocumentation",
          "productTierSupport",
          "productTierPricing",
          "versionSetStatus",
          "latestMajorVersion",
          "hasPendingChanges",
          "AutoApproveSubscription",
          "isProductTierDisabled"
        ]
      },
      "GitConfiguration": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "The access token",
            "example": "my-token"
          },
          "referenceName": {
            "type": "string",
            "description": "The reference name of the repository",
            "example": "tags/v1.0.0"
          },
          "repositoryUrl": {
            "type": "string",
            "description": "The URL of the repository",
            "example": "https://github.com/username/myrepo"
          },
          "userName": {
            "type": "string",
            "description": "The name of github user",
            "example": "my-user"
          }
        },
        "example": {
          "accessToken": "my-token",
          "referenceName": "tags/v1.0.0",
          "repositoryUrl": "https://github.com/username/myrepo",
          "userName": "my-user"
        },
        "required": [
          "repositoryUrl",
          "referenceName"
        ]
      },
      "HelmChartConfiguration": {
        "type": "object",
        "properties": {
          "chartName": {
            "type": "string",
            "description": "The chart name of the Helm package",
            "example": "my-chart"
          },
          "chartRepoName": {
            "type": "string",
            "description": "The chart repository name of the Helm package",
            "example": "my-repo"
          },
          "chartRepoUrl": {
            "type": "string",
            "description": "The chart repository URL of the Helm package",
            "example": "https://my-repo.com"
          },
          "chartValues": {
            "type": "object",
            "description": "The values of the Helm package",
            "example": {
              "key1": "value1",
              "key2": 3,
              "key3": {
                "key4": "value4"
              }
            },
            "additionalProperties": true
          },
          "chartVersion": {
            "type": "string",
            "description": "The chart version of the Helm package",
            "example": "1.0.0"
          },
          "endpointConfiguration": {
            "type": "object",
            "description": "The endpoints from the Helm Deployment to expose to the customer",
            "example": {
              "admin": {
                "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                "networkingType": "PRIVATE",
                "ports": [
                  8080,
                  8081
                ],
                "primary": false
              },
              "cluster": {
                "host": "https://my-endpoint.com",
                "networkingType": "PUBLIC",
                "ports": [
                  8080,
                  8081
                ],
                "primary": true
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/Endpoint"
            }
          },
          "password": {
            "type": "string",
            "description": "The password to authenticate with the registry",
            "example": "my-password"
          },
          "runtimeConfiguration": {
            "$ref": "#/components/schemas/HelmRuntimeConfiguration"
          },
          "username": {
            "type": "string",
            "description": "The username to authenticate with the registry",
            "example": "my-user"
          }
        },
        "example": {
          "chartName": "my-chart",
          "chartRepoName": "my-repo",
          "chartRepoUrl": "https://my-repo.com",
          "chartValues": {
            "key1": "value1",
            "key2": 3,
            "key3": {
              "key4": "value4"
            }
          },
          "chartVersion": "1.0.0",
          "endpointConfiguration": {
            "admin": {
              "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
              "networkingType": "PRIVATE",
              "ports": [
                8080,
                8081
              ],
              "primary": false
            },
            "cluster": {
              "host": "https://my-endpoint.com",
              "networkingType": "PUBLIC",
              "ports": [
                8080,
                8081
              ],
              "primary": true
            }
          },
          "password": "my-password",
          "runtimeConfiguration": {
            "disableHooks": true,
            "recreate": true,
            "resetThenReuseValues": true,
            "resetValues": true,
            "reuseValues": true,
            "skipCRDs": true,
            "timeoutNanos": 1000000000,
            "upgradeCRDs": true,
            "wait": true,
            "waitForJobs": true
          },
          "username": "my-user"
        },
        "required": [
          "chartName",
          "chartVersion",
          "chartRepoName",
          "chartRepoUrl"
        ]
      },
      "HelmPackage": {
        "type": "object",
        "properties": {
          "chartName": {
            "type": "string",
            "description": "The chart name of the Helm package",
            "example": "my-chart"
          },
          "chartRepoName": {
            "type": "string",
            "description": "The chart repository name of the Helm package",
            "example": "my-repo"
          },
          "chartRepoUrl": {
            "type": "string",
            "description": "The chart repository URL of the Helm package",
            "example": "https://my-repo.com"
          },
          "chartValues": {
            "type": "object",
            "description": "The values of the Helm package",
            "example": {
              "key1": "value1",
              "key2": 3,
              "key3": {
                "key4": "value4"
              }
            },
            "additionalProperties": true
          },
          "chartVersion": {
            "type": "string",
            "description": "The chart version of the Helm package",
            "example": "1.0.0"
          },
          "namespace": {
            "type": "string",
            "description": "The namespace where the Helm package should be installed",
            "example": "default"
          },
          "password": {
            "type": "string",
            "description": "The password to authenticate with the registry",
            "example": "my-password"
          },
          "username": {
            "type": "string",
            "description": "The username to authenticate with the registry",
            "example": "my-user"
          }
        },
        "example": {
          "chartName": "my-chart",
          "chartRepoName": "my-repo",
          "chartRepoUrl": "https://my-repo.com",
          "chartValues": {
            "key1": "value1",
            "key2": 3,
            "key3": {
              "key4": "value4"
            }
          },
          "chartVersion": "1.0.0",
          "namespace": "default",
          "password": "my-password",
          "username": "my-user"
        },
        "required": [
          "chartName",
          "chartVersion",
          "chartRepoName",
          "chartRepoUrl",
          "namespace"
        ]
      },
      "HelmRuntimeConfiguration": {
        "type": "object",
        "properties": {
          "disableHooks": {
            "type": "boolean",
            "description": "Disable Helm hooks",
            "example": true
          },
          "recreate": {
            "type": "boolean",
            "description": "Recreate the Helm package if it already exists",
            "example": true
          },
          "resetThenReuseValues": {
            "type": "boolean",
            "description": "Reset then reuse values for the Helm package before applying",
            "example": true
          },
          "resetValues": {
            "type": "boolean",
            "description": "Reset values for the Helm package before applying",
            "example": true
          },
          "reuseValues": {
            "type": "boolean",
            "description": "Reuse values for the Helm package before applying",
            "example": true
          },
          "skipCRDs": {
            "type": "boolean",
            "description": "Skip CRDs for the Helm package",
            "example": true
          },
          "timeoutNanos": {
            "type": "integer",
            "description": "Timeout (nanos) for the Helm package to be deployed",
            "example": 1000000000,
            "format": "int64"
          },
          "upgradeCRDs": {
            "type": "boolean",
            "description": "Upgrade CRDs for the Helm package",
            "example": true
          },
          "wait": {
            "type": "boolean",
            "description": "Wait for the Helm package to be deployed",
            "example": true
          },
          "waitForJobs": {
            "type": "boolean",
            "description": "Wait for all jobs to be completed",
            "example": true
          }
        },
        "example": {
          "disableHooks": true,
          "recreate": true,
          "resetThenReuseValues": true,
          "resetValues": true,
          "reuseValues": true,
          "skipCRDs": true,
          "timeoutNanos": 1000000000,
          "upgradeCRDs": true,
          "wait": true,
          "waitForJobs": true
        },
        "required": [
          "disableHooks",
          "wait",
          "waitForJobs",
          "timeoutNanos",
          "skipCRDs",
          "upgradeCRDs",
          "resetValues",
          "reuseValues",
          "resetThenReuseValues",
          "recreate"
        ]
      },
      "ImageConfigChangeSummary": {
        "type": "object",
        "properties": {
          "changeState": {
            "type": "string",
            "description": "The pending change state for the infra configuration",
            "example": "PENDING_NEW"
          },
          "imageConfigId": {
            "type": "string",
            "description": "The ID of the image configuration that this resource refers to",
            "example": "imgc-12345678"
          },
          "imageName": {
            "type": "string",
            "description": "Name of the container image",
            "example": "mysql",
            "minLength": 1
          }
        },
        "example": {
          "changeState": "PENDING_NEW",
          "imageConfigId": "imgc-12345678",
          "imageName": "mysql"
        }
      },
      "InfraConfigChangeSummary": {
        "type": "object",
        "properties": {
          "changeState": {
            "type": "string",
            "description": "The pending change state for the infra configuration",
            "example": "PENDING_NEW"
          },
          "infraConfigId": {
            "type": "string",
            "description": "The ID of the infrastructure configuration that this resource refers to",
            "example": "ic-12345678"
          },
          "name": {
            "type": "string",
            "description": "The name of the infra config",
            "example": "MySQL Writer Infra Config"
          }
        },
        "example": {
          "changeState": "PENDING_NEW",
          "infraConfigId": "ic-12345678",
          "name": "MySQL Writer Infra Config"
        }
      },
      "InfraRollConfiguration": {
        "type": "object",
        "properties": {
          "infraRolloutStrategy": {
            "type": "string",
            "description": "Rollout strategy to use for infra config updates",
            "example": "NEW_DEPLOYMENT_ONLY"
          },
          "maximumNumberOfResourceInstancesPerBatch": {
            "type": "integer",
            "description": "Maximum number of resource instances to update in a single batch",
            "default": 1,
            "example": 1,
            "format": "int64",
            "minimum": 1
          },
          "maximumUnavailableReplicas": {
            "type": "integer",
            "description": "Maximum number of replicas of this resource that can be unavailable before halting the rollout",
            "default": 1,
            "example": 1,
            "format": "int64",
            "minimum": 1
          }
        },
        "description": "The rollout configuration to use for making changes to the resources backed by this infra",
        "example": {
          "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
          "maximumNumberOfResourceInstancesPerBatch": 1,
          "maximumUnavailableReplicas": 1
        }
      },
      "InputParameterEntity": {
        "type": "object",
        "properties": {
          "custom": {
            "type": "boolean",
            "description": "Whether the parameter is custom",
            "example": false
          },
          "defaultValue": {
            "type": "string",
            "description": "The parameter default value",
            "example": "option1"
          },
          "dependentResourceID": {
            "type": "string",
            "description": "The parameter dependent resource ID",
            "example": "r-12345678"
          },
          "description": {
            "type": "string",
            "description": "The parameter description",
            "example": "The name of the server"
          },
          "displayName": {
            "type": "string",
            "description": "The parameter display name",
            "example": "Server Name"
          },
          "isList": {
            "type": "boolean",
            "description": "Whether the parameter is a list",
            "example": false
          },
          "key": {
            "type": "string",
            "description": "The parameter key",
            "example": "serverName"
          },
          "modifiable": {
            "type": "boolean",
            "description": "Whether the parameter is modifiable",
            "example": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Natus est voluptas."
            },
            "description": "The parameter options",
            "example": [
              "option1",
              "option2"
            ]
          },
          "required": {
            "type": "boolean",
            "description": "Whether the parameter is required",
            "example": true
          },
          "type": {
            "type": "string",
            "description": "The parameter type",
            "example": "Boolean|Float64|String|JSON|Resource"
          }
        },
        "example": {
          "custom": false,
          "defaultValue": "option1",
          "dependentResourceID": "r-12345678",
          "description": "The name of the server",
          "displayName": "Server Name",
          "isList": false,
          "key": "serverName",
          "modifiable": true,
          "options": [
            "option1",
            "option2"
          ],
          "required": true,
          "type": "Boolean|Float64|String|JSON|Resource"
        },
        "required": [
          "key",
          "displayName",
          "description",
          "type",
          "isList",
          "required",
          "modifiable",
          "custom"
        ]
      },
      "InstanceSnapshot": {
        "type": "object",
        "properties": {
          "completeTime": {
            "type": "string",
            "description": "The snapshot time",
            "example": "2021-09-01T00:00:00Z"
          },
          "createdTime": {
            "type": "string",
            "description": "The snapshot creation time",
            "example": "2021-09-01T00:00:00Z"
          },
          "encrypted": {
            "type": "boolean",
            "description": "Whether the snapshot is encrypted",
            "example": true
          },
          "progress": {
            "type": "integer",
            "description": "The backup progress. 0-100",
            "example": 99,
            "format": "int64"
          },
          "snapshotId": {
            "type": "string",
            "description": "The instance snapshot ID",
            "example": "instance-ss-12345678"
          },
          "status": {
            "type": "string",
            "description": "The snapshot status",
            "example": "completed"
          }
        },
        "example": {
          "completeTime": "2021-09-01T00:00:00Z",
          "createdTime": "2021-09-01T00:00:00Z",
          "encrypted": true,
          "progress": 99,
          "snapshotId": "instance-ss-12345678",
          "status": "completed"
        },
        "required": [
          "snapshotId",
          "createdTime",
          "completeTime",
          "status",
          "progress",
          "encrypted"
        ]
      },
      "IntegrationsHealth": {
        "type": "object",
        "properties": {
          "CustomerObservabilityHealth": {
            "type": "string",
            "description": "The health status of the integration with customer provider observability stack on BYOA",
            "example": "HEALTHY"
          },
          "InternalObservabilityHealth": {
            "type": "string",
            "description": "The health status of the integration with service provider observability stack",
            "example": "HEALTHY"
          }
        },
        "example": {
          "CustomerObservabilityHealth": "HEALTHY",
          "InternalObservabilityHealth": "HEALTHY"
        }
      },
      "InviteUserRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "abc@gmail.com",
            "format": "email",
            "minLength": 1
          },
          "roleType": {
            "type": "string",
            "example": "reader"
          }
        },
        "example": {
          "email": "abc@gmail.com",
          "roleType": "reader"
        },
        "required": [
          "email",
          "roleType"
        ]
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "The currency of the charge",
            "example": "USD"
          },
          "invoiceDate": {
            "type": "string",
            "description": "Date of the invoice",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "invoiceId": {
            "type": "string",
            "description": "ID of the invoice",
            "example": "123MyCoolCorp980-2021-01-01-1234567890"
          },
          "invoicePaymentTerm": {
            "type": "string",
            "description": "Invoice Payment Term",
            "example": "30"
          },
          "invoiceStatus": {
            "type": "string",
            "example": "Open"
          },
          "invoiceUrl": {
            "type": "string",
            "description": "URL for this invoice",
            "example": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf"
          },
          "taxAmount": {
            "type": "number",
            "description": "Amount of tax, if any",
            "example": 10,
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "Amount of Invoice",
            "example": 110,
            "format": "double"
          },
          "totalAmountWithoutTax": {
            "type": "number",
            "description": "Amount of Invoice without tax",
            "example": 100,
            "format": "double"
          }
        },
        "example": {
          "currency": "USD",
          "invoiceDate": "2021-01-01T00:00:00.000Z",
          "invoiceId": "123MyCoolCorp980-2021-01-01-1234567890",
          "invoicePaymentTerm": "30",
          "invoiceStatus": "Open",
          "invoiceUrl": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf",
          "taxAmount": 10,
          "totalAmount": 110,
          "totalAmountWithoutTax": 100
        }
      },
      "KubernetesDashboardEndpoint": {
        "type": "object",
        "properties": {
          "dashboardEndpoint": {
            "type": "string",
            "description": "The dashboard endpoint",
            "default": "",
            "example": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh"
          },
          "deploymentCellID": {
            "type": "string",
            "description": "The deployment cell ID",
            "default": "",
            "example": "hc-12345678"
          }
        },
        "example": {
          "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
          "deploymentCellID": "hc-12345678"
        }
      },
      "KustomizeConfiguration": {
        "type": "object",
        "properties": {
          "endpointConfiguration": {
            "type": "object",
            "description": "The endpoints from the Kustomize Deployment to expose to the customer",
            "example": {
              "admin": {
                "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                "networkingType": "PRIVATE",
                "ports": [
                  8080,
                  8081
                ],
                "primary": false
              },
              "cluster": {
                "host": "https://my-endpoint.com",
                "networkingType": "PUBLIC",
                "ports": [
                  8080,
                  8081
                ],
                "primary": true
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/Endpoint"
            }
          },
          "gitConfiguration": {
            "$ref": "#/components/schemas/GitConfiguration"
          },
          "helmChartDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatorHelmChartDependency"
            },
            "description": "The helm chart dependencies for the CRD - Optional",
            "example": [
              {
                "chartName": "cert-manager",
                "chartVersion": "v1.5.3"
              },
              {
                "chartName": "nginx-ingress",
                "chartVersion": "v0.48.1"
              },
              {
                "chartName": "external-dns",
                "chartVersion": "v0.7.0"
              },
              {
                "chartName": "cnpg-operator",
                "chartVersion": "v0.23.1"
              }
            ]
          },
          "kustomizePath": {
            "type": "string",
            "description": "The path to the kustomize directory",
            "example": "/kustomize"
          }
        },
        "example": {
          "endpointConfiguration": {
            "admin": {
              "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
              "networkingType": "PRIVATE",
              "ports": [
                8080,
                8081
              ],
              "primary": false
            },
            "cluster": {
              "host": "https://my-endpoint.com",
              "networkingType": "PUBLIC",
              "ports": [
                8080,
                8081
              ],
              "primary": true
            }
          },
          "gitConfiguration": {
            "accessToken": "my-token",
            "referenceName": "tags/v1.0.0",
            "repositoryUrl": "https://github.com/username/myrepo",
            "userName": "my-user"
          },
          "helmChartDependencies": [
            {
              "chartName": "cert-manager",
              "chartVersion": "v1.5.3"
            },
            {
              "chartName": "nginx-ingress",
              "chartVersion": "v0.48.1"
            },
            {
              "chartName": "external-dns",
              "chartVersion": "v0.7.0"
            },
            {
              "chartName": "cnpg-operator",
              "chartVersion": "v0.23.1"
            }
          ],
          "kustomizePath": "/kustomize"
        },
        "required": [
          "kustomizePath"
        ]
      },
      "L4LoadBalancerConfiguration": {
        "type": "object",
        "properties": {
          "ingressPortConfiguration": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackendPortConfiguration"
            },
            "description": "The ingress port configuration to configure on the load balancer",
            "example": [
              {
                "associatedResourceIDs": [
                  "r-12345678",
                  "r-abcdef12"
                ],
                "backendPort": 8080,
                "ingressPort": 1234
              },
              {
                "associatedResourceIDs": [
                  "r-12345678",
                  "r-abcdef12"
                ],
                "backendPort": 8081,
                "ingressPort": 5678
              },
              {
                "associatedResourceIDs": [
                  "r-vwxybz12",
                  "r-poij122v"
                ],
                "backendPort": 8082,
                "ingressPort": 9012
              }
            ]
          }
        },
        "example": {
          "ingressPortConfiguration": [
            {
              "associatedResourceIDs": [
                "r-12345678",
                "r-abcdef12"
              ],
              "backendPort": 8080,
              "ingressPort": 1234
            },
            {
              "associatedResourceIDs": [
                "r-12345678",
                "r-abcdef12"
              ],
              "backendPort": 8081,
              "ingressPort": 5678
            },
            {
              "associatedResourceIDs": [
                "r-vwxybz12",
                "r-poij122v"
              ],
              "backendPort": 8082,
              "ingressPort": 9012
            }
          ]
        }
      },
      "L7LoadBalancerConfiguration": {
        "type": "object",
        "properties": {
          "paths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoadBalancerPathConfiguration"
            },
            "description": "The paths to configure on the load balancer",
            "example": [
              {
                "associatedResourceID": "r-12345678",
                "path": "/path",
                "port": 8080
              }
            ]
          }
        },
        "example": {
          "paths": [
            {
              "associatedResourceID": "r-12345678",
              "path": "/path",
              "port": 8080
            }
          ]
        }
      },
      "Limits": {
        "type": "object",
        "properties": {
          "max": {
            "type": "string",
            "description": "Maximum value for an integer or floating-point parameter",
            "example": "Nobis ut asperiores laudantium."
          },
          "maxLength": {
            "type": "string",
            "description": "Maximum length of a string parameter",
            "example": "Nemo dolorem est et commodi."
          },
          "min": {
            "type": "string",
            "description": "Minimum value for an integer or floating-point parameter",
            "example": "Esse quos eligendi."
          },
          "minLength": {
            "type": "string",
            "description": "Minimum length of a string parameter",
            "example": "Dignissimos veniam dolores sit est voluptas."
          }
        },
        "description": "Limit of a parameter",
        "example": {
          "max": "Quis earum temporibus esse.",
          "maxLength": "Accusantium veniam incidunt molestiae consequatur officiis exercitationem.",
          "min": "Et dicta quia.",
          "minLength": "Accusantium temporibus aut totam."
        }
      },
      "ListAccountConfigResult": {
        "type": "object",
        "properties": {
          "accountConfigs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribeAccountConfigResult"
            },
            "description": "The list of account configs",
            "example": [
              {
                "awsAccountID": "123456789012",
                "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                "byoaInstanceIDs": [
                  "instance-12345678",
                  "instance-abcdefgh"
                ],
                "cloudProviderId": "infra-12345678",
                "description": "An AWS account hosting multiple dev environments",
                "gcpProjectID": "my-project",
                "gcpProjectNumber": "123456789012",
                "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                "id": "ac-12345678",
                "name": "Dev AWS account",
                "status": "READY",
                "statusMessage": "Account is ready"
              },
              {
                "awsAccountID": "123456789012",
                "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                "byoaInstanceIDs": [
                  "instance-12345678",
                  "instance-abcdefgh"
                ],
                "cloudProviderId": "infra-12345678",
                "description": "An AWS account hosting multiple dev environments",
                "gcpProjectID": "my-project",
                "gcpProjectNumber": "123456789012",
                "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                "id": "ac-12345678",
                "name": "Dev AWS account",
                "status": "READY",
                "statusMessage": "Account is ready"
              },
              {
                "awsAccountID": "123456789012",
                "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                "byoaInstanceIDs": [
                  "instance-12345678",
                  "instance-abcdefgh"
                ],
                "cloudProviderId": "infra-12345678",
                "description": "An AWS account hosting multiple dev environments",
                "gcpProjectID": "my-project",
                "gcpProjectNumber": "123456789012",
                "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                "id": "ac-12345678",
                "name": "Dev AWS account",
                "status": "READY",
                "statusMessage": "Account is ready"
              },
              {
                "awsAccountID": "123456789012",
                "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
                "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
                "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
                "byoaInstanceIDs": [
                  "instance-12345678",
                  "instance-abcdefgh"
                ],
                "cloudProviderId": "infra-12345678",
                "description": "An AWS account hosting multiple dev environments",
                "gcpProjectID": "my-project",
                "gcpProjectNumber": "123456789012",
                "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
                "id": "ac-12345678",
                "name": "Dev AWS account",
                "status": "READY",
                "statusMessage": "Account is ready"
              }
            ]
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Ducimus omnis expedita fuga sit non in."
            },
            "example": [
              "ac-12345678",
              "ac-abcdefgh",
              "ac-1234efgh"
            ]
          },
          "nextPageToken": {
            "type": "string",
            "description": "Token to use for the next page",
            "example": "next-token"
          }
        },
        "example": {
          "accountConfigs": [
            {
              "awsAccountID": "123456789012",
              "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
              "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
              "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
              "byoaInstanceIDs": [
                "instance-12345678",
                "instance-abcdefgh"
              ],
              "cloudProviderId": "infra-12345678",
              "description": "An AWS account hosting multiple dev environments",
              "gcpProjectID": "my-project",
              "gcpProjectNumber": "123456789012",
              "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
              "id": "ac-12345678",
              "name": "Dev AWS account",
              "status": "READY",
              "statusMessage": "Account is ready"
            },
            {
              "awsAccountID": "123456789012",
              "awsBootstrapRoleARN": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>",
              "awsCloudFormationNoLBTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml",
              "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml",
              "byoaInstanceIDs": [
                "instance-12345678",
                "instance-abcdefgh"
              ],
              "cloudProviderId": "infra-12345678",
              "description": "An AWS account hosting multiple dev environments",
              "gcpProjectID": "my-project",
              "gcpProjectNumber": "123456789012",
              "gcpServiceAccountEmail": "bootstrap@my-project.iam.gserviceaccount.com",
              "id": "ac-12345678",
              "name": "Dev AWS account",
              "status": "READY",
              "statusMessage": "Account is ready"
            }
          ],
          "ids": [
            "ac-12345678",
            "ac-abcdefgh",
            "ac-1234efgh"
          ],
          "nextPageToken": "next-token"
        }
      },
      "ListActionHooksResult": {
        "type": "object",
        "properties": {
          "hooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterActionHookRequestBody"
            },
            "description": "The list of action hooks",
            "example": [
              {
                "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
                "customCommand": [
                  "/bin/sh",
                  "-c"
                ],
                "customImage": "my-custom-image:latest",
                "scope": "CLUSTER",
                "type": "ADD"
              },
              {
                "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
                "customCommand": [
                  "/bin/sh",
                  "-c"
                ],
                "customImage": "my-custom-image:latest",
                "scope": "CLUSTER",
                "type": "ADD"
              }
            ]
          }
        },
        "example": {
          "hooks": [
            {
              "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
              "customCommand": [
                "/bin/sh",
                "-c"
              ],
              "customImage": "my-custom-image:latest",
              "scope": "CLUSTER",
              "type": "ADD"
            },
            {
              "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
              "customCommand": [
                "/bin/sh",
                "-c"
              ],
              "customImage": "my-custom-image:latest",
              "scope": "CLUSTER",
              "type": "ADD"
            }
          ]
        },
        "required": [
          "hooks"
        ]
      },
      "ListAllResourceInstancesResult": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "Token to use for the next request",
            "example": "next-token"
          },
          "resourceInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribeResourceInstanceResult"
            },
            "description": "The list of resource instances",
            "example": [
              {
                "active": true,
                "autoscalingEnabled": true,
                "awsAccountID": "123456789012",
                "backupStatus": {
                  "backupPeriodInHours": 2,
                  "backupRetentionInDays": 7,
                  "earliestRestoreTime": "2021-09-01T00:00:00Z",
                  "lastBackupTime": "2021-09-01T00:00:00Z"
                },
                "cloud_provider": "aws",
                "created_at": "2023-01-10T00:00:00Z",
                "createdByUserId": "user-12345678",
                "createdByUserName": "John Doe",
                "currentReplicas": "2",
                "customNetworkDetail": {
                  "cidr": "10.177.0.0/16",
                  "id": "n-12345678",
                  "name": "Prod us-east-1"
                },
                "detailedNetworkTopology": {
                  "r-abcd1234": {
                    "allowedIPRanges": [
                      "0.0.0.0/0"
                    ],
                    "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                    "clusterPorts": [
                      3306
                    ],
                    "main": true,
                    "networkingType": "PUBLIC",
                    "nodes": [
                      {
                        "availabilityZone": "us-east-2a",
                        "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                        "healthStatus": "healthy",
                        "id": "primary-0",
                        "ports": [
                          3306
                        ],
                        "status": "RUNNING"
                      }
                    ],
                    "privateNetworkCIDR": "10.0.0.2/24",
                    "privateNetworkID": "n-1234abcd",
                    "publiclyAccessible": true,
                    "resourceKey": "primary",
                    "resourceName": "Primary MySQL Instance"
                  }
                },
                "externalPayerId": "external-payer-id-1234",
                "gcpProjectID": "my-project",
                "highAvailability": true,
                "id": "instance-abcd1234",
                "instanceLoadStatus": "Quaerat id.",
                "kubernetesDashboardEndpoint": {
                  "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
                  "deploymentCellID": "hc-12345678"
                },
                "last_modified_at": "2023-01-20T00:00:00Z",
                "maxReplicas": "1",
                "minReplicas": "1",
                "network_type": "PUBLIC",
                "productTierFeatures": {
                  "BILLING": {
                    "enabled": false
                  },
                  "LOGS": {
                    "auth": {
                      "password": "px3c4d5f6g7h8i",
                      "username": "abcd1234"
                    },
                    "enabled": true,
                    "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
                  },
                  "METRICS": {
                    "enabled": false
                  }
                },
                "region": "us-east-1",
                "result_params": {
                  "param1": "value1",
                  "param2": "value2"
                },
                "serverlessEnabled": true,
                "status": "RUNNING",
                "subscriptionId": "sub-abcd1234"
              },
              {
                "active": true,
                "autoscalingEnabled": true,
                "awsAccountID": "123456789012",
                "backupStatus": {
                  "backupPeriodInHours": 2,
                  "backupRetentionInDays": 7,
                  "earliestRestoreTime": "2021-09-01T00:00:00Z",
                  "lastBackupTime": "2021-09-01T00:00:00Z"
                },
                "cloud_provider": "aws",
                "created_at": "2023-01-10T00:00:00Z",
                "createdByUserId": "user-12345678",
                "createdByUserName": "John Doe",
                "currentReplicas": "2",
                "customNetworkDetail": {
                  "cidr": "10.177.0.0/16",
                  "id": "n-12345678",
                  "name": "Prod us-east-1"
                },
                "detailedNetworkTopology": {
                  "r-abcd1234": {
                    "allowedIPRanges": [
                      "0.0.0.0/0"
                    ],
                    "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                    "clusterPorts": [
                      3306
                    ],
                    "main": true,
                    "networkingType": "PUBLIC",
                    "nodes": [
                      {
                        "availabilityZone": "us-east-2a",
                        "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                        "healthStatus": "healthy",
                        "id": "primary-0",
                        "ports": [
                          3306
                        ],
                        "status": "RUNNING"
                      }
                    ],
                    "privateNetworkCIDR": "10.0.0.2/24",
                    "privateNetworkID": "n-1234abcd",
                    "publiclyAccessible": true,
                    "resourceKey": "primary",
                    "resourceName": "Primary MySQL Instance"
                  }
                },
                "externalPayerId": "external-payer-id-1234",
                "gcpProjectID": "my-project",
                "highAvailability": true,
                "id": "instance-abcd1234",
                "instanceLoadStatus": "Quaerat id.",
                "kubernetesDashboardEndpoint": {
                  "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
                  "deploymentCellID": "hc-12345678"
                },
                "last_modified_at": "2023-01-20T00:00:00Z",
                "maxReplicas": "1",
                "minReplicas": "1",
                "network_type": "PUBLIC",
                "productTierFeatures": {
                  "BILLING": {
                    "enabled": false
                  },
                  "LOGS": {
                    "auth": {
                      "password": "px3c4d5f6g7h8i",
                      "username": "abcd1234"
                    },
                    "enabled": true,
                    "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
                  },
                  "METRICS": {
                    "enabled": false
                  }
                },
                "region": "us-east-1",
                "result_params": {
                  "param1": "value1",
                  "param2": "value2"
                },
                "serverlessEnabled": true,
                "status": "RUNNING",
                "subscriptionId": "sub-abcd1234"
              }
            ]
          }
        },
        "example": {
          "nextPageToken": "next-token",
          "resourceInstances": [
            {
              "active": true,
              "autoscalingEnabled": true,
              "awsAccountID": "123456789012",
              "backupStatus": {
                "backupPeriodInHours": 2,
                "backupRetentionInDays": 7,
                "earliestRestoreTime": "2021-09-01T00:00:00Z",
                "lastBackupTime": "2021-09-01T00:00:00Z"
              },
              "cloud_provider": "aws",
              "created_at": "2023-01-10T00:00:00Z",
              "createdByUserId": "user-12345678",
              "createdByUserName": "John Doe",
              "currentReplicas": "2",
              "customNetworkDetail": {
                "cidr": "10.177.0.0/16",
                "id": "n-12345678",
                "name": "Prod us-east-1"
              },
              "detailedNetworkTopology": {
                "r-abcd1234": {
                  "allowedIPRanges": [
                    "0.0.0.0/0"
                  ],
                  "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                  "clusterPorts": [
                    3306
                  ],
                  "main": true,
                  "networkingType": "PUBLIC",
                  "nodes": [
                    {
                      "availabilityZone": "us-east-2a",
                      "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                      "healthStatus": "healthy",
                      "id": "primary-0",
                      "ports": [
                        3306
                      ],
                      "status": "RUNNING"
                    }
                  ],
                  "privateNetworkCIDR": "10.0.0.2/24",
                  "privateNetworkID": "n-1234abcd",
                  "publiclyAccessible": true,
                  "resourceKey": "primary",
                  "resourceName": "Primary MySQL Instance"
                }
              },
              "externalPayerId": "external-payer-id-1234",
              "gcpProjectID": "my-project",
              "highAvailability": true,
              "id": "instance-abcd1234",
              "instanceLoadStatus": "Quaerat id.",
              "kubernetesDashboardEndpoint": {
                "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
                "deploymentCellID": "hc-12345678"
              },
              "last_modified_at": "2023-01-20T00:00:00Z",
              "maxReplicas": "1",
              "minReplicas": "1",
              "network_type": "PUBLIC",
              "productTierFeatures": {
                "BILLING": {
                  "enabled": false
                },
                "LOGS": {
                  "auth": {
                    "password": "px3c4d5f6g7h8i",
                    "username": "abcd1234"
                  },
                  "enabled": true,
                  "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
                },
                "METRICS": {
                  "enabled": false
                }
              },
              "region": "us-east-1",
              "result_params": {
                "param1": "value1",
                "param2": "value2"
              },
              "serverlessEnabled": true,
              "status": "RUNNING",
              "subscriptionId": "sub-abcd1234"
            },
            {
              "active": true,
              "autoscalingEnabled": true,
              "awsAccountID": "123456789012",
              "backupStatus": {
                "backupPeriodInHours": 2,
                "backupRetentionInDays": 7,
                "earliestRestoreTime": "2021-09-01T00:00:00Z",
                "lastBackupTime": "2021-09-01T00:00:00Z"
              },
              "cloud_provider": "aws",
              "created_at": "2023-01-10T00:00:00Z",
              "createdByUserId": "user-12345678",
              "createdByUserName": "John Doe",
              "currentReplicas": "2",
              "customNetworkDetail": {
                "cidr": "10.177.0.0/16",
                "id": "n-12345678",
                "name": "Prod us-east-1"
              },
              "detailedNetworkTopology": {
                "r-abcd1234": {
                  "allowedIPRanges": [
                    "0.0.0.0/0"
                  ],
                  "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                  "clusterPorts": [
                    3306
                  ],
                  "main": true,
                  "networkingType": "PUBLIC",
                  "nodes": [
                    {
                      "availabilityZone": "us-east-2a",
                      "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                      "healthStatus": "healthy",
                      "id": "primary-0",
                      "ports": [
                        3306
                      ],
                      "status": "RUNNING"
                    }
                  ],
                  "privateNetworkCIDR": "10.0.0.2/24",
                  "privateNetworkID": "n-1234abcd",
                  "publiclyAccessible": true,
                  "resourceKey": "primary",
                  "resourceName": "Primary MySQL Instance"
                }
              },
              "externalPayerId": "external-payer-id-1234",
              "gcpProjectID": "my-project",
              "highAvailability": true,
              "id": "instance-abcd1234",
              "instanceLoadStatus": "Quaerat id.",
              "kubernetesDashboardEndpoint": {
                "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh",
                "deploymentCellID": "hc-12345678"
              },
              "last_modified_at": "2023-01-20T00:00:00Z",
              "maxReplicas": "1",
              "minReplicas": "1",
              "network_type": "PUBLIC",
              "productTierFeatures": {
                "BILLING": {
                  "enabled": false
                },
                "LOGS": {
                  "auth": {
                    "password": "px3c4d5f6g7h8i",
                    "username": "abcd1234"
                  },
                  "enabled": true,
                  "websocketBaseUrl": "wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs"
                },
                "METRICS": {
                  "enabled": false
                }
              },
              "region": "us-east-1",
              "result_params": {
                "param1": "value1",
                "param2": "value2"
              },
              "serverlessEnabled": true,
              "status": "RUNNING",
              "subscriptionId": "sub-abcd1234"
            }
          ]
        },
        "required": [
          "resourceInstances"
        ]
      },
      "ListAllSubscriptionUsersResult": {
        "type": "object",
        "properties": {
          "subscriptionUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionUsers"
            },
            "description": "The users associated with the corresponding subscription",
            "example": [
              {
                "email": "abc@gmail.com",
                "name": "John Doe",
                "roleType": "reader",
                "userId": "user-abcd1234"
              }
            ]
          }
        },
        "example": {
          "subscriptionUsers": [
            {
              "email": "abc@gmail.com",
              "name": "John Doe",
              "roleType": "reader",
              "userId": "user-abcd1234"
            }
          ]
        },
        "required": [
          "subscriptionUsers"
        ]
      },
      "ListAssociatedResourcesResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Infra Config ID to operate on",
            "example": "ic-12345678"
          },
          "resourceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Ad consequuntur quos nihil tempore quas eveniet."
            },
            "description": "The resources associated with the infra config",
            "example": [
              "r-12345678",
              "r-abcdefgh"
            ]
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID",
            "example": "s-12345678"
          }
        },
        "example": {
          "id": "ic-12345678",
          "resourceIds": [
            "r-12345678",
            "r-abcdefgh"
          ],
          "serviceId": "s-12345678"
        },
        "required": [
          "resourceIds",
          "id",
          "serviceId"
        ]
      },
      "ListAuditEventsResult": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribeAuditEventResult"
            },
            "description": "The list of events",
            "example": [
              {
                "eventSource": "Customer, Infra or Maintenance",
                "id": "event-12345678",
                "message": "instance-abcd1234 created",
                "orgId": "org-12345678",
                "orgName": "Acme Corporation",
                "resourceInstanceId": "instance-abcd1234",
                "resourceName": "Galera",
                "subscriptionId": "sub-abcd1234",
                "time": "2023-01-10T00:00:00Z",
                "userId": "user-12345678",
                "userName": "John Doe",
                "workflowFailures": [
                  {
                    "eventTime": "2020-01-01T00:00:00Z",
                    "message": "Bootstrap failed for reason X"
                  },
                  {
                    "eventTime": "2020-01-01T00:01:00Z",
                    "message": "Compute failed for reason Y"
                  }
                ]
              },
              {
                "eventSource": "Customer, Infra or Maintenance",
                "id": "event-12345678",
                "message": "instance-abcd1234 created",
                "orgId": "org-12345678",
                "orgName": "Acme Corporation",
                "resourceInstanceId": "instance-abcd1234",
                "resourceName": "Galera",
                "subscriptionId": "sub-abcd1234",
                "time": "2023-01-10T00:00:00Z",
                "userId": "user-12345678",
                "userName": "John Doe",
                "workflowFailures": [
                  {
                    "eventTime": "2020-01-01T00:00:00Z",
                    "message": "Bootstrap failed for reason X"
                  },
                  {
                    "eventTime": "2020-01-01T00:01:00Z",
                    "message": "Compute failed for reason Y"
                  }
                ]
              }
            ]
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Consequatur dolorem ut alias omnis voluptatem."
            },
            "description": "The list of event IDs",
            "example": [
              "event-12345678"
            ]
          },
          "nextPageToken": {
            "type": "string",
            "example": "Quia hic ut corporis quos."
          }
        },
        "example": {
          "events": [
            {
              "eventSource": "Customer, Infra or Maintenance",
              "id": "event-12345678",
              "message": "instance-abcd1234 created",
              "orgId": "org-12345678",
              "orgName": "Acme Corporation",
              "resourceInstanceId": "instance-abcd1234",
              "resourceName": "Galera",
              "subscriptionId": "sub-abcd1234",
              "time": "2023-01-10T00:00:00Z",
              "userId": "user-12345678",
              "userName": "John Doe",
              "workflowFailures": [
                {
                  "eventTime": "2020-01-01T00:00:00Z",
                  "message": "Bootstrap failed for reason X"
                },
                {
                  "eventTime": "2020-01-01T00:01:00Z",
                  "message": "Compute failed for reason Y"
                }
              ]
            },
            {
              "eventSource": "Customer, Infra or Maintenance",
              "id": "event-12345678",
              "message": "instance-abcd1234 created",
              "orgId": "org-12345678",
              "orgName": "Acme Corporation",
              "resourceInstanceId": "instance-abcd1234",
              "resourceName": "Galera",
              "subscriptionId": "sub-abcd1234",
              "time": "2023-01-10T00:00:00Z",
              "userId": "user-12345678",
              "userName": "John Doe",
              "workflowFailures": [
                {
                  "eventTime": "2020-01-01T00:00:00Z",
                  "message": "Bootstrap failed for reason X"
                },
                {
                  "eventTime": "2020-01-01T00:01:00Z",
                  "message": "Compute failed for reason Y"
                }
              ]
            },
            {
              "eventSource": "Customer, Infra or Maintenance",
              "id": "event-12345678",
              "message": "instance-abcd1234 created",
              "orgId": "org-12345678",
              "orgName": "Acme Corporation",
              "resourceInstanceId": "instance-abcd1234",
              "resourceName": "Galera",
              "subscriptionId": "sub-abcd1234",
              "time": "2023-01-10T00:00:00Z",
              "userId": "user-12345678",
              "userName": "John Doe",
              "workflowFailures": [
                {
                  "eventTime": "2020-01-01T00:00:00Z",
                  "message": "Bootstrap failed for reason X"
                },
                {
                  "eventTime": "2020-01-01T00:01:00Z",
                  "message": "Compute failed for reason Y"
                }
              ]
            },
            {
              "eventSource": "Customer, Infra or Maintenance",
              "id": "event-12345678",
              "message": "instance-abcd1234 created",
              "orgId": "org-12345678",
              "orgName": "Acme Corporation",
              "resourceInstanceId": "instance-abcd1234",
              "resourceName": "Galera",
              "subscriptionId": "sub-abcd1234",
              "time": "2023-01-10T00:00:00Z",
              "userId": "user-12345678",
              "userName": "John Doe",
              "workflowFailures": [
                {
                  "eventTime": "2020-01-01T00:00:00Z",
                  "message": "Bootstrap failed for reason X"
                },
                {
                  "eventTime": "2020-01-01T00:01:00Z",
                  "message": "Compute failed for reason Y"
                }
              ]
            }
          ],
          "ids": [
            "event-12345678"
          ],
          "nextPageToken": "Ad sed nemo molestiae fugit repudiandae."
        },
        "required": [
          "ids",
          "events"
        ]
      },
      "ListBYOAConfigRequestBody": {
        "type": "object",
        "properties": {
          "cloudProviderName": {
            "type": "string",
            "description": "Cloud Provider name to filter on",
            "example": "aws"
          }
        },
        "example": {
          "cloudProviderName": "aws"
        },
        "required": [
          "cloudProviderName"
        ]
      },
      "ListComputeInstanceTypesResult": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "The next page token",
            "example": "next-token"
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Consequatur et id qui eum."
            },
            "description": "The list of compute instance type IDs",
            "example": [
              "m5.xlarge",
              "c5.xlarge",
              "r5.xlarge"
            ]
          }
        },
        "example": {
          "nextPageToken": "next-token",
          "types": [
            "m5.xlarge",
            "c5.xlarge",
            "r5.xlarge"
          ]
        },
        "required": [
          "types"
        ]
      },
      "ListCustomDomainResult": {
        "type": "object",
        "properties": {
          "CustomDomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribeCustomDomainResult"
            },
            "description": "The list of custom domains",
            "example": [
              {
                "customDomain": "mydomain.dev",
                "description": "Description of the domain",
                "id": "cd-12345678",
                "name": "Dev domain",
                "route53Configuration": {
                  "awsAccountID": "123456789012",
                  "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
                },
                "status": "READY",
                "statusMessage": "Account is ready"
              },
              {
                "customDomain": "mydomain.dev",
                "description": "Description of the domain",
                "id": "cd-12345678",
                "name": "Dev domain",
                "route53Configuration": {
                  "awsAccountID": "123456789012",
                  "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
                },
                "status": "READY",
                "statusMessage": "Account is ready"
              },
              {
                "customDomain": "mydomain.dev",
                "description": "Description of the domain",
                "id": "cd-12345678",
                "name": "Dev domain",
                "route53Configuration": {
                  "awsAccountID": "123456789012",
                  "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
                },
                "status": "READY",
                "statusMessage": "Account is ready"
              },
              {
                "customDomain": "mydomain.dev",
                "description": "Description of the domain",
                "id": "cd-12345678",
                "name": "Dev domain",
                "route53Configuration": {
                  "awsAccountID": "123456789012",
                  "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
                },
                "status": "READY",
                "statusMessage": "Account is ready"
              }
            ]
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Velit cupiditate laboriosam hic voluptates reprehenderit saepe."
            },
            "example": [
              "cd-12345678",
              "cd-abcdefgh",
              "cd-1234efgh"
            ]
          },
          "nextPageToken": {
            "type": "string",
            "description": "Token to use for the next page",
            "example": "next-token"
          }
        },
        "example": {
          "CustomDomains": [
            {
              "customDomain": "mydomain.dev",
              "description": "Description of the domain",
              "id": "cd-12345678",
              "name": "Dev domain",
              "route53Configuration": {
                "awsAccountID": "123456789012",
                "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
              },
              "status": "READY",
              "statusMessage": "Account is ready"
            },
            {
              "customDomain": "mydomain.dev",
              "description": "Description of the domain",
              "id": "cd-12345678",
              "name": "Dev domain",
              "route53Configuration": {
                "awsAccountID": "123456789012",
                "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
              },
              "status": "READY",
              "statusMessage": "Account is ready"
            }
          ],
          "ids": [
            "cd-12345678",
            "cd-abcdefgh",
            "cd-1234efgh"
          ],
          "nextPageToken": "next-token"
        }
      },
      "ListCustomNetworksResult": {
        "type": "object",
        "properties": {
          "customNetworks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomNetwork"
            },
            "description": "List of custom networks",
            "example": [
              {
                "cidr": "10.0.0.0/16",
                "cloudProviderName": "aws",
                "cloudProviderRegion": "us-east-1",
                "id": "n-12345678",
                "name": "Prod us-east-1",
                "networkDefinitionType": "Custom",
                "networkFeaturesConfiguration": {
                  "isPrivateLinkEnabled": true
                },
                "networkInstances": [
                  {
                    "awsAccountID": "123456789012",
                    "cloudProviderNativeNetworkId": "vpc-12345678",
                    "gcpProjectID": "my-project",
                    "gcpProjectNumber": "123456789012",
                    "hostClusterID": "hc-12345678"
                  },
                  {
                    "awsAccountID": "123456789012",
                    "cloudProviderNativeNetworkId": "vpc-12345678",
                    "gcpProjectID": "my-project",
                    "gcpProjectNumber": "123456789012",
                    "hostClusterID": "hc-12345678"
                  },
                  {
                    "awsAccountID": "123456789012",
                    "cloudProviderNativeNetworkId": "vpc-12345678",
                    "gcpProjectID": "my-project",
                    "gcpProjectNumber": "123456789012",
                    "hostClusterID": "hc-12345678"
                  },
                  {
                    "awsAccountID": "123456789012",
                    "cloudProviderNativeNetworkId": "vpc-12345678",
                    "gcpProjectID": "my-project",
                    "gcpProjectNumber": "123456789012",
                    "hostClusterID": "hc-12345678"
                  }
                ]
              },
              {
                "cidr": "10.0.0.0/16",
                "cloudProviderName": "aws",
                "cloudProviderRegion": "us-east-1",
                "id": "n-12345678",
                "name": "Prod us-east-1",
                "networkDefinitionType": "Custom",
                "networkFeaturesConfiguration": {
                  "isPrivateLinkEnabled": true
                },
                "networkInstances": [
                  {
                    "awsAccountID": "123456789012",
                    "cloudProviderNativeNetworkId": "vpc-12345678",
                    "gcpProjectID": "my-project",
                    "gcpProjectNumber": "123456789012",
                    "hostClusterID": "hc-12345678"
                  },
                  {
                    "awsAccountID": "123456789012",
                    "cloudProviderNativeNetworkId": "vpc-12345678",
                    "gcpProjectID": "my-project",
                    "gcpProjectNumber": "123456789012",
                    "hostClusterID": "hc-12345678"
                  },
                  {
                    "awsAccountID": "123456789012",
                    "cloudProviderNativeNetworkId": "vpc-12345678",
                    "gcpProjectID": "my-project",
                    "gcpProjectNumber": "123456789012",
                    "hostClusterID": "hc-12345678"
                  },
                  {
                    "awsAccountID": "123456789012",
                    "cloudProviderNativeNetworkId": "vpc-12345678",
                    "gcpProjectID": "my-project",
                    "gcpProjectNumber": "123456789012",
                    "hostClusterID": "hc-12345678"
                  }
                ]
              }
            ]
          }
        },
        "example": {
          "customNetworks": [
            {
              "cidr": "10.0.0.0/16",
              "cloudProviderName": "aws",
              "cloudProviderRegion": "us-east-1",
              "id": "n-12345678",
              "name": "Prod us-east-1",
              "networkDefinitionType": "Custom",
              "networkFeaturesConfiguration": {
                "isPrivateLinkEnabled": true
              },
              "networkInstances": [
                {
                  "awsAccountID": "123456789012",
                  "cloudProviderNativeNetworkId": "vpc-12345678",
                  "gcpProjectID": "my-project",
                  "gcpProjectNumber": "123456789012",
                  "hostClusterID": "hc-12345678"
                },
                {
                  "awsAccountID": "123456789012",
                  "cloudProviderNativeNetworkId": "vpc-12345678",
                  "gcpProjectID": "my-project",
                  "gcpProjectNumber": "123456789012",
                  "hostClusterID": "hc-12345678"
                },
                {
                  "awsAccountID": "123456789012",
                  "cloudProviderNativeNetworkId": "vpc-12345678",
                  "gcpProjectID": "my-project",
                  "gcpProjectNumber": "123456789012",
                  "hostClusterID": "hc-12345678"
                },
                {
                  "awsAccountID": "123456789012",
                  "cloudProviderNativeNetworkId": "vpc-12345678",
                  "gcpProjectID": "my-project",
                  "gcpProjectNumber": "123456789012",
                  "hostClusterID": "hc-12345678"
                }
              ]
            },
            {
              "cidr": "10.0.0.0/16",
              "cloudProviderName": "aws",
              "cloudProviderRegion": "us-east-1",
              "id": "n-12345678",
              "name": "Prod us-east-1",
              "networkDefinitionType": "Custom",
              "networkFeaturesConfiguration": {
                "isPrivateLinkEnabled": true
              },
              "networkInstances": [
                {
                  "awsAccountID": "123456789012",
                  "cloudProviderNativeNetworkId": "vpc-12345678",
                  "gcpProjectID": "my-project",
                  "gcpProjectNumber": "123456789012",
                  "hostClusterID": "hc-12345678"
                },
                {
                  "awsAccountID": "123456789012",
                  "cloudProviderNativeNetworkId": "vpc-12345678",
                  "gcpProjectID": "my-project",
                  "gcpProjectNumber": "123456789012",
                  "hostClusterID": "hc-12345678"
                },
                {
                  "awsAccountID": "123456789012",
                  "cloudProviderNativeNetworkId": "vpc-12345678",
                  "gcpProjectID": "my-project",
                  "gcpProjectNumber": "123456789012",
                  "hostClusterID": "hc-12345678"
                },
                {
                  "awsAccountID": "123456789012",
                  "cloudProviderNativeNetworkId": "vpc-12345678",
                  "gcpProjectID": "my-project",
                  "gcpProjectNumber": "123456789012",
                  "hostClusterID": "hc-12345678"
                }
              ]
            }
          ]
        },
        "required": [
          "customNetworks"
        ]
      },
      "ListDependentResourcesResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the resource",
            "example": "r-12345678"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Pariatur sed et veritatis possimus."
            },
            "description": "List of dependent resource IDs",
            "example": [
              "r-12345678",
              "r-abcdefgh",
              "r-1234abcd"
            ]
          },
          "nextPageToken": {
            "type": "string",
            "description": "Token to use for the next page",
            "example": "next-token"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID that this API bundle belongs to",
            "example": "s-12345678"
          }
        },
        "example": {
          "id": "r-12345678",
          "ids": [
            "r-12345678",
            "r-abcdefgh",
            "r-1234abcd"
          ],
          "nextPageToken": "next-token",
          "serviceId": "s-12345678"
        },
        "required": [
          "ids"
        ]
      },
      "ListFilesResult": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileMetadata"
            },
            "description": "List of files",
            "example": [
              {
                "description": "A file to store the configuration for the resource",
                "fileId": "f-12345678",
                "mountPath": "/etc/config",
                "name": "file.txt",
                "size": 1234,
                "type": "Config",
                "uploadTime": "2023-01-10T00:00:00Z",
                "uploadedBy": "user"
              },
              {
                "description": "A file to store the configuration for the resource",
                "fileId": "f-12345678",
                "mountPath": "/etc/config",
                "name": "file.txt",
                "size": 1234,
                "type": "Config",
                "uploadTime": "2023-01-10T00:00:00Z",
                "uploadedBy": "user"
              },
              {
                "description": "A file to store the configuration for the resource",
                "fileId": "f-12345678",
                "mountPath": "/etc/config",
                "name": "file.txt",
                "size": 1234,
                "type": "Config",
                "uploadTime": "2023-01-10T00:00:00Z",
                "uploadedBy": "user"
              },
              {
                "description": "A file to store the configuration for the resource",
                "fileId": "f-12345678",
                "mountPath": "/etc/config",
                "name": "file.txt",
                "size": 1234,
                "type": "Config",
                "uploadTime": "2023-01-10T00:00:00Z",
                "uploadedBy": "user"
              }
            ]
          }
        },
        "example": {
          "files": [
            {
              "description": "A file to store the configuration for the resource",
              "fileId": "f-12345678",
              "mountPath": "/etc/config",
              "name": "file.txt",
              "size": 1234,
              "type": "Config",
              "uploadTime": "2023-01-10T00:00:00Z",
              "uploadedBy": "user"
            },
            {
              "description": "A file to store the configuration for the resource",
              "fileId": "f-12345678",
              "mountPath": "/etc/config",
              "name": "file.txt",
              "size": 1234,
              "type": "Config",
              "uploadTime": "2023-01-10T00:00:00Z",
              "uploadedBy": "user"
            }
          ]
        },
        "required": [
          "files"
        ]
      },
      "ListHelmPackagesResult": {
        "type": "object",
        "properties": {
          "helmPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelmPackage"
            },
            "description": "List of Helm packages",
            "example": [
              {
                "chartName": "my-chart",
                "chartRepoName": "my-repo",
                "chartRepoUrl": "https://my-repo.com",
                "chartValues": {
                  "key1": "value1",
                  "key2": 3,
                  "key3": {
                    "key4": "value4"
                  }
                },
                "chartVersion": "1.0.0",
                "namespace": "default",
                "password": "my-password",
                "username": "my-user"
              },
              {
                "chartName": "my-chart",
                "chartRepoName": "my-repo",
                "chartRepoUrl": "https://my-repo.com",
                "chartValues": {
                  "key1": "value1",
                  "key2": 3,
                  "key3": {
                    "key4": "value4"
                  }
                },
                "chartVersion": "1.0.0",
                "namespace": "default",
                "password": "my-password",
                "username": "my-user"
              },
              {
                "chartName": "my-chart",
                "chartRepoName": "my-repo",
                "chartRepoUrl": "https://my-repo.com",
                "chartValues": {
                  "key1": "value1",
                  "key2": 3,
                  "key3": {
                    "key4": "value4"
                  }
                },
                "chartVersion": "1.0.0",
                "namespace": "default",
                "password": "my-password",
                "username": "my-user"
              }
            ]
          }
        },
        "example": {
          "helmPackages": [
            {
              "chartName": "my-chart",
              "chartRepoName": "my-repo",
              "chartRepoUrl": "https://my-repo.com",
              "chartValues": {
                "key1": "value1",
                "key2": 3,
                "key3": {
                  "key4": "value4"
                }
              },
              "chartVersion": "1.0.0",
              "namespace": "default",
              "password": "my-password",
              "username": "my-user"
            },
            {
              "chartName": "my-chart",
              "chartRepoName": "my-repo",
              "chartRepoUrl": "https://my-repo.com",
              "chartValues": {
                "key1": "value1",
                "key2": 3,
                "key3": {
                  "key4": "value4"
                }
              },
              "chartVersion": "1.0.0",
              "namespace": "default",
              "password": "my-password",
              "username": "my-user"
            },
            {
              "chartName": "my-chart",
              "chartRepoName": "my-repo",
              "chartRepoUrl": "https://my-repo.com",
              "chartValues": {
                "key1": "value1",
                "key2": 3,
                "key3": {
                  "key4": "value4"
                }
              },
              "chartVersion": "1.0.0",
              "namespace": "default",
              "password": "my-password",
              "username": "my-user"
            }
          ]
        }
      },
      "ListIdentityProvidersResult": {
        "type": "object",
        "properties": {
          "identityProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribeIdentityProviderResult"
            },
            "description": "The list of Identity Providers",
            "example": [
              {
                "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                "clientSecret": "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",
                "id": "idp-12345678",
                "identityProviderName": "Google",
                "status": "Ready"
              },
              {
                "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                "clientSecret": "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",
                "id": "idp-12345678",
                "identityProviderName": "Google",
                "status": "Ready"
              },
              {
                "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
                "clientSecret": "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",
                "id": "idp-12345678",
                "identityProviderName": "Google",
                "status": "Ready"
              }
            ]
          }
        },
        "example": {
          "identityProviders": [
            {
              "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
              "clientSecret": "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",
              "id": "idp-12345678",
              "identityProviderName": "Google",
              "status": "Ready"
            },
            {
              "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
              "clientSecret": "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",
              "id": "idp-12345678",
              "identityProviderName": "Google",
              "status": "Ready"
            }
          ]
        },
        "required": [
          "identityProviders"
        ]
      },
      "ListInputParametersResult": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Itaque libero quod."
            },
            "description": "List of input parameter IDs",
            "example": [
              "ip-12345678",
              "ip-12345679"
            ]
          },
          "inputParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribeInputParameterResult"
            },
            "description": "The input parameters",
            "example": [
              {
                "defaultValue": "true",
                "dependentResourceId": "r-12345678",
                "description": "Non corporis ab id magnam.",
                "hasOptions": true,
                "id": "var-12345678",
                "isList": true,
                "key": "1",
                "labeledOptions": {
                  "large": "t3.xlarge",
                  "medium": "t3.large",
                  "small": "t3.medium"
                },
                "limits": {
                  "max": "Blanditiis voluptas.",
                  "maxLength": "Et error sequi et dignissimos illo.",
                  "min": "Et consequatur dolor est saepe velit voluptas.",
                  "minLength": "Ad suscipit aut ut suscipit voluptatem."
                },
                "modifiable": true,
                "name": "13k",
                "options": [
                  "true",
                  "false"
                ],
                "required": true,
                "resourceId": "r-12345678",
                "serviceId": "s-12345678",
                "type": "Aut vitae."
              },
              {
                "defaultValue": "true",
                "dependentResourceId": "r-12345678",
                "description": "Non corporis ab id magnam.",
                "hasOptions": true,
                "id": "var-12345678",
                "isList": true,
                "key": "1",
                "labeledOptions": {
                  "large": "t3.xlarge",
                  "medium": "t3.large",
                  "small": "t3.medium"
                },
                "limits": {
                  "max": "Blanditiis voluptas.",
                  "maxLength": "Et error sequi et dignissimos illo.",
                  "min": "Et consequatur dolor est saepe velit voluptas.",
                  "minLength": "Ad suscipit aut ut suscipit voluptatem."
                },
                "modifiable": true,
                "name": "13k",
                "options": [
                  "true",
                  "false"
                ],
                "required": true,
                "resourceId": "r-12345678",
                "serviceId": "s-12345678",
                "type": "Aut vitae."
              },
              {
                "defaultValue": "true",
                "dependentResourceId": "r-12345678",
                "description": "Non corporis ab id magnam.",
                "hasOptions": true,
                "id": "var-12345678",
                "isList": true,
                "key": "1",
                "labeledOptions": {
                  "large": "t3.xlarge",
                  "medium": "t3.large",
                  "small": "t3.medium"
                },
                "limits": {
                  "max": "Blanditiis voluptas.",
                  "maxLength": "Et error sequi et dignissimos illo.",
                  "min": "Et consequatur dolor est saepe velit voluptas.",
                  "minLength": "Ad suscipit aut ut suscipit voluptatem."
                },
                "modifiable": true,
                "name": "13k",
                "options": [
                  "true",
                  "false"
                ],
                "required": true,
                "resourceId": "r-12345678",
                "serviceId": "s-12345678",
                "type": "Aut vitae."
              },
              {
                "defaultValue": "true",
                "dependentResourceId": "r-12345678",
                "description": "Non corporis ab id magnam.",
                "hasOptions": true,
                "id": "var-12345678",
                "isList": true,
                "key": "1",
                "labeledOptions": {
                  "large": "t3.xlarge",
                  "medium": "t3.large",
                  "small": "t3.medium"
                },
                "limits": {
                  "max": "Blanditiis voluptas.",
                  "maxLength": "Et error sequi et dignissimos illo.",
                  "min": "Et consequatur dolor est saepe velit voluptas.",
                  "minLength": "Ad suscipit aut ut suscipit voluptatem."
                },
                "modifiable": true,
                "name": "13k",
                "options": [
                  "true",
                  "false"
                ],
                "required": true,
                "resourceId": "r-12345678",
                "serviceId": "s-12345678",
                "type": "Aut vitae."
              }
            ]
          },
          "nextPageToken": {
            "type": "string",
            "description": "Token to retrieve the next page of results",
            "example": "next-token"
          }
        },
        "example": {
          "ids": [
            "ip-12345678",
            "ip-12345679"
          ],
          "inputParameters": [
            {
              "defaultValue": "true",
              "dependentResourceId": "r-12345678",
              "description": "Non corporis ab id magnam.",
              "hasOptions": true,
              "id": "var-12345678",
              "isList": true,
              "key": "1",
              "labeledOptions": {
                "large": "t3.xlarge",
                "medium": "t3.large",
                "small": "t3.medium"
              },
              "limits": {
                "max": "Blanditiis voluptas.",
                "maxLength": "Et error sequi et dignissimos illo.",
                "min": "Et consequatur dolor est saepe velit voluptas.",
                "minLength": "Ad suscipit aut ut suscipit voluptatem."
              },
              "modifiable": true,
              "name": "13k",
              "options": [
                "true",
                "false"
              ],
              "required": true,
              "resourceId": "r-12345678",
              "serviceId": "s-12345678",
              "type": "Aut vitae."
            },
            {
              "defaultValue": "true",
              "dependentResourceId": "r-12345678",
              "description": "Non corporis ab id magnam.",
              "hasOptions": true,
              "id": "var-12345678",
              "isList": true,
              "key": "1",
              "labeledOptions": {
                "large": "t3.xlarge",
                "medium": "t3.large",
                "small": "t3.medium"
              },
              "limits": {
                "max": "Blanditiis voluptas.",
                "maxLength": "Et error sequi et dignissimos illo.",
                "min": "Et consequatur dolor est saepe velit voluptas.",
                "minLength": "Ad suscipit aut ut suscipit voluptatem."
              },
              "modifiable": true,
              "name": "13k",
              "options": [
                "true",
                "false"
              ],
              "required": true,
              "resourceId": "r-12345678",
              "serviceId": "s-12345678",
              "type": "Aut vitae."
            },
            {
              "defaultValue": "true",
              "dependentResourceId": "r-12345678",
              "description": "Non corporis ab id magnam.",
              "hasOptions": true,
              "id": "var-12345678",
              "isList": true,
              "key": "1",
              "labeledOptions": {
                "large": "t3.xlarge",
                "medium": "t3.large",
                "small": "t3.medium"
              },
              "limits": {
                "max": "Blanditiis voluptas.",
                "maxLength": "Et error sequi et dignissimos illo.",
                "min": "Et consequatur dolor est saepe velit voluptas.",
                "minLength": "Ad suscipit aut ut suscipit voluptatem."
              },
              "modifiable": true,
              "name": "13k",
              "options": [
                "true",
                "false"
              ],
              "required": true,
              "resourceId": "r-12345678",
              "serviceId": "s-12345678",
              "type": "Aut vitae."
            }
          ],
          "nextPageToken": "next-token"
        },
        "required": [
          "ids"
        ]
      },
      "ListInvoicesResult": {
        "type": "object",
        "properties": {
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            },
            "description": "List of Invoices",
            "example": [
              {
                "currency": "USD",
                "invoiceDate": "2021-01-01T00:00:00.000Z",
                "invoiceId": "123MyCoolCorp980-2021-01-01-1234567890",
                "invoicePaymentTerm": "30",
                "invoiceStatus": "Open",
                "invoiceUrl": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf",
                "taxAmount": 10,
                "totalAmount": 110,
                "totalAmountWithoutTax": 100
              },
              {
                "currency": "USD",
                "invoiceDate": "2021-01-01T00:00:00.000Z",
                "invoiceId": "123MyCoolCorp980-2021-01-01-1234567890",
                "invoicePaymentTerm": "30",
                "invoiceStatus": "Open",
                "invoiceUrl": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf",
                "taxAmount": 10,
                "totalAmount": 110,
                "totalAmountWithoutTax": 100
              },
              {
                "currency": "USD",
                "invoiceDate": "2021-01-01T00:00:00.000Z",
                "invoiceId": "123MyCoolCorp980-2021-01-01-1234567890",
                "invoicePaymentTerm": "30",
                "invoiceStatus": "Open",
                "invoiceUrl": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf",
                "taxAmount": 10,
                "totalAmount": 110,
                "totalAmountWithoutTax": 100
              },
              {
                "currency": "USD",
                "invoiceDate": "2021-01-01T00:00:00.000Z",
                "invoiceId": "123MyCoolCorp980-2021-01-01-1234567890",
                "invoicePaymentTerm": "30",
                "invoiceStatus": "Open",
                "invoiceUrl": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf",
                "taxAmount": 10,
                "totalAmount": 110,
                "totalAmountWithoutTax": 100
              }
            ]
          }
        },
        "example": {
          "invoices": [
            {
              "currency": "USD",
              "invoiceDate": "2021-01-01T00:00:00.000Z",
              "invoiceId": "123MyCoolCorp980-2021-01-01-1234567890",
              "invoicePaymentTerm": "30",
              "invoiceStatus": "Open",
              "invoiceUrl": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf",
              "taxAmount": 10,
              "totalAmount": 110,
              "totalAmountWithoutTax": 100
            },
            {
              "currency": "USD",
              "invoiceDate": "2021-01-01T00:00:00.000Z",
              "invoiceId": "123MyCoolCorp980-2021-01-01-1234567890",
              "invoicePaymentTerm": "30",
              "invoiceStatus": "Open",
              "invoiceUrl": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf",
              "taxAmount": 10,
              "totalAmount": 110,
              "totalAmountWithoutTax": 100
            },
            {
              "currency": "USD",
              "invoiceDate": "2021-01-01T00:00:00.000Z",
              "invoiceId": "123MyCoolCorp980-2021-01-01-1234567890",
              "invoicePaymentTerm": "30",
              "invoiceStatus": "Open",
              "invoiceUrl": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf",
              "taxAmount": 10,
              "totalAmount": 110,
              "totalAmountWithoutTax": 100
            },
            {
              "currency": "USD",
              "invoiceDate": "2021-01-01T00:00:00.000Z",
              "invoiceId": "123MyCoolCorp980-2021-01-01-1234567890",
              "invoicePaymentTerm": "30",
              "invoiceStatus": "Open",
              "invoiceUrl": "https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf",
              "taxAmount": 10,
              "totalAmount": 110,
              "totalAmountWithoutTax": 100
            }
          ]
        }
      },
      "ListLimitRequestBody": {
        "type": "object",
        "properties": {
          "family": {
            "type": "string",
            "description": "Limit family",
            "example": "COMPUTE_INFRA"
          }
        },
        "example": {
          "family": "COMPUTE_INFRA"
        },
        "required": [
          "family"
        ]
      },
      "ListLimitResult": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Sit sapiente sed totam minus maxime."
            },
            "description": "List of limit keys",
            "example": [
              "MAX_VIRTUAL_CORES_PER_RESOURCE"
            ]
          },
          "nextPageToken": {
            "type": "string",
            "description": "Token to use for the next page",
            "example": "next-token"
          }
        },
        "example": {
          "keys": [
            "MAX_VIRTUAL_CORES_PER_RESOURCE"
          ],
          "nextPageToken": "next-token"
        },
        "required": [
          "keys"
        ]
      },
      "ListOutputParametersResult": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Odio distinctio quos et minima."
            },
            "description": "The IDs of the output parameters",
            "example": [
              "op-12345678"
            ]
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to use for the next page of results",
            "example": "next-token"
          },
          "outputParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribeOutputParameterResult"
            },
            "description": "The output parameters",
            "example": [
              {
                "description": "Username of the user created in the target system",
                "id": "op-12345678",
                "key": "username",
                "name": "Username",
                "resourceId": "r-12345678",
                "serviceId": "s-12345678",
                "value": "johndoe",
                "valueRef": "$var.username",
                "valueType": "Sit ab veritatis sed recusandae quo."
              },
              {
                "description": "Username of the user created in the target system",
                "id": "op-12345678",
                "key": "username",
                "name": "Username",
                "resourceId": "r-12345678",
                "serviceId": "s-12345678",
                "value": "johndoe",
                "valueRef": "$var.username",
                "valueType": "Sit ab veritatis sed recusandae quo."
              }
            ]
          }
        },
        "example": {
          "ids": [
            "op-12345678"
          ],
          "nextPageToken": "next-token",
          "outputParameters": [
            {
              "description": "Username of the user created in the target system",
              "id": "op-12345678",
              "key": "username",
              "name": "Username",
              "resourceId": "r-12345678",
              "serviceId": "s-12345678",
              "value": "johndoe",
              "valueRef": "$var.username",
              "valueType": "Sit ab veritatis sed recusandae quo."
            },
            {
              "description": "Username of the user created in the target system",
              "id": "op-12345678",
              "key": "username",
              "name": "Username",
              "resourceId": "r-12345678",
              "serviceId": "s-12345678",
              "value": "johndoe",
              "valueRef": "$var.username",
              "valueType": "Sit ab veritatis sed recusandae quo."
            }
          ]
        },
        "required": [
          "ids"
        ]
      },
      "ListProductTierBillingPlanResult": {
        "type": "object",
        "properties": {
          "billingPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingPlan"
            },
            "description": "List of product tier billing plans",
            "example": [
              {
                "allowCreatesWhenPaymentNotConfigured": true,
                "id": "bp-12345678",
                "maxNumberofInstances": 5,
                "planName": "STARTER",
                "pricing": {
                  "cpuCoreHours": "0.001",
                  "memoryGiBHours": "0.0001",
                  "storageGiBHours": "0.0001"
                },
                "productTierId": "pt-12345678",
                "serviceId": "s-12345678"
              },
              {
                "allowCreatesWhenPaymentNotConfigured": true,
                "id": "bp-12345678",
                "maxNumberofInstances": 5,
                "planName": "STARTER",
                "pricing": {
                  "cpuCoreHours": "0.001",
                  "memoryGiBHours": "0.0001",
                  "storageGiBHours": "0.0001"
                },
                "productTierId": "pt-12345678",
                "serviceId": "s-12345678"
              },
              {
                "allowCreatesWhenPaymentNotConfigured": true,
                "id": "bp-12345678",
                "maxNumberofInstances": 5,
                "planName": "STARTER",
                "pricing": {
                  "cpuCoreHours": "0.001",
                  "memoryGiBHours": "0.0001",
                  "storageGiBHours": "0.0001"
                },
                "productTierId": "pt-12345678",
                "serviceId": "s-12345678"
              },
              {
                "allowCreatesWhenPaymentNotConfigured": true,
                "id": "bp-12345678",
                "maxNumberofInstances": 5,
                "planName": "STARTER",
                "pricing": {
                  "cpuCoreHours": "0.001",
                  "memoryGiBHours": "0.0001",
                  "storageGiBHours": "0.0001"
                },
                "productTierId": "pt-12345678",
                "serviceId": "s-12345678"
              }
            ]
          }
        },
        "example": {
          "billingPlans": [
            {
              "allowCreatesWhenPaymentNotConfigured": true,
              "id": "bp-12345678",
              "maxNumberofInstances": 5,
              "planName": "STARTER",
              "pricing": {
                "cpuCoreHours": "0.001",
                "memoryGiBHours": "0.0001",
                "storageGiBHours": "0.0001"
              },
              "productTierId": "pt-12345678",
              "serviceId": "s-12345678"
            },
            {
              "allowCreatesWhenPaymentNotConfigured": true,
              "id": "bp-12345678",
              "maxNumberofInstances": 5,
              "planName": "STARTER",
              "pricing": {
                "cpuCoreHours": "0.001",
                "memoryGiBHours": "0.0001",
                "storageGiBHours": "0.0001"
              },
              "productTierId": "pt-12345678",
              "serviceId": "s-12345678"
            },
            {
              "allowCreatesWhenPaymentNotConfigured": true,
              "id": "bp-12345678",
              "maxNumberofInstances": 5,
              "planName": "STARTER",
              "pricing": {
                "cpuCoreHours": "0.001",
                "memoryGiBHours": "0.0001",
                "storageGiBHours": "0.0001"
              },
              "productTierId": "pt-12345678",
              "serviceId": "s-12345678"
            }
          ]
        },
        "required": [
          "billingPlans"
        ]
      },
      "ListResourceCapabilitiesResponse": {
        "type": "object",
        "properties": {
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCapability"
            },
            "description": "The configurationParameters to enable capabilities for the resource",
            "example": [
              {
                "capability": "SERVERLESS",
                "configuration": {
                  "EnableAutoStop": true,
                  "MinimumNodesInPool": 5,
                  "PortsMappingProxyConfig": {
                    "MaxNumberOfClustersPerProxyInstance": 50,
                    "NumberOfPortsPerCluster": 4
                  },
                  "ProxyId": "r-123456",
                  "ReferenceProxyKey": "resource-proxy",
                  "TargetPort": 5432
                }
              },
              {
                "capability": "SERVERLESS",
                "configuration": {
                  "EnableAutoStop": true,
                  "MinimumNodesInPool": 5,
                  "PortsMappingProxyConfig": {
                    "MaxNumberOfClustersPerProxyInstance": 50,
                    "NumberOfPortsPerCluster": 4
                  },
                  "ProxyId": "r-123456",
                  "ReferenceProxyKey": "resource-proxy",
                  "TargetPort": 5432
                }
              },
              {
                "capability": "SERVERLESS",
                "configuration": {
                  "EnableAutoStop": true,
                  "MinimumNodesInPool": 5,
                  "PortsMappingProxyConfig": {
                    "MaxNumberOfClustersPerProxyInstance": 50,
                    "NumberOfPortsPerCluster": 4
                  },
                  "ProxyId": "r-123456",
                  "ReferenceProxyKey": "resource-proxy",
                  "TargetPort": 5432
                }
              }
            ]
          }
        },
        "example": {
          "capabilities": [
            {
              "capability": "SERVERLESS",
              "configuration": {
                "EnableAutoStop": true,
                "MinimumNodesInPool": 5,
                "PortsMappingProxyConfig": {
                  "MaxNumberOfClustersPerProxyInstance": 50,
                  "NumberOfPortsPerCluster": 4
                },
                "ProxyId": "r-123456",
                "ReferenceProxyKey": "resource-proxy",
                "TargetPort": 5432
              }
            },
            {
              "capability": "SERVERLESS",
              "configuration": {
                "EnableAutoStop": true,
                "MinimumNodesInPool": 5,
                "PortsMappingProxyConfig": {
                  "MaxNumberOfClustersPerProxyInstance": 50,
                  "NumberOfPortsPerCluster": 4
                },
                "ProxyId": "r-123456",
                "ReferenceProxyKey": "resource-proxy",
                "TargetPort": 5432
              }
            },
            {
              "capability": "SERVERLESS",
              "configuration": {
                "EnableAutoStop": true,
                "MinimumNodesInPool": 5,
                "PortsMappingProxyConfig": {
                  "MaxNumberOfClustersPerProxyInstance": 50,
                  "NumberOfPortsPerCluster": 4
                },
                "ProxyId": "r-123456",
                "ReferenceProxyKey": "resource-proxy",
                "TargetPort": 5432
              }
            },
            {
              "capability": "SERVERLESS",
              "configuration": {
                "EnableAutoStop": true,
                "MinimumNodesInPool": 5,
                "PortsMappingProxyConfig": {
                  "MaxNumberOfClustersPerProxyInstance": 50,
                  "NumberOfPortsPerCluster": 4
                },
                "ProxyId": "r-123456",
                "ReferenceProxyKey": "resource-proxy",
                "TargetPort": 5432
              }
            }
          ]
        }
      },
      "ListResourceInstanceSnapshotsResult": {
        "type": "object",
        "properties": {
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceSnapshot"
            },
            "description": "The instance snapshots",
            "example": [
              {
                "completeTime": "2021-09-01T00:00:00Z",
                "createdTime": "2021-09-01T00:00:00Z",
                "encrypted": true,
                "progress": 100,
                "snapshotId": "instance-ss-12345678",
                "status": "completed"
              }
            ]
          }
        },
        "example": {
          "snapshots": [
            {
              "completeTime": "2021-09-01T00:00:00Z",
              "createdTime": "2021-09-01T00:00:00Z",
              "encrypted": true,
              "progress": 100,
              "snapshotId": "instance-ss-12345678",
              "status": "completed"
            }
          ]
        }
      },
      "ListResourcesResult": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Quod voluptatum minima dolores vel."
            },
            "description": "List of resource IDs",
            "example": [
              "r-12345678",
              "r-abcdefgh",
              "r-1234abcd"
            ]
          },
          "nextPageToken": {
            "type": "string",
            "description": "Token to use for the next page",
            "example": "next-token"
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribeResourceResult"
            },
            "description": "List of resources",
            "example": [
              {
                "actionHooks": [
                  {
                    "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                    "scope": "CLUSTER",
                    "type": "INIT"
                  }
                ],
                "additionalSecurityContext": {
                  "AddCapabilities": [
                    "CAP_NET_ADMIN",
                    "CAP_NET_RAW"
                  ],
                  "DropCapabilities": [
                    "CAP_NET_ADMIN",
                    "CAP_NET_RAW"
                  ],
                  "SupplementalGroupIDs": [
                    1001,
                    999
                  ]
                },
                "backupConfiguration": {
                  "backupPeriodInHours": 24,
                  "backupRetentionInDays": 7
                },
                "blobStorageConfiguration": {
                  "GCSConfiguration": {},
                  "S3Configuration": {}
                },
                "capabilities": [
                  {
                    "capability": "SERVERLESS",
                    "configuration": {
                      "EnableAutoStop": true,
                      "MinimumNodesInPool": 5,
                      "PortsMappingProxyConfig": {
                        "MaxNumberOfClustersPerProxyInstance": 50,
                        "NumberOfPortsPerCluster": 4
                      },
                      "ProxyId": "r-123456",
                      "ReferenceProxyKey": "resource-proxy",
                      "TargetPort": 5432
                    }
                  },
                  {
                    "capability": "SERVERLESS",
                    "configuration": {
                      "EnableAutoStop": true,
                      "MinimumNodesInPool": 5,
                      "PortsMappingProxyConfig": {
                        "MaxNumberOfClustersPerProxyInstance": 50,
                        "NumberOfPortsPerCluster": 4
                      },
                      "ProxyId": "r-123456",
                      "ReferenceProxyKey": "resource-proxy",
                      "TargetPort": 5432
                    }
                  },
                  {
                    "capability": "SERVERLESS",
                    "configuration": {
                      "EnableAutoStop": true,
                      "MinimumNodesInPool": 5,
                      "PortsMappingProxyConfig": {
                        "MaxNumberOfClustersPerProxyInstance": 50,
                        "NumberOfPortsPerCluster": 4
                      },
                      "ProxyId": "r-123456",
                      "ReferenceProxyKey": "resource-proxy",
                      "TargetPort": 5432
                    }
                  }
                ],
                "customLabels": {
                  "key": "value"
                },
                "customSysCTLs": {
                  "net.ipv4.tcp_syncookies": "1"
                },
                "customULimits": [
                  {
                    "ULimitsName": "NoProc",
                    "ULimitsType": "Soft",
                    "ULimitsValue": 1000
                  },
                  {
                    "ULimitsName": "NoFile",
                    "ULimitsType": "Hard",
                    "ULimitsValue": 2048
                  }
                ],
                "dependencies": [
                  {
                    "parameterMap": {
                      "clusterId": "writerId",
                      "clusterOrg": "userDatabase"
                    },
                    "resourceId": "r-12345678"
                  },
                  {
                    "parameterMap": {
                      "clusterId": "readerId",
                      "clusterOrg": "userDatabase"
                    },
                    "resourceId": "r-abcdef12"
                  }
                ],
                "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                "environmentVariables": [
                  {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "value": "password"
                  }
                ],
                "fileSystemConfiguration": {
                  "EFSFileSystemConfiguration": {
                    "PerformanceMode": "generalPurpose|maxIO",
                    "ProvisionedThroughputInMibps": 125,
                    "ThroughputMode": "provisioned|bursting|elastic"
                  }
                },
                "helmChartConfiguration": {
                  "chartName": "my-chart",
                  "chartRepoName": "my-repo",
                  "chartRepoUrl": "https://my-repo.com",
                  "chartValues": {
                    "key1": "value1",
                    "key2": 3,
                    "key3": {
                      "key4": "value4"
                    }
                  },
                  "chartVersion": "1.0.0",
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "password": "my-password",
                  "runtimeConfiguration": {
                    "disableHooks": true,
                    "recreate": true,
                    "resetThenReuseValues": true,
                    "resetValues": true,
                    "reuseValues": true,
                    "skipCRDs": true,
                    "timeoutNanos": 1000000000,
                    "upgradeCRDs": true,
                    "wait": true,
                    "waitForJobs": true
                  },
                  "username": "my-user"
                },
                "id": "r-12345678",
                "imageConfigId": "imgc-12345678",
                "infraConfigId": "ic-12345678",
                "internal": false,
                "isDeprecated": false,
                "key": "galera",
                "kustomizeConfiguration": {
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "gitConfiguration": {
                    "accessToken": "my-token",
                    "referenceName": "tags/v1.0.0",
                    "repositoryUrl": "https://github.com/username/myrepo",
                    "userName": "my-user"
                  },
                  "helmChartDependencies": [
                    {
                      "chartName": "cert-manager",
                      "chartVersion": "v1.5.3"
                    },
                    {
                      "chartName": "nginx-ingress",
                      "chartVersion": "v0.48.1"
                    },
                    {
                      "chartName": "external-dns",
                      "chartVersion": "v0.7.0"
                    },
                    {
                      "chartName": "cnpg-operator",
                      "chartVersion": "v0.23.1"
                    }
                  ],
                  "kustomizePath": "/kustomize"
                },
                "l4LoadBalancerConfiguration": {
                  "ingressPortConfiguration": [
                    {
                      "associatedResourceIDs": [
                        "r-12345678",
                        "r-abcdef12"
                      ],
                      "backendPort": 8080,
                      "ingressPort": 1234
                    },
                    {
                      "associatedResourceIDs": [
                        "r-12345678",
                        "r-abcdef12"
                      ],
                      "backendPort": 8081,
                      "ingressPort": 5678
                    },
                    {
                      "associatedResourceIDs": [
                        "r-vwxybz12",
                        "r-poij122v"
                      ],
                      "backendPort": 8082,
                      "ingressPort": 9012
                    }
                  ]
                },
                "l7LoadBalancerConfiguration": {
                  "paths": [
                    {
                      "associatedResourceID": "r-12345678",
                      "path": "/path",
                      "port": 8080
                    }
                  ]
                },
                "name": "Galera",
                "operatorCRDConfiguration": {
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "helmChartDependencies": [
                    {
                      "chartName": "cert-manager",
                      "chartVersion": "v1.5.3"
                    },
                    {
                      "chartName": "nginx-ingress",
                      "chartVersion": "v0.48.1"
                    },
                    {
                      "chartName": "external-dns",
                      "chartVersion": "v0.7.0"
                    },
                    {
                      "chartName": "cnpg-operator",
                      "chartVersion": "v0.23.1"
                    }
                  ],
                  "outputParameters": {
                    "expiresAt": "$out.status.notAfter",
                    "issuerName": "letsencrypt-prod"
                  },
                  "readinessConditions": {
                    "$out.status.conditions[?(@.type=='Ready')].status": true
                  },
                  "supplementalFiles": [
                    "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                    "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                  ],
                  "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                },
                "productTierId": "pt-12345678",
                "proxyType": "PortsBasedProxy",
                "resourceType": "Generic",
                "serviceId": "s-12345678",
                "terraformConfigurations": {
                  "Accusamus sed facere consectetur et qui.": {
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "privateModuleGitAccessTokens": {
                      "tokenName": "accessToken"
                    },
                    "requiredOutputKeys": [
                      "output1"
                    ],
                    "requiredOutputs": [
                      {
                        "exported": true,
                        "key": "output1"
                      }
                    ],
                    "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                    "terraformPath": "/project1/tf"
                  },
                  "Sequi asperiores.": {
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "privateModuleGitAccessTokens": {
                      "tokenName": "accessToken"
                    },
                    "requiredOutputKeys": [
                      "output1"
                    ],
                    "requiredOutputs": [
                      {
                        "exported": true,
                        "key": "output1"
                      }
                    ],
                    "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                    "terraformPath": "/project1/tf"
                  }
                }
              },
              {
                "actionHooks": [
                  {
                    "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                    "scope": "CLUSTER",
                    "type": "INIT"
                  }
                ],
                "additionalSecurityContext": {
                  "AddCapabilities": [
                    "CAP_NET_ADMIN",
                    "CAP_NET_RAW"
                  ],
                  "DropCapabilities": [
                    "CAP_NET_ADMIN",
                    "CAP_NET_RAW"
                  ],
                  "SupplementalGroupIDs": [
                    1001,
                    999
                  ]
                },
                "backupConfiguration": {
                  "backupPeriodInHours": 24,
                  "backupRetentionInDays": 7
                },
                "blobStorageConfiguration": {
                  "GCSConfiguration": {},
                  "S3Configuration": {}
                },
                "capabilities": [
                  {
                    "capability": "SERVERLESS",
                    "configuration": {
                      "EnableAutoStop": true,
                      "MinimumNodesInPool": 5,
                      "PortsMappingProxyConfig": {
                        "MaxNumberOfClustersPerProxyInstance": 50,
                        "NumberOfPortsPerCluster": 4
                      },
                      "ProxyId": "r-123456",
                      "ReferenceProxyKey": "resource-proxy",
                      "TargetPort": 5432
                    }
                  },
                  {
                    "capability": "SERVERLESS",
                    "configuration": {
                      "EnableAutoStop": true,
                      "MinimumNodesInPool": 5,
                      "PortsMappingProxyConfig": {
                        "MaxNumberOfClustersPerProxyInstance": 50,
                        "NumberOfPortsPerCluster": 4
                      },
                      "ProxyId": "r-123456",
                      "ReferenceProxyKey": "resource-proxy",
                      "TargetPort": 5432
                    }
                  },
                  {
                    "capability": "SERVERLESS",
                    "configuration": {
                      "EnableAutoStop": true,
                      "MinimumNodesInPool": 5,
                      "PortsMappingProxyConfig": {
                        "MaxNumberOfClustersPerProxyInstance": 50,
                        "NumberOfPortsPerCluster": 4
                      },
                      "ProxyId": "r-123456",
                      "ReferenceProxyKey": "resource-proxy",
                      "TargetPort": 5432
                    }
                  }
                ],
                "customLabels": {
                  "key": "value"
                },
                "customSysCTLs": {
                  "net.ipv4.tcp_syncookies": "1"
                },
                "customULimits": [
                  {
                    "ULimitsName": "NoProc",
                    "ULimitsType": "Soft",
                    "ULimitsValue": 1000
                  },
                  {
                    "ULimitsName": "NoFile",
                    "ULimitsType": "Hard",
                    "ULimitsValue": 2048
                  }
                ],
                "dependencies": [
                  {
                    "parameterMap": {
                      "clusterId": "writerId",
                      "clusterOrg": "userDatabase"
                    },
                    "resourceId": "r-12345678"
                  },
                  {
                    "parameterMap": {
                      "clusterId": "readerId",
                      "clusterOrg": "userDatabase"
                    },
                    "resourceId": "r-abcdef12"
                  }
                ],
                "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                "environmentVariables": [
                  {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "value": "password"
                  }
                ],
                "fileSystemConfiguration": {
                  "EFSFileSystemConfiguration": {
                    "PerformanceMode": "generalPurpose|maxIO",
                    "ProvisionedThroughputInMibps": 125,
                    "ThroughputMode": "provisioned|bursting|elastic"
                  }
                },
                "helmChartConfiguration": {
                  "chartName": "my-chart",
                  "chartRepoName": "my-repo",
                  "chartRepoUrl": "https://my-repo.com",
                  "chartValues": {
                    "key1": "value1",
                    "key2": 3,
                    "key3": {
                      "key4": "value4"
                    }
                  },
                  "chartVersion": "1.0.0",
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "password": "my-password",
                  "runtimeConfiguration": {
                    "disableHooks": true,
                    "recreate": true,
                    "resetThenReuseValues": true,
                    "resetValues": true,
                    "reuseValues": true,
                    "skipCRDs": true,
                    "timeoutNanos": 1000000000,
                    "upgradeCRDs": true,
                    "wait": true,
                    "waitForJobs": true
                  },
                  "username": "my-user"
                },
                "id": "r-12345678",
                "imageConfigId": "imgc-12345678",
                "infraConfigId": "ic-12345678",
                "internal": false,
                "isDeprecated": false,
                "key": "galera",
                "kustomizeConfiguration": {
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "gitConfiguration": {
                    "accessToken": "my-token",
                    "referenceName": "tags/v1.0.0",
                    "repositoryUrl": "https://github.com/username/myrepo",
                    "userName": "my-user"
                  },
                  "helmChartDependencies": [
                    {
                      "chartName": "cert-manager",
                      "chartVersion": "v1.5.3"
                    },
                    {
                      "chartName": "nginx-ingress",
                      "chartVersion": "v0.48.1"
                    },
                    {
                      "chartName": "external-dns",
                      "chartVersion": "v0.7.0"
                    },
                    {
                      "chartName": "cnpg-operator",
                      "chartVersion": "v0.23.1"
                    }
                  ],
                  "kustomizePath": "/kustomize"
                },
                "l4LoadBalancerConfiguration": {
                  "ingressPortConfiguration": [
                    {
                      "associatedResourceIDs": [
                        "r-12345678",
                        "r-abcdef12"
                      ],
                      "backendPort": 8080,
                      "ingressPort": 1234
                    },
                    {
                      "associatedResourceIDs": [
                        "r-12345678",
                        "r-abcdef12"
                      ],
                      "backendPort": 8081,
                      "ingressPort": 5678
                    },
                    {
                      "associatedResourceIDs": [
                        "r-vwxybz12",
                        "r-poij122v"
                      ],
                      "backendPort": 8082,
                      "ingressPort": 9012
                    }
                  ]
                },
                "l7LoadBalancerConfiguration": {
                  "paths": [
                    {
                      "associatedResourceID": "r-12345678",
                      "path": "/path",
                      "port": 8080
                    }
                  ]
                },
                "name": "Galera",
                "operatorCRDConfiguration": {
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "helmChartDependencies": [
                    {
                      "chartName": "cert-manager",
                      "chartVersion": "v1.5.3"
                    },
                    {
                      "chartName": "nginx-ingress",
                      "chartVersion": "v0.48.1"
                    },
                    {
                      "chartName": "external-dns",
                      "chartVersion": "v0.7.0"
                    },
                    {
                      "chartName": "cnpg-operator",
                      "chartVersion": "v0.23.1"
                    }
                  ],
                  "outputParameters": {
                    "expiresAt": "$out.status.notAfter",
                    "issuerName": "letsencrypt-prod"
                  },
                  "readinessConditions": {
                    "$out.status.conditions[?(@.type=='Ready')].status": true
                  },
                  "supplementalFiles": [
                    "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                    "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                  ],
                  "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                },
                "productTierId": "pt-12345678",
                "proxyType": "PortsBasedProxy",
                "resourceType": "Generic",
                "serviceId": "s-12345678",
                "terraformConfigurations": {
                  "Accusamus sed facere consectetur et qui.": {
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "privateModuleGitAccessTokens": {
                      "tokenName": "accessToken"
                    },
                    "requiredOutputKeys": [
                      "output1"
                    ],
                    "requiredOutputs": [
                      {
                        "exported": true,
                        "key": "output1"
                      }
                    ],
                    "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                    "terraformPath": "/project1/tf"
                  },
                  "Sequi asperiores.": {
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "privateModuleGitAccessTokens": {
                      "tokenName": "accessToken"
                    },
                    "requiredOutputKeys": [
                      "output1"
                    ],
                    "requiredOutputs": [
                      {
                        "exported": true,
                        "key": "output1"
                      }
                    ],
                    "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                    "terraformPath": "/project1/tf"
                  }
                }
              },
              {
                "actionHooks": [
                  {
                    "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                    "scope": "CLUSTER",
                    "type": "INIT"
                  }
                ],
                "additionalSecurityContext": {
                  "AddCapabilities": [
                    "CAP_NET_ADMIN",
                    "CAP_NET_RAW"
                  ],
                  "DropCapabilities": [
                    "CAP_NET_ADMIN",
                    "CAP_NET_RAW"
                  ],
                  "SupplementalGroupIDs": [
                    1001,
                    999
                  ]
                },
                "backupConfiguration": {
                  "backupPeriodInHours": 24,
                  "backupRetentionInDays": 7
                },
                "blobStorageConfiguration": {
                  "GCSConfiguration": {},
                  "S3Configuration": {}
                },
                "capabilities": [
                  {
                    "capability": "SERVERLESS",
                    "configuration": {
                      "EnableAutoStop": true,
                      "MinimumNodesInPool": 5,
                      "PortsMappingProxyConfig": {
                        "MaxNumberOfClustersPerProxyInstance": 50,
                        "NumberOfPortsPerCluster": 4
                      },
                      "ProxyId": "r-123456",
                      "ReferenceProxyKey": "resource-proxy",
                      "TargetPort": 5432
                    }
                  },
                  {
                    "capability": "SERVERLESS",
                    "configuration": {
                      "EnableAutoStop": true,
                      "MinimumNodesInPool": 5,
                      "PortsMappingProxyConfig": {
                        "MaxNumberOfClustersPerProxyInstance": 50,
                        "NumberOfPortsPerCluster": 4
                      },
                      "ProxyId": "r-123456",
                      "ReferenceProxyKey": "resource-proxy",
                      "TargetPort": 5432
                    }
                  },
                  {
                    "capability": "SERVERLESS",
                    "configuration": {
                      "EnableAutoStop": true,
                      "MinimumNodesInPool": 5,
                      "PortsMappingProxyConfig": {
                        "MaxNumberOfClustersPerProxyInstance": 50,
                        "NumberOfPortsPerCluster": 4
                      },
                      "ProxyId": "r-123456",
                      "ReferenceProxyKey": "resource-proxy",
                      "TargetPort": 5432
                    }
                  }
                ],
                "customLabels": {
                  "key": "value"
                },
                "customSysCTLs": {
                  "net.ipv4.tcp_syncookies": "1"
                },
                "customULimits": [
                  {
                    "ULimitsName": "NoProc",
                    "ULimitsType": "Soft",
                    "ULimitsValue": 1000
                  },
                  {
                    "ULimitsName": "NoFile",
                    "ULimitsType": "Hard",
                    "ULimitsValue": 2048
                  }
                ],
                "dependencies": [
                  {
                    "parameterMap": {
                      "clusterId": "writerId",
                      "clusterOrg": "userDatabase"
                    },
                    "resourceId": "r-12345678"
                  },
                  {
                    "parameterMap": {
                      "clusterId": "readerId",
                      "clusterOrg": "userDatabase"
                    },
                    "resourceId": "r-abcdef12"
                  }
                ],
                "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                "environmentVariables": [
                  {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "value": "password"
                  }
                ],
                "fileSystemConfiguration": {
                  "EFSFileSystemConfiguration": {
                    "PerformanceMode": "generalPurpose|maxIO",
                    "ProvisionedThroughputInMibps": 125,
                    "ThroughputMode": "provisioned|bursting|elastic"
                  }
                },
                "helmChartConfiguration": {
                  "chartName": "my-chart",
                  "chartRepoName": "my-repo",
                  "chartRepoUrl": "https://my-repo.com",
                  "chartValues": {
                    "key1": "value1",
                    "key2": 3,
                    "key3": {
                      "key4": "value4"
                    }
                  },
                  "chartVersion": "1.0.0",
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "password": "my-password",
                  "runtimeConfiguration": {
                    "disableHooks": true,
                    "recreate": true,
                    "resetThenReuseValues": true,
                    "resetValues": true,
                    "reuseValues": true,
                    "skipCRDs": true,
                    "timeoutNanos": 1000000000,
                    "upgradeCRDs": true,
                    "wait": true,
                    "waitForJobs": true
                  },
                  "username": "my-user"
                },
                "id": "r-12345678",
                "imageConfigId": "imgc-12345678",
                "infraConfigId": "ic-12345678",
                "internal": false,
                "isDeprecated": false,
                "key": "galera",
                "kustomizeConfiguration": {
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "gitConfiguration": {
                    "accessToken": "my-token",
                    "referenceName": "tags/v1.0.0",
                    "repositoryUrl": "https://github.com/username/myrepo",
                    "userName": "my-user"
                  },
                  "helmChartDependencies": [
                    {
                      "chartName": "cert-manager",
                      "chartVersion": "v1.5.3"
                    },
                    {
                      "chartName": "nginx-ingress",
                      "chartVersion": "v0.48.1"
                    },
                    {
                      "chartName": "external-dns",
                      "chartVersion": "v0.7.0"
                    },
                    {
                      "chartName": "cnpg-operator",
                      "chartVersion": "v0.23.1"
                    }
                  ],
                  "kustomizePath": "/kustomize"
                },
                "l4LoadBalancerConfiguration": {
                  "ingressPortConfiguration": [
                    {
                      "associatedResourceIDs": [
                        "r-12345678",
                        "r-abcdef12"
                      ],
                      "backendPort": 8080,
                      "ingressPort": 1234
                    },
                    {
                      "associatedResourceIDs": [
                        "r-12345678",
                        "r-abcdef12"
                      ],
                      "backendPort": 8081,
                      "ingressPort": 5678
                    },
                    {
                      "associatedResourceIDs": [
                        "r-vwxybz12",
                        "r-poij122v"
                      ],
                      "backendPort": 8082,
                      "ingressPort": 9012
                    }
                  ]
                },
                "l7LoadBalancerConfiguration": {
                  "paths": [
                    {
                      "associatedResourceID": "r-12345678",
                      "path": "/path",
                      "port": 8080
                    }
                  ]
                },
                "name": "Galera",
                "operatorCRDConfiguration": {
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "helmChartDependencies": [
                    {
                      "chartName": "cert-manager",
                      "chartVersion": "v1.5.3"
                    },
                    {
                      "chartName": "nginx-ingress",
                      "chartVersion": "v0.48.1"
                    },
                    {
                      "chartName": "external-dns",
                      "chartVersion": "v0.7.0"
                    },
                    {
                      "chartName": "cnpg-operator",
                      "chartVersion": "v0.23.1"
                    }
                  ],
                  "outputParameters": {
                    "expiresAt": "$out.status.notAfter",
                    "issuerName": "letsencrypt-prod"
                  },
                  "readinessConditions": {
                    "$out.status.conditions[?(@.type=='Ready')].status": true
                  },
                  "supplementalFiles": [
                    "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                    "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                  ],
                  "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                },
                "productTierId": "pt-12345678",
                "proxyType": "PortsBasedProxy",
                "resourceType": "Generic",
                "serviceId": "s-12345678",
                "terraformConfigurations": {
                  "Accusamus sed facere consectetur et qui.": {
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "privateModuleGitAccessTokens": {
                      "tokenName": "accessToken"
                    },
                    "requiredOutputKeys": [
                      "output1"
                    ],
                    "requiredOutputs": [
                      {
                        "exported": true,
                        "key": "output1"
                      }
                    ],
                    "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                    "terraformPath": "/project1/tf"
                  },
                  "Sequi asperiores.": {
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "privateModuleGitAccessTokens": {
                      "tokenName": "accessToken"
                    },
                    "requiredOutputKeys": [
                      "output1"
                    ],
                    "requiredOutputs": [
                      {
                        "exported": true,
                        "key": "output1"
                      }
                    ],
                    "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                    "terraformPath": "/project1/tf"
                  }
                }
              },
              {
                "actionHooks": [
                  {
                    "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                    "scope": "CLUSTER",
                    "type": "INIT"
                  }
                ],
                "additionalSecurityContext": {
                  "AddCapabilities": [
                    "CAP_NET_ADMIN",
                    "CAP_NET_RAW"
                  ],
                  "DropCapabilities": [
                    "CAP_NET_ADMIN",
                    "CAP_NET_RAW"
                  ],
                  "SupplementalGroupIDs": [
                    1001,
                    999
                  ]
                },
                "backupConfiguration": {
                  "backupPeriodInHours": 24,
                  "backupRetentionInDays": 7
                },
                "blobStorageConfiguration": {
                  "GCSConfiguration": {},
                  "S3Configuration": {}
                },
                "capabilities": [
                  {
                    "capability": "SERVERLESS",
                    "configuration": {
                      "EnableAutoStop": true,
                      "MinimumNodesInPool": 5,
                      "PortsMappingProxyConfig": {
                        "MaxNumberOfClustersPerProxyInstance": 50,
                        "NumberOfPortsPerCluster": 4
                      },
                      "ProxyId": "r-123456",
                      "ReferenceProxyKey": "resource-proxy",
                      "TargetPort": 5432
                    }
                  },
                  {
                    "capability": "SERVERLESS",
                    "configuration": {
                      "EnableAutoStop": true,
                      "MinimumNodesInPool": 5,
                      "PortsMappingProxyConfig": {
                        "MaxNumberOfClustersPerProxyInstance": 50,
                        "NumberOfPortsPerCluster": 4
                      },
                      "ProxyId": "r-123456",
                      "ReferenceProxyKey": "resource-proxy",
                      "TargetPort": 5432
                    }
                  },
                  {
                    "capability": "SERVERLESS",
                    "configuration": {
                      "EnableAutoStop": true,
                      "MinimumNodesInPool": 5,
                      "PortsMappingProxyConfig": {
                        "MaxNumberOfClustersPerProxyInstance": 50,
                        "NumberOfPortsPerCluster": 4
                      },
                      "ProxyId": "r-123456",
                      "ReferenceProxyKey": "resource-proxy",
                      "TargetPort": 5432
                    }
                  }
                ],
                "customLabels": {
                  "key": "value"
                },
                "customSysCTLs": {
                  "net.ipv4.tcp_syncookies": "1"
                },
                "customULimits": [
                  {
                    "ULimitsName": "NoProc",
                    "ULimitsType": "Soft",
                    "ULimitsValue": 1000
                  },
                  {
                    "ULimitsName": "NoFile",
                    "ULimitsType": "Hard",
                    "ULimitsValue": 2048
                  }
                ],
                "dependencies": [
                  {
                    "parameterMap": {
                      "clusterId": "writerId",
                      "clusterOrg": "userDatabase"
                    },
                    "resourceId": "r-12345678"
                  },
                  {
                    "parameterMap": {
                      "clusterId": "readerId",
                      "clusterOrg": "userDatabase"
                    },
                    "resourceId": "r-abcdef12"
                  }
                ],
                "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
                "environmentVariables": [
                  {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "value": "password"
                  }
                ],
                "fileSystemConfiguration": {
                  "EFSFileSystemConfiguration": {
                    "PerformanceMode": "generalPurpose|maxIO",
                    "ProvisionedThroughputInMibps": 125,
                    "ThroughputMode": "provisioned|bursting|elastic"
                  }
                },
                "helmChartConfiguration": {
                  "chartName": "my-chart",
                  "chartRepoName": "my-repo",
                  "chartRepoUrl": "https://my-repo.com",
                  "chartValues": {
                    "key1": "value1",
                    "key2": 3,
                    "key3": {
                      "key4": "value4"
                    }
                  },
                  "chartVersion": "1.0.0",
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "password": "my-password",
                  "runtimeConfiguration": {
                    "disableHooks": true,
                    "recreate": true,
                    "resetThenReuseValues": true,
                    "resetValues": true,
                    "reuseValues": true,
                    "skipCRDs": true,
                    "timeoutNanos": 1000000000,
                    "upgradeCRDs": true,
                    "wait": true,
                    "waitForJobs": true
                  },
                  "username": "my-user"
                },
                "id": "r-12345678",
                "imageConfigId": "imgc-12345678",
                "infraConfigId": "ic-12345678",
                "internal": false,
                "isDeprecated": false,
                "key": "galera",
                "kustomizeConfiguration": {
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "gitConfiguration": {
                    "accessToken": "my-token",
                    "referenceName": "tags/v1.0.0",
                    "repositoryUrl": "https://github.com/username/myrepo",
                    "userName": "my-user"
                  },
                  "helmChartDependencies": [
                    {
                      "chartName": "cert-manager",
                      "chartVersion": "v1.5.3"
                    },
                    {
                      "chartName": "nginx-ingress",
                      "chartVersion": "v0.48.1"
                    },
                    {
                      "chartName": "external-dns",
                      "chartVersion": "v0.7.0"
                    },
                    {
                      "chartName": "cnpg-operator",
                      "chartVersion": "v0.23.1"
                    }
                  ],
                  "kustomizePath": "/kustomize"
                },
                "l4LoadBalancerConfiguration": {
                  "ingressPortConfiguration": [
                    {
                      "associatedResourceIDs": [
                        "r-12345678",
                        "r-abcdef12"
                      ],
                      "backendPort": 8080,
                      "ingressPort": 1234
                    },
                    {
                      "associatedResourceIDs": [
                        "r-12345678",
                        "r-abcdef12"
                      ],
                      "backendPort": 8081,
                      "ingressPort": 5678
                    },
                    {
                      "associatedResourceIDs": [
                        "r-vwxybz12",
                        "r-poij122v"
                      ],
                      "backendPort": 8082,
                      "ingressPort": 9012
                    }
                  ]
                },
                "l7LoadBalancerConfiguration": {
                  "paths": [
                    {
                      "associatedResourceID": "r-12345678",
                      "path": "/path",
                      "port": 8080
                    }
                  ]
                },
                "name": "Galera",
                "operatorCRDConfiguration": {
                  "endpointConfiguration": {
                    "admin": {
                      "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                      "networkingType": "PRIVATE",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": false
                    },
                    "cluster": {
                      "host": "https://my-endpoint.com",
                      "networkingType": "PUBLIC",
                      "ports": [
                        8080,
                        8081
                      ],
                      "primary": true
                    }
                  },
                  "helmChartDependencies": [
                    {
                      "chartName": "cert-manager",
                      "chartVersion": "v1.5.3"
                    },
                    {
                      "chartName": "nginx-ingress",
                      "chartVersion": "v0.48.1"
                    },
                    {
                      "chartName": "external-dns",
                      "chartVersion": "v0.7.0"
                    },
                    {
                      "chartName": "cnpg-operator",
                      "chartVersion": "v0.23.1"
                    }
                  ],
                  "outputParameters": {
                    "expiresAt": "$out.status.notAfter",
                    "issuerName": "letsencrypt-prod"
                  },
                  "readinessConditions": {
                    "$out.status.conditions[?(@.type=='Ready')].status": true
                  },
                  "supplementalFiles": [
                    "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                    "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                  ],
                  "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
                },
                "productTierId": "pt-12345678",
                "proxyType": "PortsBasedProxy",
                "resourceType": "Generic",
                "serviceId": "s-12345678",
                "terraformConfigurations": {
                  "Accusamus sed facere consectetur et qui.": {
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "privateModuleGitAccessTokens": {
                      "tokenName": "accessToken"
                    },
                    "requiredOutputKeys": [
                      "output1"
                    ],
                    "requiredOutputs": [
                      {
                        "exported": true,
                        "key": "output1"
                      }
                    ],
                    "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                    "terraformPath": "/project1/tf"
                  },
                  "Sequi asperiores.": {
                    "gitConfiguration": {
                      "accessToken": "my-token",
                      "referenceName": "tags/v1.0.0",
                      "repositoryUrl": "https://github.com/username/myrepo",
                      "userName": "my-user"
                    },
                    "privateModuleGitAccessTokens": {
                      "tokenName": "accessToken"
                    },
                    "requiredOutputKeys": [
                      "output1"
                    ],
                    "requiredOutputs": [
                      {
                        "exported": true,
                        "key": "output1"
                      }
                    ],
                    "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                    "terraformPath": "/project1/tf"
                  }
                }
              }
            ]
          }
        },
        "example": {
          "ids": [
            "r-12345678",
            "r-abcdefgh",
            "r-1234abcd"
          ],
          "nextPageToken": "next-token",
          "resources": [
            {
              "actionHooks": [
                {
                  "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                  "scope": "CLUSTER",
                  "type": "INIT"
                }
              ],
              "additionalSecurityContext": {
                "AddCapabilities": [
                  "CAP_NET_ADMIN",
                  "CAP_NET_RAW"
                ],
                "DropCapabilities": [
                  "CAP_NET_ADMIN",
                  "CAP_NET_RAW"
                ],
                "SupplementalGroupIDs": [
                  1001,
                  999
                ]
              },
              "backupConfiguration": {
                "backupPeriodInHours": 24,
                "backupRetentionInDays": 7
              },
              "blobStorageConfiguration": {
                "GCSConfiguration": {},
                "S3Configuration": {}
              },
              "capabilities": [
                {
                  "capability": "SERVERLESS",
                  "configuration": {
                    "EnableAutoStop": true,
                    "MinimumNodesInPool": 5,
                    "PortsMappingProxyConfig": {
                      "MaxNumberOfClustersPerProxyInstance": 50,
                      "NumberOfPortsPerCluster": 4
                    },
                    "ProxyId": "r-123456",
                    "ReferenceProxyKey": "resource-proxy",
                    "TargetPort": 5432
                  }
                },
                {
                  "capability": "SERVERLESS",
                  "configuration": {
                    "EnableAutoStop": true,
                    "MinimumNodesInPool": 5,
                    "PortsMappingProxyConfig": {
                      "MaxNumberOfClustersPerProxyInstance": 50,
                      "NumberOfPortsPerCluster": 4
                    },
                    "ProxyId": "r-123456",
                    "ReferenceProxyKey": "resource-proxy",
                    "TargetPort": 5432
                  }
                },
                {
                  "capability": "SERVERLESS",
                  "configuration": {
                    "EnableAutoStop": true,
                    "MinimumNodesInPool": 5,
                    "PortsMappingProxyConfig": {
                      "MaxNumberOfClustersPerProxyInstance": 50,
                      "NumberOfPortsPerCluster": 4
                    },
                    "ProxyId": "r-123456",
                    "ReferenceProxyKey": "resource-proxy",
                    "TargetPort": 5432
                  }
                }
              ],
              "customLabels": {
                "key": "value"
              },
              "customSysCTLs": {
                "net.ipv4.tcp_syncookies": "1"
              },
              "customULimits": [
                {
                  "ULimitsName": "NoProc",
                  "ULimitsType": "Soft",
                  "ULimitsValue": 1000
                },
                {
                  "ULimitsName": "NoFile",
                  "ULimitsType": "Hard",
                  "ULimitsValue": 2048
                }
              ],
              "dependencies": [
                {
                  "parameterMap": {
                    "clusterId": "writerId",
                    "clusterOrg": "userDatabase"
                  },
                  "resourceId": "r-12345678"
                },
                {
                  "parameterMap": {
                    "clusterId": "readerId",
                    "clusterOrg": "userDatabase"
                  },
                  "resourceId": "r-abcdef12"
                }
              ],
              "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
              "environmentVariables": [
                {
                  "name": "MYSQL_ROOT_PASSWORD",
                  "value": "password"
                }
              ],
              "fileSystemConfiguration": {
                "EFSFileSystemConfiguration": {
                  "PerformanceMode": "generalPurpose|maxIO",
                  "ProvisionedThroughputInMibps": 125,
                  "ThroughputMode": "provisioned|bursting|elastic"
                }
              },
              "helmChartConfiguration": {
                "chartName": "my-chart",
                "chartRepoName": "my-repo",
                "chartRepoUrl": "https://my-repo.com",
                "chartValues": {
                  "key1": "value1",
                  "key2": 3,
                  "key3": {
                    "key4": "value4"
                  }
                },
                "chartVersion": "1.0.0",
                "endpointConfiguration": {
                  "admin": {
                    "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                    "networkingType": "PRIVATE",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": false
                  },
                  "cluster": {
                    "host": "https://my-endpoint.com",
                    "networkingType": "PUBLIC",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": true
                  }
                },
                "password": "my-password",
                "runtimeConfiguration": {
                  "disableHooks": true,
                  "recreate": true,
                  "resetThenReuseValues": true,
                  "resetValues": true,
                  "reuseValues": true,
                  "skipCRDs": true,
                  "timeoutNanos": 1000000000,
                  "upgradeCRDs": true,
                  "wait": true,
                  "waitForJobs": true
                },
                "username": "my-user"
              },
              "id": "r-12345678",
              "imageConfigId": "imgc-12345678",
              "infraConfigId": "ic-12345678",
              "internal": false,
              "isDeprecated": false,
              "key": "galera",
              "kustomizeConfiguration": {
                "endpointConfiguration": {
                  "admin": {
                    "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                    "networkingType": "PRIVATE",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": false
                  },
                  "cluster": {
                    "host": "https://my-endpoint.com",
                    "networkingType": "PUBLIC",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": true
                  }
                },
                "gitConfiguration": {
                  "accessToken": "my-token",
                  "referenceName": "tags/v1.0.0",
                  "repositoryUrl": "https://github.com/username/myrepo",
                  "userName": "my-user"
                },
                "helmChartDependencies": [
                  {
                    "chartName": "cert-manager",
                    "chartVersion": "v1.5.3"
                  },
                  {
                    "chartName": "nginx-ingress",
                    "chartVersion": "v0.48.1"
                  },
                  {
                    "chartName": "external-dns",
                    "chartVersion": "v0.7.0"
                  },
                  {
                    "chartName": "cnpg-operator",
                    "chartVersion": "v0.23.1"
                  }
                ],
                "kustomizePath": "/kustomize"
              },
              "l4LoadBalancerConfiguration": {
                "ingressPortConfiguration": [
                  {
                    "associatedResourceIDs": [
                      "r-12345678",
                      "r-abcdef12"
                    ],
                    "backendPort": 8080,
                    "ingressPort": 1234
                  },
                  {
                    "associatedResourceIDs": [
                      "r-12345678",
                      "r-abcdef12"
                    ],
                    "backendPort": 8081,
                    "ingressPort": 5678
                  },
                  {
                    "associatedResourceIDs": [
                      "r-vwxybz12",
                      "r-poij122v"
                    ],
                    "backendPort": 8082,
                    "ingressPort": 9012
                  }
                ]
              },
              "l7LoadBalancerConfiguration": {
                "paths": [
                  {
                    "associatedResourceID": "r-12345678",
                    "path": "/path",
                    "port": 8080
                  }
                ]
              },
              "name": "Galera",
              "operatorCRDConfiguration": {
                "endpointConfiguration": {
                  "admin": {
                    "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                    "networkingType": "PRIVATE",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": false
                  },
                  "cluster": {
                    "host": "https://my-endpoint.com",
                    "networkingType": "PUBLIC",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": true
                  }
                },
                "helmChartDependencies": [
                  {
                    "chartName": "cert-manager",
                    "chartVersion": "v1.5.3"
                  },
                  {
                    "chartName": "nginx-ingress",
                    "chartVersion": "v0.48.1"
                  },
                  {
                    "chartName": "external-dns",
                    "chartVersion": "v0.7.0"
                  },
                  {
                    "chartName": "cnpg-operator",
                    "chartVersion": "v0.23.1"
                  }
                ],
                "outputParameters": {
                  "expiresAt": "$out.status.notAfter",
                  "issuerName": "letsencrypt-prod"
                },
                "readinessConditions": {
                  "$out.status.conditions[?(@.type=='Ready')].status": true
                },
                "supplementalFiles": [
                  "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                  "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                ],
                "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
              },
              "productTierId": "pt-12345678",
              "proxyType": "PortsBasedProxy",
              "resourceType": "Generic",
              "serviceId": "s-12345678",
              "terraformConfigurations": {
                "Accusamus sed facere consectetur et qui.": {
                  "gitConfiguration": {
                    "accessToken": "my-token",
                    "referenceName": "tags/v1.0.0",
                    "repositoryUrl": "https://github.com/username/myrepo",
                    "userName": "my-user"
                  },
                  "privateModuleGitAccessTokens": {
                    "tokenName": "accessToken"
                  },
                  "requiredOutputKeys": [
                    "output1"
                  ],
                  "requiredOutputs": [
                    {
                      "exported": true,
                      "key": "output1"
                    }
                  ],
                  "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                  "terraformPath": "/project1/tf"
                },
                "Sequi asperiores.": {
                  "gitConfiguration": {
                    "accessToken": "my-token",
                    "referenceName": "tags/v1.0.0",
                    "repositoryUrl": "https://github.com/username/myrepo",
                    "userName": "my-user"
                  },
                  "privateModuleGitAccessTokens": {
                    "tokenName": "accessToken"
                  },
                  "requiredOutputKeys": [
                    "output1"
                  ],
                  "requiredOutputs": [
                    {
                      "exported": true,
                      "key": "output1"
                    }
                  ],
                  "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                  "terraformPath": "/project1/tf"
                }
              }
            },
            {
              "actionHooks": [
                {
                  "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                  "scope": "CLUSTER",
                  "type": "INIT"
                }
              ],
              "additionalSecurityContext": {
                "AddCapabilities": [
                  "CAP_NET_ADMIN",
                  "CAP_NET_RAW"
                ],
                "DropCapabilities": [
                  "CAP_NET_ADMIN",
                  "CAP_NET_RAW"
                ],
                "SupplementalGroupIDs": [
                  1001,
                  999
                ]
              },
              "backupConfiguration": {
                "backupPeriodInHours": 24,
                "backupRetentionInDays": 7
              },
              "blobStorageConfiguration": {
                "GCSConfiguration": {},
                "S3Configuration": {}
              },
              "capabilities": [
                {
                  "capability": "SERVERLESS",
                  "configuration": {
                    "EnableAutoStop": true,
                    "MinimumNodesInPool": 5,
                    "PortsMappingProxyConfig": {
                      "MaxNumberOfClustersPerProxyInstance": 50,
                      "NumberOfPortsPerCluster": 4
                    },
                    "ProxyId": "r-123456",
                    "ReferenceProxyKey": "resource-proxy",
                    "TargetPort": 5432
                  }
                },
                {
                  "capability": "SERVERLESS",
                  "configuration": {
                    "EnableAutoStop": true,
                    "MinimumNodesInPool": 5,
                    "PortsMappingProxyConfig": {
                      "MaxNumberOfClustersPerProxyInstance": 50,
                      "NumberOfPortsPerCluster": 4
                    },
                    "ProxyId": "r-123456",
                    "ReferenceProxyKey": "resource-proxy",
                    "TargetPort": 5432
                  }
                },
                {
                  "capability": "SERVERLESS",
                  "configuration": {
                    "EnableAutoStop": true,
                    "MinimumNodesInPool": 5,
                    "PortsMappingProxyConfig": {
                      "MaxNumberOfClustersPerProxyInstance": 50,
                      "NumberOfPortsPerCluster": 4
                    },
                    "ProxyId": "r-123456",
                    "ReferenceProxyKey": "resource-proxy",
                    "TargetPort": 5432
                  }
                }
              ],
              "customLabels": {
                "key": "value"
              },
              "customSysCTLs": {
                "net.ipv4.tcp_syncookies": "1"
              },
              "customULimits": [
                {
                  "ULimitsName": "NoProc",
                  "ULimitsType": "Soft",
                  "ULimitsValue": 1000
                },
                {
                  "ULimitsName": "NoFile",
                  "ULimitsType": "Hard",
                  "ULimitsValue": 2048
                }
              ],
              "dependencies": [
                {
                  "parameterMap": {
                    "clusterId": "writerId",
                    "clusterOrg": "userDatabase"
                  },
                  "resourceId": "r-12345678"
                },
                {
                  "parameterMap": {
                    "clusterId": "readerId",
                    "clusterOrg": "userDatabase"
                  },
                  "resourceId": "r-abcdef12"
                }
              ],
              "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
              "environmentVariables": [
                {
                  "name": "MYSQL_ROOT_PASSWORD",
                  "value": "password"
                }
              ],
              "fileSystemConfiguration": {
                "EFSFileSystemConfiguration": {
                  "PerformanceMode": "generalPurpose|maxIO",
                  "ProvisionedThroughputInMibps": 125,
                  "ThroughputMode": "provisioned|bursting|elastic"
                }
              },
              "helmChartConfiguration": {
                "chartName": "my-chart",
                "chartRepoName": "my-repo",
                "chartRepoUrl": "https://my-repo.com",
                "chartValues": {
                  "key1": "value1",
                  "key2": 3,
                  "key3": {
                    "key4": "value4"
                  }
                },
                "chartVersion": "1.0.0",
                "endpointConfiguration": {
                  "admin": {
                    "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                    "networkingType": "PRIVATE",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": false
                  },
                  "cluster": {
                    "host": "https://my-endpoint.com",
                    "networkingType": "PUBLIC",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": true
                  }
                },
                "password": "my-password",
                "runtimeConfiguration": {
                  "disableHooks": true,
                  "recreate": true,
                  "resetThenReuseValues": true,
                  "resetValues": true,
                  "reuseValues": true,
                  "skipCRDs": true,
                  "timeoutNanos": 1000000000,
                  "upgradeCRDs": true,
                  "wait": true,
                  "waitForJobs": true
                },
                "username": "my-user"
              },
              "id": "r-12345678",
              "imageConfigId": "imgc-12345678",
              "infraConfigId": "ic-12345678",
              "internal": false,
              "isDeprecated": false,
              "key": "galera",
              "kustomizeConfiguration": {
                "endpointConfiguration": {
                  "admin": {
                    "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                    "networkingType": "PRIVATE",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": false
                  },
                  "cluster": {
                    "host": "https://my-endpoint.com",
                    "networkingType": "PUBLIC",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": true
                  }
                },
                "gitConfiguration": {
                  "accessToken": "my-token",
                  "referenceName": "tags/v1.0.0",
                  "repositoryUrl": "https://github.com/username/myrepo",
                  "userName": "my-user"
                },
                "helmChartDependencies": [
                  {
                    "chartName": "cert-manager",
                    "chartVersion": "v1.5.3"
                  },
                  {
                    "chartName": "nginx-ingress",
                    "chartVersion": "v0.48.1"
                  },
                  {
                    "chartName": "external-dns",
                    "chartVersion": "v0.7.0"
                  },
                  {
                    "chartName": "cnpg-operator",
                    "chartVersion": "v0.23.1"
                  }
                ],
                "kustomizePath": "/kustomize"
              },
              "l4LoadBalancerConfiguration": {
                "ingressPortConfiguration": [
                  {
                    "associatedResourceIDs": [
                      "r-12345678",
                      "r-abcdef12"
                    ],
                    "backendPort": 8080,
                    "ingressPort": 1234
                  },
                  {
                    "associatedResourceIDs": [
                      "r-12345678",
                      "r-abcdef12"
                    ],
                    "backendPort": 8081,
                    "ingressPort": 5678
                  },
                  {
                    "associatedResourceIDs": [
                      "r-vwxybz12",
                      "r-poij122v"
                    ],
                    "backendPort": 8082,
                    "ingressPort": 9012
                  }
                ]
              },
              "l7LoadBalancerConfiguration": {
                "paths": [
                  {
                    "associatedResourceID": "r-12345678",
                    "path": "/path",
                    "port": 8080
                  }
                ]
              },
              "name": "Galera",
              "operatorCRDConfiguration": {
                "endpointConfiguration": {
                  "admin": {
                    "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                    "networkingType": "PRIVATE",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": false
                  },
                  "cluster": {
                    "host": "https://my-endpoint.com",
                    "networkingType": "PUBLIC",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": true
                  }
                },
                "helmChartDependencies": [
                  {
                    "chartName": "cert-manager",
                    "chartVersion": "v1.5.3"
                  },
                  {
                    "chartName": "nginx-ingress",
                    "chartVersion": "v0.48.1"
                  },
                  {
                    "chartName": "external-dns",
                    "chartVersion": "v0.7.0"
                  },
                  {
                    "chartName": "cnpg-operator",
                    "chartVersion": "v0.23.1"
                  }
                ],
                "outputParameters": {
                  "expiresAt": "$out.status.notAfter",
                  "issuerName": "letsencrypt-prod"
                },
                "readinessConditions": {
                  "$out.status.conditions[?(@.type=='Ready')].status": true
                },
                "supplementalFiles": [
                  "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                  "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                ],
                "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
              },
              "productTierId": "pt-12345678",
              "proxyType": "PortsBasedProxy",
              "resourceType": "Generic",
              "serviceId": "s-12345678",
              "terraformConfigurations": {
                "Accusamus sed facere consectetur et qui.": {
                  "gitConfiguration": {
                    "accessToken": "my-token",
                    "referenceName": "tags/v1.0.0",
                    "repositoryUrl": "https://github.com/username/myrepo",
                    "userName": "my-user"
                  },
                  "privateModuleGitAccessTokens": {
                    "tokenName": "accessToken"
                  },
                  "requiredOutputKeys": [
                    "output1"
                  ],
                  "requiredOutputs": [
                    {
                      "exported": true,
                      "key": "output1"
                    }
                  ],
                  "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                  "terraformPath": "/project1/tf"
                },
                "Sequi asperiores.": {
                  "gitConfiguration": {
                    "accessToken": "my-token",
                    "referenceName": "tags/v1.0.0",
                    "repositoryUrl": "https://github.com/username/myrepo",
                    "userName": "my-user"
                  },
                  "privateModuleGitAccessTokens": {
                    "tokenName": "accessToken"
                  },
                  "requiredOutputKeys": [
                    "output1"
                  ],
                  "requiredOutputs": [
                    {
                      "exported": true,
                      "key": "output1"
                    }
                  ],
                  "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                  "terraformPath": "/project1/tf"
                }
              }
            },
            {
              "actionHooks": [
                {
                  "command": "curl -v -X POST https://$HOSTNAME:8080/cluster/init",
                  "scope": "CLUSTER",
                  "type": "INIT"
                }
              ],
              "additionalSecurityContext": {
                "AddCapabilities": [
                  "CAP_NET_ADMIN",
                  "CAP_NET_RAW"
                ],
                "DropCapabilities": [
                  "CAP_NET_ADMIN",
                  "CAP_NET_RAW"
                ],
                "SupplementalGroupIDs": [
                  1001,
                  999
                ]
              },
              "backupConfiguration": {
                "backupPeriodInHours": 24,
                "backupRetentionInDays": 7
              },
              "blobStorageConfiguration": {
                "GCSConfiguration": {},
                "S3Configuration": {}
              },
              "capabilities": [
                {
                  "capability": "SERVERLESS",
                  "configuration": {
                    "EnableAutoStop": true,
                    "MinimumNodesInPool": 5,
                    "PortsMappingProxyConfig": {
                      "MaxNumberOfClustersPerProxyInstance": 50,
                      "NumberOfPortsPerCluster": 4
                    },
                    "ProxyId": "r-123456",
                    "ReferenceProxyKey": "resource-proxy",
                    "TargetPort": 5432
                  }
                },
                {
                  "capability": "SERVERLESS",
                  "configuration": {
                    "EnableAutoStop": true,
                    "MinimumNodesInPool": 5,
                    "PortsMappingProxyConfig": {
                      "MaxNumberOfClustersPerProxyInstance": 50,
                      "NumberOfPortsPerCluster": 4
                    },
                    "ProxyId": "r-123456",
                    "ReferenceProxyKey": "resource-proxy",
                    "TargetPort": 5432
                  }
                },
                {
                  "capability": "SERVERLESS",
                  "configuration": {
                    "EnableAutoStop": true,
                    "MinimumNodesInPool": 5,
                    "PortsMappingProxyConfig": {
                      "MaxNumberOfClustersPerProxyInstance": 50,
                      "NumberOfPortsPerCluster": 4
                    },
                    "ProxyId": "r-123456",
                    "ReferenceProxyKey": "resource-proxy",
                    "TargetPort": 5432
                  }
                }
              ],
              "customLabels": {
                "key": "value"
              },
              "customSysCTLs": {
                "net.ipv4.tcp_syncookies": "1"
              },
              "customULimits": [
                {
                  "ULimitsName": "NoProc",
                  "ULimitsType": "Soft",
                  "ULimitsValue": 1000
                },
                {
                  "ULimitsName": "NoFile",
                  "ULimitsType": "Hard",
                  "ULimitsValue": 2048
                }
              ],
              "dependencies": [
                {
                  "parameterMap": {
                    "clusterId": "writerId",
                    "clusterOrg": "userDatabase"
                  },
                  "resourceId": "r-12345678"
                },
                {
                  "parameterMap": {
                    "clusterId": "readerId",
                    "clusterOrg": "userDatabase"
                  },
                  "resourceId": "r-abcdef12"
                }
              ],
              "description": "An resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
              "environmentVariables": [
                {
                  "name": "MYSQL_ROOT_PASSWORD",
                  "value": "password"
                }
              ],
              "fileSystemConfiguration": {
                "EFSFileSystemConfiguration": {
                  "PerformanceMode": "generalPurpose|maxIO",
                  "ProvisionedThroughputInMibps": 125,
                  "ThroughputMode": "provisioned|bursting|elastic"
                }
              },
              "helmChartConfiguration": {
                "chartName": "my-chart",
                "chartRepoName": "my-repo",
                "chartRepoUrl": "https://my-repo.com",
                "chartValues": {
                  "key1": "value1",
                  "key2": 3,
                  "key3": {
                    "key4": "value4"
                  }
                },
                "chartVersion": "1.0.0",
                "endpointConfiguration": {
                  "admin": {
                    "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                    "networkingType": "PRIVATE",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": false
                  },
                  "cluster": {
                    "host": "https://my-endpoint.com",
                    "networkingType": "PUBLIC",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": true
                  }
                },
                "password": "my-password",
                "runtimeConfiguration": {
                  "disableHooks": true,
                  "recreate": true,
                  "resetThenReuseValues": true,
                  "resetValues": true,
                  "reuseValues": true,
                  "skipCRDs": true,
                  "timeoutNanos": 1000000000,
                  "upgradeCRDs": true,
                  "wait": true,
                  "waitForJobs": true
                },
                "username": "my-user"
              },
              "id": "r-12345678",
              "imageConfigId": "imgc-12345678",
              "infraConfigId": "ic-12345678",
              "internal": false,
              "isDeprecated": false,
              "key": "galera",
              "kustomizeConfiguration": {
                "endpointConfiguration": {
                  "admin": {
                    "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                    "networkingType": "PRIVATE",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": false
                  },
                  "cluster": {
                    "host": "https://my-endpoint.com",
                    "networkingType": "PUBLIC",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": true
                  }
                },
                "gitConfiguration": {
                  "accessToken": "my-token",
                  "referenceName": "tags/v1.0.0",
                  "repositoryUrl": "https://github.com/username/myrepo",
                  "userName": "my-user"
                },
                "helmChartDependencies": [
                  {
                    "chartName": "cert-manager",
                    "chartVersion": "v1.5.3"
                  },
                  {
                    "chartName": "nginx-ingress",
                    "chartVersion": "v0.48.1"
                  },
                  {
                    "chartName": "external-dns",
                    "chartVersion": "v0.7.0"
                  },
                  {
                    "chartName": "cnpg-operator",
                    "chartVersion": "v0.23.1"
                  }
                ],
                "kustomizePath": "/kustomize"
              },
              "l4LoadBalancerConfiguration": {
                "ingressPortConfiguration": [
                  {
                    "associatedResourceIDs": [
                      "r-12345678",
                      "r-abcdef12"
                    ],
                    "backendPort": 8080,
                    "ingressPort": 1234
                  },
                  {
                    "associatedResourceIDs": [
                      "r-12345678",
                      "r-abcdef12"
                    ],
                    "backendPort": 8081,
                    "ingressPort": 5678
                  },
                  {
                    "associatedResourceIDs": [
                      "r-vwxybz12",
                      "r-poij122v"
                    ],
                    "backendPort": 8082,
                    "ingressPort": 9012
                  }
                ]
              },
              "l7LoadBalancerConfiguration": {
                "paths": [
                  {
                    "associatedResourceID": "r-12345678",
                    "path": "/path",
                    "port": 8080
                  }
                ]
              },
              "name": "Galera",
              "operatorCRDConfiguration": {
                "endpointConfiguration": {
                  "admin": {
                    "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                    "networkingType": "PRIVATE",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": false
                  },
                  "cluster": {
                    "host": "https://my-endpoint.com",
                    "networkingType": "PUBLIC",
                    "ports": [
                      8080,
                      8081
                    ],
                    "primary": true
                  }
                },
                "helmChartDependencies": [
                  {
                    "chartName": "cert-manager",
                    "chartVersion": "v1.5.3"
                  },
                  {
                    "chartName": "nginx-ingress",
                    "chartVersion": "v0.48.1"
                  },
                  {
                    "chartName": "external-dns",
                    "chartVersion": "v0.7.0"
                  },
                  {
                    "chartName": "cnpg-operator",
                    "chartVersion": "v0.23.1"
                  }
                ],
                "outputParameters": {
                  "expiresAt": "$out.status.notAfter",
                  "issuerName": "letsencrypt-prod"
                },
                "readinessConditions": {
                  "$out.status.conditions[?(@.type=='Ready')].status": true
                },
                "supplementalFiles": [
                  "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
                  "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
                ],
                "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
              },
              "productTierId": "pt-12345678",
              "proxyType": "PortsBasedProxy",
              "resourceType": "Generic",
              "serviceId": "s-12345678",
              "terraformConfigurations": {
                "Accusamus sed facere consectetur et qui.": {
                  "gitConfiguration": {
                    "accessToken": "my-token",
                    "referenceName": "tags/v1.0.0",
                    "repositoryUrl": "https://github.com/username/myrepo",
                    "userName": "my-user"
                  },
                  "privateModuleGitAccessTokens": {
                    "tokenName": "accessToken"
                  },
                  "requiredOutputKeys": [
                    "output1"
                  ],
                  "requiredOutputs": [
                    {
                      "exported": true,
                      "key": "output1"
                    }
                  ],
                  "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                  "terraformPath": "/project1/tf"
                },
                "Sequi asperiores.": {
                  "gitConfiguration": {
                    "accessToken": "my-token",
                    "referenceName": "tags/v1.0.0",
                    "repositoryUrl": "https://github.com/username/myrepo",
                    "userName": "my-user"
                  },
                  "privateModuleGitAccessTokens": {
                    "tokenName": "accessToken"
                  },
                  "requiredOutputKeys": [
                    "output1"
                  ],
                  "requiredOutputs": [
                    {
                      "exported": true,
                      "key": "output1"
                    }
                  ],
                  "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                  "terraformPath": "/project1/tf"
                }
              }
            }
          ]
        },
        "required": [
          "ids"
        ]
      },
      "ListSaaSPortalCustomDomainsResult": {
        "type": "object",
        "properties": {
          "customDomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomDomain"
            },
            "description": "The list of custom domains",
            "example": [
              {
                "clusterEndpoint": "example.com",
                "customDomain": "mycustomdomain.com",
                "description": "My custom domain description",
                "environmentType": "DEV",
                "name": "MyCustomDomain",
                "status": "READY"
              },
              {
                "clusterEndpoint": "example.com",
                "customDomain": "mycustomdomain.com",
                "description": "My custom domain description",
                "environmentType": "DEV",
                "name": "MyCustomDomain",
                "status": "READY"
              },
              {
                "clusterEndpoint": "example.com",
                "customDomain": "mycustomdomain.com",
                "description": "My custom domain description",
                "environmentType": "DEV",
                "name": "MyCustomDomain",
                "status": "READY"
              },
              {
                "clusterEndpoint": "example.com",
                "customDomain": "mycustomdomain.com",
                "description": "My custom domain description",
                "environmentType": "DEV",
                "name": "MyCustomDomain",
                "status": "READY"
              }
            ]
          }
        },
        "example": {
          "customDomains": [
            {
              "clusterEndpoint": "example.com",
              "customDomain": "mycustomdomain.com",
              "description": "My custom domain description",
              "environmentType": "DEV",
              "name": "MyCustomDomain",
              "status": "READY"
            },
            {
              "clusterEndpoint": "example.com",
              "customDomain": "mycustomdomain.com",
              "description": "My custom domain description",
              "environmentType": "DEV",
              "name": "MyCustomDomain",
              "status": "READY"
            },
            {
              "clusterEndpoint": "example.com",
              "customDomain": "mycustomdomain.com",
              "description": "My custom domain description",
              "environmentType": "DEV",
              "name": "MyCustomDomain",
              "status": "READY"
            },
            {
              "clusterEndpoint": "example.com",
              "customDomain": "mycustomdomain.com",
              "description": "My custom domain description",
              "environmentType": "DEV",
              "name": "MyCustomDomain",
              "status": "READY"
            }
          ]
        },
        "required": [
          "customDomains"
        ]
      },
      "ListSaaSPortalsResult": {
        "type": "object",
        "properties": {
          "saasPortals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaaSPortal"
            },
            "description": "The list of saas portals",
            "example": [
              {
                "customDomain": "mycustomdomain.com",
                "customDomainStatus": "READY",
                "detailedNetworkTopology": {
                  "r-abcd1234": {
                    "allowedIPRanges": [
                      "0.0.0.0/0"
                    ],
                    "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                    "clusterPorts": [
                      3306
                    ],
                    "main": true,
                    "networkingType": "PUBLIC",
                    "nodes": [
                      {
                        "availabilityZone": "us-east-2a",
                        "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                        "healthStatus": "healthy",
                        "id": "primary-0",
                        "ports": [
                          3306
                        ],
                        "status": "RUNNING"
                      }
                    ],
                    "privateNetworkCIDR": "10.0.0.2/24",
                    "privateNetworkID": "n-1234abcd",
                    "publiclyAccessible": true,
                    "resourceKey": "saasportal",
                    "resourceName": "SaaS Portal"
                  }
                },
                "emailConfig": {
                  "smtpFromEmail": "example@gmail.com",
                  "smtpHost": "smtp.gmail.com",
                  "smtpPassword": "password",
                  "smtpPort": 587,
                  "smtpUsername": "username"
                },
                "endpoint": "https://saas-portal.example.com",
                "environmentType": "DEV",
                "googleAnalyticsTagID": "G-123456789",
                "imageConfig": {
                  "imageName": "myimage",
                  "imageRegistry": "ghcr.io",
                  "imageTag": "latest"
                },
                "status": "READY"
              },
              {
                "customDomain": "mycustomdomain.com",
                "customDomainStatus": "READY",
                "detailedNetworkTopology": {
                  "r-abcd1234": {
                    "allowedIPRanges": [
                      "0.0.0.0/0"
                    ],
                    "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                    "clusterPorts": [
                      3306
                    ],
                    "main": true,
                    "networkingType": "PUBLIC",
                    "nodes": [
                      {
                        "availabilityZone": "us-east-2a",
                        "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                        "healthStatus": "healthy",
                        "id": "primary-0",
                        "ports": [
                          3306
                        ],
                        "status": "RUNNING"
                      }
                    ],
                    "privateNetworkCIDR": "10.0.0.2/24",
                    "privateNetworkID": "n-1234abcd",
                    "publiclyAccessible": true,
                    "resourceKey": "saasportal",
                    "resourceName": "SaaS Portal"
                  }
                },
                "emailConfig": {
                  "smtpFromEmail": "example@gmail.com",
                  "smtpHost": "smtp.gmail.com",
                  "smtpPassword": "password",
                  "smtpPort": 587,
                  "smtpUsername": "username"
                },
                "endpoint": "https://saas-portal.example.com",
                "environmentType": "DEV",
                "googleAnalyticsTagID": "G-123456789",
                "imageConfig": {
                  "imageName": "myimage",
                  "imageRegistry": "ghcr.io",
                  "imageTag": "latest"
                },
                "status": "READY"
              },
              {
                "customDomain": "mycustomdomain.com",
                "customDomainStatus": "READY",
                "detailedNetworkTopology": {
                  "r-abcd1234": {
                    "allowedIPRanges": [
                      "0.0.0.0/0"
                    ],
                    "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                    "clusterPorts": [
                      3306
                    ],
                    "main": true,
                    "networkingType": "PUBLIC",
                    "nodes": [
                      {
                        "availabilityZone": "us-east-2a",
                        "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                        "healthStatus": "healthy",
                        "id": "primary-0",
                        "ports": [
                          3306
                        ],
                        "status": "RUNNING"
                      }
                    ],
                    "privateNetworkCIDR": "10.0.0.2/24",
                    "privateNetworkID": "n-1234abcd",
                    "publiclyAccessible": true,
                    "resourceKey": "saasportal",
                    "resourceName": "SaaS Portal"
                  }
                },
                "emailConfig": {
                  "smtpFromEmail": "example@gmail.com",
                  "smtpHost": "smtp.gmail.com",
                  "smtpPassword": "password",
                  "smtpPort": 587,
                  "smtpUsername": "username"
                },
                "endpoint": "https://saas-portal.example.com",
                "environmentType": "DEV",
                "googleAnalyticsTagID": "G-123456789",
                "imageConfig": {
                  "imageName": "myimage",
                  "imageRegistry": "ghcr.io",
                  "imageTag": "latest"
                },
                "status": "READY"
              }
            ]
          }
        },
        "example": {
          "saasPortals": [
            {
              "customDomain": "mycustomdomain.com",
              "customDomainStatus": "READY",
              "detailedNetworkTopology": {
                "r-abcd1234": {
                  "allowedIPRanges": [
                    "0.0.0.0/0"
                  ],
                  "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                  "clusterPorts": [
                    3306
                  ],
                  "main": true,
                  "networkingType": "PUBLIC",
                  "nodes": [
                    {
                      "availabilityZone": "us-east-2a",
                      "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                      "healthStatus": "healthy",
                      "id": "primary-0",
                      "ports": [
                        3306
                      ],
                      "status": "RUNNING"
                    }
                  ],
                  "privateNetworkCIDR": "10.0.0.2/24",
                  "privateNetworkID": "n-1234abcd",
                  "publiclyAccessible": true,
                  "resourceKey": "saasportal",
                  "resourceName": "SaaS Portal"
                }
              },
              "emailConfig": {
                "smtpFromEmail": "example@gmail.com",
                "smtpHost": "smtp.gmail.com",
                "smtpPassword": "password",
                "smtpPort": 587,
                "smtpUsername": "username"
              },
              "endpoint": "https://saas-portal.example.com",
              "environmentType": "DEV",
              "googleAnalyticsTagID": "G-123456789",
              "imageConfig": {
                "imageName": "myimage",
                "imageRegistry": "ghcr.io",
                "imageTag": "latest"
              },
              "status": "READY"
            },
            {
              "customDomain": "mycustomdomain.com",
              "customDomainStatus": "READY",
              "detailedNetworkTopology": {
                "r-abcd1234": {
                  "allowedIPRanges": [
                    "0.0.0.0/0"
                  ],
                  "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                  "clusterPorts": [
                    3306
                  ],
                  "main": true,
                  "networkingType": "PUBLIC",
                  "nodes": [
                    {
                      "availabilityZone": "us-east-2a",
                      "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                      "healthStatus": "healthy",
                      "id": "primary-0",
                      "ports": [
                        3306
                      ],
                      "status": "RUNNING"
                    }
                  ],
                  "privateNetworkCIDR": "10.0.0.2/24",
                  "privateNetworkID": "n-1234abcd",
                  "publiclyAccessible": true,
                  "resourceKey": "saasportal",
                  "resourceName": "SaaS Portal"
                }
              },
              "emailConfig": {
                "smtpFromEmail": "example@gmail.com",
                "smtpHost": "smtp.gmail.com",
                "smtpPassword": "password",
                "smtpPort": 587,
                "smtpUsername": "username"
              },
              "endpoint": "https://saas-portal.example.com",
              "environmentType": "DEV",
              "googleAnalyticsTagID": "G-123456789",
              "imageConfig": {
                "imageName": "myimage",
                "imageRegistry": "ghcr.io",
                "imageTag": "latest"
              },
              "status": "READY"
            },
            {
              "customDomain": "mycustomdomain.com",
              "customDomainStatus": "READY",
              "detailedNetworkTopology": {
                "r-abcd1234": {
                  "allowedIPRanges": [
                    "0.0.0.0/0"
                  ],
                  "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                  "clusterPorts": [
                    3306
                  ],
                  "main": true,
                  "networkingType": "PUBLIC",
                  "nodes": [
                    {
                      "availabilityZone": "us-east-2a",
                      "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                      "healthStatus": "healthy",
                      "id": "primary-0",
                      "ports": [
                        3306
                      ],
                      "status": "RUNNING"
                    }
                  ],
                  "privateNetworkCIDR": "10.0.0.2/24",
                  "privateNetworkID": "n-1234abcd",
                  "publiclyAccessible": true,
                  "resourceKey": "saasportal",
                  "resourceName": "SaaS Portal"
                }
              },
              "emailConfig": {
                "smtpFromEmail": "example@gmail.com",
                "smtpHost": "smtp.gmail.com",
                "smtpPassword": "password",
                "smtpPort": 587,
                "smtpUsername": "username"
              },
              "endpoint": "https://saas-portal.example.com",
              "environmentType": "DEV",
              "googleAnalyticsTagID": "G-123456789",
              "imageConfig": {
                "imageName": "myimage",
                "imageRegistry": "ghcr.io",
                "imageTag": "latest"
              },
              "status": "READY"
            }
          ]
        },
        "required": [
          "saasPortals"
        ]
      },
      "ListServiceEnvironmentsResult": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Voluptates culpa quaerat."
            },
            "description": "The list of service environment IDs",
            "example": [
              "se-12345678",
              "se-23456789"
            ]
          },
          "nextPageToken": {
            "type": "string",
            "description": "The next token to use to retrieve the next page of results",
            "example": "next-token"
          }
        },
        "example": {
          "ids": [
            "se-12345678",
            "se-23456789"
          ],
          "nextPageToken": "next-token"
        },
        "required": [
          "ids"
        ]
      },
      "ListServiceOfferingsResult": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "Token to use for the next request",
            "example": "next-token"
          },
          "serviceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Qui cum nihil asperiores atque atque magni."
            },
            "description": "The service IDs",
            "example": [
              "s-12345678",
              "s-abcdefgh"
            ]
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribeServiceOfferingResult"
            },
            "description": "List of services",
            "example": [
              {
                "createdAt": "2019-01-01T00:00:00Z",
                "isDeprecated": false,
                "offerings": [
                  {
                    "assets": {
                      "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                      "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                    },
                    "billingPlans": [
                      {
                        "maxNumberofInstances": 4
                      }
                    ],
                    "productTierName": "Premium",
                    "productTierURLKey": "premium",
                    "resourceParameters": [
                      {
                        "name": "MySQL",
                        "urlKey": "mysql"
                      },
                      {
                        "name": "Redis",
                        "urlKey": "redis"
                      }
                    ],
                    "serviceAPIID": "sa-12345678",
                    "serviceAPIVersion": "v1",
                    "serviceEnvironmentName": "Production",
                    "serviceEnvironmentURLKey": "prod",
                    "serviceEnvironmentVisibility": "PRIVATE",
                    "serviceModelName": "Bring Your Own Account",
                    "serviceModelURLKey": "byoa"
                  },
                  {
                    "productTierName": "Basic",
                    "productTierURLKey": "basic",
                    "resourceParameters": [
                      {
                        "name": "MySQL",
                        "urlKey": "mysql"
                      },
                      {
                        "name": "Redis",
                        "urlKey": "redis"
                      }
                    ],
                    "serviceAPIID": "sa-abcdefgh",
                    "serviceAPIVersion": "v1",
                    "serviceEnvironmentName": "Production",
                    "serviceEnvironmentURLKey": "prod",
                    "serviceEnvironmentVisibility": "PUBLIC",
                    "serviceModelName": "Hosted",
                    "serviceModelURLKey": "hosted"
                  }
                ],
                "serviceDescription": "MySQL is a relational database",
                "serviceId": "s-12345678",
                "serviceName": "MySQL",
                "serviceOrgId": "org-12345678",
                "serviceProviderId": "sp-9zrg9W8Are",
                "serviceProviderName": "Omnistrate, Inc.",
                "serviceURLKey": "mysql"
              },
              {
                "createdAt": "2019-01-01T00:00:00Z",
                "isDeprecated": false,
                "offerings": [
                  {
                    "assets": {
                      "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                      "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                    },
                    "billingPlans": [
                      {
                        "maxNumberofInstances": 4
                      }
                    ],
                    "productTierName": "Premium",
                    "productTierURLKey": "premium",
                    "resourceParameters": [
                      {
                        "name": "MySQL",
                        "urlKey": "mysql"
                      },
                      {
                        "name": "Redis",
                        "urlKey": "redis"
                      }
                    ],
                    "serviceAPIID": "sa-12345678",
                    "serviceAPIVersion": "v1",
                    "serviceEnvironmentName": "Production",
                    "serviceEnvironmentURLKey": "prod",
                    "serviceEnvironmentVisibility": "PRIVATE",
                    "serviceModelName": "Bring Your Own Account",
                    "serviceModelURLKey": "byoa"
                  },
                  {
                    "productTierName": "Basic",
                    "productTierURLKey": "basic",
                    "resourceParameters": [
                      {
                        "name": "MySQL",
                        "urlKey": "mysql"
                      },
                      {
                        "name": "Redis",
                        "urlKey": "redis"
                      }
                    ],
                    "serviceAPIID": "sa-abcdefgh",
                    "serviceAPIVersion": "v1",
                    "serviceEnvironmentName": "Production",
                    "serviceEnvironmentURLKey": "prod",
                    "serviceEnvironmentVisibility": "PUBLIC",
                    "serviceModelName": "Hosted",
                    "serviceModelURLKey": "hosted"
                  }
                ],
                "serviceDescription": "MySQL is a relational database",
                "serviceId": "s-12345678",
                "serviceName": "MySQL",
                "serviceOrgId": "org-12345678",
                "serviceProviderId": "sp-9zrg9W8Are",
                "serviceProviderName": "Omnistrate, Inc.",
                "serviceURLKey": "mysql"
              },
              {
                "createdAt": "2019-01-01T00:00:00Z",
                "isDeprecated": false,
                "offerings": [
                  {
                    "assets": {
                      "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                      "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                    },
                    "billingPlans": [
                      {
                        "maxNumberofInstances": 4
                      }
                    ],
                    "productTierName": "Premium",
                    "productTierURLKey": "premium",
                    "resourceParameters": [
                      {
                        "name": "MySQL",
                        "urlKey": "mysql"
                      },
                      {
                        "name": "Redis",
                        "urlKey": "redis"
                      }
                    ],
                    "serviceAPIID": "sa-12345678",
                    "serviceAPIVersion": "v1",
                    "serviceEnvironmentName": "Production",
                    "serviceEnvironmentURLKey": "prod",
                    "serviceEnvironmentVisibility": "PRIVATE",
                    "serviceModelName": "Bring Your Own Account",
                    "serviceModelURLKey": "byoa"
                  },
                  {
                    "productTierName": "Basic",
                    "productTierURLKey": "basic",
                    "resourceParameters": [
                      {
                        "name": "MySQL",
                        "urlKey": "mysql"
                      },
                      {
                        "name": "Redis",
                        "urlKey": "redis"
                      }
                    ],
                    "serviceAPIID": "sa-abcdefgh",
                    "serviceAPIVersion": "v1",
                    "serviceEnvironmentName": "Production",
                    "serviceEnvironmentURLKey": "prod",
                    "serviceEnvironmentVisibility": "PUBLIC",
                    "serviceModelName": "Hosted",
                    "serviceModelURLKey": "hosted"
                  }
                ],
                "serviceDescription": "MySQL is a relational database",
                "serviceId": "s-12345678",
                "serviceName": "MySQL",
                "serviceOrgId": "org-12345678",
                "serviceProviderId": "sp-9zrg9W8Are",
                "serviceProviderName": "Omnistrate, Inc.",
                "serviceURLKey": "mysql"
              },
              {
                "createdAt": "2019-01-01T00:00:00Z",
                "isDeprecated": false,
                "offerings": [
                  {
                    "assets": {
                      "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                      "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                    },
                    "billingPlans": [
                      {
                        "maxNumberofInstances": 4
                      }
                    ],
                    "productTierName": "Premium",
                    "productTierURLKey": "premium",
                    "resourceParameters": [
                      {
                        "name": "MySQL",
                        "urlKey": "mysql"
                      },
                      {
                        "name": "Redis",
                        "urlKey": "redis"
                      }
                    ],
                    "serviceAPIID": "sa-12345678",
                    "serviceAPIVersion": "v1",
                    "serviceEnvironmentName": "Production",
                    "serviceEnvironmentURLKey": "prod",
                    "serviceEnvironmentVisibility": "PRIVATE",
                    "serviceModelName": "Bring Your Own Account",
                    "serviceModelURLKey": "byoa"
                  },
                  {
                    "productTierName": "Basic",
                    "productTierURLKey": "basic",
                    "resourceParameters": [
                      {
                        "name": "MySQL",
                        "urlKey": "mysql"
                      },
                      {
                        "name": "Redis",
                        "urlKey": "redis"
                      }
                    ],
                    "serviceAPIID": "sa-abcdefgh",
                    "serviceAPIVersion": "v1",
                    "serviceEnvironmentName": "Production",
                    "serviceEnvironmentURLKey": "prod",
                    "serviceEnvironmentVisibility": "PUBLIC",
                    "serviceModelName": "Hosted",
                    "serviceModelURLKey": "hosted"
                  }
                ],
                "serviceDescription": "MySQL is a relational database",
                "serviceId": "s-12345678",
                "serviceName": "MySQL",
                "serviceOrgId": "org-12345678",
                "serviceProviderId": "sp-9zrg9W8Are",
                "serviceProviderName": "Omnistrate, Inc.",
                "serviceURLKey": "mysql"
              }
            ]
          }
        },
        "example": {
          "nextPageToken": "next-token",
          "serviceIds": [
            "s-12345678",
            "s-abcdefgh"
          ],
          "services": [
            {
              "createdAt": "2019-01-01T00:00:00Z",
              "isDeprecated": false,
              "offerings": [
                {
                  "assets": {
                    "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                    "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                  },
                  "billingPlans": [
                    {
                      "maxNumberofInstances": 4
                    }
                  ],
                  "productTierName": "Premium",
                  "productTierURLKey": "premium",
                  "resourceParameters": [
                    {
                      "name": "MySQL",
                      "urlKey": "mysql"
                    },
                    {
                      "name": "Redis",
                      "urlKey": "redis"
                    }
                  ],
                  "serviceAPIID": "sa-12345678",
                  "serviceAPIVersion": "v1",
                  "serviceEnvironmentName": "Production",
                  "serviceEnvironmentURLKey": "prod",
                  "serviceEnvironmentVisibility": "PRIVATE",
                  "serviceModelName": "Bring Your Own Account",
                  "serviceModelURLKey": "byoa"
                },
                {
                  "productTierName": "Basic",
                  "productTierURLKey": "basic",
                  "resourceParameters": [
                    {
                      "name": "MySQL",
                      "urlKey": "mysql"
                    },
                    {
                      "name": "Redis",
                      "urlKey": "redis"
                    }
                  ],
                  "serviceAPIID": "sa-abcdefgh",
                  "serviceAPIVersion": "v1",
                  "serviceEnvironmentName": "Production",
                  "serviceEnvironmentURLKey": "prod",
                  "serviceEnvironmentVisibility": "PUBLIC",
                  "serviceModelName": "Hosted",
                  "serviceModelURLKey": "hosted"
                }
              ],
              "serviceDescription": "MySQL is a relational database",
              "serviceId": "s-12345678",
              "serviceName": "MySQL",
              "serviceOrgId": "org-12345678",
              "serviceProviderId": "sp-9zrg9W8Are",
              "serviceProviderName": "Omnistrate, Inc.",
              "serviceURLKey": "mysql"
            },
            {
              "createdAt": "2019-01-01T00:00:00Z",
              "isDeprecated": false,
              "offerings": [
                {
                  "assets": {
                    "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                    "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                  },
                  "billingPlans": [
                    {
                      "maxNumberofInstances": 4
                    }
                  ],
                  "productTierName": "Premium",
                  "productTierURLKey": "premium",
                  "resourceParameters": [
                    {
                      "name": "MySQL",
                      "urlKey": "mysql"
                    },
                    {
                      "name": "Redis",
                      "urlKey": "redis"
                    }
                  ],
                  "serviceAPIID": "sa-12345678",
                  "serviceAPIVersion": "v1",
                  "serviceEnvironmentName": "Production",
                  "serviceEnvironmentURLKey": "prod",
                  "serviceEnvironmentVisibility": "PRIVATE",
                  "serviceModelName": "Bring Your Own Account",
                  "serviceModelURLKey": "byoa"
                },
                {
                  "productTierName": "Basic",
                  "productTierURLKey": "basic",
                  "resourceParameters": [
                    {
                      "name": "MySQL",
                      "urlKey": "mysql"
                    },
                    {
                      "name": "Redis",
                      "urlKey": "redis"
                    }
                  ],
                  "serviceAPIID": "sa-abcdefgh",
                  "serviceAPIVersion": "v1",
                  "serviceEnvironmentName": "Production",
                  "serviceEnvironmentURLKey": "prod",
                  "serviceEnvironmentVisibility": "PUBLIC",
                  "serviceModelName": "Hosted",
                  "serviceModelURLKey": "hosted"
                }
              ],
              "serviceDescription": "MySQL is a relational database",
              "serviceId": "s-12345678",
              "serviceName": "MySQL",
              "serviceOrgId": "org-12345678",
              "serviceProviderId": "sp-9zrg9W8Are",
              "serviceProviderName": "Omnistrate, Inc.",
              "serviceURLKey": "mysql"
            },
            {
              "createdAt": "2019-01-01T00:00:00Z",
              "isDeprecated": false,
              "offerings": [
                {
                  "assets": {
                    "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                    "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                  },
                  "billingPlans": [
                    {
                      "maxNumberofInstances": 4
                    }
                  ],
                  "productTierName": "Premium",
                  "productTierURLKey": "premium",
                  "resourceParameters": [
                    {
                      "name": "MySQL",
                      "urlKey": "mysql"
                    },
                    {
                      "name": "Redis",
                      "urlKey": "redis"
                    }
                  ],
                  "serviceAPIID": "sa-12345678",
                  "serviceAPIVersion": "v1",
                  "serviceEnvironmentName": "Production",
                  "serviceEnvironmentURLKey": "prod",
                  "serviceEnvironmentVisibility": "PRIVATE",
                  "serviceModelName": "Bring Your Own Account",
                  "serviceModelURLKey": "byoa"
                },
                {
                  "productTierName": "Basic",
                  "productTierURLKey": "basic",
                  "resourceParameters": [
                    {
                      "name": "MySQL",
                      "urlKey": "mysql"
                    },
                    {
                      "name": "Redis",
                      "urlKey": "redis"
                    }
                  ],
                  "serviceAPIID": "sa-abcdefgh",
                  "serviceAPIVersion": "v1",
                  "serviceEnvironmentName": "Production",
                  "serviceEnvironmentURLKey": "prod",
                  "serviceEnvironmentVisibility": "PUBLIC",
                  "serviceModelName": "Hosted",
                  "serviceModelURLKey": "hosted"
                }
              ],
              "serviceDescription": "MySQL is a relational database",
              "serviceId": "s-12345678",
              "serviceName": "MySQL",
              "serviceOrgId": "org-12345678",
              "serviceProviderId": "sp-9zrg9W8Are",
              "serviceProviderName": "Omnistrate, Inc.",
              "serviceURLKey": "mysql"
            },
            {
              "createdAt": "2019-01-01T00:00:00Z",
              "isDeprecated": false,
              "offerings": [
                {
                  "assets": {
                    "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
                    "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
                  },
                  "billingPlans": [
                    {
                      "maxNumberofInstances": 4
                    }
                  ],
                  "productTierName": "Premium",
                  "productTierURLKey": "premium",
                  "resourceParameters": [
                    {
                      "name": "MySQL",
                      "urlKey": "mysql"
                    },
                    {
                      "name": "Redis",
                      "urlKey": "redis"
                    }
                  ],
                  "serviceAPIID": "sa-12345678",
                  "serviceAPIVersion": "v1",
                  "serviceEnvironmentName": "Production",
                  "serviceEnvironmentURLKey": "prod",
                  "serviceEnvironmentVisibility": "PRIVATE",
                  "serviceModelName": "Bring Your Own Account",
                  "serviceModelURLKey": "byoa"
                },
                {
                  "productTierName": "Basic",
                  "productTierURLKey": "basic",
                  "resourceParameters": [
                    {
                      "name": "MySQL",
                      "urlKey": "mysql"
                    },
                    {
                      "name": "Redis",
                      "urlKey": "redis"
                    }
                  ],
                  "serviceAPIID": "sa-abcdefgh",
                  "serviceAPIVersion": "v1",
                  "serviceEnvironmentName": "Production",
                  "serviceEnvironmentURLKey": "prod",
                  "serviceEnvironmentVisibility": "PUBLIC",
                  "serviceModelName": "Hosted",
                  "serviceModelURLKey": "hosted"
                }
              ],
              "serviceDescription": "MySQL is a relational database",
              "serviceId": "s-12345678",
              "serviceName": "MySQL",
              "serviceOrgId": "org-12345678",
              "serviceProviderId": "sp-9zrg9W8Are",
              "serviceProviderName": "Omnistrate, Inc.",
              "serviceURLKey": "mysql"
            }
          ]
        },
        "required": [
          "serviceIds"
        ]
      },
      "ListServicePlansResult": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "Token to use for the next page",
            "example": "next-token"
          },
          "servicePlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetServicePlanResult"
            },
            "description": "List of service plans",
            "example": [
              {
                "AutoApproveSubscription": false,
                "accountConfigIds": [
                  "ac-12345678",
                  "ac-23456789"
                ],
                "activeAccountConfigIds": {
                  "aws": "ac-12345678",
                  "gcp": "ac-23456789"
                },
                "apiVersion": "v1",
                "awsRegions": [
                  "us-east-2",
                  "ca-central-1"
                ],
                "deploymentConfigId": "dc-12345678",
                "gcpRegions": [
                  "us-central1"
                ],
                "hasPendingChanges": true,
                "isProductTierDisabled": true,
                "latestMajorVersion": "3.0",
                "modelType": "CUSTOMER_HOSTED",
                "productTierDescription": "A premium product tier",
                "productTierDocumentation": "Any documentation",
                "productTierFeatures": {
                  "BILLING": false,
                  "LOGS": true,
                  "METRICS": false
                },
                "productTierId": "pt-12345678",
                "productTierKey": "premium",
                "productTierName": "Premium",
                "productTierPlanDescription": "A premium plan",
                "productTierPricing": {
                  "price1": "value1"
                },
                "productTierSupport": "Any support",
                "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                "serviceApiId": "sa-12345678",
                "serviceEnvironmentId": "se-12345678",
                "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                "serviceModelFeatures": [
                  {
                    "configuration": {
                      "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                      "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                    },
                    "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                  },
                  {
                    "configuration": {
                      "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                      "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                    },
                    "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                  },
                  {
                    "configuration": {
                      "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                      "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                    },
                    "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                  },
                  {
                    "configuration": {
                      "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                      "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                    },
                    "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                  }
                ],
                "serviceModelId": "sm-12345678",
                "serviceModelName": "MySQL multi-writer service hosted model",
                "tierType": "OMNISTRATE_DEDICATED_TENANCY",
                "versionSetStatus": "Preferred|Active|Deprecated|Pending"
              },
              {
                "AutoApproveSubscription": false,
                "accountConfigIds": [
                  "ac-12345678",
                  "ac-23456789"
                ],
                "activeAccountConfigIds": {
                  "aws": "ac-12345678",
                  "gcp": "ac-23456789"
                },
                "apiVersion": "v1",
                "awsRegions": [
                  "us-east-2",
                  "ca-central-1"
                ],
                "deploymentConfigId": "dc-12345678",
                "gcpRegions": [
                  "us-central1"
                ],
                "hasPendingChanges": true,
                "isProductTierDisabled": true,
                "latestMajorVersion": "3.0",
                "modelType": "CUSTOMER_HOSTED",
                "productTierDescription": "A premium product tier",
                "productTierDocumentation": "Any documentation",
                "productTierFeatures": {
                  "BILLING": false,
                  "LOGS": true,
                  "METRICS": false
                },
                "productTierId": "pt-12345678",
                "productTierKey": "premium",
                "productTierName": "Premium",
                "productTierPlanDescription": "A premium plan",
                "productTierPricing": {
                  "price1": "value1"
                },
                "productTierSupport": "Any support",
                "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
                "serviceApiId": "sa-12345678",
                "serviceEnvironmentId": "se-12345678",
                "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
                "serviceModelFeatures": [
                  {
                    "configuration": {
                      "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                      "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                    },
                    "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                  },
                  {
                    "configuration": {
                      "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                      "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                    },
                    "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                  },
                  {
                    "configuration": {
                      "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                      "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                    },
                    "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                  },
                  {
                    "configuration": {
                      "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                      "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                    },
                    "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                  }
                ],
                "serviceModelId": "sm-12345678",
                "serviceModelName": "MySQL multi-writer service hosted model",
                "tierType": "OMNISTRATE_DEDICATED_TENANCY",
                "versionSetStatus": "Preferred|Active|Deprecated|Pending"
              }
            ]
          }
        },
        "example": {
          "nextPageToken": "next-token",
          "servicePlans": [
            {
              "AutoApproveSubscription": false,
              "accountConfigIds": [
                "ac-12345678",
                "ac-23456789"
              ],
              "activeAccountConfigIds": {
                "aws": "ac-12345678",
                "gcp": "ac-23456789"
              },
              "apiVersion": "v1",
              "awsRegions": [
                "us-east-2",
                "ca-central-1"
              ],
              "deploymentConfigId": "dc-12345678",
              "gcpRegions": [
                "us-central1"
              ],
              "hasPendingChanges": true,
              "isProductTierDisabled": true,
              "latestMajorVersion": "3.0",
              "modelType": "CUSTOMER_HOSTED",
              "productTierDescription": "A premium product tier",
              "productTierDocumentation": "Any documentation",
              "productTierFeatures": {
                "BILLING": false,
                "LOGS": true,
                "METRICS": false
              },
              "productTierId": "pt-12345678",
              "productTierKey": "premium",
              "productTierName": "Premium",
              "productTierPlanDescription": "A premium plan",
              "productTierPricing": {
                "price1": "value1"
              },
              "productTierSupport": "Any support",
              "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
              "serviceApiId": "sa-12345678",
              "serviceEnvironmentId": "se-12345678",
              "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
              "serviceModelFeatures": [
                {
                  "configuration": {
                    "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                    "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                  },
                  "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                },
                {
                  "configuration": {
                    "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                    "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                  },
                  "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                },
                {
                  "configuration": {
                    "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                    "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                  },
                  "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                },
                {
                  "configuration": {
                    "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                    "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                  },
                  "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                }
              ],
              "serviceModelId": "sm-12345678",
              "serviceModelName": "MySQL multi-writer service hosted model",
              "tierType": "OMNISTRATE_DEDICATED_TENANCY",
              "versionSetStatus": "Preferred|Active|Deprecated|Pending"
            },
            {
              "AutoApproveSubscription": false,
              "accountConfigIds": [
                "ac-12345678",
                "ac-23456789"
              ],
              "activeAccountConfigIds": {
                "aws": "ac-12345678",
                "gcp": "ac-23456789"
              },
              "apiVersion": "v1",
              "awsRegions": [
                "us-east-2",
                "ca-central-1"
              ],
              "deploymentConfigId": "dc-12345678",
              "gcpRegions": [
                "us-central1"
              ],
              "hasPendingChanges": true,
              "isProductTierDisabled": true,
              "latestMajorVersion": "3.0",
              "modelType": "CUSTOMER_HOSTED",
              "productTierDescription": "A premium product tier",
              "productTierDocumentation": "Any documentation",
              "productTierFeatures": {
                "BILLING": false,
                "LOGS": true,
                "METRICS": false
              },
              "productTierId": "pt-12345678",
              "productTierKey": "premium",
              "productTierName": "Premium",
              "productTierPlanDescription": "A premium plan",
              "productTierPricing": {
                "price1": "value1"
              },
              "productTierSupport": "Any support",
              "serviceApiDescription": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability",
              "serviceApiId": "sa-12345678",
              "serviceEnvironmentId": "se-12345678",
              "serviceModelDescription": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
              "serviceModelFeatures": [
                {
                  "configuration": {
                    "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                    "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                  },
                  "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                },
                {
                  "configuration": {
                    "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                    "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                  },
                  "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                },
                {
                  "configuration": {
                    "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                    "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                  },
                  "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                },
                {
                  "configuration": {
                    "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                    "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                  },
                  "feature": "Eum temporibus voluptate inventore est consectetur omnis."
                }
              ],
              "serviceModelId": "sm-12345678",
              "serviceModelName": "MySQL multi-writer service hosted model",
              "tierType": "OMNISTRATE_DEDICATED_TENANCY",
              "versionSetStatus": "Preferred|Active|Deprecated|Pending"
            }
          ]
        },
        "required": [
          "servicePlans"
        ]
      },
      "ListServiceResult": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Placeat quaerat."
            },
            "description": "List of service IDs",
            "example": [
              "s-12345678",
              "s-abcdefgh",
              "s-1234efgh"
            ]
          },
          "nextPageToken": {
            "type": "string",
            "description": "Token to retrieve the next page of results",
            "example": "next-token"
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribeServiceResult"
            },
            "description": "List of services",
            "example": [
              {
                "createdAt": "2019-01-01T00:00:00Z",
                "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                "id": "s-12345678",
                "key": "mysql",
                "name": "MySQL multi-writer service",
                "roleType": "admin",
                "serviceEnvironments": [
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  },
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  },
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  },
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  }
                ],
                "serviceLogoURL": "Aliquid pariatur molestiae quod unde.",
                "serviceProviderID": "sp-12345678",
                "serviceProviderName": "Omnistrate, Inc."
              },
              {
                "createdAt": "2019-01-01T00:00:00Z",
                "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                "id": "s-12345678",
                "key": "mysql",
                "name": "MySQL multi-writer service",
                "roleType": "admin",
                "serviceEnvironments": [
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  },
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  },
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  },
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  }
                ],
                "serviceLogoURL": "Aliquid pariatur molestiae quod unde.",
                "serviceProviderID": "sp-12345678",
                "serviceProviderName": "Omnistrate, Inc."
              },
              {
                "createdAt": "2019-01-01T00:00:00Z",
                "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                "id": "s-12345678",
                "key": "mysql",
                "name": "MySQL multi-writer service",
                "roleType": "admin",
                "serviceEnvironments": [
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  },
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  },
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  },
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  }
                ],
                "serviceLogoURL": "Aliquid pariatur molestiae quod unde.",
                "serviceProviderID": "sp-12345678",
                "serviceProviderName": "Omnistrate, Inc."
              },
              {
                "createdAt": "2019-01-01T00:00:00Z",
                "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                "id": "s-12345678",
                "key": "mysql",
                "name": "MySQL multi-writer service",
                "roleType": "admin",
                "serviceEnvironments": [
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  },
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  },
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  },
                  {
                    "id": "se-12345678",
                    "name": "dev",
                    "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                    "saasPortalStatus": "READY",
                    "saasPortalUrl": "https://saas-portal.example.com",
                    "servicePlans": [
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      },
                      {
                        "description": "A Basic product tier",
                        "modelType": "CUSTOMER_HOSTED",
                        "name": "Basic",
                        "productTierID": "pt-12345678",
                        "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                      }
                    ],
                    "sourceEnvironmentID": "se-12345678",
                    "sourceEnvironmentName": "dev",
                    "type": "DEV",
                    "visibility": "private"
                  }
                ],
                "serviceLogoURL": "Aliquid pariatur molestiae quod unde.",
                "serviceProviderID": "sp-12345678",
                "serviceProviderName": "Omnistrate, Inc."
              }
            ]
          }
        },
        "example": {
          "ids": [
            "s-12345678",
            "s-abcdefgh",
            "s-1234efgh"
          ],
          "nextPageToken": "next-token",
          "services": [
            {
              "createdAt": "2019-01-01T00:00:00Z",
              "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
              "id": "s-12345678",
              "key": "mysql",
              "name": "MySQL multi-writer service",
              "roleType": "admin",
              "serviceEnvironments": [
                {
                  "id": "se-12345678",
                  "name": "dev",
                  "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "servicePlans": [
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    }
                  ],
                  "sourceEnvironmentID": "se-12345678",
                  "sourceEnvironmentName": "dev",
                  "type": "DEV",
                  "visibility": "private"
                },
                {
                  "id": "se-12345678",
                  "name": "dev",
                  "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "servicePlans": [
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    }
                  ],
                  "sourceEnvironmentID": "se-12345678",
                  "sourceEnvironmentName": "dev",
                  "type": "DEV",
                  "visibility": "private"
                },
                {
                  "id": "se-12345678",
                  "name": "dev",
                  "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "servicePlans": [
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    }
                  ],
                  "sourceEnvironmentID": "se-12345678",
                  "sourceEnvironmentName": "dev",
                  "type": "DEV",
                  "visibility": "private"
                },
                {
                  "id": "se-12345678",
                  "name": "dev",
                  "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "servicePlans": [
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    }
                  ],
                  "sourceEnvironmentID": "se-12345678",
                  "sourceEnvironmentName": "dev",
                  "type": "DEV",
                  "visibility": "private"
                }
              ],
              "serviceLogoURL": "Aliquid pariatur molestiae quod unde.",
              "serviceProviderID": "sp-12345678",
              "serviceProviderName": "Omnistrate, Inc."
            },
            {
              "createdAt": "2019-01-01T00:00:00Z",
              "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
              "id": "s-12345678",
              "key": "mysql",
              "name": "MySQL multi-writer service",
              "roleType": "admin",
              "serviceEnvironments": [
                {
                  "id": "se-12345678",
                  "name": "dev",
                  "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "servicePlans": [
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    }
                  ],
                  "sourceEnvironmentID": "se-12345678",
                  "sourceEnvironmentName": "dev",
                  "type": "DEV",
                  "visibility": "private"
                },
                {
                  "id": "se-12345678",
                  "name": "dev",
                  "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "servicePlans": [
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    }
                  ],
                  "sourceEnvironmentID": "se-12345678",
                  "sourceEnvironmentName": "dev",
                  "type": "DEV",
                  "visibility": "private"
                },
                {
                  "id": "se-12345678",
                  "name": "dev",
                  "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "servicePlans": [
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    }
                  ],
                  "sourceEnvironmentID": "se-12345678",
                  "sourceEnvironmentName": "dev",
                  "type": "DEV",
                  "visibility": "private"
                },
                {
                  "id": "se-12345678",
                  "name": "dev",
                  "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "servicePlans": [
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    }
                  ],
                  "sourceEnvironmentID": "se-12345678",
                  "sourceEnvironmentName": "dev",
                  "type": "DEV",
                  "visibility": "private"
                }
              ],
              "serviceLogoURL": "Aliquid pariatur molestiae quod unde.",
              "serviceProviderID": "sp-12345678",
              "serviceProviderName": "Omnistrate, Inc."
            },
            {
              "createdAt": "2019-01-01T00:00:00Z",
              "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
              "id": "s-12345678",
              "key": "mysql",
              "name": "MySQL multi-writer service",
              "roleType": "admin",
              "serviceEnvironments": [
                {
                  "id": "se-12345678",
                  "name": "dev",
                  "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "servicePlans": [
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    }
                  ],
                  "sourceEnvironmentID": "se-12345678",
                  "sourceEnvironmentName": "dev",
                  "type": "DEV",
                  "visibility": "private"
                },
                {
                  "id": "se-12345678",
                  "name": "dev",
                  "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "servicePlans": [
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    }
                  ],
                  "sourceEnvironmentID": "se-12345678",
                  "sourceEnvironmentName": "dev",
                  "type": "DEV",
                  "visibility": "private"
                },
                {
                  "id": "se-12345678",
                  "name": "dev",
                  "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "servicePlans": [
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    }
                  ],
                  "sourceEnvironmentID": "se-12345678",
                  "sourceEnvironmentName": "dev",
                  "type": "DEV",
                  "visibility": "private"
                },
                {
                  "id": "se-12345678",
                  "name": "dev",
                  "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
                  "saasPortalStatus": "READY",
                  "saasPortalUrl": "https://saas-portal.example.com",
                  "servicePlans": [
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    },
                    {
                      "description": "A Basic product tier",
                      "modelType": "CUSTOMER_HOSTED",
                      "name": "Basic",
                      "productTierID": "pt-12345678",
                      "tierType": "OMNISTRATE_DEDICATED_TENANCY"
                    }
                  ],
                  "sourceEnvironmentID": "se-12345678",
                  "sourceEnvironmentName": "dev",
                  "type": "DEV",
                  "visibility": "private"
                }
              ],
              "serviceLogoURL": "Aliquid pariatur molestiae quod unde.",
              "serviceProviderID": "sp-12345678",
              "serviceProviderName": "Omnistrate, Inc."
            }
          ]
        },
        "required": [
          "ids"
        ]
      },
      "ListSubscriptionRequestsResult": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Corporis rerum velit cupiditate dolorum."
            },
            "description": "List of subscription request IDs",
            "example": [
              "subr-12345678",
              "subr-abcdefgh",
              "subr-1234efgh"
            ]
          },
          "nextPageToken": {
            "type": "string",
            "description": "The next token to use when listing subscription requests",
            "example": "next-token"
          },
          "subscriptionRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribeSubscriptionRequestResult"
            },
            "description": "List of subscription requests",
            "example": [
              {
                "createdAt": "2019-01-01T00:00:00Z",
                "id": "subr-12345678",
                "productTierId": "pt-12345678",
                "productTierName": "Omnistrate Multi Tenancy",
                "rootUserEmail": "abc@gmail.com",
                "rootUserId": "org-12345678",
                "rootUserName": "John Doe",
                "serviceId": "s-12345678",
                "serviceLogoURL": "Mollitia sunt commodi.",
                "serviceName": "MySQL multi-writer service",
                "status": "PENDING",
                "updatedAt": "2019-01-01T00:00:00Z",
                "updatedByUserId": "user-12345678",
                "updatedByUserName": "John Doe"
              },
              {
                "createdAt": "2019-01-01T00:00:00Z",
                "id": "subr-12345678",
                "productTierId": "pt-12345678",
                "productTierName": "Omnistrate Multi Tenancy",
                "rootUserEmail": "abc@gmail.com",
                "rootUserId": "org-12345678",
                "rootUserName": "John Doe",
                "serviceId": "s-12345678",
                "serviceLogoURL": "Mollitia sunt commodi.",
                "serviceName": "MySQL multi-writer service",
                "status": "PENDING",
                "updatedAt": "2019-01-01T00:00:00Z",
                "updatedByUserId": "user-12345678",
                "updatedByUserName": "John Doe"
              },
              {
                "createdAt": "2019-01-01T00:00:00Z",
                "id": "subr-12345678",
                "productTierId": "pt-12345678",
                "productTierName": "Omnistrate Multi Tenancy",
                "rootUserEmail": "abc@gmail.com",
                "rootUserId": "org-12345678",
                "rootUserName": "John Doe",
                "serviceId": "s-12345678",
                "serviceLogoURL": "Mollitia sunt commodi.",
                "serviceName": "MySQL multi-writer service",
                "status": "PENDING",
                "updatedAt": "2019-01-01T00:00:00Z",
                "updatedByUserId": "user-12345678",
                "updatedByUserName": "John Doe"
              },
              {
                "createdAt": "2019-01-01T00:00:00Z",
                "id": "subr-12345678",
                "productTierId": "pt-12345678",
                "productTierName": "Omnistrate Multi Tenancy",
                "rootUserEmail": "abc@gmail.com",
                "rootUserId": "org-12345678",
                "rootUserName": "John Doe",
                "serviceId": "s-12345678",
                "serviceLogoURL": "Mollitia sunt commodi.",
                "serviceName": "MySQL multi-writer service",
                "status": "PENDING",
                "updatedAt": "2019-01-01T00:00:00Z",
                "updatedByUserId": "user-12345678",
                "updatedByUserName": "John Doe"
              }
            ]
          }
        },
        "example": {
          "ids": [
            "subr-12345678",
            "subr-abcdefgh",
            "subr-1234efgh"
          ],
          "nextPageToken": "next-token",
          "subscriptionRequests": [
            {
              "createdAt": "2019-01-01T00:00:00Z",
              "id": "subr-12345678",
              "productTierId": "pt-12345678",
              "productTierName": "Omnistrate Multi Tenancy",
              "rootUserEmail": "abc@gmail.com",
              "rootUserId": "org-12345678",
              "rootUserName": "John Doe",
              "serviceId": "s-12345678",
              "serviceLogoURL": "Mollitia sunt commodi.",
              "serviceName": "MySQL multi-writer service",
              "status": "PENDING",
              "updatedAt": "2019-01-01T00:00:00Z",
              "updatedByUserId": "user-12345678",
              "updatedByUserName": "John Doe"
            },
            {
              "createdAt": "2019-01-01T00:00:00Z",
              "id": "subr-12345678",
              "productTierId": "pt-12345678",
              "productTierName": "Omnistrate Multi Tenancy",
              "rootUserEmail": "abc@gmail.com",
              "rootUserId": "org-12345678",
              "rootUserName": "John Doe",
              "serviceId": "s-12345678",
              "serviceLogoURL": "Mollitia sunt commodi.",
              "serviceName": "MySQL multi-writer service",
              "status": "PENDING",
              "updatedAt": "2019-01-01T00:00:00Z",
              "updatedByUserId": "user-12345678",
              "updatedByUserName": "John Doe"
            }
          ]
        },
        "required": [
          "ids"
        ]
      },
      "ListSubscriptionsResult": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Eum dignissimos natus quo sit qui qui."
            },
            "description": "List of subscription IDs",
            "example": [
              "sub-12345678",
              "sub-abcdefgh",
              "sub-1234efgh"
            ]
          },
          "nextPageToken": {
            "type": "string",
            "description": "The next token to use when listing subscriptions",
            "example": "next-token"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribeSubscriptionResult"
            },
            "description": "List of subscriptions",
            "example": [
              {
                "accountConfigIdentityId": "org-12345678",
                "cloudProviderNames": [
                  "aws",
                  "gcp"
                ],
                "createdAt": "2019-01-01T00:00:00Z",
                "defaultSubscription": true,
                "id": "sub-12345678",
                "productTierId": "pt-12345678",
                "productTierName": "Omnistrate Multi Tenancy",
                "roleType": "root",
                "rootUserId": "user-12345678",
                "serviceId": "s-12345678",
                "serviceLogoURL": "Eum beatae asperiores.",
                "serviceName": "MySQL multi-writer service",
                "serviceOrgId": "org-12345678",
                "serviceOrgName": "Omnistrate",
                "status": "ACTIVE",
                "subscriptionOwnerName": "John Doe"
              },
              {
                "accountConfigIdentityId": "org-12345678",
                "cloudProviderNames": [
                  "aws",
                  "gcp"
                ],
                "createdAt": "2019-01-01T00:00:00Z",
                "defaultSubscription": true,
                "id": "sub-12345678",
                "productTierId": "pt-12345678",
                "productTierName": "Omnistrate Multi Tenancy",
                "roleType": "root",
                "rootUserId": "user-12345678",
                "serviceId": "s-12345678",
                "serviceLogoURL": "Eum beatae asperiores.",
                "serviceName": "MySQL multi-writer service",
                "serviceOrgId": "org-12345678",
                "serviceOrgName": "Omnistrate",
                "status": "ACTIVE",
                "subscriptionOwnerName": "John Doe"
              }
            ]
          }
        },
        "example": {
          "ids": [
            "sub-12345678",
            "sub-abcdefgh",
            "sub-1234efgh"
          ],
          "nextPageToken": "next-token",
          "subscriptions": [
            {
              "accountConfigIdentityId": "org-12345678",
              "cloudProviderNames": [
                "aws",
                "gcp"
              ],
              "createdAt": "2019-01-01T00:00:00Z",
              "defaultSubscription": true,
              "id": "sub-12345678",
              "productTierId": "pt-12345678",
              "productTierName": "Omnistrate Multi Tenancy",
              "roleType": "root",
              "rootUserId": "user-12345678",
              "serviceId": "s-12345678",
              "serviceLogoURL": "Eum beatae asperiores.",
              "serviceName": "MySQL multi-writer service",
              "serviceOrgId": "org-12345678",
              "serviceOrgName": "Omnistrate",
              "status": "ACTIVE",
              "subscriptionOwnerName": "John Doe"
            },
            {
              "accountConfigIdentityId": "org-12345678",
              "cloudProviderNames": [
                "aws",
                "gcp"
              ],
              "createdAt": "2019-01-01T00:00:00Z",
              "defaultSubscription": true,
              "id": "sub-12345678",
              "productTierId": "pt-12345678",
              "productTierName": "Omnistrate Multi Tenancy",
              "roleType": "root",
              "rootUserId": "user-12345678",
              "serviceId": "s-12345678",
              "serviceLogoURL": "Eum beatae asperiores.",
              "serviceName": "MySQL multi-writer service",
              "serviceOrgId": "org-12345678",
              "serviceOrgName": "Omnistrate",
              "status": "ACTIVE",
              "subscriptionOwnerName": "John Doe"
            }
          ]
        },
        "required": [
          "ids"
        ]
      },
      "ListTierVersionSetsResult": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "Token to use for the next request",
            "example": "next-token"
          },
          "tierVersionSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TierVersionSet"
            },
            "description": "List of product-tier version sets.",
            "example": [
              {
                "autoApproveSubscription": false,
                "baseVersion": "3.0",
                "createdAt": "2020-01-01T00:00:00Z",
                "createdBy": "John Doe",
                "description": "Voluptas ipsum et consectetur maiores aliquid.",
                "enabledFeatures": [
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  },
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  },
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  },
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  }
                ],
                "features": {
                  "BILLING": false,
                  "LOGS": true,
                  "METRICS": false
                },
                "instanceCount": 12,
                "latestUpgradePathId": "upgrade-12345678",
                "name": "Regular version set",
                "parentVersion": "2.0",
                "productTierId": "Nihil qui ex omnis repellat consectetur.",
                "releasedAt": "2020-01-01T00:00:00Z",
                "releasedBy": "John Doe",
                "resources": [
                  {
                    "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                    "id": "r-12345678",
                    "imageConfigId": "imgc-12345678",
                    "infraConfigId": "ic-12345678",
                    "isExternal": true,
                    "managedResourceType": "PortsBasedProxy",
                    "name": "MySQL multi-writer service"
                  },
                  {
                    "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                    "id": "r-12345678",
                    "imageConfigId": "imgc-12345678",
                    "infraConfigId": "ic-12345678",
                    "isExternal": true,
                    "managedResourceType": "PortsBasedProxy",
                    "name": "MySQL multi-writer service"
                  }
                ],
                "serviceId": "s-12345678",
                "serviceModelId": "Et ut error delectus quaerat placeat dolores.",
                "status": "Preferred|Active|Deprecated|Pending",
                "type": "Major|Incremental|UserDefined",
                "updatedAt": "2020-01-01T00:00:00Z",
                "version": "3.0"
              },
              {
                "autoApproveSubscription": false,
                "baseVersion": "3.0",
                "createdAt": "2020-01-01T00:00:00Z",
                "createdBy": "John Doe",
                "description": "Voluptas ipsum et consectetur maiores aliquid.",
                "enabledFeatures": [
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  },
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  },
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  },
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  }
                ],
                "features": {
                  "BILLING": false,
                  "LOGS": true,
                  "METRICS": false
                },
                "instanceCount": 12,
                "latestUpgradePathId": "upgrade-12345678",
                "name": "Regular version set",
                "parentVersion": "2.0",
                "productTierId": "Nihil qui ex omnis repellat consectetur.",
                "releasedAt": "2020-01-01T00:00:00Z",
                "releasedBy": "John Doe",
                "resources": [
                  {
                    "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                    "id": "r-12345678",
                    "imageConfigId": "imgc-12345678",
                    "infraConfigId": "ic-12345678",
                    "isExternal": true,
                    "managedResourceType": "PortsBasedProxy",
                    "name": "MySQL multi-writer service"
                  },
                  {
                    "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                    "id": "r-12345678",
                    "imageConfigId": "imgc-12345678",
                    "infraConfigId": "ic-12345678",
                    "isExternal": true,
                    "managedResourceType": "PortsBasedProxy",
                    "name": "MySQL multi-writer service"
                  }
                ],
                "serviceId": "s-12345678",
                "serviceModelId": "Et ut error delectus quaerat placeat dolores.",
                "status": "Preferred|Active|Deprecated|Pending",
                "type": "Major|Incremental|UserDefined",
                "updatedAt": "2020-01-01T00:00:00Z",
                "version": "3.0"
              },
              {
                "autoApproveSubscription": false,
                "baseVersion": "3.0",
                "createdAt": "2020-01-01T00:00:00Z",
                "createdBy": "John Doe",
                "description": "Voluptas ipsum et consectetur maiores aliquid.",
                "enabledFeatures": [
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  },
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  },
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  },
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  }
                ],
                "features": {
                  "BILLING": false,
                  "LOGS": true,
                  "METRICS": false
                },
                "instanceCount": 12,
                "latestUpgradePathId": "upgrade-12345678",
                "name": "Regular version set",
                "parentVersion": "2.0",
                "productTierId": "Nihil qui ex omnis repellat consectetur.",
                "releasedAt": "2020-01-01T00:00:00Z",
                "releasedBy": "John Doe",
                "resources": [
                  {
                    "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                    "id": "r-12345678",
                    "imageConfigId": "imgc-12345678",
                    "infraConfigId": "ic-12345678",
                    "isExternal": true,
                    "managedResourceType": "PortsBasedProxy",
                    "name": "MySQL multi-writer service"
                  },
                  {
                    "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                    "id": "r-12345678",
                    "imageConfigId": "imgc-12345678",
                    "infraConfigId": "ic-12345678",
                    "isExternal": true,
                    "managedResourceType": "PortsBasedProxy",
                    "name": "MySQL multi-writer service"
                  }
                ],
                "serviceId": "s-12345678",
                "serviceModelId": "Et ut error delectus quaerat placeat dolores.",
                "status": "Preferred|Active|Deprecated|Pending",
                "type": "Major|Incremental|UserDefined",
                "updatedAt": "2020-01-01T00:00:00Z",
                "version": "3.0"
              },
              {
                "autoApproveSubscription": false,
                "baseVersion": "3.0",
                "createdAt": "2020-01-01T00:00:00Z",
                "createdBy": "John Doe",
                "description": "Voluptas ipsum et consectetur maiores aliquid.",
                "enabledFeatures": [
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  },
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  },
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  },
                  {
                    "configuration": {
                      "provider": "native"
                    },
                    "feature": "LOGS",
                    "scope": "INTERNAL"
                  }
                ],
                "features": {
                  "BILLING": false,
                  "LOGS": true,
                  "METRICS": false
                },
                "instanceCount": 12,
                "latestUpgradePathId": "upgrade-12345678",
                "name": "Regular version set",
                "parentVersion": "2.0",
                "productTierId": "Nihil qui ex omnis repellat consectetur.",
                "releasedAt": "2020-01-01T00:00:00Z",
                "releasedBy": "John Doe",
                "resources": [
                  {
                    "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                    "id": "r-12345678",
                    "imageConfigId": "imgc-12345678",
                    "infraConfigId": "ic-12345678",
                    "isExternal": true,
                    "managedResourceType": "PortsBasedProxy",
                    "name": "MySQL multi-writer service"
                  },
                  {
                    "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                    "id": "r-12345678",
                    "imageConfigId": "imgc-12345678",
                    "infraConfigId": "ic-12345678",
                    "isExternal": true,
                    "managedResourceType": "PortsBasedProxy",
                    "name": "MySQL multi-writer service"
                  }
                ],
                "serviceId": "s-12345678",
                "serviceModelId": "Et ut error delectus quaerat placeat dolores.",
                "status": "Preferred|Active|Deprecated|Pending",
                "type": "Major|Incremental|UserDefined",
                "updatedAt": "2020-01-01T00:00:00Z",
                "version": "3.0"
              }
            ]
          }
        },
        "example": {
          "nextPageToken": "next-token",
          "tierVersionSets": [
            {
              "autoApproveSubscription": false,
              "baseVersion": "3.0",
              "createdAt": "2020-01-01T00:00:00Z",
              "createdBy": "John Doe",
              "description": "Voluptas ipsum et consectetur maiores aliquid.",
              "enabledFeatures": [
                {
                  "configuration": {
                    "provider": "native"
                  },
                  "feature": "LOGS",
                  "scope": "INTERNAL"
                },
                {
                  "configuration": {
                    "provider": "native"
                  },
                  "feature": "LOGS",
                  "scope": "INTERNAL"
                },
                {
                  "configuration": {
                    "provider": "native"
                  },
                  "feature": "LOGS",
                  "scope": "INTERNAL"
                },
                {
                  "configuration": {
                    "provider": "native"
                  },
                  "feature": "LOGS",
                  "scope": "INTERNAL"
                }
              ],
              "features": {
                "BILLING": false,
                "LOGS": true,
                "METRICS": false
              },
              "instanceCount": 12,
              "latestUpgradePathId": "upgrade-12345678",
              "name": "Regular version set",
              "parentVersion": "2.0",
              "productTierId": "Nihil qui ex omnis repellat consectetur.",
              "releasedAt": "2020-01-01T00:00:00Z",
              "releasedBy": "John Doe",
              "resources": [
                {
                  "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                  "id": "r-12345678",
                  "imageConfigId": "imgc-12345678",
                  "infraConfigId": "ic-12345678",
                  "isExternal": true,
                  "managedResourceType": "PortsBasedProxy",
                  "name": "MySQL multi-writer service"
                },
                {
                  "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                  "id": "r-12345678",
                  "imageConfigId": "imgc-12345678",
                  "infraConfigId": "ic-12345678",
                  "isExternal": true,
                  "managedResourceType": "PortsBasedProxy",
                  "name": "MySQL multi-writer service"
                }
              ],
              "serviceId": "s-12345678",
              "serviceModelId": "Et ut error delectus quaerat placeat dolores.",
              "status": "Preferred|Active|Deprecated|Pending",
              "type": "Major|Incremental|UserDefined",
              "updatedAt": "2020-01-01T00:00:00Z",
              "version": "3.0"
            },
            {
              "autoApproveSubscription": false,
              "baseVersion": "3.0",
              "createdAt": "2020-01-01T00:00:00Z",
              "createdBy": "John Doe",
              "description": "Voluptas ipsum et consectetur maiores aliquid.",
              "enabledFeatures": [
                {
                  "configuration": {
                    "provider": "native"
                  },
                  "feature": "LOGS",
                  "scope": "INTERNAL"
                },
                {
                  "configuration": {
                    "provider": "native"
                  },
                  "feature": "LOGS",
                  "scope": "INTERNAL"
                },
                {
                  "configuration": {
                    "provider": "native"
                  },
                  "feature": "LOGS",
                  "scope": "INTERNAL"
                },
                {
                  "configuration": {
                    "provider": "native"
                  },
                  "feature": "LOGS",
                  "scope": "INTERNAL"
                }
              ],
              "features": {
                "BILLING": false,
                "LOGS": true,
                "METRICS": false
              },
              "instanceCount": 12,
              "latestUpgradePathId": "upgrade-12345678",
              "name": "Regular version set",
              "parentVersion": "2.0",
              "productTierId": "Nihil qui ex omnis repellat consectetur.",
              "releasedAt": "2020-01-01T00:00:00Z",
              "releasedBy": "John Doe",
              "resources": [
                {
                  "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                  "id": "r-12345678",
                  "imageConfigId": "imgc-12345678",
                  "infraConfigId": "ic-12345678",
                  "isExternal": true,
                  "managedResourceType": "PortsBasedProxy",
                  "name": "MySQL multi-writer service"
                },
                {
                  "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                  "id": "r-12345678",
                  "imageConfigId": "imgc-12345678",
                  "infraConfigId": "ic-12345678",
                  "isExternal": true,
                  "managedResourceType": "PortsBasedProxy",
                  "name": "MySQL multi-writer service"
                }
              ],
              "serviceId": "s-12345678",
              "serviceModelId": "Et ut error delectus quaerat placeat dolores.",
              "status": "Preferred|Active|Deprecated|Pending",
              "type": "Major|Incremental|UserDefined",
              "updatedAt": "2020-01-01T00:00:00Z",
              "version": "3.0"
            }
          ]
        },
        "required": [
          "tierVersionSets"
        ]
      },
      "ListVUnitsRequestBody": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "The infra / cloud provider name",
            "example": "aws"
          },
          "region": {
            "type": "string",
            "description": "Region code specific to the cloud-provider",
            "example": "us-west-2"
          }
        },
        "example": {
          "cloudProvider": "aws",
          "region": "us-west-2"
        },
        "required": [
          "cloudProvider",
          "region"
        ]
      },
      "ListVUnitsResult": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "object",
            "description": "List of VUnit IDs per Cloud provider",
            "example": {
              "aws": [
                "vu-12345678",
                "vu-abcdefgh"
              ],
              "gcp": [
                "vu-1234efgh"
              ]
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Consectetur quam sunt qui ad vero."
              },
              "example": [
                "Non aliquid aspernatur iusto.",
                "Ut et nesciunt sunt.",
                "Aliquam qui ipsam.",
                "Deserunt natus."
              ]
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Next page token",
            "example": "next-token"
          }
        },
        "example": {
          "ids": {
            "aws": [
              "vu-12345678",
              "vu-abcdefgh"
            ],
            "gcp": [
              "vu-1234efgh"
            ]
          },
          "nextPageToken": "next-token"
        }
      },
      "LoadBalancerPathConfiguration": {
        "type": "object",
        "properties": {
          "associatedKubernetesServiceName": {
            "type": "string",
            "description": "Override the default target Kubernetes service name with this value",
            "example": "my-service"
          },
          "associatedResourceID": {
            "type": "string",
            "description": "The ID of the resource associated with the path",
            "example": "r-12345678"
          },
          "path": {
            "type": "string",
            "description": "The REST API path backed by the load balancer",
            "example": "/path"
          },
          "port": {
            "type": "integer",
            "description": "The port to forward traffic to",
            "example": 8080,
            "format": "int64"
          }
        },
        "example": {
          "associatedKubernetesServiceName": "my-service",
          "associatedResourceID": "r-12345678",
          "path": "/path",
          "port": 8080
        },
        "required": [
          "path",
          "associatedResourceID",
          "port"
        ]
      },
      "LoginWithIdentityProviderRequestBody": {
        "type": "object",
        "properties": {
          "authorizationCode": {
            "type": "string",
            "description": "The authorization code from the Identity Provider",
            "example": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&"
          },
          "companyDescription": {
            "type": "string",
            "example": "We sell xyz database software",
            "minLength": 1
          },
          "companyUrl": {
            "type": "string",
            "example": "https://www.mywebsite.com",
            "minLength": 1
          },
          "deviceCode": {
            "type": "string",
            "description": "The device code from the Identity Provider",
            "example": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&"
          },
          "identityProviderName": {
            "type": "string",
            "description": "The name of the Identity Provider",
            "example": "Google"
          },
          "invitedEmail": {
            "type": "string",
            "description": "Email address that the user was invited with",
            "example": "abc@gmail.com",
            "format": "email"
          },
          "legalCompanyName": {
            "type": "string",
            "example": "mywebsite",
            "minLength": 1
          },
          "redirectUri": {
            "type": "string",
            "description": "The redirect URI used to get the authorization code",
            "example": "https://www.example/redirect"
          }
        },
        "example": {
          "authorizationCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
          "companyDescription": "We sell xyz database software",
          "companyUrl": "https://www.mywebsite.com",
          "deviceCode": "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&",
          "identityProviderName": "Google",
          "invitedEmail": "abc@gmail.com",
          "legalCompanyName": "mywebsite",
          "redirectUri": "https://www.example/redirect"
        },
        "required": [
          "identityProviderName"
        ]
      },
      "ModifyServicesOrchestrationRequestBody": {
        "type": "object",
        "properties": {
          "orchestrationModifyDSL": {
            "type": "string",
            "description": "base64 encoded content of services orchestration modify DSL",
            "example": "Pariatur non aut."
          }
        },
        "example": {
          "orchestrationModifyDSL": "Quisquam suscipit aut enim."
        },
        "required": [
          "orchestrationModifyDSL"
        ]
      },
      "NetworkFeaturesConfiguration": {
        "type": "object",
        "properties": {
          "isPrivateLinkEnabled": {
            "type": "boolean",
            "description": "Indicates if PrivateLink is enabled for the network",
            "example": false
          }
        },
        "example": {
          "isPrivateLinkEnabled": false
        }
      },
      "NodeNetworkTopologyResult": {
        "type": "object",
        "properties": {
          "availabilityZone": {
            "type": "string",
            "description": "The availability zone of the node",
            "example": "us-east-2a"
          },
          "detailedHealth": {
            "$ref": "#/components/schemas/DetailedNodeHealthResult"
          },
          "endpoint": {
            "type": "string",
            "description": "The endpoint of the node",
            "example": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud"
          },
          "healthStatus": {
            "type": "string",
            "description": "The heath status of the node",
            "example": "HEALTHY"
          },
          "id": {
            "type": "string",
            "description": "The ID of the node",
            "example": "primary-0"
          },
          "kubernetesDashboardEndpoint": {
            "$ref": "#/components/schemas/KubernetesDashboardEndpoint"
          },
          "ports": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 6032329911105546000,
              "format": "int64"
            },
            "description": "The ports that this node exposes",
            "example": [
              80,
              443
            ]
          },
          "status": {
            "type": "string",
            "description": "The status of the node",
            "example": "RUNNING"
          },
          "storageSize": {
            "type": "integer",
            "description": "The storage size of the node in GiB",
            "example": 10,
            "format": "int64"
          },
          "vmInfo": {
            "$ref": "#/components/schemas/NodeVMInfoResult"
          }
        },
        "example": {
          "availabilityZone": "us-east-2a",
          "detailedHealth": {
            "ConnectivityStatus": "UNHEALTHY",
            "DiskHealth": "UNKNOWN",
            "LoadStatus": "LOAD_NORMAL",
            "NodeHealth": "HEALTHY",
            "ProcessHealth": "HEALTHY",
            "ProcessLiveness": "HEALTHY"
          },
          "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
          "healthStatus": "HEALTHY",
          "id": "primary-0",
          "kubernetesDashboardEndpoint": {
            "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
            "deploymentCellID": "hc-12345678"
          },
          "ports": [
            80,
            443
          ],
          "status": "RUNNING",
          "storageSize": 10,
          "vmInfo": {
            "architecture": "amd64",
            "azCode": "us-east-1a",
            "azID": "use1-az1",
            "externalIP": "3.44.113.6",
            "instanceType": "t2.small",
            "internalIP": "192.168.1.4",
            "k8sNodeName": "my-k8s-node",
            "kernelVersion": "5.10.228",
            "kubeletVersion": "1.31.3",
            "os": "linux",
            "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
          }
        }
      },
      "NodeVMInfoResult": {
        "type": "object",
        "properties": {
          "architecture": {
            "type": "string",
            "description": "The architecture of the VM",
            "example": "amd64"
          },
          "azCode": {
            "type": "string",
            "description": "The availability zone code of the VM",
            "example": "us-east-1a"
          },
          "azID": {
            "type": "string",
            "description": "The availability zone ID of the VM",
            "example": "use1-az1"
          },
          "externalIP": {
            "type": "string",
            "description": "The external IP of the VM",
            "example": "3.44.53.111"
          },
          "instanceType": {
            "type": "string",
            "description": "The instance type of the VM",
            "example": "t2.small"
          },
          "internalIP": {
            "type": "string",
            "description": "The internal IP of the VM",
            "example": "192.168.1.4"
          },
          "k8sNodeName": {
            "type": "string",
            "description": "The k8s node name of the VM",
            "example": "my-k8s-node"
          },
          "kernelVersion": {
            "type": "string",
            "description": "The kernel version of the VM",
            "example": "5.10.228"
          },
          "kubeletVersion": {
            "type": "string",
            "description": "The kubelet version of the VM",
            "example": "1.31.3"
          },
          "os": {
            "type": "string",
            "description": "The operating system of the VM",
            "example": "linux"
          },
          "providerID": {
            "type": "string",
            "description": "The provider ID of the VM",
            "example": "aws:///ap-south-1b/i-06h696g4a643ahf01"
          }
        },
        "example": {
          "architecture": "amd64",
          "azCode": "us-east-1a",
          "azID": "use1-az1",
          "externalIP": "3.44.53.111",
          "instanceType": "t2.small",
          "internalIP": "192.168.1.4",
          "k8sNodeName": "my-k8s-node",
          "kernelVersion": "5.10.228",
          "kubeletVersion": "1.31.3",
          "os": "linux",
          "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
        },
        "required": [
          "providerID",
          "instanceType",
          "azCode",
          "architecture",
          "os",
          "internalIP",
          "kubeletVersion",
          "k8sNodeName"
        ]
      },
      "OfferingBillingPlan": {
        "type": "object",
        "properties": {
          "maxNumberofInstances": {
            "type": "integer",
            "description": "Maximum number of instances",
            "example": 5,
            "format": "int64"
          }
        },
        "example": {
          "maxNumberofInstances": 5
        }
      },
      "OmnistrateServiceHealthResult": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the service",
            "example": "RUNNING"
          }
        },
        "example": {
          "status": "RUNNING"
        },
        "required": [
          "status"
        ]
      },
      "OmnistrateServiceVersionResult": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "Omnistrate API version",
            "example": "tq",
            "minLength": 1
          },
          "buildCommitSHA": {
            "type": "string",
            "description": "The commit hash of the build",
            "example": "1234567890abcdef1234567890abcdef12345678"
          },
          "buildTimestamp": {
            "type": "string",
            "description": "The timestamp of the build",
            "example": "2020-01-01T00:00:00Z"
          }
        },
        "example": {
          "apiVersion": "z9a",
          "buildCommitSHA": "1234567890abcdef1234567890abcdef12345678",
          "buildTimestamp": "2020-01-01T00:00:00Z"
        },
        "required": [
          "buildCommitSHA",
          "buildTimestamp",
          "apiVersion"
        ]
      },
      "OperatorCRDConfiguration": {
        "type": "object",
        "properties": {
          "endpointConfiguration": {
            "type": "object",
            "description": "The endpoints from the Operator CRD Deployment to expose to the customer",
            "example": {
              "admin": {
                "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                "networkingType": "PRIVATE",
                "ports": [
                  8080,
                  8081
                ],
                "primary": false
              },
              "cluster": {
                "host": "https://my-endpoint.com",
                "networkingType": "PUBLIC",
                "ports": [
                  8080,
                  8081
                ],
                "primary": true
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/Endpoint"
            }
          },
          "helmChartDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatorHelmChartDependency"
            },
            "description": "The helm chart dependencies for the CRD (including charts necessary to manage the operator) - Optional",
            "example": [
              {
                "chartName": "cert-manager",
                "chartVersion": "v1.5.3"
              },
              {
                "chartName": "nginx-ingress",
                "chartVersion": "v0.48.1"
              },
              {
                "chartName": "external-dns",
                "chartVersion": "v0.7.0"
              },
              {
                "chartName": "cnpg-operator",
                "chartVersion": "v0.23.1"
              }
            ]
          },
          "outputParameters": {
            "type": "object",
            "description": "The output parameters to export to the user from the CRD",
            "example": {
              "expiresAt": "$out.status.notAfter",
              "issuerName": "letsencrypt-prod"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Neque et cum facere qui."
            }
          },
          "readinessConditions": {
            "type": "object",
            "description": "The readiness conditions to check for the CRD",
            "example": {
              "$out.status.conditions[?(@.type=='Ready')].status": true
            },
            "additionalProperties": true
          },
          "supplementalFiles": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Nobis quia qui."
            },
            "description": "The supplemental files to apply with the CRD",
            "example": [
              "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
              "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
            ]
          },
          "template": {
            "type": "string",
            "description": "The template of the CRD to apply on every deployment",
            "example": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
          }
        },
        "example": {
          "endpointConfiguration": {
            "admin": {
              "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
              "networkingType": "PRIVATE",
              "ports": [
                8080,
                8081
              ],
              "primary": false
            },
            "cluster": {
              "host": "https://my-endpoint.com",
              "networkingType": "PUBLIC",
              "ports": [
                8080,
                8081
              ],
              "primary": true
            }
          },
          "helmChartDependencies": [
            {
              "chartName": "cert-manager",
              "chartVersion": "v1.5.3"
            },
            {
              "chartName": "nginx-ingress",
              "chartVersion": "v0.48.1"
            },
            {
              "chartName": "external-dns",
              "chartVersion": "v0.7.0"
            },
            {
              "chartName": "cnpg-operator",
              "chartVersion": "v0.23.1"
            }
          ],
          "outputParameters": {
            "expiresAt": "$out.status.notAfter",
            "issuerName": "letsencrypt-prod"
          },
          "readinessConditions": {
            "$out.status.conditions[?(@.type=='Ready')].status": true
          },
          "supplementalFiles": [
            "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
            "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
          ],
          "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
        },
        "required": [
          "template"
        ]
      },
      "OperatorHelmChartDependency": {
        "type": "object",
        "properties": {
          "chartName": {
            "type": "string",
            "description": "The name of the helm chart",
            "example": "cert-manager"
          },
          "chartRepoName": {
            "type": "string",
            "description": "The repository name of the Helm chart",
            "example": "my-repo"
          },
          "chartRepoUrl": {
            "type": "string",
            "description": "The repository URL of the Helm chart",
            "example": "https://my-repo.com"
          },
          "chartValues": {
            "type": "object",
            "description": "The values of the Helm chart",
            "example": {
              "key1": "value1",
              "key2": 3,
              "key3": {
                "key4": "value4"
              }
            },
            "additionalProperties": true
          },
          "chartVersion": {
            "type": "string",
            "description": "The version of the helm chart",
            "example": "v1.5.3"
          },
          "password": {
            "type": "string",
            "description": "The password to authenticate with the registry",
            "example": "my-password"
          },
          "username": {
            "type": "string",
            "description": "The username to authenticate with the registry",
            "example": "my-user"
          }
        },
        "example": {
          "chartName": "cert-manager",
          "chartRepoName": "my-repo",
          "chartRepoUrl": "https://my-repo.com",
          "chartValues": {
            "key1": "value1",
            "key2": 3,
            "key3": {
              "key4": "value4"
            }
          },
          "chartVersion": "v1.5.3",
          "password": "my-password",
          "username": "my-user"
        },
        "required": [
          "chartName",
          "chartVersion"
        ]
      },
      "OrgUsers": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email of the user",
            "example": "abc@gmail.com"
          },
          "invitedAt": {
            "type": "string",
            "description": "The time when the user was invited",
            "example": "2023-01-10T00:00:00Z"
          },
          "name": {
            "type": "string",
            "description": "The name of the user",
            "example": "John Dae"
          },
          "roleType": {
            "type": "string",
            "example": "reader"
          },
          "userId": {
            "type": "string",
            "description": "The User ID",
            "example": "user-abcd1234"
          }
        },
        "example": {
          "email": "abc@gmail.com",
          "invitedAt": "2023-01-10T00:00:00Z",
          "name": "John Dae",
          "roleType": "reader",
          "userId": "user-abcd1234"
        },
        "required": [
          "name",
          "email",
          "roleType",
          "userId",
          "invitedAt"
        ]
      },
      "OutputParameterEntity": {
        "type": "object",
        "properties": {
          "custom": {
            "type": "boolean",
            "description": "Whether the parameter is custom",
            "example": false
          },
          "description": {
            "type": "string",
            "description": "The parameter description",
            "example": "The name of the server"
          },
          "displayName": {
            "type": "string",
            "description": "The parameter display name",
            "example": "Server Name"
          },
          "isList": {
            "type": "boolean",
            "description": "Whether the parameter is a list",
            "example": false
          },
          "key": {
            "type": "string",
            "description": "The parameter key",
            "example": "serverName"
          },
          "type": {
            "type": "string",
            "description": "The parameter type",
            "example": "Boolean|Float64|String|JSON|Resource"
          }
        },
        "example": {
          "custom": false,
          "description": "The name of the server",
          "displayName": "Server Name",
          "isList": false,
          "key": "serverName",
          "type": "Boolean|Float64|String|JSON|Resource"
        },
        "required": [
          "key",
          "displayName",
          "description",
          "type",
          "isList",
          "custom"
        ]
      },
      "PrivateLinkConfiguration": {
        "type": "object",
        "properties": {
          "awsPrivateLinkConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AWSPrivateLinkConfiguration"
            },
            "description": "The list of private link configurations",
            "example": [
              {
                "port": 80,
                "targetGroupName": "my-target-group"
              },
              {
                "port": 80,
                "targetGroupName": "my-target-group"
              }
            ]
          }
        },
        "example": {
          "awsPrivateLinkConfigurations": [
            {
              "port": 80,
              "targetGroupName": "my-target-group"
            },
            {
              "port": 80,
              "targetGroupName": "my-target-group"
            }
          ]
        }
      },
      "PrivateNetworkingConfiguration": {
        "type": "object",
        "properties": {
          "privateLinkConfiguration": {
            "$ref": "#/components/schemas/PrivateLinkConfiguration"
          }
        },
        "description": "The private networking configuration for the network config",
        "example": {
          "privateLinkConfiguration": {
            "awsPrivateLinkConfigurations": [
              {
                "port": 80,
                "targetGroupName": "my-target-group"
              },
              {
                "port": 80,
                "targetGroupName": "my-target-group"
              },
              {
                "port": 80,
                "targetGroupName": "my-target-group"
              },
              {
                "port": 80,
                "targetGroupName": "my-target-group"
              }
            ]
          }
        }
      },
      "ProductTierFeatureDetail": {
        "type": "object",
        "properties": {
          "configuration": {
            "type": "object",
            "description": "The configuration parameters of the product tier feature",
            "example": {
              "provider": "native"
            },
            "additionalProperties": true
          },
          "feature": {
            "type": "string",
            "description": "Feature name",
            "example": "LOGS"
          },
          "scope": {
            "type": "string",
            "description": "Feature scope",
            "example": "INTERNAL"
          }
        },
        "example": {
          "configuration": {
            "provider": "native"
          },
          "feature": "LOGS",
          "scope": "INTERNAL"
        }
      },
      "ProxyEndpoint": {
        "type": "object",
        "properties": {
          "openPorts": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Rerum quos voluptatem omnis praesentium sunt."
            },
            "example": [
              "30000",
              "30001"
            ]
          },
          "proxyEndpoint": {
            "type": "string",
            "example": "https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud"
          }
        },
        "example": {
          "openPorts": [
            "30000",
            "30001"
          ],
          "proxyEndpoint": "https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud"
        }
      },
      "PublicNetworkingConfiguration": {
        "type": "object",
        "properties": {
          "enableClusterLoadBalancer": {
            "type": "boolean",
            "description": "Enable a single load balancer for all replicas",
            "example": true
          },
          "enableNodeLoadBalancer": {
            "type": "boolean",
            "description": "Create an external node load balancer per node rather than exposing the node ip directly",
            "example": true
          }
        },
        "description": "The public networking configuration for the network config",
        "example": {
          "enableClusterLoadBalancer": true,
          "enableNodeLoadBalancer": true
        }
      },
      "RecentDeploymentFailureStatus": {
        "type": "object",
        "properties": {
          "failedAt": {
            "type": "string",
            "description": "The time at which the deployment failed",
            "example": "2021-09-01T00:00:00Z"
          },
          "failureReason": {
            "type": "string",
            "description": "The reason for the deployment failure",
            "example": "Failed to connect to the database"
          }
        },
        "description": "The status of the recent deployment failure",
        "example": {
          "failedAt": "2021-09-01T00:00:00Z",
          "failureReason": "Failed to connect to the database"
        }
      },
      "RegisterActionHookRequestBody": {
        "type": "object",
        "properties": {
          "commandTemplate": {
            "type": "string",
            "description": "The Base64 encoded command template to execute",
            "example": "ZWNobyAiaGVsbG8gd29ybGQi"
          },
          "customCommand": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Soluta dicta itaque repudiandae velit ut ut."
            },
            "description": "The custom command to execute the hook with",
            "example": [
              "/bin/sh",
              "-c"
            ]
          },
          "customImage": {
            "type": "string",
            "description": "The custom image to execute the hook",
            "example": "my-custom-image:latest"
          },
          "scope": {
            "type": "string",
            "description": "The scope of the hook",
            "example": "CLUSTER"
          },
          "type": {
            "type": "string",
            "description": "The type of hook to execute",
            "example": "ADD"
          }
        },
        "example": {
          "commandTemplate": "ZWNobyAiaGVsbG8gd29ybGQi",
          "customCommand": [
            "/bin/sh",
            "-c"
          ],
          "customImage": "my-custom-image:latest",
          "scope": "CLUSTER",
          "type": "ADD"
        },
        "required": [
          "type",
          "scope",
          "commandTemplate"
        ]
      },
      "RegisterResourceMetricsConfigRequestBody": {
        "type": "object",
        "properties": {
          "metricEndpoint": {
            "type": "string",
            "description": "The local host endpoint to supply prometheus metric",
            "example": "http://localhost:9187/metrics"
          }
        },
        "example": {
          "metricEndpoint": "http://localhost:9187/metrics"
        },
        "required": [
          "metricEndpoint"
        ]
      },
      "ReleaseInfraConfigRequestBody": {
        "type": "object",
        "properties": {
          "productTierId": {
            "type": "string",
            "description": "The product tier ID",
            "example": "pt-12345678"
          }
        },
        "example": {
          "productTierId": "pt-12345678"
        }
      },
      "ReleaseServiceAPIRequestBody": {
        "type": "object",
        "properties": {
          "isPreferred": {
            "type": "boolean",
            "description": "Indicates whether this version set is preferred.",
            "default": false,
            "example": true
          },
          "productTierId": {
            "type": "string",
            "description": "The product tier ID",
            "example": "pt-12345678"
          },
          "versionSetName": {
            "type": "string",
            "description": "The name of the version set to release",
            "example": "v1"
          },
          "versionSetType": {
            "type": "string",
            "description": "The version-set type of the product-tier.",
            "example": "Major|Incremental|UserDefined"
          }
        },
        "example": {
          "isPreferred": true,
          "productTierId": "pt-12345678",
          "versionSetName": "v1",
          "versionSetType": "Major|Incremental|UserDefined"
        }
      },
      "ReleaseTierVersionSetRequestBody": {
        "type": "object",
        "properties": {
          "isPreferred": {
            "type": "boolean",
            "description": "Indicates whether this version set is preferred.",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "The name of the product-tier version set.",
            "example": "Major version set"
          }
        },
        "example": {
          "isPreferred": true,
          "name": "Major version set"
        }
      },
      "RemoveCapacityFromResourceInstanceRequestBody": {
        "type": "object",
        "properties": {
          "capacityToBeRemoved": {
            "type": "integer",
            "description": "Number of replicas to be removed",
            "example": 3,
            "format": "int64"
          }
        },
        "example": {
          "capacityToBeRemoved": 3
        },
        "required": [
          "capacityToBeRemoved"
        ]
      },
      "ReportHealthResult": {
        "type": "object",
        "properties": {
          "health": {
            "type": "string",
            "description": "The health of the service",
            "example": "UP"
          },
          "id": {
            "type": "string",
            "description": "The ID of the service",
            "example": "s-12345678"
          },
          "report": {
            "type": "object",
            "description": "The health of each environment under this service",
            "example": {
              "se-12345678": {
                "sm-12345678": {
                  "vu-11111111": "UNKNOWN",
                  "vu-12345678": "UP",
                  "vu-87654321": "DOWN"
                }
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/EnvironmentHealthReport"
            }
          }
        },
        "example": {
          "health": "UP",
          "id": "s-12345678",
          "report": {
            "se-12345678": {
              "sm-12345678": {
                "vu-11111111": "UNKNOWN",
                "vu-12345678": "UP",
                "vu-87654321": "DOWN"
              }
            }
          }
        }
      },
      "ResetPasswordRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "abc@gmail.com",
            "format": "email",
            "minLength": 1
          }
        },
        "example": {
          "email": "abc@gmail.com"
        },
        "required": [
          "email"
        ]
      },
      "ResourceCapability": {
        "type": "object",
        "properties": {
          "capability": {
            "type": "string",
            "description": "The type of capability of a resource",
            "example": "SERVERLESS"
          },
          "configuration": {
            "type": "object",
            "description": "The configuration parameters of a capability of a resource",
            "example": {
              "EnableAutoStop": true,
              "MinimumNodesInPool": 5,
              "PortsMappingProxyConfig": {
                "MaxNumberOfClustersPerProxyInstance": 50,
                "NumberOfPortsPerCluster": 4
              },
              "ProxyId": "r-123456",
              "ReferenceProxyKey": "resource-proxy",
              "TargetPort": 5432
            },
            "additionalProperties": true
          }
        },
        "description": "The capability of a resource",
        "example": {
          "capability": "SERVERLESS",
          "configuration": {
            "EnableAutoStop": true,
            "MinimumNodesInPool": 5,
            "PortsMappingProxyConfig": {
              "MaxNumberOfClustersPerProxyInstance": 50,
              "NumberOfPortsPerCluster": 4
            },
            "ProxyId": "r-123456",
            "ReferenceProxyKey": "resource-proxy",
            "TargetPort": 5432
          }
        },
        "required": [
          "capability",
          "configuration"
        ]
      },
      "ResourceDependency": {
        "type": "object",
        "properties": {
          "parameterMap": {
            "type": "object",
            "description": "A map of the source parameter to the resource dependency parameter",
            "example": {
              "Deleniti consequuntur numquam corrupti.": "Delectus qui vitae et.",
              "Odit eum et earum pariatur ullam.": "Possimus fuga.",
              "Sed voluptatem.": "Adipisci aliquam neque."
            },
            "additionalProperties": {
              "type": "string",
              "example": "Rerum voluptas assumenda facere cumque rem neque."
            }
          },
          "resourceId": {
            "type": "string",
            "description": "The ID of the resource",
            "example": "Nihil libero similique."
          }
        },
        "description": "Resource dependency relation specification",
        "example": {
          "parameterMap": {
            "Distinctio nihil culpa quia architecto occaecati.": "Beatae reiciendis eveniet rerum voluptas deserunt adipisci.",
            "Quas aspernatur.": "Dolores sed consequatur illum corrupti corporis.",
            "Ut magnam dolorem hic ab.": "Voluptatem consectetur et aut sequi."
          },
          "resourceId": "Dolorum itaque perspiciatis iusto."
        },
        "required": [
          "resourceId"
        ]
      },
      "ResourceEntity": {
        "type": "object",
        "properties": {
          "isAutoscalingEnabled": {
            "type": "boolean",
            "description": "Whether the resource has autoscaling enabled",
            "example": true
          },
          "isBackupEnabled": {
            "type": "boolean",
            "description": "Whether the resource has backup enabled",
            "example": true
          },
          "isDeprecated": {
            "type": "boolean",
            "description": "Whether the service offering is deprecated",
            "default": false,
            "example": false
          },
          "name": {
            "type": "string",
            "description": "The resource name",
            "example": "My Resource"
          },
          "resourceId": {
            "type": "string",
            "description": "The resource ID",
            "example": "r-12345678"
          },
          "resourceType": {
            "type": "string",
            "description": "The resource type",
            "example": "Kustomize"
          },
          "urlKey": {
            "type": "string",
            "description": "The resource URL key",
            "example": "myResource"
          }
        },
        "example": {
          "isAutoscalingEnabled": true,
          "isBackupEnabled": true,
          "isDeprecated": false,
          "name": "My Resource",
          "resourceId": "r-12345678",
          "resourceType": "Kustomize",
          "urlKey": "myResource"
        },
        "required": [
          "urlKey",
          "name",
          "resourceId",
          "isDeprecated",
          "isBackupEnabled"
        ]
      },
      "ResourceNetworkTopologyResult": {
        "type": "object",
        "properties": {
          "additionalEndpoints": {
            "type": "object",
            "description": "The additional endpoints for this resource",
            "example": {
              "admin": {
                "endpoint": "https://admin.instance-abcdefgh.region.aws.omnistrate.cloud",
                "networkingType": "PRIVATE",
                "openPorts": [
                  30000
                ],
                "primary": false
              },
              "cluster": {
                "endpoint": "https://cluster.instance-abcdefgh.region.aws.omnistrate.cloud",
                "networkingType": "PUBLIC",
                "openPorts": [
                  443
                ],
                "primary": true
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/ClusterEndpoint"
            }
          },
          "allowedIPRanges": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Quam facere quia eaque sunt sed."
            },
            "description": "The allowed IP ranges for this resource",
            "example": [
              "0.0.0.0/0"
            ]
          },
          "clusterEndpoint": {
            "type": "string",
            "description": "The primary cluster endpoint that load-balances across replicas of this resource",
            "example": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud"
          },
          "clusterPorts": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 8094774482986459000,
              "format": "int64"
            },
            "description": "The ports that the whole cluster exposes",
            "example": [
              443
            ]
          },
          "customDNSEndpoint": {
            "$ref": "#/components/schemas/CustomDNSEndpoint"
          },
          "hasCompute": {
            "type": "boolean",
            "description": "Whether this resource has associated compute",
            "example": true
          },
          "main": {
            "type": "boolean",
            "description": "Whether this is the main resource",
            "example": true
          },
          "networkingType": {
            "type": "string",
            "description": "The networking type for this resource",
            "example": "PUBLIC"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NodeNetworkTopologyResult"
            },
            "description": "The nodes that this resource is deployed on",
            "example": [
              {
                "availabilityZone": "us-east-2a",
                "detailedHealth": {
                  "ConnectivityStatus": "UNHEALTHY",
                  "DiskHealth": "UNKNOWN",
                  "LoadStatus": "LOAD_NORMAL",
                  "NodeHealth": "HEALTHY",
                  "ProcessHealth": "HEALTHY",
                  "ProcessLiveness": "HEALTHY"
                },
                "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                "healthStatus": "HEALTHY",
                "id": "primary-0",
                "kubernetesDashboardEndpoint": {
                  "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
                  "deploymentCellID": "hc-12345678"
                },
                "ports": [
                  80,
                  443
                ],
                "status": "RUNNING",
                "storageSize": 10,
                "vmInfo": {
                  "architecture": "amd64",
                  "azCode": "us-east-1a",
                  "azID": "use1-az1",
                  "externalIP": "3.44.113.6",
                  "instanceType": "t2.small",
                  "internalIP": "192.168.1.4",
                  "k8sNodeName": "my-k8s-node",
                  "kernelVersion": "5.10.228",
                  "kubeletVersion": "1.31.3",
                  "os": "linux",
                  "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
                }
              },
              {
                "availabilityZone": "us-east-2a",
                "detailedHealth": {
                  "ConnectivityStatus": "UNHEALTHY",
                  "DiskHealth": "UNKNOWN",
                  "LoadStatus": "LOAD_NORMAL",
                  "NodeHealth": "HEALTHY",
                  "ProcessHealth": "HEALTHY",
                  "ProcessLiveness": "HEALTHY"
                },
                "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                "healthStatus": "HEALTHY",
                "id": "primary-0",
                "kubernetesDashboardEndpoint": {
                  "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
                  "deploymentCellID": "hc-12345678"
                },
                "ports": [
                  80,
                  443
                ],
                "status": "RUNNING",
                "storageSize": 10,
                "vmInfo": {
                  "architecture": "amd64",
                  "azCode": "us-east-1a",
                  "azID": "use1-az1",
                  "externalIP": "3.44.113.6",
                  "instanceType": "t2.small",
                  "internalIP": "192.168.1.4",
                  "k8sNodeName": "my-k8s-node",
                  "kernelVersion": "5.10.228",
                  "kubeletVersion": "1.31.3",
                  "os": "linux",
                  "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
                }
              },
              {
                "availabilityZone": "us-east-2a",
                "detailedHealth": {
                  "ConnectivityStatus": "UNHEALTHY",
                  "DiskHealth": "UNKNOWN",
                  "LoadStatus": "LOAD_NORMAL",
                  "NodeHealth": "HEALTHY",
                  "ProcessHealth": "HEALTHY",
                  "ProcessLiveness": "HEALTHY"
                },
                "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                "healthStatus": "HEALTHY",
                "id": "primary-0",
                "kubernetesDashboardEndpoint": {
                  "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
                  "deploymentCellID": "hc-12345678"
                },
                "ports": [
                  80,
                  443
                ],
                "status": "RUNNING",
                "storageSize": 10,
                "vmInfo": {
                  "architecture": "amd64",
                  "azCode": "us-east-1a",
                  "azID": "use1-az1",
                  "externalIP": "3.44.113.6",
                  "instanceType": "t2.small",
                  "internalIP": "192.168.1.4",
                  "k8sNodeName": "my-k8s-node",
                  "kernelVersion": "5.10.228",
                  "kubeletVersion": "1.31.3",
                  "os": "linux",
                  "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
                }
              },
              {
                "availabilityZone": "us-east-2a",
                "detailedHealth": {
                  "ConnectivityStatus": "UNHEALTHY",
                  "DiskHealth": "UNKNOWN",
                  "LoadStatus": "LOAD_NORMAL",
                  "NodeHealth": "HEALTHY",
                  "ProcessHealth": "HEALTHY",
                  "ProcessLiveness": "HEALTHY"
                },
                "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                "healthStatus": "HEALTHY",
                "id": "primary-0",
                "kubernetesDashboardEndpoint": {
                  "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
                  "deploymentCellID": "hc-12345678"
                },
                "ports": [
                  80,
                  443
                ],
                "status": "RUNNING",
                "storageSize": 10,
                "vmInfo": {
                  "architecture": "amd64",
                  "azCode": "us-east-1a",
                  "azID": "use1-az1",
                  "externalIP": "3.44.113.6",
                  "instanceType": "t2.small",
                  "internalIP": "192.168.1.4",
                  "k8sNodeName": "my-k8s-node",
                  "kernelVersion": "5.10.228",
                  "kubeletVersion": "1.31.3",
                  "os": "linux",
                  "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
                }
              }
            ]
          },
          "privateNetworkCIDR": {
            "type": "string",
            "description": "The private network CIDR for this resource",
            "example": "10.0.0.2/24"
          },
          "privateNetworkID": {
            "type": "string",
            "description": "The private network ID for this resource",
            "example": "n-1234abcd"
          },
          "proxyEndpoint": {
            "$ref": "#/components/schemas/ProxyEndpoint"
          },
          "publiclyAccessible": {
            "type": "boolean",
            "description": "Whether this resource is publicly accessible",
            "example": true
          },
          "recentDeploymentFailure": {
            "$ref": "#/components/schemas/RecentDeploymentFailureStatus"
          },
          "resourceInstanceMetadata": {
            "description": "The resource instance metadata",
            "example": {
              "KustomizeGeneratedTemplates": "template"
            }
          },
          "resourceKey": {
            "type": "string",
            "description": "The key of the resource",
            "example": "primary"
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the resource",
            "example": "Primary MySQL DB Node"
          },
          "resourceType": {
            "type": "string",
            "description": "The type of the resource",
            "example": "Kustomize"
          }
        },
        "example": {
          "additionalEndpoints": {
            "admin": {
              "endpoint": "https://admin.instance-abcdefgh.region.aws.omnistrate.cloud",
              "networkingType": "PRIVATE",
              "openPorts": [
                30000
              ],
              "primary": false
            },
            "cluster": {
              "endpoint": "https://cluster.instance-abcdefgh.region.aws.omnistrate.cloud",
              "networkingType": "PUBLIC",
              "openPorts": [
                443
              ],
              "primary": true
            }
          },
          "allowedIPRanges": [
            "0.0.0.0/0"
          ],
          "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
          "clusterPorts": [
            443
          ],
          "customDNSEndpoint": {
            "dnsHost": "my-custom-dns.com",
            "name": "DNS to access the dashboard",
            "status": "READY"
          },
          "hasCompute": true,
          "main": true,
          "networkingType": "PUBLIC",
          "nodes": [
            {
              "availabilityZone": "us-east-2a",
              "detailedHealth": {
                "ConnectivityStatus": "UNHEALTHY",
                "DiskHealth": "UNKNOWN",
                "LoadStatus": "LOAD_NORMAL",
                "NodeHealth": "HEALTHY",
                "ProcessHealth": "HEALTHY",
                "ProcessLiveness": "HEALTHY"
              },
              "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
              "healthStatus": "HEALTHY",
              "id": "primary-0",
              "kubernetesDashboardEndpoint": {
                "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
                "deploymentCellID": "hc-12345678"
              },
              "ports": [
                80,
                443
              ],
              "status": "RUNNING",
              "storageSize": 10,
              "vmInfo": {
                "architecture": "amd64",
                "azCode": "us-east-1a",
                "azID": "use1-az1",
                "externalIP": "3.44.113.6",
                "instanceType": "t2.small",
                "internalIP": "192.168.1.4",
                "k8sNodeName": "my-k8s-node",
                "kernelVersion": "5.10.228",
                "kubeletVersion": "1.31.3",
                "os": "linux",
                "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
              }
            },
            {
              "availabilityZone": "us-east-2a",
              "detailedHealth": {
                "ConnectivityStatus": "UNHEALTHY",
                "DiskHealth": "UNKNOWN",
                "LoadStatus": "LOAD_NORMAL",
                "NodeHealth": "HEALTHY",
                "ProcessHealth": "HEALTHY",
                "ProcessLiveness": "HEALTHY"
              },
              "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
              "healthStatus": "HEALTHY",
              "id": "primary-0",
              "kubernetesDashboardEndpoint": {
                "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
                "deploymentCellID": "hc-12345678"
              },
              "ports": [
                80,
                443
              ],
              "status": "RUNNING",
              "storageSize": 10,
              "vmInfo": {
                "architecture": "amd64",
                "azCode": "us-east-1a",
                "azID": "use1-az1",
                "externalIP": "3.44.113.6",
                "instanceType": "t2.small",
                "internalIP": "192.168.1.4",
                "k8sNodeName": "my-k8s-node",
                "kernelVersion": "5.10.228",
                "kubeletVersion": "1.31.3",
                "os": "linux",
                "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
              }
            },
            {
              "availabilityZone": "us-east-2a",
              "detailedHealth": {
                "ConnectivityStatus": "UNHEALTHY",
                "DiskHealth": "UNKNOWN",
                "LoadStatus": "LOAD_NORMAL",
                "NodeHealth": "HEALTHY",
                "ProcessHealth": "HEALTHY",
                "ProcessLiveness": "HEALTHY"
              },
              "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
              "healthStatus": "HEALTHY",
              "id": "primary-0",
              "kubernetesDashboardEndpoint": {
                "dashboardEndpoint": "https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh",
                "deploymentCellID": "hc-12345678"
              },
              "ports": [
                80,
                443
              ],
              "status": "RUNNING",
              "storageSize": 10,
              "vmInfo": {
                "architecture": "amd64",
                "azCode": "us-east-1a",
                "azID": "use1-az1",
                "externalIP": "3.44.113.6",
                "instanceType": "t2.small",
                "internalIP": "192.168.1.4",
                "k8sNodeName": "my-k8s-node",
                "kernelVersion": "5.10.228",
                "kubeletVersion": "1.31.3",
                "os": "linux",
                "providerID": "aws:///ap-south-1b/i-06h696g4a643ahf01"
              }
            }
          ],
          "privateNetworkCIDR": "10.0.0.2/24",
          "privateNetworkID": "n-1234abcd",
          "proxyEndpoint": {
            "openPorts": [
              "30000",
              "30001"
            ],
            "proxyEndpoint": "https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud"
          },
          "publiclyAccessible": true,
          "recentDeploymentFailure": {
            "failedAt": "2021-09-01T00:00:00Z",
            "failureReason": "Failed to connect to the database"
          },
          "resourceInstanceMetadata": {
            "KustomizeGeneratedTemplates": "template"
          },
          "resourceKey": "primary",
          "resourceName": "Primary MySQL DB Node",
          "resourceType": "Kustomize"
        },
        "required": [
          "resourceName",
          "resourceKey",
          "clusterEndpoint",
          "hasCompute",
          "nodeEndpoints",
          "ports",
          "main",
          "networkingType",
          "publiclyAccessible",
          "allowedIPRanges"
        ]
      },
      "ResourceSpec": {
        "type": "object",
        "properties": {
          "limits": {
            "type": "object",
            "properties": {
              "cpu": {
                "type": "string",
                "description": "The maximum amount of CPU that the container can use",
                "example": "1"
              },
              "memory": {
                "type": "string",
                "description": "The maximum amount of memory that the container can use",
                "example": "500Mi"
              }
            },
            "description": "The maximum amount of CPU and memory that the container can use",
            "example": {
              "cpu": "1",
              "memory": "500Mi"
            }
          },
          "requests": {
            "type": "object",
            "properties": {
              "cpu": {
                "type": "string",
                "description": "The amount of CPU that Kubernetes will guarantee for the container",
                "example": "0.5"
              },
              "memory": {
                "type": "string",
                "description": "The amount of memory that Kubernetes will guarantee for the container",
                "example": "200Mi"
              }
            },
            "description": "The amount of CPU and memory that Kubernetes will guarantee for the container",
            "example": {
              "cpu": "0.5",
              "memory": "200Mi"
            }
          }
        },
        "description": "Resource requirements",
        "example": {
          "limits": {
            "cpu": "1",
            "memory": "500Mi"
          },
          "requests": {
            "cpu": "0.5",
            "memory": "200Mi"
          }
        }
      },
      "ResourceSummary": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the resource",
            "example": "A MySQL SaaS specializing in multi-writer clusters for high availability"
          },
          "id": {
            "type": "string",
            "description": "The ID of the resource",
            "example": "r-12345678"
          },
          "imageConfigId": {
            "type": "string",
            "description": "The ID of the image configuration that this resource refers to",
            "example": "imgc-12345678"
          },
          "infraConfigId": {
            "type": "string",
            "description": "The ID of the infrastructure configuration that this resource refers to",
            "example": "ic-12345678"
          },
          "isExternal": {
            "type": "boolean",
            "description": "Whether the resource is external",
            "example": true
          },
          "managedResourceType": {
            "type": "string",
            "description": "The managed resource type of instance",
            "example": "PortsBasedProxy"
          },
          "name": {
            "type": "string",
            "description": "The name of the resource",
            "example": "MySQL multi-writer service"
          }
        },
        "example": {
          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
          "id": "r-12345678",
          "imageConfigId": "imgc-12345678",
          "infraConfigId": "ic-12345678",
          "isExternal": true,
          "managedResourceType": "PortsBasedProxy",
          "name": "MySQL multi-writer service"
        },
        "required": [
          "id",
          "name",
          "description",
          "isExternal"
        ]
      },
      "RestoreResourceInstanceFromSnapshotRequestBody": {
        "type": "object",
        "properties": {
          "network_type": {
            "type": "string",
            "description": "The network type",
            "example": "PUBLIC"
          }
        },
        "example": {
          "network_type": "PUBLIC"
        }
      },
      "RestoreResourceInstanceRequestBody": {
        "type": "object",
        "properties": {
          "network_type": {
            "type": "string",
            "description": "The network type",
            "example": "PUBLIC"
          },
          "targetRestoreTime": {
            "type": "string",
            "description": "The target restore time",
            "example": "2021-09-01T00:00:00Z"
          }
        },
        "example": {
          "network_type": "PUBLIC",
          "targetRestoreTime": "2021-09-01T00:00:00Z"
        },
        "required": [
          "targetRestoreTime"
        ]
      },
      "Route53Configuration": {
        "type": "object",
        "properties": {
          "awsAccountID": {
            "type": "string",
            "description": "The AWS account hosting the the hosted zone for the domain",
            "example": "123456789012"
          }
        },
        "example": {
          "awsAccountID": "123456789012"
        },
        "required": [
          "awsAccountID"
        ]
      },
      "Route53ConfigurationDescription": {
        "type": "object",
        "properties": {
          "awsAccountID": {
            "type": "string",
            "description": "The AWS account hosting the the hosted zone for the domain",
            "example": "123456789012"
          },
          "awsCloudFormationTemplateURL": {
            "type": "string",
            "description": "The URL to the CloudFormation template",
            "example": "https://s3.amazonaws.com/my-bucket/my-template.json"
          }
        },
        "example": {
          "awsAccountID": "123456789012",
          "awsCloudFormationTemplateURL": "https://s3.amazonaws.com/my-bucket/my-template.json"
        },
        "required": [
          "awsAccountID",
          "awsCloudFormationTemplateURL"
        ]
      },
      "SaaSPortal": {
        "type": "object",
        "properties": {
          "customDomain": {
            "type": "string",
            "description": "The custom domain of the SaaS portal",
            "example": "mycustomdomain.com"
          },
          "customDomainStatus": {
            "type": "string",
            "description": "The custom domain status of the SaaS portal",
            "example": "READY"
          },
          "detailedNetworkTopology": {
            "type": "object",
            "description": "The detailed network topology of the SaaS portal",
            "example": {
              "r-abcd1234": {
                "allowedIPRanges": [
                  "0.0.0.0/0"
                ],
                "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                "clusterPorts": [
                  3306
                ],
                "main": true,
                "networkingType": "PUBLIC",
                "nodes": [
                  {
                    "availabilityZone": "us-east-2a",
                    "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                    "healthStatus": "healthy",
                    "id": "primary-0",
                    "ports": [
                      3306
                    ],
                    "status": "RUNNING"
                  }
                ],
                "privateNetworkCIDR": "10.0.0.2/24",
                "privateNetworkID": "n-1234abcd",
                "publiclyAccessible": true,
                "resourceKey": "saasportal",
                "resourceName": "SaaS Portal"
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/ResourceNetworkTopologyResult"
            }
          },
          "emailConfig": {
            "$ref": "#/components/schemas/SaaSPortalEmailConfig"
          },
          "endpoint": {
            "type": "string",
            "description": "The endpoint of the SaaS portal for this environment type",
            "example": "https://saas-portal.example.com"
          },
          "environmentType": {
            "type": "string",
            "description": "The environment type for the SaaS portal",
            "example": "DEV"
          },
          "googleAnalyticsTagID": {
            "type": "string",
            "description": "The Google Analytics tag ID for the SaaS portal",
            "example": "G-123456789"
          },
          "imageConfig": {
            "$ref": "#/components/schemas/SaaSPortalImageConfig"
          },
          "status": {
            "type": "string",
            "description": "The status of the SaaS portal for this environment type",
            "example": "READY"
          }
        },
        "example": {
          "customDomain": "mycustomdomain.com",
          "customDomainStatus": "READY",
          "detailedNetworkTopology": {
            "r-abcd1234": {
              "allowedIPRanges": [
                "0.0.0.0/0"
              ],
              "clusterEndpoint": "primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
              "clusterPorts": [
                3306
              ],
              "main": true,
              "networkingType": "PUBLIC",
              "nodes": [
                {
                  "availabilityZone": "us-east-2a",
                  "endpoint": "primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud",
                  "healthStatus": "healthy",
                  "id": "primary-0",
                  "ports": [
                    3306
                  ],
                  "status": "RUNNING"
                }
              ],
              "privateNetworkCIDR": "10.0.0.2/24",
              "privateNetworkID": "n-1234abcd",
              "publiclyAccessible": true,
              "resourceKey": "saasportal",
              "resourceName": "SaaS Portal"
            }
          },
          "emailConfig": {
            "smtpFromEmail": "example@gmail.com",
            "smtpHost": "smtp.gmail.com",
            "smtpPassword": "password",
            "smtpPort": 587,
            "smtpUsername": "username"
          },
          "endpoint": "https://saas-portal.example.com",
          "environmentType": "DEV",
          "googleAnalyticsTagID": "G-123456789",
          "imageConfig": {
            "imageName": "myimage",
            "imageRegistry": "ghcr.io",
            "imageTag": "latest"
          },
          "status": "READY"
        },
        "required": [
          "environmentType",
          "status"
        ]
      },
      "SaaSPortalEmailConfig": {
        "type": "object",
        "properties": {
          "smtpFromEmail": {
            "type": "string",
            "description": "The SMTP from email",
            "example": "example@gmail.com"
          },
          "smtpHost": {
            "type": "string",
            "description": "The SMTP host",
            "example": "smtp.gmail.com"
          },
          "smtpPassword": {
            "type": "string",
            "description": "The SMTP password",
            "example": "password"
          },
          "smtpPort": {
            "type": "integer",
            "description": "The SMTP port",
            "example": 587,
            "format": "int64"
          },
          "smtpUsername": {
            "type": "string",
            "description": "The SMTP username",
            "example": "username"
          }
        },
        "example": {
          "smtpFromEmail": "example@gmail.com",
          "smtpHost": "smtp.gmail.com",
          "smtpPassword": "password",
          "smtpPort": 587,
          "smtpUsername": "username"
        },
        "required": [
          "smtpUsername",
          "smtpPassword",
          "smtpFromEmail",
          "smtpHost"
        ]
      },
      "SaaSPortalImageConfig": {
        "type": "object",
        "properties": {
          "imageName": {
            "type": "string",
            "description": "The image name for the SaaS portal",
            "example": "myimage"
          },
          "imageRegistry": {
            "type": "string",
            "description": "The image registry for the SaaS portal",
            "example": "ghcr.io"
          },
          "imageTag": {
            "type": "string",
            "description": "The image tag for the SaaS portal",
            "example": "latest"
          }
        },
        "example": {
          "imageName": "myimage",
          "imageRegistry": "ghcr.io",
          "imageTag": "latest"
        },
        "required": [
          "imageRegistry",
          "imageName",
          "imageTag"
        ]
      },
      "SaveHelmPackageRequestBody": {
        "type": "object",
        "properties": {
          "helmPackage": {
            "$ref": "#/components/schemas/HelmPackage"
          }
        },
        "example": {
          "helmPackage": {
            "chartName": "my-chart",
            "chartRepoName": "my-repo",
            "chartRepoUrl": "https://my-repo.com",
            "chartValues": {
              "key1": "value1",
              "key2": 3,
              "key3": {
                "key4": "value4"
              }
            },
            "chartVersion": "1.0.0",
            "namespace": "default",
            "password": "my-password",
            "username": "my-user"
          }
        },
        "required": [
          "helmPackage"
        ]
      },
      "ServiceAssets": {
        "type": "object",
        "properties": {
          "cloudFormationURL": {
            "type": "string",
            "description": "The URL for CloudFormation onboarding",
            "example": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa"
          },
          "cloudFormationURLNoLB": {
            "type": "string",
            "description": "The URL for CloudFormation onboarding without LoadBalancer policy",
            "example": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
          }
        },
        "example": {
          "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
          "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
        }
      },
      "ServiceDeploymentDetails": {
        "type": "object",
        "properties": {
          "dependsOnDeployment": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Dolor minima necessitatibus iste."
            },
            "description": "The deployment keys that this deployment depends on",
            "example": [
              "instanceDeploymentAlias1",
              "instanceDeploymentAlias2"
            ]
          },
          "instanceDeploymentAlias": {
            "type": "string",
            "description": "The instance deployment alias",
            "example": "instanceDeploymentAlias"
          },
          "instanceId": {
            "type": "string",
            "description": "The instance ID",
            "example": "i-12345678"
          },
          "serviceId": {
            "type": "string",
            "description": "The service ID",
            "example": "s-12345678"
          },
          "status": {
            "type": "string",
            "description": "The status of the service deployment",
            "example": "PENDING"
          },
          "statusMessage": {
            "type": "string",
            "description": "The status message of the service deployment",
            "example": "Creating deployment"
          },
          "subscriptionId": {
            "type": "string",
            "description": "The instance subscription ID",
            "example": "Veniam incidunt molestiae suscipit nostrum."
          }
        },
        "example": {
          "dependsOnDeployment": [
            "instanceDeploymentAlias1",
            "instanceDeploymentAlias2"
          ],
          "instanceDeploymentAlias": "instanceDeploymentAlias",
          "instanceId": "i-12345678",
          "serviceId": "s-12345678",
          "status": "PENDING",
          "statusMessage": "Creating deployment",
          "subscriptionId": "Et quod libero impedit aspernatur possimus."
        },
        "required": [
          "instanceDeploymentAlias",
          "serviceId",
          "subscriptionId"
        ]
      },
      "ServiceEnvironment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Service environment ID",
            "example": "se-12345678"
          },
          "name": {
            "type": "string",
            "description": "Name of the Service Environment",
            "example": "dev"
          },
          "promoteStatus": {
            "type": "string",
            "description": "The status of the promotion",
            "example": "IN_SYNC|OUT_OF_SYNC|UNKNOWN"
          },
          "saasPortalStatus": {
            "type": "string",
            "description": "The status of the SaaS portal for this environment type",
            "example": "READY"
          },
          "saasPortalUrl": {
            "type": "string",
            "description": "The URL of the SaaS portal for this environment type",
            "example": "https://saas-portal.example.com"
          },
          "servicePlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicePlan"
            },
            "description": "List of service plans",
            "example": [
              {
                "description": "A Basic product tier",
                "modelType": "CUSTOMER_HOSTED",
                "name": "Basic",
                "productTierID": "pt-12345678",
                "tierType": "OMNISTRATE_DEDICATED_TENANCY"
              },
              {
                "description": "A Basic product tier",
                "modelType": "CUSTOMER_HOSTED",
                "name": "Basic",
                "productTierID": "pt-12345678",
                "tierType": "OMNISTRATE_DEDICATED_TENANCY"
              },
              {
                "description": "A Basic product tier",
                "modelType": "CUSTOMER_HOSTED",
                "name": "Basic",
                "productTierID": "pt-12345678",
                "tierType": "OMNISTRATE_DEDICATED_TENANCY"
              },
              {
                "description": "A Basic product tier",
                "modelType": "CUSTOMER_HOSTED",
                "name": "Basic",
                "productTierID": "pt-12345678",
                "tierType": "OMNISTRATE_DEDICATED_TENANCY"
              }
            ]
          },
          "sourceEnvironmentID": {
            "type": "string",
            "description": "The source environment ID",
            "example": "se-12345678"
          },
          "sourceEnvironmentName": {
            "type": "string",
            "description": "The source environment name",
            "example": "dev"
          },
          "type": {
            "type": "string",
            "example": "DEV"
          },
          "visibility": {
            "type": "string",
            "description": "Visibility of the service environment",
            "example": "private"
          }
        },
        "example": {
          "id": "se-12345678",
          "name": "dev",
          "promoteStatus": "IN_SYNC|OUT_OF_SYNC|UNKNOWN",
          "saasPortalStatus": "READY",
          "saasPortalUrl": "https://saas-portal.example.com",
          "servicePlans": [
            {
              "description": "A Basic product tier",
              "modelType": "CUSTOMER_HOSTED",
              "name": "Basic",
              "productTierID": "pt-12345678",
              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
            },
            {
              "description": "A Basic product tier",
              "modelType": "CUSTOMER_HOSTED",
              "name": "Basic",
              "productTierID": "pt-12345678",
              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
            },
            {
              "description": "A Basic product tier",
              "modelType": "CUSTOMER_HOSTED",
              "name": "Basic",
              "productTierID": "pt-12345678",
              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
            },
            {
              "description": "A Basic product tier",
              "modelType": "CUSTOMER_HOSTED",
              "name": "Basic",
              "productTierID": "pt-12345678",
              "tierType": "OMNISTRATE_DEDICATED_TENANCY"
            }
          ],
          "sourceEnvironmentID": "se-12345678",
          "sourceEnvironmentName": "dev",
          "type": "DEV",
          "visibility": "private"
        },
        "required": [
          "id",
          "name",
          "visibility",
          "servicePlans"
        ]
      },
      "ServiceModelFeatureDetail": {
        "type": "object",
        "properties": {
          "configuration": {
            "type": "object",
            "example": {
              "Ad doloremque officia.": "Sint eos voluptatibus tempora voluptatum.",
              "Eum vel.": "Enim sit ea dignissimos unde sapiente.",
              "Maxime adipisci quae deleniti et.": "Vitae fuga soluta explicabo."
            },
            "additionalProperties": true
          },
          "feature": {
            "type": "string",
            "example": "Quo officiis molestiae."
          }
        },
        "example": {
          "configuration": {
            "Ipsa ab officia aliquam voluptas.": "Est quae perspiciatis quae nihil nam.",
            "Placeat suscipit.": "Eum aperiam sunt reiciendis."
          },
          "feature": "Repellendus architecto quis."
        },
        "required": [
          "feature",
          "configuration"
        ]
      },
      "ServiceOffering": {
        "type": "object",
        "properties": {
          "AutoApproveSubscription": {
            "type": "boolean",
            "description": "Auto approve subscription or not",
            "example": false
          },
          "assets": {
            "$ref": "#/components/schemas/ServiceAssets"
          },
          "awsRegions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Velit repellendus modi ut quasi ut."
            },
            "description": "The AWS regions that this service offering is available on",
            "example": [
              "us-east-2",
              "ca-central-1"
            ]
          },
          "billingPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfferingBillingPlan"
            },
            "description": "List of billing plans for this product tier.",
            "example": [
              {
                "maxNumberofInstances": 5
              },
              {
                "maxNumberofInstances": 5
              }
            ]
          },
          "cloudProviders": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Dolorem architecto aut numquam incidunt voluptatem ad."
            },
            "description": "List of supported cloud providers for this product tier.",
            "example": [
              "AWS",
              "GCP",
              "Azure"
            ]
          },
          "gcpRegions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Quasi vel."
            },
            "description": "The GCP regions that this service offering is available on",
            "example": [
              "us-central1"
            ]
          },
          "productTierDescription": {
            "type": "string",
            "description": "A brief description of the product tier",
            "example": "A premium product tier"
          },
          "productTierDocumentation": {
            "type": "string",
            "description": "Documentation",
            "example": "Any documentation"
          },
          "productTierID": {
            "type": "string",
            "description": "The service product ID",
            "example": "pt-12345678"
          },
          "productTierName": {
            "type": "string",
            "description": "The product tier name",
            "example": "Premium"
          },
          "productTierPlanDescription": {
            "type": "string",
            "description": "A brief description for the end user of the product tier",
            "example": "A premium plan"
          },
          "productTierPricing": {
            "description": "Pricing",
            "example": {
              "price1": "value1"
            }
          },
          "productTierSupport": {
            "type": "string",
            "description": "Support",
            "example": "Any support"
          },
          "productTierType": {
            "type": "string",
            "description": "Tier type",
            "example": "OMNISTRATE_DEDICATED_TENANCY"
          },
          "productTierURLKey": {
            "type": "string",
            "description": "The product tier URL key",
            "example": "premium"
          },
          "productTierVersion": {
            "type": "string",
            "description": "The product tier version",
            "example": "1.0.0"
          },
          "resourceParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceEntity"
            },
            "description": "The resource parameters",
            "example": [
              {
                "name": "MySQL",
                "resourceId": "r-12345678",
                "urlKey": "mysql"
              },
              {
                "name": "Redis",
                "resourceId": "r-abcdefgh",
                "urlKey": "redis"
              }
            ]
          },
          "serviceAPIID": {
            "type": "string",
            "description": "The service API ID",
            "example": "sa-12345678"
          },
          "serviceAPIVersion": {
            "type": "string",
            "description": "The service API version",
            "example": "v1"
          },
          "serviceEnvironmentID": {
            "type": "string",
            "description": "The service Environment ID",
            "example": "se-12345678"
          },
          "serviceEnvironmentName": {
            "type": "string",
            "description": "The service environment name",
            "example": "Development"
          },
          "serviceEnvironmentType": {
            "type": "string",
            "description": "The service environment type",
            "example": "DEV"
          },
          "serviceEnvironmentURLKey": {
            "type": "string",
            "description": "The service environment URL key",
            "example": "dev"
          },
          "serviceEnvironmentVisibility": {
            "type": "string",
            "description": "The service environment visibility",
            "example": "PRIVATE"
          },
          "serviceLogoURL": {
            "type": "string",
            "description": "The logo for the service",
            "example": "Amet neque aperiam."
          },
          "serviceModelFeatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceModelFeatureDetail"
            },
            "description": "Enabled service model features",
            "example": [
              {
                "configuration": {
                  "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                  "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                },
                "feature": "Eum temporibus voluptate inventore est consectetur omnis."
              },
              {
                "configuration": {
                  "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                  "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                },
                "feature": "Eum temporibus voluptate inventore est consectetur omnis."
              },
              {
                "configuration": {
                  "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                  "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
                },
                "feature": "Eum temporibus voluptate inventore est consectetur omnis."
              }
            ]
          },
          "serviceModelID": {
            "type": "string",
            "description": "The service Model ID",
            "example": "sm-12345678"
          },
          "serviceModelName": {
            "type": "string",
            "description": "The service model name",
            "example": "Hosted"
          },
          "serviceModelStatus": {
            "type": "string",
            "description": "The service model status",
            "example": "Ready"
          },
          "serviceModelType": {
            "type": "string",
            "description": "The type of the service model. CUSTOMER_HOSTED is a service model that is hosted in the customer account and managed by Omnistrate. OMNISTRATE_HOSTED is a service model that is managed by Omnistrate platform. BYOA is a service model that is hosted in the service provider's account and managed by Omnistrate.",
            "example": "CUSTOMER_HOSTED, OMNISTRATE_HOSTED, BYOA"
          },
          "serviceModelURLKey": {
            "type": "string",
            "description": "The service model URL key",
            "example": "hosted"
          },
          "supportsPublicNetwork": {
            "type": "boolean",
            "description": "Indicates whether any of the resources in the product tier support public network",
            "example": false
          }
        },
        "example": {
          "AutoApproveSubscription": false,
          "assets": {
            "cloudFormationURL": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa",
            "cloudFormationURLNoLB": "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false"
          },
          "awsRegions": [
            "us-east-2",
            "ca-central-1"
          ],
          "billingPlans": [
            {
              "maxNumberofInstances": 5
            },
            {
              "maxNumberofInstances": 5
            },
            {
              "maxNumberofInstances": 5
            }
          ],
          "cloudProviders": [
            "AWS",
            "GCP",
            "Azure"
          ],
          "gcpRegions": [
            "us-central1"
          ],
          "productTierDescription": "A premium product tier",
          "productTierDocumentation": "Any documentation",
          "productTierID": "pt-12345678",
          "productTierName": "Premium",
          "productTierPlanDescription": "A premium plan",
          "productTierPricing": {
            "price1": "value1"
          },
          "productTierSupport": "Any support",
          "productTierType": "OMNISTRATE_DEDICATED_TENANCY",
          "productTierURLKey": "premium",
          "productTierVersion": "1.0.0",
          "resourceParameters": [
            {
              "name": "MySQL",
              "resourceId": "r-12345678",
              "urlKey": "mysql"
            },
            {
              "name": "Redis",
              "resourceId": "r-abcdefgh",
              "urlKey": "redis"
            }
          ],
          "serviceAPIID": "sa-12345678",
          "serviceAPIVersion": "v1",
          "serviceEnvironmentID": "se-12345678",
          "serviceEnvironmentName": "Development",
          "serviceEnvironmentType": "DEV",
          "serviceEnvironmentURLKey": "dev",
          "serviceEnvironmentVisibility": "PRIVATE",
          "serviceLogoURL": "Velit odio nulla et placeat tempora sed.",
          "serviceModelFeatures": [
            {
              "configuration": {
                "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
              },
              "feature": "Eum temporibus voluptate inventore est consectetur omnis."
            },
            {
              "configuration": {
                "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
              },
              "feature": "Eum temporibus voluptate inventore est consectetur omnis."
            },
            {
              "configuration": {
                "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
              },
              "feature": "Eum temporibus voluptate inventore est consectetur omnis."
            },
            {
              "configuration": {
                "Sint voluptate dolor iusto sed distinctio inventore.": "Laborum incidunt corrupti.",
                "Voluptas pariatur.": "Laboriosam eligendi omnis voluptatem ut minima."
              },
              "feature": "Eum temporibus voluptate inventore est consectetur omnis."
            }
          ],
          "serviceModelID": "sm-12345678",
          "serviceModelName": "Hosted",
          "serviceModelStatus": "Ready",
          "serviceModelType": "CUSTOMER_HOSTED, OMNISTRATE_HOSTED, BYOA",
          "serviceModelURLKey": "hosted",
          "supportsPublicNetwork": false
        },
        "required": [
          "serviceEnvironmentURLKey",
          "serviceEnvironmentName",
          "serviceEnvironmentVisibility",
          "serviceEnvironmentType",
          "serviceAPIVersion",
          "serviceAPIID",
          "serviceModelURLKey",
          "serviceModelName",
          "serviceModelType",
          "serviceModelStatus",
          "productTierURLKey",
          "productTierName",
          "resourceParameters",
          "productTierID",
          "productTierVersion",
          "productTierType",
          "serviceModelID",
          "serviceEnvironmentID",
          "serviceLogoURL",
          "productTierDocumentation",
          "productTierSupport",
          "productTierPricing",
          "AutoApproveSubscription"
        ]
      },
      "ServicePlan": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the Product Tier",
            "example": "A Basic product tier"
          },
          "modelType": {
            "type": "string",
            "description": "The model type encapsulating this service",
            "example": "CUSTOMER_HOSTED"
          },
          "name": {
            "type": "string",
            "description": "Name of the Product Tier",
            "example": "Basic"
          },
          "productTierID": {
            "type": "string",
            "description": "Product tier ID",
            "example": "pt-12345678"
          },
          "tierType": {
            "type": "string",
            "description": "Product tier type",
            "example": "OMNISTRATE_DEDICATED_TENANCY"
          }
        },
        "example": {
          "description": "A Basic product tier",
          "modelType": "CUSTOMER_HOSTED",
          "name": "Basic",
          "productTierID": "pt-12345678",
          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
        },
        "required": [
          "name",
          "description",
          "tierType",
          "modelType",
          "productTierID"
        ]
      },
      "SetEnvironmentVariablesRequestBody": {
        "type": "object",
        "properties": {
          "environmentVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            },
            "description": "The environment variables that this resource requires",
            "example": [
              {
                "key": "MYSQL_ROOT_PASSWORD",
                "value": "password"
              }
            ]
          }
        },
        "example": {
          "environmentVariables": [
            {
              "key": "MYSQL_ROOT_PASSWORD",
              "value": "password"
            }
          ]
        }
      },
      "SigninRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "abc@gmail.com",
            "format": "email",
            "minLength": 1
          },
          "hashedPassword": {
            "type": "string",
            "example": "deprecated",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "example": "password",
            "minLength": 1
          }
        },
        "example": {
          "email": "abc@gmail.com",
          "hashedPassword": "deprecated",
          "password": "password"
        },
        "required": [
          "email"
        ]
      },
      "SigninResult": {
        "type": "object",
        "properties": {
          "jwtToken": {
            "type": "string",
            "description": "The jwt token",
            "example": ""
          }
        },
        "example": {
          "jwtToken": ""
        },
        "required": [
          "jwtToken"
        ]
      },
      "SignupRequestBody": {
        "type": "object",
        "properties": {
          "companyDescription": {
            "type": "string",
            "example": "We sell xyz database software",
            "minLength": 1
          },
          "companyUrl": {
            "type": "string",
            "example": "https://www.mywebsite.com",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "example": "abc@gmail.com",
            "format": "email",
            "minLength": 1
          },
          "legalCompanyName": {
            "type": "string",
            "default": "",
            "example": "mywebsite"
          },
          "name": {
            "type": "string",
            "example": "John Doe",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "example": "password",
            "minLength": 1
          }
        },
        "example": {
          "companyDescription": "We sell xyz database software",
          "companyUrl": "https://www.mywebsite.com",
          "email": "abc@gmail.com",
          "legalCompanyName": "mywebsite",
          "name": "John Doe",
          "password": "password"
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "SubscriptionUsers": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email of the user",
            "example": "abc@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "The name of the user",
            "example": "John Dae"
          },
          "roleType": {
            "type": "string",
            "example": "reader"
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID",
            "example": "sub-abcd1234"
          },
          "userId": {
            "type": "string",
            "description": "The User ID",
            "example": "user-abcd1234"
          }
        },
        "example": {
          "email": "abc@gmail.com",
          "name": "John Dae",
          "roleType": "reader",
          "subscriptionId": "sub-abcd1234",
          "userId": "user-abcd1234"
        },
        "required": [
          "subscriptionId",
          "name",
          "email",
          "roleType",
          "userId"
        ]
      },
      "TerraformConfiguration": {
        "type": "object",
        "properties": {
          "gitConfiguration": {
            "$ref": "#/components/schemas/GitConfiguration"
          },
          "privateModuleGitAccessTokens": {
            "type": "object",
            "description": "The git access tokens for private modules",
            "example": {
              "tokenName": "accessToken"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Amet distinctio omnis."
            }
          },
          "requiredOutputKeys": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Magnam sit sapiente dignissimos debitis cumque et."
            },
            "description": "The required output keys to export",
            "example": [
              "output1"
            ]
          },
          "requiredOutputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TerraformOutput"
            },
            "description": "The required output keys to export",
            "example": [
              {
                "exported": true,
                "key": "output1"
              }
            ]
          },
          "terraformExecutionIdentity": {
            "type": "string",
            "description": "The identity to use for terraform execution",
            "example": "arn:aws:iam::123456789012:role/role-name"
          },
          "terraformPath": {
            "type": "string",
            "description": "The path to the terraform files directory",
            "example": "/project1/tf"
          }
        },
        "example": {
          "gitConfiguration": {
            "accessToken": "my-token",
            "referenceName": "tags/v1.0.0",
            "repositoryUrl": "https://github.com/username/myrepo",
            "userName": "my-user"
          },
          "privateModuleGitAccessTokens": {
            "tokenName": "accessToken"
          },
          "requiredOutputKeys": [
            "output1"
          ],
          "requiredOutputs": [
            {
              "exported": true,
              "key": "output1"
            }
          ],
          "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
          "terraformPath": "/project1/tf"
        },
        "required": [
          "terraformPath"
        ]
      },
      "TerraformOutput": {
        "type": "object",
        "properties": {
          "exported": {
            "type": "boolean",
            "description": "Whether the output is exported",
            "example": true
          },
          "key": {
            "type": "string",
            "description": "The key of the output",
            "example": "output1"
          }
        },
        "example": {
          "exported": true,
          "key": "output1"
        },
        "required": [
          "key",
          "exported"
        ]
      },
      "TierVersionSet": {
        "type": "object",
        "properties": {
          "autoApproveSubscription": {
            "type": "boolean",
            "description": "Auto approve subscription or not",
            "example": false
          },
          "baseVersion": {
            "type": "string",
            "description": "The base version of the version set.",
            "example": "3.0"
          },
          "createdAt": {
            "type": "string",
            "description": "The timestamp when the version set was created.",
            "example": "2020-01-01T00:00:00Z"
          },
          "createdBy": {
            "type": "string",
            "description": "The name of the user who created the version set.",
            "example": "John Doe"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the product-tier version set.",
            "example": "Doloremque omnis."
          },
          "enabledFeatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTierFeatureDetail"
            },
            "description": "The features that are enabled for this product tier, including scope details and configuration",
            "example": [
              {
                "configuration": {
                  "provider": "native"
                },
                "feature": "LOGS",
                "scope": "INTERNAL"
              },
              {
                "configuration": {
                  "provider": "native"
                },
                "feature": "LOGS",
                "scope": "INTERNAL"
              },
              {
                "configuration": {
                  "provider": "native"
                },
                "feature": "LOGS",
                "scope": "INTERNAL"
              },
              {
                "configuration": {
                  "provider": "native"
                },
                "feature": "LOGS",
                "scope": "INTERNAL"
              }
            ]
          },
          "features": {
            "type": "object",
            "description": "The features that are enabled / disabled for this product tier",
            "example": {
              "BILLING": false,
              "LOGS": true,
              "METRICS": false
            },
            "additionalProperties": {
              "type": "boolean",
              "example": false
            }
          },
          "instanceCount": {
            "type": "integer",
            "description": "The number of instances that are currently running this version set.",
            "example": 12,
            "format": "int64"
          },
          "latestUpgradePathId": {
            "type": "string",
            "description": "The ID of the latest upgrade path away from the tier-version set.",
            "example": "upgrade-12345678"
          },
          "name": {
            "type": "string",
            "description": "The name of the product-tier version set.",
            "example": "Regular version set"
          },
          "parentVersion": {
            "type": "string",
            "description": "The parent version of this release.",
            "example": "2.0"
          },
          "productTierId": {
            "type": "string",
            "description": "The product tier ID that this version set belongs to.",
            "example": "Voluptas optio reprehenderit deserunt voluptatem."
          },
          "releasedAt": {
            "type": "string",
            "description": "The timestamp when the version set was released.",
            "example": "2020-01-01T00:00:00Z"
          },
          "releasedBy": {
            "type": "string",
            "description": "The name of the user who released the version set.",
            "example": "John Doe"
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceSummary"
            },
            "description": "List of resources that are part of this version set.",
            "example": [
              {
                "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                "id": "r-12345678",
                "imageConfigId": "imgc-12345678",
                "infraConfigId": "ic-12345678",
                "isExternal": true,
                "managedResourceType": "PortsBasedProxy",
                "name": "MySQL multi-writer service"
              },
              {
                "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
                "id": "r-12345678",
                "imageConfigId": "imgc-12345678",
                "infraConfigId": "ic-12345678",
                "isExternal": true,
                "managedResourceType": "PortsBasedProxy",
                "name": "MySQL multi-writer service"
              }
            ]
          },
          "serviceId": {
            "type": "string",
            "description": "ID of the Service",
            "example": "s-12345678"
          },
          "serviceModelId": {
            "type": "string",
            "description": "The service model ID that this version set belongs to.",
            "example": "Saepe ut."
          },
          "status": {
            "type": "string",
            "description": "The tier version set status.",
            "example": "Preferred|Active|Deprecated|Pending"
          },
          "type": {
            "type": "string",
            "description": "The version-set type of the product-tier.",
            "example": "Major|Incremental|UserDefined"
          },
          "updatedAt": {
            "type": "string",
            "description": "The timestamp when the version set was updated.",
            "example": "2020-01-01T00:00:00Z"
          },
          "version": {
            "type": "string",
            "description": "The version number for the specific version set.",
            "example": "3.0"
          }
        },
        "description": "Details about the product-tier version set.",
        "example": {
          "autoApproveSubscription": false,
          "baseVersion": "3.0",
          "createdAt": "2020-01-01T00:00:00Z",
          "createdBy": "John Doe",
          "description": "Autem non qui.",
          "enabledFeatures": [
            {
              "configuration": {
                "provider": "native"
              },
              "feature": "LOGS",
              "scope": "INTERNAL"
            },
            {
              "configuration": {
                "provider": "native"
              },
              "feature": "LOGS",
              "scope": "INTERNAL"
            }
          ],
          "features": {
            "BILLING": false,
            "LOGS": true,
            "METRICS": false
          },
          "instanceCount": 12,
          "latestUpgradePathId": "upgrade-12345678",
          "name": "Regular version set",
          "parentVersion": "2.0",
          "productTierId": "A consectetur.",
          "releasedAt": "2020-01-01T00:00:00Z",
          "releasedBy": "John Doe",
          "resources": [
            {
              "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
              "id": "r-12345678",
              "imageConfigId": "imgc-12345678",
              "infraConfigId": "ic-12345678",
              "isExternal": true,
              "managedResourceType": "PortsBasedProxy",
              "name": "MySQL multi-writer service"
            },
            {
              "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
              "id": "r-12345678",
              "imageConfigId": "imgc-12345678",
              "infraConfigId": "ic-12345678",
              "isExternal": true,
              "managedResourceType": "PortsBasedProxy",
              "name": "MySQL multi-writer service"
            },
            {
              "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
              "id": "r-12345678",
              "imageConfigId": "imgc-12345678",
              "infraConfigId": "ic-12345678",
              "isExternal": true,
              "managedResourceType": "PortsBasedProxy",
              "name": "MySQL multi-writer service"
            },
            {
              "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
              "id": "r-12345678",
              "imageConfigId": "imgc-12345678",
              "infraConfigId": "ic-12345678",
              "isExternal": true,
              "managedResourceType": "PortsBasedProxy",
              "name": "MySQL multi-writer service"
            }
          ],
          "serviceId": "s-12345678",
          "serviceModelId": "Voluptatibus quod fuga sapiente doloremque deleniti.",
          "status": "Preferred|Active|Deprecated|Pending",
          "type": "Major|Incremental|UserDefined",
          "updatedAt": "2020-01-01T00:00:00Z",
          "version": "3.0"
        },
        "required": [
          "serviceId",
          "serviceModelId",
          "productTierId",
          "type",
          "version",
          "baseVersion",
          "status",
          "createdAt",
          "releasedAt",
          "updatedAt",
          "features",
          "enabledFeatures"
        ]
      },
      "UpdateComputeConfigRequestBody": {
        "type": "object",
        "properties": {
          "autoscalingPolicy": {
            "$ref": "#/components/schemas/AutoscalingPolicy"
          },
          "cpuArchitecture": {
            "type": "string",
            "description": "Processor architecture",
            "example": "X86_64|ARM64"
          },
          "description": {
            "type": "string",
            "description": "Description of the compute config",
            "example": "my compute config description",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the compute config",
            "example": "my compute config",
            "minLength": 1
          },
          "replicaCount": {
            "type": "string",
            "description": "Number of replicas to provision for this logical pool of nodes per instance of the resource",
            "example": "3"
          },
          "resources": {
            "$ref": "#/components/schemas/ResourceSpec"
          },
          "rootVolumeSizeGi": {
            "type": "integer",
            "description": "Size of the root volume in Gi",
            "example": 10,
            "format": "int64"
          },
          "warmPoolConfiguration": {
            "$ref": "#/components/schemas/WarmPoolConfiguration"
          }
        },
        "example": {
          "autoscalingPolicy": {
            "maxReplicas": 4,
            "minReplicas": 1
          },
          "cpuArchitecture": "X86_64|ARM64",
          "description": "my compute config description",
          "name": "my compute config",
          "replicaCount": "3",
          "resources": {
            "limits": {
              "cpu": "1",
              "memory": "500Mi"
            },
            "requests": {
              "cpu": "0.5",
              "memory": "200Mi"
            }
          },
          "rootVolumeSizeGi": 10,
          "warmPoolConfiguration": {
            "minimumNodesInPool": 1
          }
        }
      },
      "UpdateCustomNetworkRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User friendly network name to help distinguish networks with same CIDRs",
            "example": "Dev us-east-1"
          }
        },
        "example": {
          "name": "Dev us-east-1"
        }
      },
      "UpdateDeploymentConfigRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the deployment config",
            "example": "A production deployment config"
          },
          "infraRollConfiguration": {
            "$ref": "#/components/schemas/InfraRollConfiguration"
          },
          "name": {
            "type": "string",
            "description": "Name of the deployment config",
            "example": "Production"
          },
          "rolloutPriorityList": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Voluptatem omnis magnam quia voluptatem doloribus."
            },
            "example": [
              "region-12345678",
              "region-abcd1234",
              "region-3c3c3c3c"
            ]
          }
        },
        "example": {
          "description": "A production deployment config",
          "infraRollConfiguration": {
            "infraRolloutStrategy": "NEW_DEPLOYMENT_ONLY",
            "maximumNumberOfResourceInstancesPerBatch": 1,
            "maximumUnavailableReplicas": 1
          },
          "name": "Production",
          "rolloutPriorityList": [
            "region-12345678",
            "region-abcd1234",
            "region-3c3c3c3c"
          ]
        }
      },
      "UpdateFileMetadataRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of the file",
            "example": "A file to store the configuration for the resource"
          },
          "mountPath": {
            "type": "string",
            "description": "The mount path of the file",
            "example": "/etc/config"
          },
          "name": {
            "type": "string",
            "description": "The name of the file",
            "example": "file.txt"
          }
        },
        "example": {
          "description": "A file to store the configuration for the resource",
          "mountPath": "/etc/config",
          "name": "file.txt"
        }
      },
      "UpdateIdentityProviderRequestBody": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "description": "The Client ID of the Identity Provider",
            "example": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com"
          },
          "clientSecret": {
            "type": "string",
            "description": "The Client Secret of the Identity Provider",
            "example": "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"
          }
        },
        "example": {
          "clientId": "205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com",
          "clientSecret": "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"
        }
      },
      "UpdateImageConfigRequestBody": {
        "type": "object",
        "properties": {
          "customImageCommandsAndArgs": {
            "$ref": "#/components/schemas/CustomImageCommandsAndArgs"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the image configuration",
            "example": "An image configuration for my new entity"
          },
          "imageName": {
            "type": "string",
            "description": "Name of the container image",
            "example": "mysql",
            "minLength": 1
          },
          "imageRegistryId": {
            "type": "string",
            "description": "The image registry ID to use for the infra",
            "example": "ir-12345678"
          },
          "imageSignaturePublicKeyPEM": {
            "type": "string",
            "description": "PEM-encoded Public key part of the key used to sign the container image",
            "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n"
          },
          "imageTag": {
            "type": "string",
            "description": "Tag representing the software image version that is currently preferred",
            "example": "v1"
          }
        },
        "example": {
          "customImageCommandsAndArgs": {
            "args": [
              "-d",
              "mysql"
            ],
            "commands": [
              "echo",
              "Hello, World!"
            ]
          },
          "description": "An image configuration for my new entity",
          "imageName": "mysql",
          "imageRegistryId": "ir-12345678",
          "imageSignaturePublicKeyPEM": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
          "imageTag": "v1"
        }
      },
      "UpdateImageRegistryRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the Image Registry",
            "example": "DockerHub is a public Docker Image Registry"
          },
          "host": {
            "type": "string",
            "description": "The Image Registry host",
            "example": "docker.io"
          },
          "name": {
            "type": "string",
            "description": "Name of the Image Registry",
            "example": "DockerHub"
          },
          "password": {
            "type": "string",
            "description": "The password to use when authenticating to the Image Registry",
            "example": "mypassword"
          },
          "username": {
            "type": "string",
            "description": "The username to use when authenticating to the Image Registry",
            "example": "myusername"
          }
        },
        "example": {
          "description": "DockerHub is a public Docker Image Registry",
          "host": "docker.io",
          "name": "DockerHub",
          "password": "mypassword",
          "username": "myusername"
        }
      },
      "UpdateInfraConfigRequestBody": {
        "type": "object",
        "properties": {
          "computeConfigId": {
            "type": "string",
            "description": "The compute config ID",
            "example": "cc-12345678"
          },
          "customTag": {
            "$ref": "#/components/schemas/EnvironmentVariable"
          },
          "description": {
            "type": "string",
            "description": "The description for the infra config",
            "example": "Infra config used for the base tier MySQL service"
          },
          "name": {
            "type": "string",
            "description": "The name of the infra config",
            "example": "MySQL Writer Infra Config"
          },
          "networkConfigId": {
            "type": "string",
            "description": "The network config ID",
            "example": "nc-12345678"
          },
          "storageConfigId": {
            "type": "string",
            "description": "The storage config ID per compute node",
            "example": "sc-12345678"
          }
        },
        "example": {
          "computeConfigId": "cc-12345678",
          "customTag": {
            "key": "customKey",
            "value": "customValue"
          },
          "description": "Infra config used for the base tier MySQL service",
          "name": "MySQL Writer Infra Config",
          "networkConfigId": "nc-12345678",
          "storageConfigId": "sc-12345678"
        }
      },
      "UpdateInputParameterRequestBody": {
        "type": "object",
        "properties": {
          "defaultValue": {
            "type": "string",
            "description": "Default value to use for an optional input parameter represented as a string",
            "example": "[\"1\", \"2.8\", \"3\"]"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the input parameter",
            "example": "Quos qui numquam sit."
          },
          "hasOptions": {
            "type": "boolean",
            "description": "Marks the input parameter to be selectable from a list of values",
            "example": true
          },
          "labeledOptions": {
            "type": "object",
            "description": "A map for labeled options. The key is the label and the value is the option. When the option is selected, the label will be displayed to the end customer. Specify either options or labeledOptions when defining the input parameter.",
            "example": {
              "large": "t3.xlarge",
              "medium": "t3.large",
              "small": "t3.medium"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Omnis tenetur autem dolor omnis et ut."
            }
          },
          "limits": {
            "$ref": "#/components/schemas/Limits"
          },
          "modifiable": {
            "type": "boolean",
            "description": "Marks the input parameter as immutable",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "External name for the input parameter",
            "example": "mn4",
            "minLength": 1
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Iste ex non."
            },
            "description": "A list of options to restrict the value of the input parameter to (represented as a string)",
            "example": [
              "[\"1\", \"2.8\", \"3\"]",
              "[\"3.4\", \"4.5\"]"
            ]
          },
          "required": {
            "type": "boolean",
            "description": "Enforces the input parameter as a required parameter",
            "example": true
          }
        },
        "example": {
          "defaultValue": "[\"1\", \"2.8\", \"3\"]",
          "description": "Tempore officia dolorum dolorem molestiae quia aut.",
          "hasOptions": false,
          "labeledOptions": {
            "large": "t3.xlarge",
            "medium": "t3.large",
            "small": "t3.medium"
          },
          "limits": {
            "max": "Sit explicabo delectus aut nisi consequuntur.",
            "maxLength": "Sunt amet provident.",
            "min": "Cumque temporibus dolores vitae dolores doloremque illum.",
            "minLength": "Qui odio laudantium illum."
          },
          "modifiable": false,
          "name": "ux",
          "options": [
            "[\"1\", \"2.8\", \"3\"]",
            "[\"3.4\", \"4.5\"]"
          ],
          "required": false
        }
      },
      "UpdateInstanceStorageVolumeConfigRequestBody": {
        "type": "object",
        "properties": {
          "instanceStorageIops": {
            "type": "string",
            "description": "The IOPS provisioned for the configured instance storage type",
            "example": "7500"
          },
          "instanceStorageThroughputMiBps": {
            "type": "string",
            "description": "The throughput (in MiBps) provisioned for the configured instance storage type",
            "example": "128"
          },
          "instanceStorageType": {
            "type": "string",
            "description": "The type of the storage for a compute instance",
            "example": "AWS::EBS_GP2"
          }
        },
        "example": {
          "instanceStorageIops": "7500",
          "instanceStorageThroughputMiBps": "128",
          "instanceStorageType": "AWS::EBS_GP2"
        }
      },
      "UpdateLimitRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the limit",
            "example": "A premium limit"
          },
          "name": {
            "type": "string",
            "description": "Name of the limit",
            "example": "Premium Tier"
          },
          "value": {
            "type": "integer",
            "description": "Value of the limit being enforced",
            "example": 4,
            "format": "int64"
          }
        },
        "example": {
          "description": "A premium limit",
          "name": "Premium Tier",
          "value": 4
        },
        "required": [
          "value"
        ]
      },
      "UpdateNetworkConfigRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the network config",
            "example": "A multi-zone HA network config"
          },
          "endpointPerReplica": {
            "type": "boolean",
            "description": "Generates a DNS endpoint per-replica for this network config",
            "example": true
          },
          "internal": {
            "type": "boolean",
            "description": "Restrict access to this network config to the internal network",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "Name of the network config",
            "example": "Multi-zone"
          },
          "openPorts": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 2258548808871944700,
              "format": "int64"
            },
            "description": "Ports to map to the generated DNS endpoint",
            "example": [
              1299,
              3306
            ]
          },
          "privateNetworkingConfiguration": {
            "$ref": "#/components/schemas/PrivateNetworkingConfiguration"
          },
          "publicNetworkingConfiguration": {
            "$ref": "#/components/schemas/PublicNetworkingConfiguration"
          },
          "stableEgressIP": {
            "type": "boolean",
            "description": "Create an external node load balancer per node rather than expose the node ip directly",
            "example": true
          },
          "tlsTerminationPort": {
            "type": "integer",
            "description": "The port that hosts the reverse proxy for TLS termination",
            "example": 443,
            "format": "int64"
          },
          "zoneConfiguration": {
            "type": "string",
            "description": "The preferred type of zonal availability for this resource and the specific zone(s) to deploy in",
            "example": "Quo voluptatem."
          }
        },
        "example": {
          "description": "A multi-zone HA network config",
          "endpointPerReplica": true,
          "internal": true,
          "name": "Multi-zone",
          "openPorts": [
            1299,
            3306
          ],
          "privateNetworkingConfiguration": {
            "privateLinkConfiguration": {
              "awsPrivateLinkConfigurations": [
                {
                  "port": 80,
                  "targetGroupName": "my-target-group"
                },
                {
                  "port": 80,
                  "targetGroupName": "my-target-group"
                },
                {
                  "port": 80,
                  "targetGroupName": "my-target-group"
                },
                {
                  "port": 80,
                  "targetGroupName": "my-target-group"
                }
              ]
            }
          },
          "publicNetworkingConfiguration": {
            "enableClusterLoadBalancer": true,
            "enableNodeLoadBalancer": true
          },
          "stableEgressIP": true,
          "tlsTerminationPort": 443,
          "zoneConfiguration": "Rerum voluptatem."
        }
      },
      "UpdateOutputParameterRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the output variable being exported",
            "example": "Username of the user created in the target system",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "External name of the output variable being exported",
            "example": "Username",
            "minLength": 1
          },
          "value": {
            "type": "string",
            "description": "Value of the output variable being exported",
            "example": "johndoe",
            "minLength": 1
          },
          "valueRef": {
            "type": "string",
            "description": "Reference to an input variable that will be used to set the value of the output variable being exported",
            "example": "$var.username"
          },
          "valueType": {
            "type": "string",
            "example": "Sint quae quo quae quidem."
          }
        },
        "example": {
          "description": "Username of the user created in the target system",
          "name": "Username",
          "value": "johndoe",
          "valueRef": "$var.username",
          "valueType": "Nam et quibusdam non."
        }
      },
      "UpdatePasswordRequestBody": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "example": "currentPassword",
            "minLength": 1
          },
          "currentPasswordHash": {
            "type": "string",
            "example": "currentPasswordHash",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "example": "password",
            "minLength": 1
          }
        },
        "example": {
          "currentPassword": "currentPassword",
          "currentPasswordHash": "currentPasswordHash",
          "password": "password"
        },
        "required": [
          "password"
        ]
      },
      "UpdateProductTierBillingPlanRequestBody": {
        "type": "object",
        "properties": {
          "allowCreatesWhenPaymentNotConfigured": {
            "type": "boolean",
            "description": "Allow creates when payment not configured",
            "example": true
          },
          "maxNumberofInstances": {
            "type": "integer",
            "description": "Maximum number of instances",
            "example": 5,
            "format": "int64"
          },
          "planName": {
            "type": "string",
            "description": "Plan name",
            "example": "STARTER"
          },
          "pricing": {
            "description": "Pricing in dollars.",
            "example": {
              "cpuCoreHours": "0.001",
              "memoryGBHours": "0.0001"
            }
          }
        },
        "example": {
          "allowCreatesWhenPaymentNotConfigured": true,
          "maxNumberofInstances": 5,
          "planName": "STARTER",
          "pricing": {
            "cpuCoreHours": "0.001",
            "memoryGBHours": "0.0001"
          }
        }
      },
      "UpdateProductTierRequestBody": {
        "type": "object",
        "properties": {
          "autoApproveSubscription": {
            "type": "boolean",
            "description": "Auto approve subscription or not",
            "example": false
          },
          "awsRegions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Minima earum."
            },
            "description": "The AWS regions that this product tier is available on",
            "example": [
              "us-east-2",
              "ca-central-1"
            ]
          },
          "description": {
            "type": "string",
            "description": "A brief description of the product tier",
            "example": "A premium product tier"
          },
          "documentation": {
            "type": "string",
            "description": "Documentation",
            "example": "Any documentation"
          },
          "gcpRegions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Quis sapiente nulla magnam excepturi repellendus."
            },
            "description": "The GCP regions that this product tier is available on",
            "example": [
              "us-central1"
            ]
          },
          "isDisabled": {
            "type": "boolean",
            "description": "Update the product tier's state as enabled/disabled. Enabling the product tier will let end-customers subscribe and use the service plan.",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Name of the product tier",
            "example": "Premium"
          },
          "planDescription": {
            "type": "string",
            "description": "A brief description for the end user of the product tier",
            "example": "A premium plan"
          },
          "pricing": {
            "description": "Pricing",
            "example": {
              "price1": "value1"
            }
          },
          "support": {
            "type": "string",
            "description": "Support",
            "example": "Any support"
          },
          "tierType": {
            "type": "string",
            "description": "Tier type",
            "example": "OMNISTRATE_DEDICATED_TENANCY"
          }
        },
        "example": {
          "autoApproveSubscription": false,
          "awsRegions": [
            "us-east-2",
            "ca-central-1"
          ],
          "description": "A premium product tier",
          "documentation": "Any documentation",
          "gcpRegions": [
            "us-central1"
          ],
          "isDisabled": false,
          "name": "Premium",
          "planDescription": "A premium plan",
          "pricing": {
            "price1": "value1"
          },
          "support": "Any support",
          "tierType": "OMNISTRATE_DEDICATED_TENANCY"
        }
      },
      "UpdateResourceInstanceRequestBody": {
        "type": "object",
        "properties": {
          "requestParams": {
            "description": "The request parameters",
            "example": {
              "param1": "value1",
              "param2": "value2"
            }
          }
        },
        "example": {
          "requestParams": {
            "param1": "value1",
            "param2": "value2"
          }
        }
      },
      "UpdateResourceRequestBody": {
        "type": "object",
        "properties": {
          "additionalSecurityContext": {
            "$ref": "#/components/schemas/AdditionalSecurityContext"
          },
          "backupConfiguration": {
            "$ref": "#/components/schemas/BackupConfiguration"
          },
          "customLabels": {
            "type": "object",
            "description": "Custom labels for the resource",
            "example": {
              "key": "value"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Consequatur facilis et quod."
            }
          },
          "customSysCTLs": {
            "type": "object",
            "description": "Custom sysctl settings for the resource",
            "example": {
              "net.ipv4.tcp_syncookies": "1"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Hic illum quo ut."
            }
          },
          "customULimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomULimits"
            },
            "description": "Custom ulimits for the resource",
            "example": [
              {
                "ULimitsName": "NoProc",
                "ULimitsType": "Soft",
                "ULimitsValue": 1000
              },
              {
                "ULimitsName": "NoFile",
                "ULimitsType": "Hard",
                "ULimitsValue": 2048
              }
            ]
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceDependency"
            },
            "example": [
              {
                "parameterMap": {
                  "clusterId": "writerId",
                  "clusterOrg": "userDatabase"
                },
                "resourceId": "r-12345678"
              },
              {
                "parameterMap": {
                  "clusterId": "readerId",
                  "clusterOrg": "userDatabase"
                },
                "resourceId": "r-abcdef12"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "A brief description of the resource",
            "example": "A resource to manage a hosted public SaaS offering of a multi-writer MySQL service"
          },
          "environmentVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            },
            "description": "The environment variables that this resource requires",
            "example": [
              {
                "key": "MYSQL_ROOT_PASSWORD",
                "value": "password"
              }
            ]
          },
          "helmChartConfiguration": {
            "$ref": "#/components/schemas/HelmChartConfiguration"
          },
          "imageConfigId": {
            "type": "string",
            "description": "The ID of the image configuration that this resource refers to",
            "example": "imgc-12345678"
          },
          "infraConfigId": {
            "type": "string",
            "description": "The ID of the infrastructure configuration that this resource refers to",
            "example": "ic-12345678"
          },
          "kustomizeConfiguration": {
            "$ref": "#/components/schemas/KustomizeConfiguration"
          },
          "l4LoadBalancerConfiguration": {
            "$ref": "#/components/schemas/L4LoadBalancerConfiguration"
          },
          "l7LoadBalancerConfiguration": {
            "$ref": "#/components/schemas/L7LoadBalancerConfiguration"
          },
          "name": {
            "type": "string",
            "description": "Name of the resource",
            "example": "Galera"
          },
          "operatorCRDConfiguration": {
            "$ref": "#/components/schemas/OperatorCRDConfiguration"
          },
          "terraformConfigurations": {
            "type": "object",
            "description": "The Terraform configurations for various cloud providers",
            "example": {
              "Ratione adipisci ut eos porro fugiat enim.": {
                "gitConfiguration": {
                  "accessToken": "my-token",
                  "referenceName": "tags/v1.0.0",
                  "repositoryUrl": "https://github.com/username/myrepo",
                  "userName": "my-user"
                },
                "privateModuleGitAccessTokens": {
                  "tokenName": "accessToken"
                },
                "requiredOutputKeys": [
                  "output1"
                ],
                "requiredOutputs": [
                  {
                    "exported": true,
                    "key": "output1"
                  }
                ],
                "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                "terraformPath": "/project1/tf"
              },
              "Repudiandae nobis optio voluptates.": {
                "gitConfiguration": {
                  "accessToken": "my-token",
                  "referenceName": "tags/v1.0.0",
                  "repositoryUrl": "https://github.com/username/myrepo",
                  "userName": "my-user"
                },
                "privateModuleGitAccessTokens": {
                  "tokenName": "accessToken"
                },
                "requiredOutputKeys": [
                  "output1"
                ],
                "requiredOutputs": [
                  {
                    "exported": true,
                    "key": "output1"
                  }
                ],
                "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                "terraformPath": "/project1/tf"
              },
              "Voluptates omnis autem perferendis.": {
                "gitConfiguration": {
                  "accessToken": "my-token",
                  "referenceName": "tags/v1.0.0",
                  "repositoryUrl": "https://github.com/username/myrepo",
                  "userName": "my-user"
                },
                "privateModuleGitAccessTokens": {
                  "tokenName": "accessToken"
                },
                "requiredOutputKeys": [
                  "output1"
                ],
                "requiredOutputs": [
                  {
                    "exported": true,
                    "key": "output1"
                  }
                ],
                "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
                "terraformPath": "/project1/tf"
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/TerraformConfiguration"
            }
          }
        },
        "example": {
          "additionalSecurityContext": {
            "AddCapabilities": [
              "CAP_NET_ADMIN",
              "CAP_NET_RAW"
            ],
            "DropCapabilities": [
              "CAP_NET_ADMIN",
              "CAP_NET_RAW"
            ],
            "SupplementalGroupIDs": [
              1001,
              999
            ]
          },
          "backupConfiguration": {
            "backupPeriodInHours": 24,
            "backupRetentionInDays": 7
          },
          "customLabels": {
            "key": "value"
          },
          "customSysCTLs": {
            "net.ipv4.tcp_syncookies": "1"
          },
          "customULimits": [
            {
              "ULimitsName": "NoProc",
              "ULimitsType": "Soft",
              "ULimitsValue": 1000
            },
            {
              "ULimitsName": "NoFile",
              "ULimitsType": "Hard",
              "ULimitsValue": 2048
            }
          ],
          "dependencies": [
            {
              "parameterMap": {
                "clusterId": "writerId",
                "clusterOrg": "userDatabase"
              },
              "resourceId": "r-12345678"
            },
            {
              "parameterMap": {
                "clusterId": "readerId",
                "clusterOrg": "userDatabase"
              },
              "resourceId": "r-abcdef12"
            }
          ],
          "description": "A resource to manage a hosted public SaaS offering of a multi-writer MySQL service",
          "environmentVariables": [
            {
              "key": "MYSQL_ROOT_PASSWORD",
              "value": "password"
            }
          ],
          "helmChartConfiguration": {
            "chartName": "my-chart",
            "chartRepoName": "my-repo",
            "chartRepoUrl": "https://my-repo.com",
            "chartValues": {
              "key1": "value1",
              "key2": 3,
              "key3": {
                "key4": "value4"
              }
            },
            "chartVersion": "1.0.0",
            "endpointConfiguration": {
              "admin": {
                "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                "networkingType": "PRIVATE",
                "ports": [
                  8080,
                  8081
                ],
                "primary": false
              },
              "cluster": {
                "host": "https://my-endpoint.com",
                "networkingType": "PUBLIC",
                "ports": [
                  8080,
                  8081
                ],
                "primary": true
              }
            },
            "password": "my-password",
            "runtimeConfiguration": {
              "disableHooks": true,
              "recreate": true,
              "resetThenReuseValues": true,
              "resetValues": true,
              "reuseValues": true,
              "skipCRDs": true,
              "timeoutNanos": 1000000000,
              "upgradeCRDs": true,
              "wait": true,
              "waitForJobs": true
            },
            "username": "my-user"
          },
          "imageConfigId": "imgc-12345678",
          "infraConfigId": "ic-12345678",
          "kustomizeConfiguration": {
            "endpointConfiguration": {
              "admin": {
                "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                "networkingType": "PRIVATE",
                "ports": [
                  8080,
                  8081
                ],
                "primary": false
              },
              "cluster": {
                "host": "https://my-endpoint.com",
                "networkingType": "PUBLIC",
                "ports": [
                  8080,
                  8081
                ],
                "primary": true
              }
            },
            "gitConfiguration": {
              "accessToken": "my-token",
              "referenceName": "tags/v1.0.0",
              "repositoryUrl": "https://github.com/username/myrepo",
              "userName": "my-user"
            },
            "helmChartDependencies": [
              {
                "chartName": "cert-manager",
                "chartVersion": "v1.5.3"
              },
              {
                "chartName": "nginx-ingress",
                "chartVersion": "v0.48.1"
              },
              {
                "chartName": "external-dns",
                "chartVersion": "v0.7.0"
              },
              {
                "chartName": "cnpg-operator",
                "chartVersion": "v0.23.1"
              }
            ],
            "kustomizePath": "/kustomize"
          },
          "l4LoadBalancerConfiguration": {
            "ingressPortConfiguration": [
              {
                "associatedResourceIDs": [
                  "r-12345678",
                  "r-abcdef12"
                ],
                "backendPort": 8080,
                "ingressPort": 1234
              },
              {
                "associatedResourceIDs": [
                  "r-12345678",
                  "r-abcdef12"
                ],
                "backendPort": 8081,
                "ingressPort": 5678
              },
              {
                "associatedResourceIDs": [
                  "r-vwxybz12",
                  "r-poij122v"
                ],
                "backendPort": 8082,
                "ingressPort": 9012
              }
            ]
          },
          "l7LoadBalancerConfiguration": {
            "paths": [
              {
                "associatedResourceID": "r-12345678",
                "path": "/path",
                "port": 8080
              }
            ]
          },
          "name": "Galera",
          "operatorCRDConfiguration": {
            "endpointConfiguration": {
              "admin": {
                "host": "https://{{ $sys.network.externalClusterEndpoint }}/admin",
                "networkingType": "PRIVATE",
                "ports": [
                  8080,
                  8081
                ],
                "primary": false
              },
              "cluster": {
                "host": "https://my-endpoint.com",
                "networkingType": "PUBLIC",
                "ports": [
                  8080,
                  8081
                ],
                "primary": true
              }
            },
            "helmChartDependencies": [
              {
                "chartName": "cert-manager",
                "chartVersion": "v1.5.3"
              },
              {
                "chartName": "nginx-ingress",
                "chartVersion": "v0.48.1"
              },
              {
                "chartName": "external-dns",
                "chartVersion": "v0.7.0"
              },
              {
                "chartName": "cnpg-operator",
                "chartVersion": "v0.23.1"
              }
            ],
            "outputParameters": {
              "expiresAt": "$out.status.notAfter",
              "issuerName": "letsencrypt-prod"
            },
            "readinessConditions": {
              "$out.status.conditions[?(@.type=='Ready')].status": true
            },
            "supplementalFiles": [
              "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n",
              "apiVersion: ingress.nginx.io/v1\nkind: IngressClass\nmetadata:\n  name: nginx\nspec:\n  controller: nginx.org/ingress-controller"
            ],
            "template": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: test@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx"
          },
          "terraformConfigurations": {
            "Dolorem et nostrum quia.": {
              "gitConfiguration": {
                "accessToken": "my-token",
                "referenceName": "tags/v1.0.0",
                "repositoryUrl": "https://github.com/username/myrepo",
                "userName": "my-user"
              },
              "privateModuleGitAccessTokens": {
                "tokenName": "accessToken"
              },
              "requiredOutputKeys": [
                "output1"
              ],
              "requiredOutputs": [
                {
                  "exported": true,
                  "key": "output1"
                }
              ],
              "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
              "terraformPath": "/project1/tf"
            },
            "Est quae autem ducimus non voluptas.": {
              "gitConfiguration": {
                "accessToken": "my-token",
                "referenceName": "tags/v1.0.0",
                "repositoryUrl": "https://github.com/username/myrepo",
                "userName": "my-user"
              },
              "privateModuleGitAccessTokens": {
                "tokenName": "accessToken"
              },
              "requiredOutputKeys": [
                "output1"
              ],
              "requiredOutputs": [
                {
                  "exported": true,
                  "key": "output1"
                }
              ],
              "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
              "terraformPath": "/project1/tf"
            },
            "Labore distinctio et cupiditate aspernatur consequatur ut.": {
              "gitConfiguration": {
                "accessToken": "my-token",
                "referenceName": "tags/v1.0.0",
                "repositoryUrl": "https://github.com/username/myrepo",
                "userName": "my-user"
              },
              "privateModuleGitAccessTokens": {
                "tokenName": "accessToken"
              },
              "requiredOutputKeys": [
                "output1"
              ],
              "requiredOutputs": [
                {
                  "exported": true,
                  "key": "output1"
                }
              ],
              "terraformExecutionIdentity": "arn:aws:iam::123456789012:role/role-name",
              "terraformPath": "/project1/tf"
            }
          }
        }
      },
      "UpdateSaaSPortalCustomDomainRequestBody": {
        "type": "object",
        "properties": {
          "customDomain": {
            "type": "string",
            "description": "The custom domain",
            "example": "mycustomdomain.com"
          },
          "description": {
            "type": "string",
            "description": "The custom domain description",
            "example": "My custom domain description"
          },
          "name": {
            "type": "string",
            "description": "The custom domain name",
            "example": "MyCustomDomain"
          }
        },
        "example": {
          "customDomain": "mycustomdomain.com",
          "description": "My custom domain description",
          "name": "MyCustomDomain"
        }
      },
      "UpdateSaaSPortalRequestBody": {
        "type": "object",
        "properties": {
          "customDomain": {
            "type": "string",
            "description": "The custom domain for the SaaS portal",
            "example": "mycustomdomain.com"
          },
          "emailConfig": {
            "$ref": "#/components/schemas/SaaSPortalEmailConfig"
          },
          "googleAnalyticsTagID": {
            "type": "string",
            "description": "The Google Analytics tag ID for the SaaS portal",
            "example": "G-123456789"
          },
          "imageConfig": {
            "$ref": "#/components/schemas/SaaSPortalImageConfig"
          }
        },
        "example": {
          "customDomain": "mycustomdomain.com",
          "emailConfig": {
            "smtpFromEmail": "example@gmail.com",
            "smtpHost": "smtp.gmail.com",
            "smtpPassword": "password",
            "smtpPort": 587,
            "smtpUsername": "username"
          },
          "googleAnalyticsTagID": "G-123456789",
          "imageConfig": {
            "imageName": "myimage",
            "imageRegistry": "ghcr.io",
            "imageTag": "latest"
          }
        }
      },
      "UpdateServiceAPIRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the service API bundle",
            "example": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability"
          }
        },
        "example": {
          "description": "A MySQL SaaS API specializing in multi-writer multi-tenant clusters for high availability"
        }
      },
      "UpdateServiceEnvironmentRequestBody": {
        "type": "object",
        "properties": {
          "autoApproveSubscription": {
            "type": "boolean",
            "description": "Auto approve subscription or not",
            "example": false
          },
          "deploymentConfigId": {
            "type": "string",
            "description": "The deployment configuration ID",
            "example": "dc-12345678"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the service environment",
            "example": "The production environment for the MySQL multi-writer service"
          },
          "name": {
            "type": "string",
            "description": "Name of the Service Environment",
            "example": "Production"
          },
          "serviceAuthPublicKey": {
            "type": "string",
            "description": "PEM-encoded Public key part of the key used to sign the JWT tokens for the service control plane APIs",
            "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n"
          },
          "sourceEnvironmentId": {
            "type": "string",
            "description": "The ID of the service environment to use for promoting changes to this environment",
            "example": "se-12345678"
          },
          "visibility": {
            "type": "string",
            "description": "This parameter is used to configure the visibility of the service control-plane APIs",
            "example": "Voluptas fuga."
          }
        },
        "example": {
          "autoApproveSubscription": false,
          "deploymentConfigId": "dc-12345678",
          "description": "The production environment for the MySQL multi-writer service",
          "name": "Production",
          "serviceAuthPublicKey": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT\n7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==\n-----END PUBLIC KEY-----\n",
          "sourceEnvironmentId": "se-12345678",
          "visibility": "Consequatur ut dolorem doloribus et quo laborum."
        }
      },
      "UpdateServiceModelRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the service model",
            "example": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability"
          },
          "name": {
            "type": "string",
            "description": "Name of the Service Model",
            "example": "MySQL multi-writer service hosted model"
          }
        },
        "example": {
          "description": "A MySQL Hosted SaaS specializing in multi-writer clusters for high availability",
          "name": "MySQL multi-writer service hosted model"
        }
      },
      "UpdateServiceRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the service",
            "example": "A MySQL SaaS specializing in multi-writer clusters for high availability"
          },
          "name": {
            "type": "string",
            "description": "Name of the Service",
            "example": "MySQL multi-writer service"
          },
          "serviceLogoURL": {
            "type": "string",
            "description": "The logo for the service",
            "example": "Aliquam amet quam."
          }
        },
        "example": {
          "description": "A MySQL SaaS specializing in multi-writer clusters for high availability",
          "name": "MySQL multi-writer service",
          "serviceLogoURL": "Eaque consequatur aut libero."
        }
      },
      "UpdateStorageVolumeConfigRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the context for the storage volume pool",
            "example": "A storage volume set to store the MySQL data directory"
          },
          "disableBackup": {
            "type": "boolean",
            "description": "Disable backup for the storage volume",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Name of the storage volume pool",
            "example": "MySQL Data Volume"
          }
        },
        "example": {
          "description": "A storage volume set to store the MySQL data directory",
          "disableBackup": false,
          "name": "MySQL Data Volume"
        }
      },
      "UpdateStorageVolumeSizeConfigRequestBody": {
        "type": "object",
        "properties": {
          "instanceStorageSizeGi": {
            "type": "string",
            "description": "The storage size (in Gi) provisioned for the configured instance storage type",
            "example": "$var.storage_size"
          }
        },
        "example": {
          "instanceStorageSizeGi": "$var.storage_size"
        },
        "required": [
          "instanceStorageSizeGi"
        ]
      },
      "UpdateUserRequestBody": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "name": {
            "type": "string",
            "description": "The name of the user",
            "example": "John Dae"
          },
          "orgDescription": {
            "type": "string",
            "description": "The description of the org that this user owns",
            "example": "ACME Inc."
          },
          "orgFavIconURL": {
            "type": "string",
            "description": "The favicon of the org that this user owns",
            "example": "http://wuckert.org/shaun.auer",
            "format": "uri"
          },
          "orgLogoURL": {
            "type": "string",
            "description": "The logo of the org that this user owns",
            "example": "http://jacobi.net/amie.doyle",
            "format": "uri"
          },
          "orgName": {
            "type": "string",
            "description": "The org name that this user owns",
            "example": "ACME"
          },
          "orgPrivacyPolicy": {
            "type": "string",
            "description": "The privacy policy for the org that this user owns in an HTML format",
            "example": "Quo similique ratione explicabo architecto beatae."
          },
          "orgSupportEmail": {
            "type": "string",
            "description": "The support email of the org that this user owns",
            "example": "support@example.com"
          },
          "orgTermsOfUse": {
            "type": "string",
            "description": "The terms of use for the org that this user owns in an HTML format",
            "example": "Vitae quaerat sint saepe quo."
          },
          "orgURL": {
            "type": "string",
            "description": "The url of the org that this user owns",
            "example": "something.acme"
          }
        },
        "example": {
          "address": {
            "addressLine1": "1234 Main St",
            "addressLine2": "Apt 123",
            "addressLine3": "Building 123",
            "city": "San Francisco",
            "country": "US",
            "state": "CA",
            "zip": "94123"
          },
          "name": "John Dae",
          "orgDescription": "ACME Inc.",
          "orgFavIconURL": "http://legrosfritsch.info/adele",
          "orgLogoURL": "http://fritschnolan.biz/laurine_leuschke",
          "orgName": "ACME",
          "orgPrivacyPolicy": "Qui alias ipsa.",
          "orgSupportEmail": "support@example.com",
          "orgTermsOfUse": "Consectetur odit repellat rerum voluptatum perferendis.",
          "orgURL": "something.acme"
        }
      },
      "UsagePerDimension": {
        "type": "object",
        "properties": {
          "dimension": {
            "type": "string",
            "description": "Dimension of usage",
            "example": "core/hours"
          },
          "total": {
            "type": "number",
            "description": "Total amount of usage during the period",
            "example": 0.67,
            "format": "double"
          }
        },
        "example": {
          "dimension": "core/hours",
          "total": 0.67
        }
      },
      "VUnitHealthReport": {
        "type": "object",
        "properties": {
          "vunits": {
            "type": "object",
            "description": "The health of each vunit under this service environment",
            "example": {
              "vu-11111111": "UNKNOWN",
              "vu-12345678": "UP",
              "vu-87654321": "DOWN"
            },
            "additionalProperties": {
              "type": "string",
              "example": "Officia exercitationem ut nemo voluptatem rerum."
            }
          }
        },
        "example": {
          "vunits": {
            "vu-11111111": "UNKNOWN",
            "vu-12345678": "UP",
            "vu-87654321": "DOWN"
          }
        }
      },
      "ValidateTokenRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "abc@gmail.com",
            "format": "email",
            "minLength": 1
          },
          "token": {
            "type": "string",
            "example": "fc7b8dea-a50b-4c9a-8864-fc3d845a2be6",
            "minLength": 1
          }
        },
        "example": {
          "email": "abc@gmail.com",
          "token": "fc7b8dea-a50b-4c9a-8864-fc3d845a2be6"
        },
        "required": [
          "token",
          "email"
        ]
      },
      "WarmPoolConfiguration": {
        "type": "object",
        "properties": {
          "minimumNodesInPool": {
            "type": "integer",
            "description": "Minimum number of compute nodes in pool",
            "default": 1,
            "example": 1,
            "format": "int64"
          },
          "minimumPercentageNodesInPool": {
            "type": "integer",
            "description": "Minimum percentage of compute nodes in pool",
            "default": 0,
            "example": 5,
            "format": "int64"
          }
        },
        "description": "Warm pool configuration for compute nodes",
        "example": {
          "minimumNodesInPool": 1,
          "minimumPercentageNodesInPool": 5
        }
      },
      "WorkflowFailure": {
        "type": "object",
        "properties": {
          "eventTime": {
            "type": "string",
            "description": "The time of the event",
            "example": "2020-01-01T00:00:00Z"
          },
          "message": {
            "type": "string",
            "description": "Details of the event",
            "example": "Bootstrap failed for reason X"
          }
        },
        "example": {
          "eventTime": "2020-01-01T00:00:00Z",
          "message": "Bootstrap failed for reason X"
        },
        "required": [
          "eventTime",
          "message"
        ]
      }
    },
    "securitySchemes": {
      "api_key_header_Authorization": {
        "type": "http",
        "description": "Secures endpoints by requiring a JWT token",
        "scheme": "bearer"
      },
      "basic_header_Authorization": {
        "type": "http",
        "description": "Basic authentication",
        "scheme": "basic"
      }
    }
  },
  "tags": [
    {
      "name": "global-api",
      "description": "Common API for all Omnistrate API endpoints"
    },
    {
      "name": "service-api"
    },
    {
      "name": "service-environment-api"
    },
    {
      "name": "service-model-api"
    },
    {
      "name": "product-tier-api"
    },
    {
      "name": "service-api-api"
    },
    {
      "name": "service-plan-api"
    },
    {
      "name": "resource-api"
    },
    {
      "name": "tier-version-set-api"
    },
    {
      "name": "input-parameter-api"
    },
    {
      "name": "output-parameter-api"
    },
    {
      "name": "vunit-api",
      "description": "The external facing VUnit API"
    },
    {
      "name": "infra-config-api",
      "description": "The infra config API manages the infra for Omnistrate resources"
    },
    {
      "name": "image-config-api",
      "description": "The image config API manages the image config for Omnistrate entities"
    },
    {
      "name": "deployment-config-api",
      "description": "The deployment config API manages the deployment config for Omnistrate entities"
    },
    {
      "name": "compute-config-api",
      "description": "The compute config API manages the compute config for Omnistrate entities"
    },
    {
      "name": "storage-config-api",
      "description": "The storage config API manages the storage config for Omnistrate entities"
    },
    {
      "name": "storage-volume-config-api",
      "description": "The storage volume config API manages the storage volume config for Omnistrate entities"
    },
    {
      "name": "network-config-api",
      "description": "The network config API manages the network config for Omnistrate entities"
    },
    {
      "name": "availability-zone-api",
      "description": "The Availability Zone API provides read-only access to availability zones"
    },
    {
      "name": "region-api",
      "description": "The Region API provides read-only access to regions"
    },
    {
      "name": "cloud-provider-api",
      "description": "The Cloud Provider API provides read-only access to cloud provider metadata"
    },
    {
      "name": "demo-api",
      "description": "The Demo API provides a demo of the system"
    },
    {
      "name": "contactus-api",
      "description": "The Contactus API for customers to reach out to us"
    },
    {
      "name": "signin-api",
      "description": "The signin API for customers to authenticate with us"
    },
    {
      "name": "signup-api",
      "description": "The Signup API for customers to signup with us"
    },
    {
      "name": "plan-api",
      "description": "The Plan API is for payment info.  It's explicitly empty for free plans."
    },
    {
      "name": "usage-api",
      "description": "The Usage API is for getting the last calendar month usage for the current plan."
    },
    {
      "name": "invoice-api",
      "description": "The Invoices API gets the list of invoices for the current user"
    },
    {
      "name": "users-api",
      "description": "The user management API to manage user metadata"
    },
    {
      "name": "consumption-user-api",
      "description": "The Consumption Signin API signs the user into the consumption service"
    },
    {
      "name": "services-orchestration-api",
      "description": "The Services Orchestration API manages the orchestration of services"
    },
    {
      "name": "resource-instance-api",
      "description": "The Resource Instance API manages the instances of a resource"
    },
    {
      "name": "account-config-api",
      "description": "The Account Config API manages the access information for a Service Provider account"
    },
    {
      "name": "custom-domain-api",
      "description": "The Custom Domain API manages the delegated domain names for the Service Provider"
    },
    {
      "name": "limit-api",
      "description": "The limit API manages the limit for Omnistrate entities"
    },
    {
      "name": "image-registry-api",
      "description": "The image registry API manages the image registry for Omnistrate resources"
    },
    {
      "name": "service-offering-api",
      "description": "The service offering API provides a public API to list all public services"
    },
    {
      "name": "audit-events-api",
      "description": "The set of APIs for auditing instance events for consumption side users."
    },
    {
      "name": "subscription-api",
      "description": "The subscription management API to manage subscription metadata"
    },
    {
      "name": "subscription-request-api",
      "description": "The subscription request API for end customers to issue subscription requests"
    },
    {
      "name": "identity-provider-api"
    },
    {
      "name": "saas-portal-api"
    },
    {
      "name": "helm-package-api"
    },
    {
      "name": "compose-gen-api"
    },
    {
      "name": "custom-network-api"
    }
  ]
}